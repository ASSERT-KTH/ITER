bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNodeJsDocHolder,  templateNode);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNodeJsDocHolder,  templateNode);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  rootNodeJsDocHolder,  templateNode);	  Node    irNode    =    irFactory.transform(node,    sourceString,    templateNode);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
2	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  config,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  sourceString,  config,  errorReporter);	  Node    irNode    =    irFactory.transform(node,    sourceString,    templateNode);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
3	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  rootNodeJsDocHolder);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  rootNodeJsDocHolder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  sourceString,  rootNodeJsDocHolder);	  Node    irNode    =    irFactory.transform(node,    sourceString,    templateNode);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
4	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  rootNode);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  rootNode);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  sourceString,  rootNode);	  Node    irNode    =    irFactory.transform(node,    rootNodeJsDocHolder,    sourceString);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
5	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  templateNode,  sourceString);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  templateNode,  sourceString);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  templateNode,  sourceString);	  Node    irNode    =    irFactory.transform(node,    rootNodeJsDocHolder,    sourceString);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
6	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(sourceString,  rootNodeJsDocHolder,  node);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(sourceString,  rootNodeJsDocHolder,  node);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(sourceString,  rootNodeJsDocHolder,  node);	  Node    irNode    =    irFactory.transform(node,    rootNodeJsDocHolder,    sourceString);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
7	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  rootNodeJSDocHolder);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  rootNodeJSDocHolder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  sourceString,  rootNodeJSDocHolder);	  Node    irNode    =    irFactory.transform(node,    rootNodeJsDocHolder,    sourceString);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
8	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNodeJsDocBuilder,  sourceString);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNodeJsDocBuilder,  sourceString);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  rootNodeJsDocBuilder,  sourceString);	  Node    irNode    =    irFactory.transform(node,    rootNodeJsDocHolder,    sourceString);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
9	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(rootNodeJsDocHolder,  sourceString);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(rootNodeJsDocHolder,  sourceString);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(rootNodeJsDocHolder,  sourceString);	  Node    irNode    =    irFactory.transform(sourceString,    rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
10	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(sourceString,  templateNode);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(sourceString,  templateNode);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(sourceString,  templateNode);	  Node    irNode    =    irFactory.transform(sourceString,    rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
11	[BUG]  [BUGGY]  Node  irNode  =  node.transform(sourceString,  irFactory);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  node.transform(sourceString,  irFactory);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  node.transform(sourceString,  irFactory);	  Node    irNode    =    irFactory.transform(node,    sourceString,    node);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
12	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  node,  errorReporter);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  node,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  sourceString,  node,  errorReporter);	  Node    irNode    =    irFactory.transform(node,    sourceString,    node);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
13	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(sourceString,  errorReporter);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(sourceString,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(sourceString,  errorReporter);	  Node    irNode    =    irFactory.transformAstRoot(sourceString);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
14	[BUG]  [BUGGY]  Node  irNode  =  node.transformAstRoot(sourceString);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  node.transformAstRoot(sourceString);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  node.transformAstRoot(sourceString);	  Node    irNode    =    irFactory.transformAstRoot(sourceString);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
15	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(sourceString,  config);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(sourceString,  config);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(sourceString,  config);	  Node    irNode    =    irFactory.transformAstRoot(sourceString);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
16	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(rootNodeJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(rootNodeJsDocBuilder);	  Node    irNode    =    irFactory.transformAstRoot(sourceString);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
17	[BUG]  [BUGGY]  Node  irNode  =  irFactory.getAstRoot(sourceString);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.getAstRoot(sourceString);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.getAstRoot(sourceString);	  Node    irNode    =    irFactory.transformAstRoot(sourceString);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
18	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  rootNodeJsDocHolder,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  rootNodeJsDocHolder,  fileLevelJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(node,  rootNodeJsDocHolder,  fileLevelJsDocBuilder);	  Node    irNode    =    irFactory.transformAstRoot(node,    fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
19	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  fileLevelJsDocBuilder,  templateNode);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  fileLevelJsDocBuilder,  templateNode);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(node,  fileLevelJsDocBuilder,  templateNode);	  Node    irNode    =    irFactory.transformAstRoot(node,    fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
20	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  templateNode,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  templateNode,  fileLevelJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(node,  templateNode,  fileLevelJsDocBuilder);	  Node    irNode    =    irFactory.transformAstRoot(node,    fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
21	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  fileLevelJsDocBuilder,  errorReporter);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  fileLevelJsDocBuilder,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(node,  fileLevelJsDocBuilder,  errorReporter);	  Node    irNode    =    irFactory.transformAstRoot(node,    fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
22	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  true);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  true);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  true);	  Node    irNode    =    irFactory.transformAstRoot(node,    sourceString,    false);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
23	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  false,  config);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  false,  config);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  false,  config);	  Node    irNode    =    irFactory.transformAstRoot(node,    sourceString,    false);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
24	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  false,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  false,  fileLevelJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  false,  fileLevelJsDocBuilder);	  Node    irNode    =    irFactory.transformAstRoot(node,    sourceString,    false);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
25	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  false,  null);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  false,  null);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  false,  null);	  Node    irNode    =    irFactory.transformAstRoot(node,    sourceString,    false);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
26	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  false,  errorReporter);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  false,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  false,  errorReporter);	  Node    irNode    =    irFactory.transformAstRoot(node,    sourceString,    false);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
27	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(sourceString,  rootNode);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(sourceString,  rootNode);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(sourceString,  rootNode);	  Node    irNode    =    irFactory.transform(rootNode,    sourceString);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
28	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(rootNode,  sourceString,  errorReporter);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(rootNode,  sourceString,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(rootNode,  sourceString,  errorReporter);	  Node    irNode    =    irFactory.transform(rootNode,    sourceString);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
29	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(rootNode,  sourceString,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(rootNode,  sourceString,  fileLevelJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(rootNode,  sourceString,  fileLevelJsDocBuilder);	  Node    irNode    =    irFactory.transform(rootNode,    sourceString);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
30	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(rootNode,  sourceString,  templateNode);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(rootNode,  sourceString,  templateNode);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(rootNode,  sourceString,  templateNode);	  Node    irNode    =    irFactory.transform(rootNode,    sourceString);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
31	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node,  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node,  config,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node,  config,  errorReporter);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    null,    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
32	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  errorReporter,  config);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  errorReporter,  config);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  errorReporter,  config);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    null,    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
33	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  false,  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  false,  config,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  false,  config,  errorReporter);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    null,    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
34	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  null,  config,  errorReporter,  node);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  null,  config,  errorReporter,  node);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  null,  config,  errorReporter,  node);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    null,    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
35	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(sourceString,  node,  errorReporter);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(sourceString,  node,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(sourceString,  node,  errorReporter);	  Node    irNode    =    irFactory.transform(node,    sourceString,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
36	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNodeJsDocHolder,  sourceString,  errorReporter);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNodeJsDocHolder,  sourceString,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  rootNodeJsDocHolder,  sourceString,  errorReporter);	  Node    irNode    =    irFactory.transform(node,    sourceString,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
37	[BUG]  [BUGGY]  irNode  =  irFactory.transform(node,  sourceString,  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  irNode  =  irFactory.transform(node,  sourceString,  config,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	irNode  =  irFactory.transform(node,  sourceString,  config,  errorReporter);	  Node    irNode    =    irFactory.transform(node,    sourceString,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
38	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(sourceString,  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(sourceString,  config,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(sourceString,  config,  errorReporter);	  Node    irNode    =    irFactory.transform(sourceString,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
39	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(sourceString,  errorReporter,  config);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(sourceString,  errorReporter,  config);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(sourceString,  errorReporter,  config);	  Node    irNode    =    irFactory.transform(sourceString,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
40	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  rootNodeJsDocBuilder,  errorReporter);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  rootNodeJsDocBuilder,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  sourceString,  rootNodeJsDocBuilder,  errorReporter);	  Node    irNode    =    irFactory.transform(node,    rootNodeJsDocBuilder,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
41	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  templateNode,  errorReporter);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  templateNode,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  templateNode,  errorReporter);	  Node    irNode    =    irFactory.transform(node,    rootNodeJsDocBuilder,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
42	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  templateNode,  rootNodeJsDocBuilder,  errorReporter);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  templateNode,  rootNodeJsDocBuilder,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  templateNode,  rootNodeJsDocBuilder,  errorReporter);	  Node    irNode    =    irFactory.transform(node,    rootNodeJsDocBuilder,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
43	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  fileLevelJsDocBuilder,  errorReporter);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  fileLevelJsDocBuilder,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  sourceString,  fileLevelJsDocBuilder,  errorReporter);	  Node    irNode    =    irFactory.transform(node,    rootNodeJsDocBuilder,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
44	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNodeJsDocHolder,  errorReporter);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNodeJsDocHolder,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  rootNodeJsDocHolder,  errorReporter);	  Node    irNode    =    irFactory.transform(node,    rootNodeJsDocBuilder,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
45	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(sourceString,  node,  templateNode);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(sourceString,  node,  templateNode);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(sourceString,  node,  templateNode);	  Node    irNode    =    irFactory.transform(sourceString,    node,    rootNodeJsDocHolder);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
46	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(sourceString,  node,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(sourceString,  node,  fileLevelJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(sourceString,  node,  fileLevelJsDocBuilder);	  Node    irNode    =    irFactory.transform(sourceString,    node,    rootNodeJsDocHolder);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
47	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  config,  errorReporter);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  config,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  config,  errorReporter);	  Node    irNode    =    irFactory.transformAstRoot(node,    sourceString,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
48	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  rootNodeJsDocBuilder,  errorReporter);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  rootNodeJsDocBuilder,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(node,  rootNodeJsDocBuilder,  errorReporter);	  Node    irNode    =    irFactory.transformAstRoot(node,    sourceString,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
49	[BUG]  [BUGGY]  irNode  =  irFactory.transformAstRoot(node,  sourceString,  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  irNode  =  irFactory.transformAstRoot(node,  sourceString,  config,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	irNode  =  irFactory.transformAstRoot(node,  sourceString,  config,  errorReporter);	  Node    irNode    =    irFactory.transformAstRoot(node,    sourceString,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
50	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  rootNodeJsDocHolder,  errorReporter);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  rootNodeJsDocHolder,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(node,  rootNodeJsDocHolder,  errorReporter);	  Node    irNode    =    irFactory.transformAstRoot(node,    sourceString,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
51	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  errorReporter,  config);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  errorReporter,  config);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  errorReporter,  config);	  Node    irNode    =    irFactory.transformAstRoot(node,    sourceString,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
52	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(fileLevelJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(fileLevelJsDocBuilder);	  Node    irNode    =    irFactory.transform(rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
53	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(rootNodeJsDocHolder,  templateNode);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(rootNodeJsDocHolder,  templateNode);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(rootNodeJsDocHolder,  templateNode);	  Node    irNode    =    irFactory.transform(rootNodeJsDocHolder);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
54	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNodeJSDocHolder);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNodeJSDocHolder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  rootNodeJSDocHolder);	  Node    irNode    =    irFactory.transform(node,    templateNode);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
55	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(rootNodeJsDocHolder,  node);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(rootNodeJsDocHolder,  node);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(rootNodeJsDocHolder,  node);	  Node    irNode    =    irFactory.transform(node,    templateNode);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
56	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(sourceString,  node,  errorReporter);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(sourceString,  node,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(sourceString,  node,  errorReporter);	  Node    irNode    =    irFactory.transformAstRoot(sourceString,    node);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
57	[BUG]  [BUGGY]  Node  irNode  =  node.transformAstRoot(sourceString,  config);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  node.transformAstRoot(sourceString,  config);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  node.transformAstRoot(sourceString,  config);	  Node    irNode    =    irFactory.transformAstRoot(sourceString,    node);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
58	[BUG]  [BUGGY]  irNode  =  irFactory.transformAstRoot(node,  sourceString);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  irNode  =  irFactory.transformAstRoot(node,  sourceString);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	irNode  =  irFactory.transformAstRoot(node,  sourceString);	  Node    irNode    =    irFactory.transformAstRoot(sourceString,    node);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
59	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(node,  sourceString,  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  IRFactory  irFactory  =  new  IRFactory(node,  sourceString,  config,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	IRFactory  irFactory  =  new  IRFactory(node,  sourceString,  config,  errorReporter);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getSourceName(),    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
60	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getLineno(),  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getLineno(),  config,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getLineno(),  config,  errorReporter);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getSourceName(),    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
61	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getParent(),  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getParent(),  config,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getParent(),  config,  errorReporter);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getSourceName(),    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
62	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter,  fileLevelJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter,  fileLevelJsDocBuilder);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getSourceName(),    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
63	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getRelativeName(),  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getRelativeName(),  config,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getRelativeName(),  config,  errorReporter);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getSourceName(),    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
64	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNode,  errorReporter);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNode,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  rootNode,  errorReporter);	  Node    irNode    =    irFactory.transform(node,    rootNode);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
65	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(rootNode,  node);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(rootNode,  node);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(rootNode,  node);	  Node    irNode    =    irFactory.transform(node,    rootNode);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
66	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNode,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNode,  fileLevelJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  rootNode,  fileLevelJsDocBuilder);	  Node    irNode    =    irFactory.transform(node,    rootNode);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
67	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNode,  templateNode);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNode,  templateNode);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  rootNode,  templateNode);	  Node    irNode    =    irFactory.transform(node,    rootNode);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
68	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  rootNodeJsDocHolder,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  rootNodeJsDocHolder,  fileLevelJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  sourceString,  rootNodeJsDocHolder,  fileLevelJsDocBuilder);	  Node    irNode    =    irFactory.transform(node,    rootNodeJsDocHolder,    fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
69	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  fileLevelJsDocBuilder,  rootNode);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  fileLevelJsDocBuilder,  rootNode);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  fileLevelJsDocBuilder,  rootNode);	  Node    irNode    =    irFactory.transform(node,    rootNodeJsDocHolder,    fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
70	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNodeJsDocHolder,  templateNode,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNodeJsDocHolder,  templateNode,  fileLevelJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  rootNodeJsDocHolder,  templateNode,  fileLevelJsDocBuilder);	  Node    irNode    =    irFactory.transform(node,    rootNodeJsDocHolder,    fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
71	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  node,  fileLevelJsDocBuilder,  errorReporter);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  node,  fileLevelJsDocBuilder,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  node,  fileLevelJsDocBuilder,  errorReporter);	  Node    irNode    =    irFactory.transform(node,    fileLevelJsDocBuilder,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
72	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  templateNode,  fileLevelJsDocBuilder,  errorReporter);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  templateNode,  fileLevelJsDocBuilder,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  templateNode,  fileLevelJsDocBuilder,  errorReporter);	  Node    irNode    =    irFactory.transform(node,    fileLevelJsDocBuilder,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
73	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNodeJsDocHolder,  templateNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNodeJsDocHolder,  templateNodeJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  rootNodeJsDocHolder,  templateNodeJsDocBuilder);	  Node    irNode    =    irFactory.transform(node,    templateNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
74	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(rootNodeJsDocHolder,  templateNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(rootNodeJsDocHolder,  templateNodeJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(rootNodeJsDocHolder,  templateNodeJsDocBuilder);	  Node    irNode    =    irFactory.transform(node,    templateNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
75	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  templateNode,  sourceString,  rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  templateNode,  sourceString,  rootNodeJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  templateNode,  sourceString,  rootNodeJsDocBuilder);	  Node    irNode    =    irFactory.transform(node,    sourceString,    rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
76	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  templateNode,  rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  templateNode,  rootNodeJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  sourceString,  templateNode,  rootNodeJsDocBuilder);	  Node    irNode    =    irFactory.transform(node,    sourceString,    rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
77	[BUG]  [BUGGY]  Node  irNode  =  node.transformAstRoot(node);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  node.transformAstRoot(node);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  node.transformAstRoot(node);	  Node    irNode    =    irFactory.transformAstRoot(node,    node);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
78	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  message,  errorReporter);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  message,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  message,  errorReporter);	  Node    irNode    =    irFactory.transformAstRoot(node,    sourceString,    message);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
79	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  this.errorReporter);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  this.errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  this.errorReporter);	  Node    irNode    =    irFactory.transformAstRoot(node,    sourceString,    message);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
80	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  errorsReporter);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  errorsReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  errorsReporter);	  Node    irNode    =    irFactory.transformAstRoot(node,    sourceString,    message);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
81	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  node,  rootNodeJsDocHolder,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  node,  rootNodeJsDocHolder,  fileLevelJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  node,  rootNodeJsDocHolder,  fileLevelJsDocBuilder);	  Node    irNode    =    irFactory.transform(node,    templateNode,    fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
82	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNodeJSDocHolder,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNodeJSDocHolder,  fileLevelJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  rootNodeJSDocHolder,  fileLevelJsDocBuilder);	  Node    irNode    =    irFactory.transform(node,    templateNode,    fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
83	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  templateNode,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  templateNode,  fileLevelJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  sourceString,  templateNode,  fileLevelJsDocBuilder);	  Node    irNode    =    irFactory.transform(node,    templateNode,    fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
84	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(rootNodeJsDocHolder,  templateNode,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(rootNodeJsDocHolder,  templateNode,  fileLevelJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(rootNodeJsDocHolder,  templateNode,  fileLevelJsDocBuilder);	  Node    irNode    =    irFactory.transform(node,    templateNode,    fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
85	[BUG]  [BUGGY]  Node  irNode  =  node.transformAstRoot(config);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  node.transformAstRoot(config);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  node.transformAstRoot(config);	  Node    irNode    =    node.transformAstRoot(irFactory);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
86	[BUG]  [BUGGY]  Node  irNode  =  node.transformAstRoot(config,  irFactory);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  node.transformAstRoot(config,  irFactory);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  node.transformAstRoot(config,  irFactory);	  Node    irNode    =    node.transformAstRoot(irFactory);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
87	[BUG]  [BUGGY]  irNode  =  irFactory.transformAstRoot(node);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  irNode  =  irFactory.transformAstRoot(node);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	irNode  =  irFactory.transformAstRoot(node);	  Node    irNode    =    node.transformAstRoot(irFactory);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
88	[BUG]  [BUGGY]  Node  irNode  =  node.transformAstRoot(irFactory,  sourceString);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  node.transformAstRoot(irFactory,  sourceString);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  node.transformAstRoot(irFactory,  sourceString);	  Node    irNode    =    node.transformAstRoot(irFactory);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
89	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  templateNode);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  templateNode);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(node,  templateNode);	  Node    irNode    =    irFactory.transformAstRoot(node,    rootNodeJsDocHolder);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
90	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  templateNode,  rootNodeJsDocHolder);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  templateNode,  rootNodeJsDocHolder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(node,  templateNode,  rootNodeJsDocHolder);	  Node    irNode    =    irFactory.transformAstRoot(node,    rootNodeJsDocHolder);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
91	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  templateNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  templateNodeJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(node,  templateNodeJsDocBuilder);	  Node    irNode    =    irFactory.transformAstRoot(node,    rootNodeJsDocHolder);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
92	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  templateNodeJsDocHolder);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  templateNodeJsDocHolder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(node,  templateNodeJsDocHolder);	  Node    irNode    =    irFactory.transformAstRoot(node,    rootNodeJsDocHolder);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
93	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(sourceString,  node,  templateNode,  rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(sourceString,  node,  templateNode,  rootNodeJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(sourceString,  node,  templateNode,  rootNodeJsDocBuilder);	  Node    irNode    =    irFactory.transform(sourceString,    node,    rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
94	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(node,  sourceString.getName(),  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  IRFactory  irFactory  =  new  IRFactory(node,  sourceString.getName(),  config,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	IRFactory  irFactory  =  new  IRFactory(node,  sourceString.getName(),  config,  errorReporter);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getName(),    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
95	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getName(),  config,  errorReporter,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getName(),  config,  errorReporter,  fileLevelJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getName(),  config,  errorReporter,  fileLevelJsDocBuilder);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getName(),    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
96	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(node.getName(),  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  IRFactory  irFactory  =  new  IRFactory(node.getName(),  config,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	IRFactory  irFactory  =  new  IRFactory(node.getName(),  config,  errorReporter);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getName(),    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
97	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNodeJsDocBuilder,  templateNode);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNodeJsDocBuilder,  templateNode);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  rootNodeJsDocBuilder,  templateNode);	  Node    irNode    =    irFactory.transform(node,    fileLevelJsDocBuilder,    templateNode);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
98	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  fileLevelJsDocBuilder,  templateNode);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  fileLevelJsDocBuilder,  templateNode);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  sourceString,  fileLevelJsDocBuilder,  templateNode);	  Node    irNode    =    irFactory.transform(node,    fileLevelJsDocBuilder,    templateNode);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
99	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(templateNode,  fileLevelJsDocBuilder,  node);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(templateNode,  fileLevelJsDocBuilder,  node);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(templateNode,  fileLevelJsDocBuilder,  node);	  Node    irNode    =    irFactory.transform(node,    fileLevelJsDocBuilder,    templateNode);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
100	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNodeJSDocHolder,  templateNode);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNodeJSDocHolder,  templateNode);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  rootNodeJSDocHolder,  templateNode);	  Node    irNode    =    irFactory.transform(node,    fileLevelJsDocBuilder,    templateNode);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
101	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  Node.getSourceName(),  config,  errorReporter,  node);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  Node.getSourceName(),  config,  errorReporter,  node);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  Node.getSourceName(),  config,  errorReporter,  node);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    Node.getSourceName(),    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
102	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(node,  Node.getSourceName(),  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  IRFactory  irFactory  =  new  IRFactory(node,  Node.getSourceName(),  config,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	IRFactory  irFactory  =  new  IRFactory(node,  Node.getSourceName(),  config,  errorReporter);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    Node.getSourceName(),    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
103	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  Node.getSourceName(),  config,  errorReporter,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  Node.getSourceName(),  config,  errorReporter,  fileLevelJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  Node.getSourceName(),  config,  errorReporter,  fileLevelJsDocBuilder);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    Node.getSourceName(),    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
104	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  Node.getSourceName(),  config,  errorReporter,  rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  Node.getSourceName(),  config,  errorReporter,  rootNodeJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  Node.getSourceName(),  config,  errorReporter,  rootNodeJsDocBuilder);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    Node.getSourceName(),    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
105	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDoc(irNode);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  irFactory.setFileOverviewJsDoc(irNode);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	irFactory.setFileOverviewJsDoc(irNode);	  irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
106	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(irNode);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(irNode);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	irFactory.setPossibleFileOverviewJsDoc(irNode);	  irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
107	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(node);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(node);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	irFactory.setPossibleFileOverviewJsDoc(node);	  irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
108	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDoc(node);  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  irFactory.setFileOverviewJsDoc(node);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	irFactory.setFileOverviewJsDoc(node);	  irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
109	[BUG]  [BUGGY]  irFactory.handleErrorJsDoc(irNode);  [CE]  <identifier>  expected  [FE]                                            AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  irFactory.handleErrorJsDoc(irNode);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	irFactory.handleErrorJsDoc(irNode);	  irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
110	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                                              AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);	  irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
111	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  true);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  true);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  sourceString,  true);	  Node    irNode    =    irFactory.transform(node,    sourceString,    false);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
112	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(sourceString,  node,  false);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(sourceString,  node,  false);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(sourceString,  node,  false);	  Node    irNode    =    irFactory.transform(node,    sourceString,    false);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
113	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  false,  config);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  false,  config);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  sourceString,  false,  config);	  Node    irNode    =    irFactory.transform(node,    sourceString,    false);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
114	[BUG]  [BUGGY]  irNode  =  irFactory.transform(node,  sourceString,  true);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  irNode  =  irFactory.transform(node,  sourceString,  true);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	irNode  =  irFactory.transform(node,  sourceString,  true);	  Node    irNode    =    irFactory.transform(node,    sourceString,    false);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
115	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  errorReporter,  config,  sourceName);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  errorReporter,  config,  sourceName);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  errorReporter,  config,  sourceName);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    sourceName,    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
116	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceName,  node,  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceName,  node,  config,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceName,  node,  config,  errorReporter);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    sourceName,    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
117	[BUG]  [BUGGY]  irFactory.handleErrorJsDoc(node);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  irFactory.handleErrorJsDoc(node);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	irFactory.handleErrorJsDoc(node);	  irFactory.handlePossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
118	[BUG]  [BUGGY]  Node  irNode  =  node.transformAstRoot(sourceString,  irFactory);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  node.transformAstRoot(sourceString,  irFactory);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  node.transformAstRoot(sourceString,  irFactory);	  Node    irNode    =    irFactory.transformAstRoot(node,    sourceString,    node);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
119	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  node,  errorReporter);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  node,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  node,  errorReporter);	  Node    irNode    =    irFactory.transformAstRoot(node,    sourceString,    node);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
120	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(sourceString,  fileLevelJsDocBuilder,  errorReporter);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(sourceString,  fileLevelJsDocBuilder,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(sourceString,  fileLevelJsDocBuilder,  errorReporter);	  Node    irNode    =    irFactory.transform(sourceString,    fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
121	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(sourceString,  fileLevelJsDocBuilder,  templateNode);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(sourceString,  fileLevelJsDocBuilder,  templateNode);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(sourceString,  fileLevelJsDocBuilder,  templateNode);	  Node    irNode    =    irFactory.transform(sourceString,    fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
122	[BUG]  [BUGGY]  Node  irNode  =  config.transformAstRoot(node,  sourceString,  irFactory);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  config.transformAstRoot(node,  sourceString,  irFactory);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  config.transformAstRoot(node,  sourceString,  irFactory);	  Node    irNode    =    irFactory.transformAstRoot(node,    sourceString,    config);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
123	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  rootNodeJsDocHolder,  config);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  rootNodeJsDocHolder,  config);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(node,  rootNodeJsDocHolder,  config);	  Node    irNode    =    irFactory.transformAstRoot(node,    sourceString,    config);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
124	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  config,  errorsReporter);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  config,  errorsReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  config,  errorsReporter);	  Node    irNode    =    irFactory.transformAstRoot(node,    sourceString,    config);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
125	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  fileLevelJsDocBuilder,  errorReporter);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  fileLevelJsDocBuilder,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  fileLevelJsDocBuilder,  errorReporter);	  Node    irNode    =    irFactory.transformAstRoot(node,    sourceString,    fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
126	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  templateNode,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  templateNode,  fileLevelJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  templateNode,  fileLevelJsDocBuilder);	  Node    irNode    =    irFactory.transformAstRoot(node,    sourceString,    fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
127	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  config,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  config,  fileLevelJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  config,  fileLevelJsDocBuilder);	  Node    irNode    =    irFactory.transformAstRoot(node,    sourceString,    fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
128	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  null,  errorReporter);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  null,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  sourceString,  null,  errorReporter);	  Node    irNode    =    irFactory.transform(node,    sourceString,    null);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
129	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(sourceString,  node,  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(sourceString,  node,  null);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(sourceString,  node,  null);	  Node    irNode    =    irFactory.transform(node,    sourceString,    null);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
130	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  this);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  this);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  sourceString,  this);	  Node    irNode    =    irFactory.transform(node,    sourceString,    null);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
131	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  templateNode,  rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  templateNode,  rootNodeJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(node,  templateNode,  rootNodeJsDocBuilder);	  Node    irNode    =    irFactory.transformAstRoot(node,    sourceString,    rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
132	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  templateNode,  sourceString,  rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  templateNode,  sourceString,  rootNodeJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(node,  templateNode,  sourceString,  rootNodeJsDocBuilder);	  Node    irNode    =    irFactory.transformAstRoot(node,    sourceString,    rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
133	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  templateNode);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  templateNode);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  templateNode);	  Node    irNode    =    irFactory.transformAstRoot(node,    sourceString,    rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
134	[BUG]  [BUGGY]  Node  node  =  node.getLastChild();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  node  =  node.getLastChild();  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  node  =  node.getLastChild();	  Node    node    =    node.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
135	[BUG]  [BUGGY]  Node  node  =  irFactory.getFirstChild();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  node  =  irFactory.getFirstChild();  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  node  =  irFactory.getFirstChild();	  Node    node    =    node.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
136	[BUG]  [BUGGY]  Node  node  =  irFactory.getLastChild();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  node  =  irFactory.getLastChild();  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  node  =  irFactory.getLastChild();	  Node    node    =    node.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
137	[BUG]  [BUGGY]  Node  node  =  irFactory.getNext();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  node  =  irFactory.getNext();  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  node  =  irFactory.getNext();	  Node    node    =    node.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
138	[BUG]  [BUGGY]  Node  node  =  irNode.getFirstChild();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  node  =  irNode.getFirstChild();  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  node  =  irNode.getFirstChild();	  Node    node    =    node.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
139	[BUG]  [BUGGY]  Node  node  =  node.getNext();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  node  =  node.getNext();  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  node  =  node.getNext();	  Node    node    =    node.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
140	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(rootNodeJsDocBuilder,  sourceString);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(rootNodeJsDocBuilder,  sourceString);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(rootNodeJsDocBuilder,  sourceString);	  Node    irNode    =    irFactory.transform(sourceString,    rootNodeJsDocHolder);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
141	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  null,  errorReporter);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  null,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  null,  errorReporter);	  Node    irNode    =    irFactory.transformAstRoot(node,    sourceString,    null);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
142	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  this);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  this);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  this);	  Node    irNode    =    irFactory.transformAstRoot(node,    sourceString,    null);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
143	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(sourceString,  fileLevelJsDocBuilder,  node);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(sourceString,  fileLevelJsDocBuilder,  node);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(sourceString,  fileLevelJsDocBuilder,  node);	  Node    irNode    =    irFactory.transform(node,    fileLevelJsDocBuilder,    sourceString);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
144	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNodeJsDocHolder,  fileLevelJsDocBuilder,  sourceString);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNodeJsDocHolder,  fileLevelJsDocBuilder,  sourceString);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  rootNodeJsDocHolder,  fileLevelJsDocBuilder,  sourceString);	  Node    irNode    =    irFactory.transform(node,    fileLevelJsDocBuilder,    sourceString);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
145	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  templateNode,  fileLevelJsDocBuilder,  sourceString);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  templateNode,  fileLevelJsDocBuilder,  sourceString);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  templateNode,  fileLevelJsDocBuilder,  sourceString);	  Node    irNode    =    irFactory.transform(node,    fileLevelJsDocBuilder,    sourceString);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
146	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  fileLevelJsDocBuilder,  rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  fileLevelJsDocBuilder,  rootNodeJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  fileLevelJsDocBuilder,  rootNodeJsDocBuilder);	  Node    irNode    =    irFactory.transform(node,    templateNode,    rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
147	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  node,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  node,  fileLevelJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  node,  fileLevelJsDocBuilder);	  Node    irNode    =    irFactory.transform(node,    templateNode,    rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
148	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString.getName(),  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString.getName(),  config,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString.getName(),  config,  errorReporter);	  IRFactory    irFactory    =    new    IRFactory(node.getSourceName(),    sourceString,    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
149	[BUG]  [BUGGY]  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);	  IRFactory    irFactory    =    new    IRFactory(node.getSourceName(),    sourceString,    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
150	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(node.getSourceName(),  node,  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  IRFactory  irFactory  =  new  IRFactory(node.getSourceName(),  node,  config,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	IRFactory  irFactory  =  new  IRFactory(node.getSourceName(),  node,  config,  errorReporter);	  IRFactory    irFactory    =    new    IRFactory(node.getSourceName(),    sourceString,    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
151	[BUG]  [BUGGY]  Node  irNode  =  irFactory.getAstRoot(node,  sourceString);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.getAstRoot(node,  sourceString);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.getAstRoot(node,  sourceString);	  Node    irNode    =    irFactory.getAstRoot(node);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
152	[BUG]  [BUGGY]  Node  irNode  =  node.getAstRoot();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  node.getAstRoot();  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  node.getAstRoot();	  Node    irNode    =    irFactory.getAstRoot(node);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
153	[BUG]  [BUGGY]  Node  irNode  =  irFactory.getAstRoot(node,  errorReporter);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.getAstRoot(node,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.getAstRoot(node,  errorReporter);	  Node    irNode    =    irFactory.getAstRoot(node);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
154	[BUG]  [BUGGY]  Node  irNode  =  irFactory.createAstRoot(node);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.createAstRoot(node);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.createAstRoot(node);	  Node    irNode    =    irFactory.getAstRoot(node);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
155	[BUG]  [BUGGY]  Node  irNode  =  irFactory.getAstRoot(node,  rootNodeJsDocHolder);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.getAstRoot(node,  rootNodeJsDocHolder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.getAstRoot(node,  rootNodeJsDocHolder);	  Node    irNode    =    irFactory.getAstRoot(node);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
156	[BUG]  [BUGGY]  Node  node  =  irFactory.getAstRoot(node,  sourceString);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  node  =  irFactory.getAstRoot(node,  sourceString);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  node  =  irFactory.getAstRoot(node,  sourceString);	  Node    node    =    irFactory.getAstRoot(node);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
157	[BUG]  [BUGGY]  Node  node  =  irFactory.getAstRoot(sourceString);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  node  =  irFactory.getAstRoot(sourceString);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  node  =  irFactory.getAstRoot(sourceString);	  Node    node    =    irFactory.getAstRoot(node);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
158	[BUG]  [BUGGY]  Node  node  =  irFactory.getAstRoot(node,  errorReporter);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  node  =  irFactory.getAstRoot(node,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  node  =  irFactory.getAstRoot(node,  errorReporter);	  Node    node    =    irFactory.getAstRoot(node);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
159	[BUG]  [BUGGY]  Node  node  =  irFactory.createAstRoot(node);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  node  =  irFactory.createAstRoot(node);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  node  =  irFactory.createAstRoot(node);	  Node    node    =    irFactory.getAstRoot(node);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
160	[BUG]  [BUGGY]  Node  node  =  irFactory.createAstRoot(node,  sourceString);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  node  =  irFactory.createAstRoot(node,  sourceString);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  node  =  irFactory.createAstRoot(node,  sourceString);	  Node    node    =    irFactory.getAstRoot(node);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
161	[BUG]  [BUGGY]  Node  node  =  irFactory.getAstRoot(node,  false);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  node  =  irFactory.getAstRoot(node,  false);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  node  =  irFactory.getAstRoot(node,  false);	  Node    node    =    irFactory.getAstRoot(node);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
162	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(sourceString,  node,  config);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(sourceString,  node,  config);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(sourceString,  node,  config);	  Node    irNode    =    irFactory.transform(node,    sourceString,    config);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
163	[BUG]  [BUGGY]  Node  irNode  =  config.transform(node,  sourceString,  irFactory);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  config.transform(node,  sourceString,  irFactory);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  config.transform(node,  sourceString,  irFactory);	  Node    irNode    =    irFactory.transform(node,    sourceString,    config);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
164	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  templateNode,  rootNodeJsDocHolder);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  templateNode,  rootNodeJsDocHolder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  sourceString,  templateNode,  rootNodeJsDocHolder);	  Node    irNode    =    irFactory.transform(node,    templateNode,    rootNodeJsDocHolder);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
165	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  fileLevelJsDocBuilder,  rootNodeJsDocHolder);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  fileLevelJsDocBuilder,  rootNodeJsDocHolder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  fileLevelJsDocBuilder,  rootNodeJsDocHolder);	  Node    irNode    =    irFactory.transform(node,    templateNode,    rootNodeJsDocHolder);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
166	[BUG]  [BUGGY]  irFactory.transformTree(node,  sourceString,  config,  errorReporter,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  irFactory.transformTree(node,  sourceString,  config,  errorReporter,  fileLevelJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	irFactory.transformTree(node,  sourceString,  config,  errorReporter,  fileLevelJsDocBuilder);	  irFactory.transformTree(node,    sourceString,    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
167	[BUG]  [BUGGY]  irFactory.transformTree(node,  sourceString,  config,  errorReporter,  node);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  irFactory.transformTree(node,  sourceString,  config,  errorReporter,  node);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	irFactory.transformTree(node,  sourceString,  config,  errorReporter,  node);	  irFactory.transformTree(node,    sourceString,    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
168	[BUG]  [BUGGY]  irFactory.transformTree(node,  sourceString,  config,  errorReporter,  fileOverviewInfo);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  irFactory.transformTree(node,  sourceString,  config,  errorReporter,  fileOverviewInfo);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	irFactory.transformTree(node,  sourceString,  config,  errorReporter,  fileOverviewInfo);	  irFactory.transformTree(node,    sourceString,    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
169	[BUG]  [BUGGY]  irFactory.transformTree(node,  sourceString,  config,  errorReporter,  message);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  irFactory.transformTree(node,  sourceString,  config,  errorReporter,  message);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	irFactory.transformTree(node,  sourceString,  config,  errorReporter,  message);	  irFactory.transformTree(node,    sourceString,    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
170	[BUG]  [BUGGY]  irFactory.transformTree(node,  sourceString,  config,  errorReporter,  templateNode);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  irFactory.transformTree(node,  sourceString,  config,  errorReporter,  templateNode);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	irFactory.transformTree(node,  sourceString,  config,  errorReporter,  templateNode);	  irFactory.transformTree(node,    sourceString,    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
171	[BUG]  [BUGGY]  irFactory.transformTree(node,  sourceString,  config,  errorReporter,  null);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  irFactory.transformTree(node,  sourceString,  config,  errorReporter,  null);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	irFactory.transformTree(node,  sourceString,  config,  errorReporter,  null);	  irFactory.transformTree(node,    sourceString,    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
172	[BUG]  [BUGGY]  irFactory.transformTree(sourceString,  node,  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  irFactory.transformTree(sourceString,  node,  config,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	irFactory.transformTree(sourceString,  node,  config,  errorReporter);	  irFactory.transformTree(node,    sourceString,    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
173	[BUG]  [BUGGY]  irFactory.transformTree(node,  node,  sourceString,  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  irFactory.transformTree(node,  node,  sourceString,  config,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	irFactory.transformTree(node,  node,  sourceString,  config,  errorReporter);	  irFactory.transformTree(node,    sourceString,    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
174	[BUG]  [BUGGY]  irFactory.transformTree(node,  sourceString,  config,  errorsReporter);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  irFactory.transformTree(node,  sourceString,  config,  errorsReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	irFactory.transformTree(node,  sourceString,  config,  errorsReporter);	  irFactory.transformTree(node,    sourceString,    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
175	[BUG]  [BUGGY]  irFactory.transformTree(node,  sourceString,  config,  errorReporter,  irNode);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  irFactory.transformTree(node,  sourceString,  config,  errorReporter,  irNode);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	irFactory.transformTree(node,  sourceString,  config,  errorReporter,  irNode);	  irFactory.transformTree(node,    sourceString,    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
176	[BUG]  [BUGGY]  irFactory.setCurrentNode(node);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  irFactory.setCurrentNode(node);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	irFactory.setCurrentNode(node);	  irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
177	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  irFactory.setFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	irFactory.setFileOverviewJsDoc(rootNodeJsDocBuilder);	  irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
178	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNodeJsDocBuilder,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNodeJsDocBuilder,  fileLevelJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  rootNodeJsDocBuilder,  fileLevelJsDocBuilder);	  Node    irNode    =    irFactory.transform(node,    fileLevelJsDocBuilder,    templateNode);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
179	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(rootNodeJsDocHolder,  fileLevelJsDocBuilder,  templateNode);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(rootNodeJsDocHolder,  fileLevelJsDocBuilder,  templateNode);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(rootNodeJsDocHolder,  fileLevelJsDocBuilder,  templateNode);	  Node    irNode    =    irFactory.transform(node,    fileLevelJsDocBuilder,    templateNode);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
180	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString.getSourceName(),  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString.getSourceName(),  config,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString.getSourceName(),  config,  errorReporter);	  IRFactory    irFactory    =    new    IRFactory(node.getSourceName(),    sourceString,    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
181	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNode,  sourceString);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNode,  sourceString);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  rootNode,  sourceString);	  Node    irNode    =    irFactory.transform(node,    templateNode,    rootNodeJsDocHolder);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
182	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  rootNodeJsDocHolder,  message);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  rootNodeJsDocHolder,  message);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(node,  rootNodeJsDocHolder,  message);	  Node    irNode    =    irFactory.transformAstRoot(node,    sourceString,    message);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
183	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  this.fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  this.fileLevelJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  this.fileLevelJsDocBuilder);	  Node    irNode    =    irFactory.transformAstRoot(node,    sourceString,    message);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
184	[BUG]  [BUGGY]  Node  node  =  rootNode.getFirstChild();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  node  =  rootNode.getFirstChild();  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  node  =  rootNode.getFirstChild();	  Node    node    =    node.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
185	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  fileLevelJsDocBuilder,  sourceString);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  fileLevelJsDocBuilder,  sourceString);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(node,  fileLevelJsDocBuilder,  sourceString);	  Node    irNode    =    irFactory.transformAstRoot(node,    fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
186	[BUG]  [BUGGY]  Node  irNode  =  fileLevelJsDocBuilder.transformAstRoot(node);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  fileLevelJsDocBuilder.transformAstRoot(node);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  fileLevelJsDocBuilder.transformAstRoot(node);	  Node    irNode    =    irFactory.transformAstRoot(node,    fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
187	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNodeJsDocHolder,  null);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNodeJsDocHolder,  null);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  rootNodeJsDocHolder,  null);	  Node    irNode    =    irFactory.transform(node,    sourceString,    null);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
188	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(rootNode,  sourceString,  node);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(rootNode,  sourceString,  node);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(rootNode,  sourceString,  node);	  Node    irNode    =    irFactory.transform(rootNode,    sourceString);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
189	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  node,  rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  node,  rootNodeJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  sourceString,  node,  rootNodeJsDocBuilder);	  Node    irNode    =    irFactory.transform(node,    templateNode,    rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
190	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  rootNodeJSDocBuilder);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  rootNodeJSDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  sourceString,  rootNodeJSDocBuilder);	  Node    irNode    =    irFactory.transform(node,    templateNode,    rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
191	[BUG]  [BUGGY]  Node  irNode  =  node.getAstRoot(node);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  node.getAstRoot(node);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  node.getAstRoot(node);	  Node    irNode    =    irFactory.getAstRoot(node);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
192	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  fileLevelJsDocBuilder,  sourceString,  errorReporter);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  fileLevelJsDocBuilder,  sourceString,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  fileLevelJsDocBuilder,  sourceString,  errorReporter);	  Node    irNode    =    irFactory.transform(node,    fileLevelJsDocBuilder,    sourceString);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
193	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  templateNode,  errorReporter);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  templateNode,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  sourceString,  templateNode,  errorReporter);	  Node    irNode    =    irFactory.transform(node,    sourceString,    templateNode);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
194	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  rootNodeJsDocHolder,  sourceString);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  rootNodeJsDocHolder,  sourceString);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(node,  rootNodeJsDocHolder,  sourceString);	  Node    irNode    =    irFactory.transformAstRoot(node,    sourceString,    fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
195	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  rootNodeJsDocHolder);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  rootNodeJsDocHolder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  rootNodeJsDocHolder);	  Node    irNode    =    irFactory.transformAstRoot(node,    sourceString,    fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
196	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getReferenceName(),  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getReferenceName(),  config,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getReferenceName(),  config,  errorReporter);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getSourceName(),    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
197	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  config,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  config,  errorReporter);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    sourceString,    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
198	[BUG]  [BUGGY]  Node  irNode  =  rootNodeJsDocBuilder.transformAstRoot(irFactory);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  rootNodeJsDocBuilder.transformAstRoot(irFactory);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  rootNodeJsDocBuilder.transformAstRoot(irFactory);	  Node    irNode    =    node.transformAstRoot(irFactory);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
199	[BUG]  [BUGGY]  Node  node  =  irFactory.transformAstRoot(node);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  node  =  irFactory.transformAstRoot(node);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  node  =  irFactory.transformAstRoot(node);	  Node    irNode    =    node.transformAstRoot(irFactory);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
200	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  rootNodeJsDocHolder,  sourceString,  errorReporter);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  rootNodeJsDocHolder,  sourceString,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(node,  rootNodeJsDocHolder,  sourceString,  errorReporter);	  Node    irNode    =    irFactory.transformAstRoot(node,    sourceString,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
201	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(sourceString,  null);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(sourceString,  null);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(sourceString,  null);	  Node    irNode    =    irFactory.transform(sourceString,    config);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
202	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(sourceString,  rootNodeJsDocHolder);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(sourceString,  rootNodeJsDocHolder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(sourceString,  rootNodeJsDocHolder);	  Node    irNode    =    irFactory.transformAstRoot(sourceString,    node);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
203	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNodeJsDocHolder,  config);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNodeJsDocHolder,  config);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  rootNodeJsDocHolder,  config);	  Node    irNode    =    irFactory.transform(node,    sourceString,    config);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
204	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNodeJsDocHolder,  sourceString,  config);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNodeJsDocHolder,  sourceString,  config);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  rootNodeJsDocHolder,  sourceString,  config);	  Node    irNode    =    irFactory.transform(node,    sourceString,    config);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
205	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(rootNodeJsDocHolder,  node,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(rootNodeJsDocHolder,  node,  fileLevelJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(rootNodeJsDocHolder,  node,  fileLevelJsDocBuilder);	  Node    irNode    =    irFactory.transform(node,    templateNode,    fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
206	[BUG]  [BUGGY]  Node  node  =  irFactory.getAstRoot(node,  rootNodeJsDocHolder);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  node  =  irFactory.getAstRoot(node,  rootNodeJsDocHolder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  node  =  irFactory.getAstRoot(node,  rootNodeJsDocHolder);	  Node    node    =    irFactory.getAstRoot(node);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
207	[BUG]  [BUGGY]  Node  node  =  irFactory.getNode(node);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  node  =  irFactory.getNode(node);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  node  =  irFactory.getNode(node);	  Node    node    =    irFactory.getAstRoot(node);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
208	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  rootNode);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  rootNode);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(node,  rootNode);	  Node    irNode    =    irFactory.transformAstRoot(node,    node);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
209	[BUG]  [BUGGY]  Node  node  =  irFactory.transformAstRoot(node,  sourceString);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  node  =  irFactory.transformAstRoot(node,  sourceString);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  node  =  irFactory.transformAstRoot(node,  sourceString);	  Node    irNode    =    irFactory.transformAstRoot(node,    node);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
210	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNodeJsDocHolder,  false);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNodeJsDocHolder,  false);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  rootNodeJsDocHolder,  false);	  Node    irNode    =    irFactory.transform(node,    sourceString,    false);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
211	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(sourceString,  false);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(sourceString,  false);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(sourceString,  false);	  Node    irNode    =    irFactory.transform(node,    sourceString,    false);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
212	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNodeJsDocBuilder,  false);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNodeJsDocBuilder,  false);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  rootNodeJsDocBuilder,  false);	  Node    irNode    =    irFactory.transform(node,    sourceString,    false);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
213	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  rootNodeJsDocHolder,  false);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  rootNodeJsDocHolder,  false);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(node,  rootNodeJsDocHolder,  false);	  Node    irNode    =    irFactory.transformAstRoot(node,    sourceString,    false);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
214	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(rootNodeJsDocHolder,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(rootNodeJsDocHolder,  fileLevelJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(rootNodeJsDocHolder,  fileLevelJsDocBuilder);	  Node    irNode    =    irFactory.transform(sourceString,    fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
215	[BUG]  [BUGGY]  Node  irNode  =  rootNodeJsDocBuilder.transformAstRoot(node);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  rootNodeJsDocBuilder.transformAstRoot(node);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  rootNodeJsDocBuilder.transformAstRoot(node);	  Node    irNode    =    irFactory.transformAstRoot(node,    rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
216	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(sourceString,  node,  config);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(sourceString,  node,  config);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(sourceString,  node,  config);	  Node    irNode    =    irFactory.transformAstRoot(node,    sourceString,    config);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
217	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(sourceString,  rootNodeJsDocHolder,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(sourceString,  rootNodeJsDocHolder,  fileLevelJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(sourceString,  rootNodeJsDocHolder,  fileLevelJsDocBuilder);	  Node    irNode    =    irFactory.transform(node,    rootNodeJsDocHolder,    fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
218	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(rootNode,  templateNode);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(rootNode,  templateNode);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(rootNode,  templateNode);	  Node    irNode    =    irFactory.transform(node,    templateNode);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
219	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNodeJsDocHolder,  fileLevelJsDocBuilder,  errorReporter);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  rootNodeJsDocHolder,  fileLevelJsDocBuilder,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  rootNodeJsDocHolder,  fileLevelJsDocBuilder,  errorReporter);	  Node    irNode    =    irFactory.transform(node,    fileLevelJsDocBuilder,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
220	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(sourceString,  node,  fileLevelJsDocBuilder,  errorReporter);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(sourceString,  node,  fileLevelJsDocBuilder,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(sourceString,  node,  fileLevelJsDocBuilder,  errorReporter);	  Node    irNode    =    irFactory.transform(node,    fileLevelJsDocBuilder,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
221	[BUG]  [BUGGY]  Node  node  =  irFactory.setAstRoot(node);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  node  =  irFactory.setAstRoot(node);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  node  =  irFactory.setAstRoot(node);	  Node    node    =    irFactory.getAstRoot(node);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
222	[BUG]  [BUGGY]  Node  node  =  irFactory.createRootNode(node);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  node  =  irFactory.createRootNode(node);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  node  =  irFactory.createRootNode(node);	  Node    node    =    irFactory.getAstRoot(node);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
223	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  false,  null);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  false,  null);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  sourceString,  false,  null);	  Node    irNode    =    irFactory.transform(node,    sourceString,    false);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
224	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  false,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  false,  fileLevelJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  sourceString,  false,  fileLevelJsDocBuilder);	  Node    irNode    =    irFactory.transform(node,    sourceString,    false);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
225	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  rootNodeJSDocBuilder,  errorReporter);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  rootNodeJSDocBuilder,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  sourceString,  rootNodeJSDocBuilder,  errorReporter);	  Node    irNode    =    irFactory.transform(node,    rootNodeJsDocBuilder,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
226	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  errorReporter,  config,  sourceString);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  errorReporter,  config,  sourceString);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  errorReporter,  config,  sourceString);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    sourceString,    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
227	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  sourceName,  config,  errorReporter,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  sourceName,  config,  errorReporter,  fileLevelJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  sourceName,  config,  errorReporter,  fileLevelJsDocBuilder);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    sourceName,    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
228	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  rootNode,  rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  rootNode,  rootNodeJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  sourceString,  rootNode,  rootNodeJsDocBuilder);	  Node    irNode    =    irFactory.transform(node,    templateNode,    rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
229	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(rootNode,  node,  templateNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(rootNode,  node,  templateNodeJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(rootNode,  node,  templateNodeJsDocBuilder);	  Node    irNode    =    irFactory.transform(node,    templateNode,    rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
230	[BUG]  [BUGGY]  Node  irNode  =  rootNode.transformAstRoot(irFactory);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  rootNode.transformAstRoot(irFactory);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  rootNode.transformAstRoot(irFactory);	  Node    irNode    =    node.transformAstRoot(irFactory);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
231	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  fileLevelJsDocBuilder,  templateNode);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  fileLevelJsDocBuilder,  templateNode);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  fileLevelJsDocBuilder,  templateNode);	  Node    irNode    =    irFactory.transformAstRoot(node,    sourceString,    fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
232	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(fileOverviewInfo);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	irFactory.setPossibleFileOverviewJsDoc(fileOverviewInfo);	  irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
233	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  templateNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  templateNodeJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  sourceString,  templateNodeJsDocBuilder);	  Node    irNode    =    irFactory.transform(node,    templateNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
234	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  null,  config,  errorReporter,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  null,  config,  errorReporter,  fileLevelJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  null,  config,  errorReporter,  fileLevelJsDocBuilder);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    null,    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
235	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(node.getName(),  sourceString,  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  IRFactory  irFactory  =  new  IRFactory(node.getName(),  sourceString,  config,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	IRFactory  irFactory  =  new  IRFactory(node.getName(),  sourceString,  config,  errorReporter);	  IRFactory    irFactory    =    new    IRFactory(node.getSourceName(),    sourceString,    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
236	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(rootNode.getSourceName(),  sourceString,  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  IRFactory  irFactory  =  new  IRFactory(rootNode.getSourceName(),  sourceString,  config,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	IRFactory  irFactory  =  new  IRFactory(rootNode.getSourceName(),  sourceString,  config,  errorReporter);	  IRFactory    irFactory    =    new    IRFactory(node.getSourceName(),    sourceString,    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
237	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  rootNode);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  rootNode);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  rootNode);	  Node    irNode    =    irFactory.transformAstRoot(node,    sourceString,    node);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
238	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformTree(node,  sourceString,  errorReporter);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformTree(node,  sourceString,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformTree(node,  sourceString,  errorReporter);	  Node    irNode    =    irFactory.transformAstRoot(node,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
239	[BUG]  [BUGGY]  Node  irNode  =  node.transformAstRoot(config,  errorReporter);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  node.transformAstRoot(config,  errorReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  node.transformAstRoot(config,  errorReporter);	  Node    irNode    =    irFactory.transformAstRoot(node,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
240	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  Node.getSourceName(),  config,  errorReporter,  null);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  Node.getSourceName(),  config,  errorReporter,  null);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  Node.getSourceName(),  config,  errorReporter,  null);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    Node.getSourceName(),    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
241	[BUG]  [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getName(),  config,  errorReporter,  null);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getName(),  config,  errorReporter,  null);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getName(),  config,  errorReporter,  null);	  IRFactory    irFactory    =    new    IRFactory(sourceString,    node.getName(),    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
242	[BUG]  [BUGGY]  Node  irNode  =  irFactory.createAstRoot(node,  sourceString);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.createAstRoot(node,  sourceString);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.createAstRoot(node,  sourceString);	  Node    irNode    =    irFactory.getAstRoot(node);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
243	[BUG]  [BUGGY]  Node  irNode  =  irFactory.setAstRoot(node);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.setAstRoot(node);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.setAstRoot(node);	  Node    irNode    =    irFactory.getAstRoot(node);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
244	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  false,  node);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  false,  node);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  false,  node);	  Node    irNode    =    irFactory.transformAstRoot(node,    sourceString,    false);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
245	[BUG]  [BUGGY]  Node  node  =  node.cloneTree();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  node  =  node.cloneTree();  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  node  =  node.cloneTree();	  Node    node    =    node.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
246	[BUG]  [BUGGY]  Node  node  =  node.removeFirstChild();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  node  =  node.removeFirstChild();  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  node  =  node.removeFirstChild();	  Node    node    =    node.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
247	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  node,  rootNodeJsDocHolder);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  node,  rootNodeJsDocHolder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  sourceString,  node,  rootNodeJsDocHolder);	  Node    irNode    =    irFactory.transform(node,    templateNode,    rootNodeJsDocHolder);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
248	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(rootNode,  node,  templateNodeJsDocHolder);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(rootNode,  node,  templateNodeJsDocHolder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(rootNode,  node,  templateNodeJsDocHolder);	  Node    irNode    =    irFactory.transform(node,    templateNode,    rootNodeJsDocHolder);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
249	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  errorReporter,  config);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  errorReporter,  config);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  sourceString,  errorReporter,  config);	  Node    irNode    =    irFactory.transform(node,    sourceString,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
250	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(node);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  irFactory.setFileLevelJsDocBuilder(node);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	irFactory.setFileLevelJsDocBuilder(node);	  irFactory.handlePossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
251	[BUG]  [BUGGY]  irFactory.setJsDocHolder(node);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  irFactory.setJsDocHolder(node);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	irFactory.setJsDocHolder(node);	  irFactory.handlePossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
252	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJSDoc(node);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  irFactory.setPossibleFileOverviewJSDoc(node);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	irFactory.setPossibleFileOverviewJSDoc(node);	  irFactory.handlePossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
253	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  config,  errorsReporter);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  config,  errorsReporter);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  sourceString,  config,  errorsReporter);	  Node    irNode    =    irFactory.transform(node,    sourceString,    config);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
254	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  null,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transform(node,  sourceString,  null,  fileLevelJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transform(node,  sourceString,  null,  fileLevelJsDocBuilder);	  Node    irNode    =    irFactory.transform(node,    sourceString,    null);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
255	[BUG]  [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  templateNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  templateNodeJsDocBuilder);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  irFactory.transformAstRoot(node,  sourceString,  templateNodeJsDocBuilder);	  Node    irNode    =    irFactory.transformAstRoot(node,    sourceString,    rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
256	[BUG]  [BUGGY]  Node  irNode  =  rootNodeJsDocBuilder.transformAstRoot(node,  sourceString,  config);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Node  transformTree(AstRoot  node,  String  sourceString,  Config  config,  ErrorReporter  errorReporter)  {  IRFactory  irFactory  =  new  IRFactory(sourceString,  node.getSourceName(),  config,  errorReporter);      [BUGGY]  Node  irNode  =  rootNodeJsDocBuilder.transformAstRoot(node,  sourceString,  config);  [BUGGY]        if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	Node  irNode  =  rootNodeJsDocBuilder.transformAstRoot(node,  sourceString,  config);	  Node    irNode    =    irFactory.transformAstRoot(node,    sourceString,    rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
