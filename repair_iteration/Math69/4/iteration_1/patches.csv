bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  nVars  =  dataMatrix.getColumnDimension();  [CE]  cannot  find  symbol  dataMatrix  [FE]        AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nVars  =  dataMatrix.getColumnDimension();  [BUGGY]    int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =  dataMatrix.getColumnDimension();	      int    nVars    =    covarianceMatrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol  dataMatrix	12	None	replace
2	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getNumberOfObservations();  [CE]  cannot  find  symbol  covarianceMatrix  [FE]              AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nObs  =  covarianceMatrix.getNumberOfObservations();  [BUGGY]    int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nObs  =  covarianceMatrix.getNumberOfObservations();	      int    nObs    =    correlationMatrix.getNumberOfObservations();    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	11	None	replace
3	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getNumberOfObservations();  [CE]  cannot  find  symbol  dataMatrix  [FE]                AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nObs  =  dataMatrix.getNumberOfObservations();  [BUGGY]    int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nObs  =  dataMatrix.getNumberOfObservations();	      int    nObs    =    correlationMatrix.getNumberOfObservations();    	non-compiled	[CE]  cannot  find  symbol  dataMatrix	11	None	replace
4	[BUG]  [BUGGY]  int  nObs  =  this.covarianceMatrix.getNumberOfObservations();  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                  AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nObs  =  this.covarianceMatrix.getNumberOfObservations();  [BUGGY]    int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nObs  =  this.covarianceMatrix.getNumberOfObservations();	      int    nObs    =    correlationMatrix.getNumberOfObservations();    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	11	None	replace
5	[BUG]  [BUGGY]      int  nObs  =  correlationMatrix.getRowDimension();  int  nObs  =  correlationMatrix.getRowDimension();  [CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]      int  nObs  =  correlationMatrix.getRowDimension();  int  nObs  =  correlationMatrix.getRowDimension();  [BUGGY]    int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	        int    nObs    =    correlationMatrix.getRowDimension();    int  nObs  =  correlationMatrix.getRowDimension();	  	non-compiled	[CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()	8	None	add
6	[BUG]  [BUGGY]      int  nObs  =  correlationMatrix.getRowDimension();  int  nObs  =  correlationMatrix.getColumnDimension();  [CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]      int  nObs  =  correlationMatrix.getRowDimension();  int  nObs  =  correlationMatrix.getColumnDimension();  [BUGGY]    int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	        int    nObs    =    correlationMatrix.getRowDimension();    int  nObs  =  correlationMatrix.getColumnDimension();	  	non-compiled	[CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()	8	None	add
7	[BUG]  [BUGGY]      int  nObs  =  correlationMatrix.getRowDimension();  Integer  nObs  =  correlationMatrix.getRowDimension();  [CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]      int  nObs  =  correlationMatrix.getRowDimension();  Integer  nObs  =  correlationMatrix.getRowDimension();  [BUGGY]    int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	        int    nObs    =    correlationMatrix.getRowDimension();    Integer  nObs  =  correlationMatrix.getRowDimension();	  	non-compiled	[CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()	8	None	add
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]      int  nObs  =  correlationMatrix.getRowDimension();  int  nobs  =  correlationMatrix.getRowDimension();  [BUGGY]    int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	add	        int    nObs    =    correlationMatrix.getRowDimension();    int  nobs  =  correlationMatrix.getRowDimension();	  	compilable	  [FE]  AssertionFailedError  	8	4	add
9	[BUG]  [BUGGY]      int  nObs  =  correlationMatrix.getRowDimension();  int  nobs  =  correlationMatrix.getRowDimension();  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]      int  nObs  =  correlationMatrix.getRowDimension();  int  nobs  =  correlationMatrix.getRowDimension();  [BUGGY]    int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	        int    nObs    =    correlationMatrix.getRowDimension();    int  nobs  =  correlationMatrix.getRowDimension();	  	compilable	  [FE]  AssertionFailedError  	8	4	add
10	[BUG]  [BUGGY]  int  nObs  =  tDistribution.getColumnDimension();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nObs  =  tDistribution.getColumnDimension();  [BUGGY]    int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nObs  =  tDistribution.getColumnDimension();	      int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
11	[BUG]  [BUGGY]  int  nObs  =  tDistribution.getRowDimension();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nObs  =  tDistribution.getRowDimension();  [BUGGY]    int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nObs  =  tDistribution.getRowDimension();	      int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
12	[BUG]  [BUGGY]  int  nObs  =  this.covarianceMatrix.getRowDimension();  [CE]  cannot  find  symbol  covarianceMatrix  [FE]        AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nObs  =  this.covarianceMatrix.getRowDimension();  [BUGGY]    int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nObs  =  this.covarianceMatrix.getRowDimension();	      int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	7	None	replace
13	[BUG]  [BUGGY]  int  nVars  =  covarianceMatrix.getNumberOfObservations();  [CE]  cannot  find  symbol  covarianceMatrix  [FE]        AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nVars  =  covarianceMatrix.getNumberOfObservations();  [BUGGY]    int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =  covarianceMatrix.getNumberOfObservations();	      int    nVars    =    correlationMatrix.getNumberOfObservations();    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	14	None	replace
14	[BUG]  [BUGGY]  int  nVars  =  tDistribution.getNumberOfObservations();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nVars  =  tDistribution.getNumberOfObservations();  [BUGGY]    int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =  tDistribution.getNumberOfObservations();	      int    nVars    =    correlationMatrix.getNumberOfObservations();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
15	[BUG]  [BUGGY]  int  nVars  =  this.covarianceMatrix.getNumberOfObservations();  [CE]  cannot  find  symbol  covarianceMatrix  [FE]            AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nVars  =  this.covarianceMatrix.getNumberOfObservations();  [BUGGY]    int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =  this.covarianceMatrix.getNumberOfObservations();	      int    nVars    =    correlationMatrix.getNumberOfObservations();    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	14	None	replace
16	[BUG]  [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  int  nObs  =  correlationMatrix.getColumnDimension();  [CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  int  nObs  =  correlationMatrix.getColumnDimension();  [BUGGY]    int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	        int    nObs    =    correlationMatrix.getColumnDimension();    int  nObs  =  correlationMatrix.getColumnDimension();	  	non-compiled	[CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()	6	None	add
17	[BUG]  [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  int  nObs  =  correlationMatrix.getRowDimension();  [CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  int  nObs  =  correlationMatrix.getRowDimension();  [BUGGY]    int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	        int    nObs    =    correlationMatrix.getColumnDimension();    int  nObs  =  correlationMatrix.getRowDimension();	  	non-compiled	[CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()	6	None	add
18	[BUG]  [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  int  nObs  =  covarianceMatrix.getColumnDimension();  [CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  int  nObs  =  covarianceMatrix.getColumnDimension();  [BUGGY]    int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	        int    nObs    =    correlationMatrix.getColumnDimension();    int  nObs  =  covarianceMatrix.getColumnDimension();	  	non-compiled	[CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()	6	None	add
19	[BUG]  [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  int  nObs  =  correlationMatrix.getRoleDimension();  [CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()  [FE]          AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  int  nObs  =  correlationMatrix.getRoleDimension();  [BUGGY]    int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	        int    nObs    =    correlationMatrix.getColumnDimension();    int  nObs  =  correlationMatrix.getRoleDimension();	  	non-compiled	[CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()	6	None	add
20	[BUG]  [BUGGY]  int  nVars  =  tDistribution.getNumberDimension();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nVars  =  tDistribution.getNumberDimension();  [BUGGY]    double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =  tDistribution.getNumberDimension();	  int    nVars    =    tDistribution.getRowDimension();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
21	[BUG]  [BUGGY]  int  nVars  =  this.tDistribution.getRowDimension();  [CE]  cannot  find  symbol  tDistribution  [FE]          AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nVars  =  this.tDistribution.getRowDimension();  [BUGGY]    double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =  this.tDistribution.getRowDimension();	  int    nVars    =    tDistribution.getRowDimension();    	non-compiled	[CE]  cannot  find  symbol  tDistribution	1	None	replace
22	[BUG]  [BUGGY]  int  nVars  =  matrix.getRowDimension();  [CE]  cannot  find  symbol  matrix  [FE]            AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nVars  =  matrix.getRowDimension();  [BUGGY]    double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =  matrix.getRowDimension();	  int    nVars    =    covarianceMatrix.getRowDimension();    	non-compiled	[CE]  cannot  find  symbol  matrix	3	None	replace
23	[BUG]  [BUGGY]  int  nVars  =  dataMatrix.getRowDimension();  [CE]  cannot  find  symbol  dataMatrix  [FE]              AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nVars  =  dataMatrix.getRowDimension();  [BUGGY]    double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =  dataMatrix.getRowDimension();	  int    nVars    =    covarianceMatrix.getRowDimension();    	non-compiled	[CE]  cannot  find  symbol  dataMatrix	3	None	replace
24	[BUG]  [BUGGY]  int  nVars  =  getNumberOfObservations();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nVars  =  getNumberOfObservations();  [BUGGY]    double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =  getNumberOfObservations();	      	non-compiled	[CE]  cannot  find  symbol	5	None	replace
25	[BUG]  [BUGGY]  [FE]  MatrixIndexException  [FE]                  AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nVars  =  Math.min(nObs,  1);  [BUGGY]    double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	add	int  nVars  =  Math.min(nObs,  1);	      	compilable	  [FE]  MatrixIndexException  	5	6	replace
26	[BUG]  [BUGGY]  int  nVars  =  Math.min(nObs,  1);  [FE]  MatrixIndexException  [FE]                  AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nVars  =  Math.min(nObs,  1);  [BUGGY]    double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =  Math.min(nObs,  1);	      	compilable	  [FE]  MatrixIndexException  	5	6	replace
27	[BUG]  [BUGGY]  int  nVars  =  getNumberOfObservations().size();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nVars  =  getNumberOfObservations().size();  [BUGGY]    double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =  getNumberOfObservations().size();	      	non-compiled	[CE]  cannot  find  symbol	5	None	replace
28	[BUG]  [BUGGY]  [FE]  MatrixIndexException  [FE]                      AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nVars  =  Math.abs(nObs  -  1);  [BUGGY]    double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	add	int  nVars  =  Math.abs(nObs  -  1);	      	compilable	  [FE]  MatrixIndexException  	5	7	replace
29	[BUG]  [BUGGY]  int  nVars  =  Math.abs(nObs  -  1);  [FE]  MatrixIndexException  [FE]                      AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nVars  =  Math.abs(nObs  -  1);  [BUGGY]    double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =  Math.abs(nObs  -  1);	      	compilable	  [FE]  MatrixIndexException  	5	7	replace
30	[BUG]  [BUGGY]  int  nVars  =  tDistribution.getVarDimension();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nVars  =  tDistribution.getVarDimension();  [BUGGY]    int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =  tDistribution.getVarDimension();	      int    nVars    =    correlationMatrix.getVarDimension();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
31	[BUG]  [BUGGY]  int  nVars  =  covarianceMatrix.getVarDimension();  [CE]  cannot  find  symbol  covarianceMatrix  [FE]            AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nVars  =  covarianceMatrix.getVarDimension();  [BUGGY]    int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =  covarianceMatrix.getVarDimension();	      int    nVars    =    correlationMatrix.getVarDimension();    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	13	None	replace
32	[BUG]  [BUGGY]  int  nVars  =  this.covarianceMatrix.getVarDimension();  [CE]  cannot  find  symbol  covarianceMatrix  [FE]              AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nVars  =  this.covarianceMatrix.getVarDimension();  [BUGGY]    int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =  this.covarianceMatrix.getVarDimension();	      int    nVars    =    correlationMatrix.getVarDimension();    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	13	None	replace
33	[BUG]  [BUGGY]  int  nVars  =(covarianceMatrix  ==  null)?  0  :  correlationMatrix.getColumnDimension();  [CE]  cannot  find  symbol  covarianceMatrix  [FE]        AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nVars  =(covarianceMatrix  ==  null)?  0  :  correlationMatrix.getColumnDimension();  [BUGGY]    double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =(covarianceMatrix  ==  null)?  0  :  correlationMatrix.getColumnDimension();	  int    nVars    =(relativeMatrix    ==    null)?    0    :    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	15	None	replace
34	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nVars  =(correlationMatrix  ==  null)?  0  :  correlationMatrix.getColumnDimension();  [BUGGY]    double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	add	int  nVars  =(correlationMatrix  ==  null)?  0  :  correlationMatrix.getColumnDimension();	  int    nVars    =(relativeMatrix    ==    null)?    0    :    correlationMatrix.getColumnDimension();    	compilable	  [FE]  AssertionFailedError  	15	2	replace
35	[BUG]  [BUGGY]  int  nVars  =(correlationMatrix  ==  null)?  0  :  correlationMatrix.getColumnDimension();  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nVars  =(correlationMatrix  ==  null)?  0  :  correlationMatrix.getColumnDimension();  [BUGGY]    double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =(correlationMatrix  ==  null)?  0  :  correlationMatrix.getColumnDimension();	  int    nVars    =(relativeMatrix    ==    null)?    0    :    correlationMatrix.getColumnDimension();    	compilable	  [FE]  AssertionFailedError  	15	2	replace
36	[BUG]  [BUGGY]  int  nVars  =(columnMatrix  ==  null)?  0  :  covarianceMatrix.getColumnDimension();  [CE]  cannot  find  symbol  columnMatrix  [FE]            AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nVars  =(columnMatrix  ==  null)?  0  :  covarianceMatrix.getColumnDimension();  [BUGGY]    double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =(columnMatrix  ==  null)?  0  :  covarianceMatrix.getColumnDimension();	  int    nVars    =(relativeMatrix    ==    null)?    0    :    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol  columnMatrix	15	None	replace
37	[BUG]  [BUGGY]  int  nVars  =(relativeMatrix  ==  null)?  0  :  covarianceMatrix.getColumnDimension();  [CE]  cannot  find  symbol  relativeMatrix  [FE]              AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nVars  =(relativeMatrix  ==  null)?  0  :  covarianceMatrix.getColumnDimension();  [BUGGY]    double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =(relativeMatrix  ==  null)?  0  :  covarianceMatrix.getColumnDimension();	  int    nVars    =(relativeMatrix    ==    null)?    0    :    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol  relativeMatrix	15	None	replace
38	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nVars  =  this.correlationMatrix.getRowDimension();  [BUGGY]    double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	add	int  nVars  =  this.correlationMatrix.getRowDimension();	  int    nVars    =    this.covarianceMatrix.getRowDimension();    	compilable	  [FE]  AssertionFailedError  	4	2	replace
39	[BUG]  [BUGGY]  int  nVars  =  this.correlationMatrix.getRowDimension();  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nVars  =  this.correlationMatrix.getRowDimension();  [BUGGY]    double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =  this.correlationMatrix.getRowDimension();	  int    nVars    =    this.covarianceMatrix.getRowDimension();    	compilable	  [FE]  AssertionFailedError  	4	2	replace
40	[BUG]  [BUGGY]  int  nVars  =  this.tDistribution.getColumnDimension();  [CE]  cannot  find  symbol  tDistribution  [FE]          AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nVars  =  this.tDistribution.getColumnDimension();  [BUGGY]    double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =  this.tDistribution.getColumnDimension();	  int    nVars    =    tDistribution.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol  tDistribution	2	None	replace
41	[BUG]  [BUGGY]  int  nObs  =  this.covarianceMatrix.getColumnDimension();  [CE]  cannot  find  symbol  covarianceMatrix  [FE]    AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nObs  =  this.covarianceMatrix.getColumnDimension();  [BUGGY]    int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nObs  =  this.covarianceMatrix.getColumnDimension();	      int    nObs    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	9	None	replace
42	[BUG]  [BUGGY]  int  nVars  =  covarianceMatrix.getVarianceDimension();  [CE]  cannot  find  symbol  covarianceMatrix  [FE]          AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nVars  =  covarianceMatrix.getVarianceDimension();  [BUGGY]    double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =  covarianceMatrix.getVarianceDimension();	  int    nVars    =    correlationMatrix.getVarianceDimension();    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	16	None	replace
43	[BUG]  [BUGGY]  int  nVars  =  tDistribution.getVarianceDimension();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nVars  =  tDistribution.getVarianceDimension();  [BUGGY]    double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =  tDistribution.getVarianceDimension();	  int    nVars    =    correlationMatrix.getVarianceDimension();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
44	[BUG]  [BUGGY]  int  nVars  =  this.covarianceMatrix.getVarianceDimension();  [CE]  cannot  find  symbol  covarianceMatrix  [FE]              AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nVars  =  this.covarianceMatrix.getVarianceDimension();  [BUGGY]    double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =  this.covarianceMatrix.getVarianceDimension();	  int    nVars    =    correlationMatrix.getVarianceDimension();    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	16	None	replace
45	[BUG]  [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  Integer  nObs  =  correlationMatrix.getColumnDimension();  [CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  Integer  nObs  =  correlationMatrix.getColumnDimension();  [BUGGY]    int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	        int    nObs    =    correlationMatrix.getColumnDimension();    Integer  nObs  =  correlationMatrix.getColumnDimension();	  	non-compiled	[CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()	6	None	add
46	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  int  nobs  =  correlationMatrix.getColumnDimension();  [BUGGY]    int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	add	        int    nObs    =    correlationMatrix.getColumnDimension();    int  nobs  =  correlationMatrix.getColumnDimension();	  	compilable	  [FE]  AssertionFailedError  	6	4	add
47	[BUG]  [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  int  nobs  =  correlationMatrix.getColumnDimension();  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  int  nobs  =  correlationMatrix.getColumnDimension();  [BUGGY]    int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	        int    nObs    =    correlationMatrix.getColumnDimension();    int  nobs  =  correlationMatrix.getColumnDimension();	  	compilable	  [FE]  AssertionFailedError  	6	4	add
48	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars][nVars];  [CE]  cannot  find  symbol  nVars  [FE]                AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  double[][]  out  =  new  double[nVars][nVars];  [BUGGY]    double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	double[][]  out  =  new  double[nVars][nVars];	      	non-compiled	[CE]  cannot  find  symbol  nVars	5	None	replace
49	[BUG]  [BUGGY]  tDistribution.cumulativeProbability(t));  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  tDistribution.cumulativeProbability(t));  [BUGGY]    double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	tDistribution.cumulativeProbability(t));	      	non-compiled	[CE]  ';'  expected	5	None	replace
50	[BUG]  [BUGGY]  int  nVars  =  this.covarianceMatrix.getColumnDimension();  [CE]  cannot  find  symbol  covarianceMatrix  [FE]              AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nVars  =  this.covarianceMatrix.getColumnDimension();  [BUGGY]    double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =  this.covarianceMatrix.getColumnDimension();	  int    nVars    =    this.covarianceMatrix.getRowDimension();    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	4	None	replace
51	[BUG]  [BUGGY]  int  nVars  =  dataMatrix.getVarDimension();  [CE]  cannot  find  symbol  dataMatrix  [FE]          AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nVars  =  dataMatrix.getVarDimension();  [BUGGY]    int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =  dataMatrix.getVarDimension();	      int    nVars    =    correlationMatrix.getVarDimension();    	non-compiled	[CE]  cannot  find  symbol  dataMatrix	13	None	replace
52	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nVars  =(correlationMatrix  ==  null)?  0  :  correlationMatrix.getRowDimension();  [BUGGY]    double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	add	int  nVars  =(correlationMatrix  ==  null)?  0  :  correlationMatrix.getRowDimension();	  int    nVars    =(relativeMatrix    ==    null)?    0    :    correlationMatrix.getColumnDimension();    	compilable	  [FE]  AssertionFailedError  	15	2	replace
53	[BUG]  [BUGGY]  int  nVars  =(correlationMatrix  ==  null)?  0  :  correlationMatrix.getRowDimension();  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nVars  =(correlationMatrix  ==  null)?  0  :  correlationMatrix.getRowDimension();  [BUGGY]    double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =(correlationMatrix  ==  null)?  0  :  correlationMatrix.getRowDimension();	  int    nVars    =(relativeMatrix    ==    null)?    0    :    correlationMatrix.getColumnDimension();    	compilable	  [FE]  AssertionFailedError  	15	2	replace
54	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  [CE]  cannot  find  symbol  dataMatrix  [FE]    AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  [BUGGY]    int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nObs  =  dataMatrix.getColumnDimension();	      int    nObs    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  cannot  find  symbol  dataMatrix	9	None	replace
55	[BUG]  [BUGGY]  int  nVars  =  matrix.getColumnDimension();  [CE]  cannot  find  symbol  matrix  [FE]        AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nVars  =  matrix.getColumnDimension();  [BUGGY]    int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =  matrix.getColumnDimension();	      int    nVars    =    covarianceMatrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol  matrix	12	None	replace
56	[BUG]  [BUGGY]  int  nVars  =  tDistribution.getRoleDimension();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nVars  =  tDistribution.getRoleDimension();  [BUGGY]    double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =  tDistribution.getRoleDimension();	  int    nVars    =    tDistribution.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
57	[BUG]  [BUGGY]  int  nVars  =  tDistribution.getRangeDimension();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nVars  =  tDistribution.getRangeDimension();  [BUGGY]    double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =  tDistribution.getRangeDimension();	  int    nVars    =    tDistribution.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
58	[BUG]  [BUGGY]  int  nVars  =  dataMatrix.getNumberOfObservations();  [CE]  cannot  find  symbol  dataMatrix  [FE]        AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nVars  =  dataMatrix.getNumberOfObservations();  [BUGGY]    int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =  dataMatrix.getNumberOfObservations();	      int    nVars    =    correlationMatrix.getNumberOfObservations();    	non-compiled	[CE]  cannot  find  symbol  dataMatrix	14	None	replace
59	[BUG]  [BUGGY]  int  nVars  =  matrix.getNumberOfObservations();  [CE]  cannot  find  symbol  matrix  [FE]          AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nVars  =  matrix.getNumberOfObservations();  [BUGGY]    int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =  matrix.getNumberOfObservations();	      int    nVars    =    correlationMatrix.getNumberOfObservations();    	non-compiled	[CE]  cannot  find  symbol  matrix	14	None	replace
60	[BUG]  [BUGGY]  int  nVars  =  matrix.getVarianceDimension();  [CE]  cannot  find  symbol  matrix  [FE]          AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nVars  =  matrix.getVarianceDimension();  [BUGGY]    double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =  matrix.getVarianceDimension();	  int    nVars    =    correlationMatrix.getVarianceDimension();    	non-compiled	[CE]  cannot  find  symbol  matrix	16	None	replace
61	[BUG]  [BUGGY]      int  nObs  =  correlationMatrix.getRowDimension();  Int  nObs  =  correlationMatrix.getRowDimension();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]      int  nObs  =  correlationMatrix.getRowDimension();  Int  nObs  =  correlationMatrix.getRowDimension();  [BUGGY]    int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	        int    nObs    =    correlationMatrix.getRowDimension();    Int  nObs  =  correlationMatrix.getRowDimension();	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
62	[BUG]  [BUGGY]      int  nObs  =  correlationMatrix.getRowDimension();  int  nObs  =  covarianceMatrix.getRowDimension();  [CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]      int  nObs  =  correlationMatrix.getRowDimension();  int  nObs  =  covarianceMatrix.getRowDimension();  [BUGGY]    int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	        int    nObs    =    correlationMatrix.getRowDimension();    int  nObs  =  covarianceMatrix.getRowDimension();	  	non-compiled	[CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()	8	None	add
63	[BUG]  [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  Int  nObs  =  correlationMatrix.getColumnDimension();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  Int  nObs  =  correlationMatrix.getColumnDimension();  [BUGGY]    int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	        int    nObs    =    correlationMatrix.getColumnDimension();    Int  nObs  =  correlationMatrix.getColumnDimension();	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
64	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getObjDimension();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nObs  =  correlationMatrix.getObjDimension();  [BUGGY]    int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nObs  =  correlationMatrix.getObjDimension();	      int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
65	[BUG]  [BUGGY]  int  nVars  =(correspondanceMatrix  ==  null)?  0  :  correlationMatrix.getColumnDimension();  [CE]  cannot  find  symbol  correspondanceMatrix  [FE]        AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nVars  =(correspondanceMatrix  ==  null)?  0  :  correlationMatrix.getColumnDimension();  [BUGGY]    double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =(correspondanceMatrix  ==  null)?  0  :  correlationMatrix.getColumnDimension();	  int    nVars    =(relativeMatrix    ==    null)?    0    :    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol  correspondanceMatrix	15	None	replace
66	[BUG]  [BUGGY]  int  nVars  =  dataset.getNumberOfObservations();  [CE]  cannot  find  symbol  dataset  [FE]                AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nVars  =  dataset.getNumberOfObservations();  [BUGGY]    double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =  dataset.getNumberOfObservations();	      	non-compiled	[CE]  cannot  find  symbol  dataset	5	None	replace
67	[BUG]  [BUGGY]  [FE]  MatrixIndexException  [FE]                  AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nVars  =(nObs  >  0)?  nObs  :  nObs;  [BUGGY]    double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	add	int  nVars  =(nObs  >  0)?  nObs  :  nObs;	      	compilable	  [FE]  MatrixIndexException  	5	7	replace
68	[BUG]  [BUGGY]  int  nVars  =(nObs  >  0)?  nObs  :  nObs;  [FE]  MatrixIndexException  [FE]                  AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);    [BUGGY]  int  nVars  =(nObs  >  0)?  nObs  :  nObs;  [BUGGY]    double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =(nObs  >  0)?  nObs  :  nObs;	      	compilable	  [FE]  MatrixIndexException  	5	7	replace
