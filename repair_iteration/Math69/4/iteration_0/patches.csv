bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  nVars  =  tDistribution.getRowDimension();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  [BUGGY]  int  nVars  =  tDistribution.getRowDimension();  [BUGGY]  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =  tDistribution.getRowDimension();	int  nVars  =  correlationMatrix.getColumnDimension();  	non-compiled	[CE]  cannot  find  symbol	7	None	replace
2	[BUG]  [BUGGY]  int  nVars  =  tDistribution.getColumnDimension();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  [BUGGY]  int  nVars  =  tDistribution.getColumnDimension();  [BUGGY]  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =  tDistribution.getColumnDimension();	int  nVars  =  correlationMatrix.getColumnDimension();  	non-compiled	[CE]  cannot  find  symbol	7	None	replace
3	[BUG]  [BUGGY]  int  nVars  =  covarianceMatrix.getRowDimension();  [CE]  cannot  find  symbol  covarianceMatrix  [FE]        AssertionFailedError  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  [BUGGY]  int  nVars  =  covarianceMatrix.getRowDimension();  [BUGGY]  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =  covarianceMatrix.getRowDimension();	int  nVars  =  correlationMatrix.getColumnDimension();  	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	7	None	replace
4	[BUG]  [BUGGY]  int  nVars  =  this.covarianceMatrix.getRowDimension();  [CE]  cannot  find  symbol  covarianceMatrix  [FE]          AssertionFailedError  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  [BUGGY]  int  nVars  =  this.covarianceMatrix.getRowDimension();  [BUGGY]  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =  this.covarianceMatrix.getRowDimension();	int  nVars  =  correlationMatrix.getColumnDimension();  	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	7	None	replace
5	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  nVars  [FE]            AssertionFailedError  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  [BUGGY]    [BUGGY]  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	  	int  nVars  =  correlationMatrix.getColumnDimension();  	non-compiled	[CE]  cannot  find  symbol  nVars	7	None	replace
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  [BUGGY]    int  nObs  =  correlationMatrix.getColumnDimension();  [BUGGY]  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	add	    int  nObs  =  correlationMatrix.getColumnDimension();		compilable	  [FE]  AssertionFailedError  	8	4	add
7	[BUG]  [BUGGY]    int  nObs  =  correlationMatrix.getColumnDimension();  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  [BUGGY]    int  nObs  =  correlationMatrix.getColumnDimension();  [BUGGY]  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	    int  nObs  =  correlationMatrix.getColumnDimension();		compilable	  [FE]  AssertionFailedError  	8	4	add
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  [BUGGY]    int  nObs  =  correlationMatrix.getRowDimension();  [BUGGY]  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	add	    int  nObs  =  correlationMatrix.getRowDimension();		compilable	  [FE]  AssertionFailedError  	8	4	add
9	[BUG]  [BUGGY]    int  nObs  =  correlationMatrix.getRowDimension();  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  [BUGGY]    int  nObs  =  correlationMatrix.getRowDimension();  [BUGGY]  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	    int  nObs  =  correlationMatrix.getRowDimension();		compilable	  [FE]  AssertionFailedError  	8	4	add
10	[BUG]  [BUGGY]    int  nVars  =  correlationMatrix.getRowDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  [BUGGY]    int  nVars  =  correlationMatrix.getRowDimension();  [BUGGY]  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	    int  nVars  =  correlationMatrix.getRowDimension();		non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	8	None	add
11	[BUG]  [BUGGY]    int  nObs  =  correlationMatrix.getNumberOfObservations();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  [BUGGY]    int  nObs  =  correlationMatrix.getNumberOfObservations();  [BUGGY]  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	    int  nObs  =  correlationMatrix.getNumberOfObservations();		non-compiled	[CE]  cannot  find  symbol	8	None	add
12	[BUG]  [BUGGY]    int  nVars  =  covarianceMatrix.getColumnDimension();  [CE]  cannot  find  symbol  covarianceMatrix  [FE]    AssertionFailedError  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  [BUGGY]    int  nVars  =  covarianceMatrix.getColumnDimension();  [BUGGY]  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	    int  nVars  =  covarianceMatrix.getColumnDimension();		non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	8	None	add
13	[BUG]  [BUGGY]    int  nVars  =  correlationMatrix.getVarDimension();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  [BUGGY]    int  nVars  =  correlationMatrix.getVarDimension();  [BUGGY]  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	    int  nVars  =  correlationMatrix.getVarDimension();		non-compiled	[CE]  cannot  find  symbol	8	None	add
14	[BUG]  [BUGGY]    int  nVars  =  correlationMatrix.getNumberOfObservations();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  [BUGGY]    int  nVars  =  correlationMatrix.getNumberOfObservations();  [BUGGY]  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	    int  nVars  =  correlationMatrix.getNumberOfObservations();		non-compiled	[CE]  cannot  find  symbol	8	None	add
15	[BUG]  [BUGGY]  int  nVars  =(relativeMatrix  ==  null)?  0  :  correlationMatrix.getColumnDimension();  [CE]  cannot  find  symbol  relativeMatrix  [FE]    AssertionFailedError  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  [BUGGY]  int  nVars  =(relativeMatrix  ==  null)?  0  :  correlationMatrix.getColumnDimension();  [BUGGY]  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =(relativeMatrix  ==  null)?  0  :  correlationMatrix.getColumnDimension();	int  nVars  =  correlationMatrix.getColumnDimension();  	non-compiled	[CE]  cannot  find  symbol  relativeMatrix	7	None	replace
16	[BUG]  [BUGGY]  int  nVars  =  correlationMatrix.getVarianceDimension();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  [BUGGY]  int  nVars  =  correlationMatrix.getVarianceDimension();  [BUGGY]  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =  correlationMatrix.getVarianceDimension();	int  nVars  =  correlationMatrix.getColumnDimension();  	non-compiled	[CE]  cannot  find  symbol	7	None	replace
