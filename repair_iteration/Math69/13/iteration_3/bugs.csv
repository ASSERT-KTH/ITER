bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  new  BlockRealMatrix(compiler,  correlationMatrix,  out);  [CE]  cannot  find  symbol  compiler  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(compiler,  correlationMatrix,  out);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(compiler,  correlationMatrix,  out);	  return    new    BlockRealMatrix(correlationMatrix,    out);    	non-compiled	[CE]  cannot  find  symbol  compiler	37	None	replace
2	[BUG]  [BUGGY]  return  new  BlockRealMatrix(r,  correlationMatrix,  out);  [CE]  cannot  find  symbol  r  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(r,  correlationMatrix,  out);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(r,  correlationMatrix,  out);	  return    new    BlockRealMatrix(correlationMatrix,    out);    	non-compiled	[CE]  cannot  find  symbol  r	37	None	replace
3	[BUG]  [BUGGY]  return  new  BlockRealMatrix(tDistribution.cumulativeProbability(r));  [CE]  cannot  find  symbol  r  [FE]                AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(tDistribution.cumulativeProbability(r));  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(tDistribution.cumulativeProbability(r));	  return    new    BlockRealMatrix(tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  cannot  find  symbol  r	12	None	replace
4	[BUG]  [BUGGY]  return  new  BlockRealMatrix(tDistribution.cumulativeProbability(covarianceMatrix));  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(tDistribution.cumulativeProbability(covarianceMatrix));  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(tDistribution.cumulativeProbability(covarianceMatrix));	  return    new    BlockRealMatrix(tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	12	None	replace
5	[BUG]  [BUGGY]  return  new  BlockRealMatrix(tDistribution.cumulativeProbability(nVars));  [CE]  no  suitable  constructor  found  for  BlockRealMatrix(double)  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(tDistribution.cumulativeProbability(nVars));  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(tDistribution.cumulativeProbability(nVars));	  return    new    BlockRealMatrix(tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  no  suitable  constructor  found  for  BlockRealMatrix(double)	12	None	replace
6	[BUG]  [BUGGY]  return  new  BlockRealMatrix(tDistribution.cumulativeProbability(k));  [CE]  cannot  find  symbol  k  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(tDistribution.cumulativeProbability(k));  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(tDistribution.cumulativeProbability(k));	  return    new    BlockRealMatrix(tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  cannot  find  symbol  k	12	None	replace
7	[BUG]  [BUGGY]  return  Math.max(relativeMatrix.getEntry(nVars,  j));  [CE]  cannot  find  symbol  j  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  Math.max(relativeMatrix.getEntry(nVars,  j));  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  Math.max(relativeMatrix.getEntry(nVars,  j));	  return    Math.max(relativeMatrix.getEntry(i,    j));    	non-compiled	[CE]  cannot  find  symbol  j	51	None	replace
8	[BUG]  [BUGGY]  return  Math.max(relativeMatrix.getEntry(i,  j),  covarianceMatrix);  [CE]  cannot  find  symbol  i  [FE]                        AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  Math.max(relativeMatrix.getEntry(i,  j),  covarianceMatrix);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  Math.max(relativeMatrix.getEntry(i,  j),  covarianceMatrix);	  return    Math.max(relativeMatrix.getEntry(i,    j));    	non-compiled	[CE]  cannot  find  symbol  i	51	None	replace
9	[BUG]  [BUGGY]  return  Math.max(relativeMatrix.getEntry(j,  nVars));  [CE]  cannot  find  symbol  j  [FE]                          AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  Math.max(relativeMatrix.getEntry(j,  nVars));  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  Math.max(relativeMatrix.getEntry(j,  nVars));	  return    Math.max(relativeMatrix.getEntry(i,    j));    	non-compiled	[CE]  cannot  find  symbol  j	51	None	replace
10	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs;  j++)  {  if(covarianceMatrix.getEntry(i,  j)  ==  correlationMatrix.getEntry(i,  j))  {  out[i][j]  =  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  for(int  j  =  0;  j  <  nObs;  j++)  {  if(covarianceMatrix.getEntry(i,  j)  ==  correlationMatrix.getEntry(i,  j))  {  out[i][j]  =  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	for(int  j  =  0;  j  <  nObs;  j++)  {  if(covarianceMatrix.getEntry(i,  j)  ==  correlationMatrix.getEntry(i,  j))  {  out[i][j]  =	  for(int    j    =    0;    j    <    nVars;    j++)    {    if(covarianceMatrix.getEntry(i,    j)    ==    correlationMatrix.getEntry(i,    j))    {    out[i][j]    =    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
11	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs;  j++)  {  if(covarianceMatrix.getEntry(i,  j)!=  correlationMatrix.getEntry(i,  j))  {  out[i][j]  =  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  for(int  j  =  0;  j  <  nObs;  j++)  {  if(covarianceMatrix.getEntry(i,  j)!=  correlationMatrix.getEntry(i,  j))  {  out[i][j]  =  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	for(int  j  =  0;  j  <  nObs;  j++)  {  if(covarianceMatrix.getEntry(i,  j)!=  correlationMatrix.getEntry(i,  j))  {  out[i][j]  =	  for(int    j    =    0;    j    <    nVars;    j++)    {    if(covarianceMatrix.getEntry(i,    j)    ==    correlationMatrix.getEntry(i,    j))    {    out[i][j]    =    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
12	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs;  j++)  {  if(covarianceMatrix.getEntry(i,  j)  ==  correlationMatrix.getEntry(i,  j))  {  out[i][j]  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  for(int  j  =  0;  j  <  nObs;  j++)  {  if(covarianceMatrix.getEntry(i,  j)  ==  correlationMatrix.getEntry(i,  j))  {  out[i][j]  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	for(int  j  =  0;  j  <  nObs;  j++)  {  if(covarianceMatrix.getEntry(i,  j)  ==  correlationMatrix.getEntry(i,  j))  {  out[i][j]	  for(int    j    =    0;    j    <    nVars;    j++)    {    if(covarianceMatrix.getEntry(i,    j)    ==    correlationMatrix.getEntry(i,    j))    {    out[i][j]    =    	non-compiled	[CE]  not  a  statement	76	None	replace
13	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numberOfObservations;  j++)  {  if(covarianceMatrix.getEntry(i,  j)  ==  correlationMatrix.getEntry(i,  j))  {  out[i][j]  =  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  for(int  j  =  0;  j  <  numberOfObservations;  j++)  {  if(covarianceMatrix.getEntry(i,  j)  ==  correlationMatrix.getEntry(i,  j))  {  out[i][j]  =  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	for(int  j  =  0;  j  <  numberOfObservations;  j++)  {  if(covarianceMatrix.getEntry(i,  j)  ==  correlationMatrix.getEntry(i,  j))  {  out[i][j]  =	  for(int    j    =    0;    j    <    nVars;    j++)    {    if(covarianceMatrix.getEntry(i,    j)    ==    correlationMatrix.getEntry(i,    j))    {    out[i][j]    =    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
14	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  d)));  [CE]  cannot  find  symbol  i  [FE]              AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  d)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  d)));	  out[i][j]    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    n    *    d)));    	non-compiled	[CE]  cannot  find  symbol  i	21	None	replace
15	[BUG]  [BUGGY]  return  new  BlockRealMatrix(nVars,  j,  out);  [CE]  cannot  find  symbol  j  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(nVars,  j,  out);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(nVars,  j,  out);	  return    new    BlockRealMatrix(nVars,    t,    out);    	non-compiled	[CE]  cannot  find  symbol  j	43	None	replace
16	[BUG]  [BUGGY]  return  new  BlockRealMatrix(nVars,  covarianceMatrix,  out);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(nVars,  covarianceMatrix,  out);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(nVars,  covarianceMatrix,  out);	  return    new    BlockRealMatrix(nVars,    t,    out);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	43	None	replace
17	[BUG]  [BUGGY]  return  new  BlockRealMatrix(nVars,  i,  out);  [CE]  cannot  find  symbol  i  [FE]                        AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(nVars,  i,  out);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(nVars,  i,  out);	  return    new    BlockRealMatrix(nVars,    t,    out);    	non-compiled	[CE]  cannot  find  symbol  i	43	None	replace
18	[BUG]  [BUGGY]  return  new  BlockRealMatrix(nVars,  correlationMatrix,  out);  [CE]  no  suitable  constructor  found  for  BlockRealMatrix(int,RealMatrix,double[][])  [FE]                          AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(nVars,  correlationMatrix,  out);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(nVars,  correlationMatrix,  out);	  return    new    BlockRealMatrix(nVars,    t,    out);    	non-compiled	[CE]  no  suitable  constructor  found  for  BlockRealMatrix(int,RealMatrix,double[][])	43	None	replace
19	[BUG]  [BUGGY]  return  new  BlockRealMatrix(r,  correlationMatrix);  [CE]  cannot  find  symbol  r  [FE]              AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(r,  correlationMatrix);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(r,  correlationMatrix);	  return    new    BlockRealMatrix(r,    covarianceMatrix);    	non-compiled	[CE]  cannot  find  symbol  r	33	None	replace
20	[BUG]  [BUGGY]  return  new  BlockRealMatrix(t,  covarianceMatrix);  [CE]  cannot  find  symbol  t  [FE]                AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(t,  covarianceMatrix);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(t,  covarianceMatrix);	  return    new    BlockRealMatrix(r,    covarianceMatrix);    	non-compiled	[CE]  cannot  find  symbol  t	33	None	replace
21	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(matrix  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  t)));  [CE]  cannot  find  symbol  i  [FE]                AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[i][j]  =  Math.abs(matrix  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  t)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(matrix  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  t)));	  out[i][j]    =    Math.abs(t    *    Math.sqrt((    nObs    -    2)/(1    -    r    *    t)));    	non-compiled	[CE]  cannot  find  symbol  i	73	None	replace
22	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  d)));  [CE]  cannot  find  symbol  i  [FE]            AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  d)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  d)));	  out[i][j]    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    n    *    d)));    	non-compiled	[CE]  cannot  find  symbol  i	25	None	replace
23	[BUG]  [BUGGY]  return  new  BlockRealMatrix(r,  nVars,  out);  [CE]  cannot  find  symbol  r  [FE]                AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(r,  nVars,  out);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(r,  nVars,  out);	  return    new    BlockRealMatrix(covarianceMatrix,    nVars,    out);    	non-compiled	[CE]  cannot  find  symbol  r	64	None	replace
24	[BUG]  [BUGGY]  return  new  BlockRealMatrix(matrix,  nVars,  out);  [CE]  cannot  find  symbol  matrix  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(matrix,  nVars,  out);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(matrix,  nVars,  out);	  return    new    BlockRealMatrix(covarianceMatrix,    nVars,    out);    	non-compiled	[CE]  cannot  find  symbol  matrix	64	None	replace
25	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  t)));  [CE]  cannot  find  symbol  i  [FE]                AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  t)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  t)));	  out[i][j]    =    Math.abs(relativeProbability    *    Math.sqrt((    nObs    -    2)/(1    -    n    *    r)));    	non-compiled	[CE]  cannot  find  symbol  i	39	None	replace
26	[BUG]  [BUGGY]  out[j][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  t)));  [CE]  cannot  find  symbol  j  [FE]              AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[j][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  t)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[j][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  t)));	  out[j][j]    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    n    *    r)));    	non-compiled	[CE]  cannot  find  symbol  j	71	None	replace
27	[BUG]  [BUGGY]  out[j][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  n  *  r)));  [CE]  cannot  find  symbol  j  [FE]                AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[j][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  n  *  r)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[j][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  n  *  r)));	  out[j][j]    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    n    *    r)));    	non-compiled	[CE]  cannot  find  symbol  j	71	None	replace
28	[BUG]  [BUGGY]  return  Math.pow(10,  correlationMatrix.getEntry(nVars,  j));  [CE]  cannot  find  symbol  j  [FE]                        AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  Math.pow(10,  correlationMatrix.getEntry(nVars,  j));  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  Math.pow(10,  correlationMatrix.getEntry(nVars,  j));	  return    Math.pow(10,    correlationMatrix.getEntry(i,    j));    	non-compiled	[CE]  cannot  find  symbol  j	52	None	replace
29	[BUG]  [BUGGY]  return  Math.pow(10,  correlationMatrix.getEntry(j,  nVars));  [CE]  cannot  find  symbol  j  [FE]                          AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  Math.pow(10,  correlationMatrix.getEntry(j,  nVars));  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  Math.pow(10,  correlationMatrix.getEntry(j,  nVars));	  return    Math.pow(10,    correlationMatrix.getEntry(i,    j));    	non-compiled	[CE]  cannot  find  symbol  j	52	None	replace
30	[BUG]  [BUGGY]  return  Math.pow(10,  correlationMatrix.getEntry(j,  i));  [CE]  cannot  find  symbol  j  [FE]                            AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  Math.pow(10,  correlationMatrix.getEntry(j,  i));  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  Math.pow(10,  correlationMatrix.getEntry(j,  i));	  return    Math.pow(10,    correlationMatrix.getEntry(i,    j));    	non-compiled	[CE]  cannot  find  symbol  j	52	None	replace
31	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  t)));  [CE]  cannot  find  symbol  i  [FE]            AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  t)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  t)));	  out[i][j]    =    Math.abs(t    *    Math.sqrt((    nVars    -    2)/(1    -    n    *    r)));    	non-compiled	[CE]  cannot  find  symbol  i	62	None	replace
32	[BUG]  [BUGGY]  return  new  BlockRealMatrix(compovarianceMatrix,  nVars);  [CE]  cannot  find  symbol  compovarianceMatrix  [FE]                AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(compovarianceMatrix,  nVars);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(compovarianceMatrix,  nVars);	  return    new    BlockRealMatrix(compovarianceMatrix,    out);    	non-compiled	[CE]  cannot  find  symbol  compovarianceMatrix	58	None	replace
33	[BUG]  [BUGGY]  return  new  BlockRealMatrix(covarianceMatrix,  out,  nVars);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(covarianceMatrix,  out,  nVars);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(covarianceMatrix,  out,  nVars);	  return    new    BlockRealMatrix(compovarianceMatrix,    out);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	58	None	replace
34	[BUG]  [BUGGY]  return  new  BlockRealMatrix(comparisonMatrix,  out,  nVars);  [CE]  cannot  find  symbol  comparisonMatrix  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(comparisonMatrix,  out,  nVars);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(comparisonMatrix,  out,  nVars);	  return    new    BlockRealMatrix(comparisonMatrix,    nVars,    out);    	non-compiled	[CE]  cannot  find  symbol  comparisonMatrix	65	None	replace
35	[BUG]  [BUGGY]  return  new  BlockRealMatrix(correlationMatrix,  nVars,  out);  [CE]  no  suitable  constructor  found  for  BlockRealMatrix(RealMatrix,int,double[][])  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(correlationMatrix,  nVars,  out);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(correlationMatrix,  nVars,  out);	  return    new    BlockRealMatrix(comparisonMatrix,    nVars,    out);    	non-compiled	[CE]  no  suitable  constructor  found  for  BlockRealMatrix(RealMatrix,int,double[][])	65	None	replace
36	[BUG]  [BUGGY]  return  new  BlockRealMatrix(r,  nObs);  [CE]  cannot  find  symbol  r  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(r,  nObs);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(r,  nObs);	  return    new    BlockRealMatrix(r,    nVars);    	non-compiled	[CE]  cannot  find  symbol  r	15	None	replace
37	[BUG]  [BUGGY]  return  new  BlockRealMatrix(t,  nVars);  [CE]  cannot  find  symbol  t  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(t,  nVars);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(t,  nVars);	  return    new    BlockRealMatrix(r,    nVars);    	non-compiled	[CE]  cannot  find  symbol  t	15	None	replace
38	[BUG]  [BUGGY]  return  new  BlockRealMatrix(relativeMatrix,  covarianceMatrix,  out);  [CE]  cannot  find  symbol  relativeMatrix  [FE]                AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(relativeMatrix,  covarianceMatrix,  out);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(relativeMatrix,  covarianceMatrix,  out);	  return    new    BlockRealMatrix(relativeMatrix,    nVars,    out);    	non-compiled	[CE]  cannot  find  symbol  relativeMatrix	55	None	replace
39	[BUG]  [BUGGY]  return  new  BlockRealMatrix(out,  nObs,  nVars);  [CE]  no  suitable  constructor  found  for  BlockRealMatrix(double[][],int,int)  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(out,  nObs,  nVars);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(out,  nObs,  nVars);	  return    new    BlockRealMatrix(nVars,    nObs,    out);    	non-compiled	[CE]  no  suitable  constructor  found  for  BlockRealMatrix(double[][],int,int)	42	None	replace
40	[BUG]  [BUGGY]  return  new  BlockRealMatrix(nVars,  nObs,  covarianceMatrix,  out);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(nVars,  nObs,  covarianceMatrix,  out);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(nVars,  nObs,  covarianceMatrix,  out);	  return    new    BlockRealMatrix(nVars,    nObs,    out);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	42	None	replace
41	[BUG]  [BUGGY]  return  new  BlockRealMatrix(in,  nObs,  nVars);  [CE]  cannot  find  symbol  in  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(in,  nObs,  nVars);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(in,  nObs,  nVars);	  return    new    BlockRealMatrix(nVars,    nObs,    out);    	non-compiled	[CE]  cannot  find  symbol  in	42	None	replace
42	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  l)));  [CE]  cannot  find  symbol  i  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  l)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  l)));	  out[i][j]    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    n    *    l)));    	non-compiled	[CE]  cannot  find  symbol  i	40	None	replace
43	[BUG]  [BUGGY]  return  new  BlockRealMatrix(r,  correlationMatrix,  nVars);  [CE]  cannot  find  symbol  r  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(r,  correlationMatrix,  nVars);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(r,  correlationMatrix,  nVars);	  return    new    BlockRealMatrix(relationMatrix,    nVars);    	non-compiled	[CE]  cannot  find  symbol  r	16	None	replace
44	[BUG]  [BUGGY]  return  new  BlockRealMatrix(relationMatrix,  covarianceMatrix);  [CE]  cannot  find  symbol  relationMatrix  [FE]                        AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(relationMatrix,  covarianceMatrix);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(relationMatrix,  covarianceMatrix);	  return    new    BlockRealMatrix(relationMatrix,    nVars);    	non-compiled	[CE]  cannot  find  symbol  relationMatrix	16	None	replace
45	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  n  *  t)));  [CE]  cannot  find  symbol  i  [FE]              AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  n  *  t)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  n  *  t)));	  out[i][j]    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(2    -    n    *    r)));    	non-compiled	[CE]  cannot  find  symbol  i	23	None	replace
46	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  1)/(2  -  n  *  r)));  [CE]  cannot  find  symbol  i  [FE]                AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  1)/(2  -  n  *  r)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  1)/(2  -  n  *  r)));	  out[i][j]    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(2    -    n    *    r)));    	non-compiled	[CE]  cannot  find  symbol  i	23	None	replace
47	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  n  *  d)));  [CE]  cannot  find  symbol  i  [FE]              AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  n  *  d)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  n  *  d)));	  out[i][j]    =    Math.abs(t    *    Math.sqrt((    nObs    -    1)/(2    -    n    *    r)));    	non-compiled	[CE]  cannot  find  symbol  i	48	None	replace
48	[BUG]  [BUGGY]  return  new  BlockRealMatrix(relativeMatrix,  correlationMatrix);  [CE]  cannot  find  symbol  relativeMatrix  [FE]                AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(relativeMatrix,  correlationMatrix);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(relativeMatrix,  correlationMatrix);	  return    new    BlockRealMatrix(relativeMatrix,    covarianceMatrix);    	non-compiled	[CE]  cannot  find  symbol  relativeMatrix	36	None	replace
49	[BUG]  [BUGGY]  return  new  BlockRealMatrix(relativeMatrix,  tDistribution);  [CE]  cannot  find  symbol  relativeMatrix  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(relativeMatrix,  tDistribution);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(relativeMatrix,  tDistribution);	  return    new    BlockRealMatrix(relativeMatrix,    covarianceMatrix);    	non-compiled	[CE]  cannot  find  symbol  relativeMatrix	36	None	replace
50	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  t)));  [CE]  cannot  find  symbol  i  [FE]                AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  t)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  t)));	  out[i][j]    =    Math.abs(relativeProbability    *    Math.sqrt((    nObs    -    1)/(1    -    n    *    r)));    	non-compiled	[CE]  cannot  find  symbol  i	49	None	replace
51	[BUG]  [BUGGY]  return  tDistribution.cumulativeProbability(r);  [CE]  cannot  find  symbol  r  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  tDistribution.cumulativeProbability(r);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  tDistribution.cumulativeProbability(r);	  return    tDistribution.cumulativeProbability(t);    	non-compiled	[CE]  cannot  find  symbol  r	30	None	replace
52	[BUG]  [BUGGY]  return  tDistribution.cumulativeProbability(out);  [CE]  no  suitable  method  found  for  cumulativeProbability(double[][])  [FE]                        AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  tDistribution.cumulativeProbability(out);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  tDistribution.cumulativeProbability(out);	  return    tDistribution.cumulativeProbability(t);    	non-compiled	[CE]  no  suitable  method  found  for  cumulativeProbability(double[][])	30	None	replace
53	[BUG]  [BUGGY]  return  tDistribution.cumulativeProbability(nObs);  [CE]  incompatible  types  [FE]                          AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  tDistribution.cumulativeProbability(nObs);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  tDistribution.cumulativeProbability(nObs);	  return    tDistribution.cumulativeProbability(t);    	non-compiled	[CE]  incompatible  types	30	None	replace
54	[BUG]  [BUGGY]  return  tDistribution.cumulativeProbability(covarianceMatrix);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                            AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  tDistribution.cumulativeProbability(covarianceMatrix);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  tDistribution.cumulativeProbability(covarianceMatrix);	  return    tDistribution.cumulativeProbability(t);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	30	None	replace
55	[BUG]  [BUGGY]  out[j][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  t)));  [CE]  cannot  find  symbol  j  [FE]            AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[j][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  t)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[j][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  t)));	  out[j][j]    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    n    *    r)));    	non-compiled	[CE]  cannot  find  symbol  j	70	None	replace
56	[BUG]  [BUGGY]  out[j][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  [CE]  cannot  find  symbol  j  [FE]              AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[j][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[j][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));	  out[j][j]    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    n    *    r)));    	non-compiled	[CE]  cannot  find  symbol  j	70	None	replace
57	[BUG]  [BUGGY]  out[j][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  l)));  [CE]  cannot  find  symbol  j  [FE]                AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[j][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  l)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[j][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  l)));	  out[j][j]    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    n    *    r)));    	non-compiled	[CE]  cannot  find  symbol  j	70	None	replace
58	[BUG]  [BUGGY]  return  new  BlockRealMatrix(out,  covarianceMatrix,  nVars);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]              AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(out,  covarianceMatrix,  nVars);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(out,  covarianceMatrix,  nVars);	  return    new    BlockRealMatrix(out,    correlationMatrix);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	6	None	replace
59	[BUG]  [BUGGY]  return  new  BlockRealMatrix(r,  out,  correlationMatrix);  [CE]  cannot  find  symbol  r  [FE]                AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(r,  out,  correlationMatrix);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(r,  out,  correlationMatrix);	  return    new    BlockRealMatrix(out,    correlationMatrix);    	non-compiled	[CE]  cannot  find  symbol  r	6	None	replace
60	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  n)));  [CE]  cannot  find  symbol  i  [FE]              AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  n)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  n)));	  out[i][j]    =    Math.abs(t    *    Math.sqrt((    nObs    -    2)/(1    -    r    *    r)));    	non-compiled	[CE]  cannot  find  symbol  i	18	None	replace
61	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  l)));  [CE]  cannot  find  symbol  i  [FE]            AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  l)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  l)));	  out[i][j]    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    n    *    l)));    	non-compiled	[CE]  cannot  find  symbol  i	78	None	replace
62	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  r)));  [CE]  cannot  find  symbol  i  [FE]            AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  r)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  r)));	  out[i][j]    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    r    *    r)));    	non-compiled	[CE]  cannot  find  symbol  i	57	None	replace
63	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(t  *  Math.sqrt((  nVars  -  2)/(1  -  r  *  r)));  [CE]  cannot  find  symbol  i  [FE]              AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[i][j]  =  Math.abs(t  *  Math.sqrt((  nVars  -  2)/(1  -  r  *  r)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(t  *  Math.sqrt((  nVars  -  2)/(1  -  r  *  r)));	  out[i][j]    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    r    *    r)));    	non-compiled	[CE]  cannot  find  symbol  i	57	None	replace
64	[BUG]  [BUGGY]  return  new  BlockRealMatrix(correlationMatrix,  nVars);  [CE]  no  suitable  constructor  found  for  BlockRealMatrix(RealMatrix,int)  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(correlationMatrix,  nVars);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(correlationMatrix,  nVars);	  return    new    BlockRealMatrix(relativeMatrix,    nVars);    	non-compiled	[CE]  no  suitable  constructor  found  for  BlockRealMatrix(RealMatrix,int)	46	None	replace
65	[BUG]  [BUGGY]  return  new  BlockRealMatrix(combineMatrix,  nVars);  [CE]  cannot  find  symbol  combineMatrix  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(combineMatrix,  nVars);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(combineMatrix,  nVars);	  return    new    BlockRealMatrix(relativeMatrix,    nVars);    	non-compiled	[CE]  cannot  find  symbol  combineMatrix	46	None	replace
66	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  tDistribution)));  [CE]  cannot  find  symbol  i  [FE]                AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  tDistribution)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  tDistribution)));	  out[i][j]    =    Math.abs(relativeProbability    *    Math.sqrt((    nObs    -    2)/(1    -    r    *    t)));    	non-compiled	[CE]  cannot  find  symbol  i	24	None	replace
67	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(l  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  t)));  [CE]  cannot  find  symbol  i  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[i][j]  =  Math.abs(l  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  t)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(l  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  t)));	  out[i][j]    =    Math.abs(relativeProbability    *    Math.sqrt((    nObs    -    2)/(1    -    r    *    t)));    	non-compiled	[CE]  cannot  find  symbol  i	24	None	replace
68	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs;  j++)  {  if(covarianceMatrix.getEntry(i,  j)!=  null)  {  out[i][j]  =  0d;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  for(int  j  =  0;  j  <  nObs;  j++)  {  if(covarianceMatrix.getEntry(i,  j)!=  null)  {  out[i][j]  =  0d;  }  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	for(int  j  =  0;  j  <  nObs;  j++)  {  if(covarianceMatrix.getEntry(i,  j)!=  null)  {  out[i][j]  =  0d;  }	  for(int    j    =    0;    j    <    nVars;    j++)    {    if(covarianceMatrix.getEntry(i,    j)!=    null)    {    out[i][j]    =    0d;    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
69	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numberOfObservations;  j++)  {  if(covarianceMatrix.getEntry(i,  j)!=  null)  {  out[i][j]  =  0d;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  for(int  j  =  0;  j  <  numberOfObservations;  j++)  {  if(covarianceMatrix.getEntry(i,  j)!=  null)  {  out[i][j]  =  0d;  }  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	for(int  j  =  0;  j  <  numberOfObservations;  j++)  {  if(covarianceMatrix.getEntry(i,  j)!=  null)  {  out[i][j]  =  0d;  }	  for(int    j    =    0;    j    <    nVars;    j++)    {    if(covarianceMatrix.getEntry(i,    j)!=    null)    {    out[i][j]    =    0d;    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
70	[BUG]  [BUGGY]  int  j  =  0;  j  <  nVars;  j++)  {  if(covarianceMatrix.getEntry(i,  j)!=  null)  {  out[i][j]  =  0d;  }  [CE]  >  expected  [FE]                          AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  int  j  =  0;  j  <  nVars;  j++)  {  if(covarianceMatrix.getEntry(i,  j)!=  null)  {  out[i][j]  =  0d;  }  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	int  j  =  0;  j  <  nVars;  j++)  {  if(covarianceMatrix.getEntry(i,  j)!=  null)  {  out[i][j]  =  0d;  }	  for(int    j    =    0;    j    <    nVars;    j++)    {    if(covarianceMatrix.getEntry(i,    j)!=    null)    {    out[i][j]    =    0d;    }    	non-compiled	[CE]  >  expected	75	None	replace
71	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs;  j++)  {  if(covarianceMatrix.getEntry(i,  j)  ==  null)  {  out[i][j]  =  0d;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  for(int  j  =  0;  j  <  nObs;  j++)  {  if(covarianceMatrix.getEntry(i,  j)  ==  null)  {  out[i][j]  =  0d;  }  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	for(int  j  =  0;  j  <  nObs;  j++)  {  if(covarianceMatrix.getEntry(i,  j)  ==  null)  {  out[i][j]  =  0d;  }	  for(int    j    =    0;    j    <    nVars;    j++)    {    if(covarianceMatrix.getEntry(i,    j)!=    null)    {    out[i][j]    =    0d;    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
72	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs;  j++)  {  if(i  ==  j)  {  out[i][j]  =  0d;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  for(int  j  =  0;  j  <  nObs;  j++)  {  if(i  ==  j)  {  out[i][j]  =  0d;  }  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	for(int  j  =  0;  j  <  nObs;  j++)  {  if(i  ==  j)  {  out[i][j]  =  0d;  }	  for(int    j    =    0;    j    <    nVars;    j++)    {    if(i    ==    j)    {    out[i][j]    =    0d;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
73	[BUG]  [BUGGY]  int  j  =  0;  j  <  nVars;  j++)  {  if(i  ==  j)  {  out[i][j]  =  0d;  }  [CE]  >  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  int  j  =  0;  j  <  nVars;  j++)  {  if(i  ==  j)  {  out[i][j]  =  0d;  }  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	int  j  =  0;  j  <  nVars;  j++)  {  if(i  ==  j)  {  out[i][j]  =  0d;  }	  for(int    j    =    0;    j    <    nVars;    j++)    {    if(i    ==    j)    {    out[i][j]    =    0d;    }    	non-compiled	[CE]  >  expected	29	None	replace
74	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  nObs;  j++)  {  if(i  ==  j)  {  out[i][j]  =  0d;  }  [CE]  '.class'  expected  [FE]                        AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  For(int  j  =  0;  j  <  nObs;  j++)  {  if(i  ==  j)  {  out[i][j]  =  0d;  }  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	For(int  j  =  0;  j  <  nObs;  j++)  {  if(i  ==  j)  {  out[i][j]  =  0d;  }	  for(int    j    =    0;    j    <    nVars;    j++)    {    if(i    ==    j)    {    out[i][j]    =    0d;    }    	non-compiled	[CE]  '.class'  expected	29	None	replace
75	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numberOfObservations;  j++)  {  if(i  ==  j)  {  out[i][j]  =  0d;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  for(int  j  =  0;  j  <  numberOfObservations;  j++)  {  if(i  ==  j)  {  out[i][j]  =  0d;  }  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	for(int  j  =  0;  j  <  numberOfObservations;  j++)  {  if(i  ==  j)  {  out[i][j]  =  0d;  }	  for(int    j    =    0;    j    <    nVars;    j++)    {    if(i    ==    j)    {    out[i][j]    =    0d;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
76	[BUG]  [BUGGY]  return  new  BlockRealMatrix(nObs,  nVars,  correlationMatrix);  [CE]  no  suitable  constructor  found  for  BlockRealMatrix(int,int,RealMatrix)  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(nObs,  nVars,  correlationMatrix);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(nObs,  nVars,  correlationMatrix);	  return    new    BlockRealMatrix(relationMatrix,    nVars,    out);    	non-compiled	[CE]  no  suitable  constructor  found  for  BlockRealMatrix(int,int,RealMatrix)	56	None	replace
77	[BUG]  [BUGGY]  return  new  BlockRealMatrix(relationMatrix,  covarianceMatrix,  out);  [CE]  cannot  find  symbol  relationMatrix  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(relationMatrix,  covarianceMatrix,  out);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(relationMatrix,  covarianceMatrix,  out);	  return    new    BlockRealMatrix(relationMatrix,    nVars,    out);    	non-compiled	[CE]  cannot  find  symbol  relationMatrix	56	None	replace
78	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(matrix  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  [CE]  cannot  find  symbol  i  [FE]              AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[i][j]  =  Math.abs(matrix  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(matrix  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));	  out[i][j]    =    Math.abs(d    *    Math.sqrt((    nObs    -    2)/(1    -    n    *    r)));    	non-compiled	[CE]  cannot  find  symbol  i	26	None	replace
79	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs;  i++)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  nObs;  i++)  {  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	for(int  i  =  0;  i  <  nObs;  i++)  {	  for(int    i    =    0;    i    <    nVars;    i++)    {    double[][]    out[]    =    matrix.getEntry(i,    j);    for(int    i    =    0;    i    <    nVars;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
80	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	for(int  i  =  0;  i  <  nVars;  i++)  {	  for(int    i    =    0;    i    <    nVars;    i++)    {    double[][]    out[]    =    matrix.getEntry(i,    j);    for(int    i    =    0;    i    <    nVars;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
81	[BUG]  [BUGGY]  double[][]  out[]  =  matrix.getEntry(i,  j);  for(int  i  =  0;  i  <  nVars;  i++)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  double[][]  out[]  =  matrix.getEntry(i,  j);  for(int  i  =  0;  i  <  nVars;  i++)  {  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	double[][]  out[]  =  matrix.getEntry(i,  j);  for(int  i  =  0;  i  <  nVars;  i++)  {	  for(int    i    =    0;    i    <    nVars;    i++)    {    double[][]    out[]    =    matrix.getEntry(i,    j);    for(int    i    =    0;    i    <    nVars;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
82	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  nObs;  i++)  {  [CE]  '.class'  expected  [FE]                              AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  For(int  i  =  0;  i  <  nObs;  i++)  {  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	For(int  i  =  0;  i  <  nObs;  i++)  {	  for(int    i    =    0;    i    <    nVars;    i++)    {    double[][]    out[]    =    matrix.getEntry(i,    j);    for(int    i    =    0;    i    <    nVars;    i++)    {    	non-compiled	[CE]  '.class'  expected	31	None	replace
83	[BUG]  [BUGGY]  return  new  BlockRealMatrix(nObs,  nVars);  new  BlockRealMatrix(nObs,  nVars);  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(nObs,  nVars);  new  BlockRealMatrix(nObs,  nVars);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return    new    BlockRealMatrix(nObs,    nVars);    new  BlockRealMatrix(nObs,  nVars);	  	non-compiled	[CE]  unreachable  statement	13	None	add
84	[BUG]  [BUGGY]  return  new  BlockRealMatrix(nObs,  nVars);  for(int  j  =  0;  j  <  nVars;  j++)  {  if(i  ==  j)  {  out[i][j]  =  0d;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(nObs,  nVars);  for(int  j  =  0;  j  <  nVars;  j++)  {  if(i  ==  j)  {  out[i][j]  =  0d;  }  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return    new    BlockRealMatrix(nObs,    nVars);    for(int  j  =  0;  j  <  nVars;  j++)  {  if(i  ==  j)  {  out[i][j]  =  0d;  }	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
85	[BUG]  [BUGGY]  return  new  BlockRealMatrix(nObs,  nVars);  for(int  j  =  0;  j  <  nVars;  j++)  {  if(i  ==  j)  {  return  new  BlockRealMatrix(nObs,  nVars);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(nObs,  nVars);  for(int  j  =  0;  j  <  nVars;  j++)  {  if(i  ==  j)  {  return  new  BlockRealMatrix(nObs,  nVars);  }  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return    new    BlockRealMatrix(nObs,    nVars);    for(int  j  =  0;  j  <  nVars;  j++)  {  if(i  ==  j)  {  return  new  BlockRealMatrix(nObs,  nVars);  }	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
86	[BUG]  [BUGGY]  return  new  BlockRealMatrix(nObs,  nVars);  for(int  j  =  0;  j  <  nVars;  j++)  {  if(relativeMatrix.getEntry(i,  j)!=  null)  {  return  new  BlockRealMatrix(nObs,  nVars);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(nObs,  nVars);  for(int  j  =  0;  j  <  nVars;  j++)  {  if(relativeMatrix.getEntry(i,  j)!=  null)  {  return  new  BlockRealMatrix(nObs,  nVars);  }  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return    new    BlockRealMatrix(nObs,    nVars);    for(int  j  =  0;  j  <  nVars;  j++)  {  if(relativeMatrix.getEntry(i,  j)!=  null)  {  return  new  BlockRealMatrix(nObs,  nVars);  }	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
87	[BUG]  [BUGGY]  return  new  BlockRealMatrix(nObs,  nVars);  for(int  j  =  0;  j  <  nVars;  j++)  {  if(relativeMatrix.getEntry(i,  j)  ==  null)  {  return  new  BlockRealMatrix(nObs,  nVars);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(nObs,  nVars);  for(int  j  =  0;  j  <  nVars;  j++)  {  if(relativeMatrix.getEntry(i,  j)  ==  null)  {  return  new  BlockRealMatrix(nObs,  nVars);  }  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return    new    BlockRealMatrix(nObs,    nVars);    for(int  j  =  0;  j  <  nVars;  j++)  {  if(relativeMatrix.getEntry(i,  j)  ==  null)  {  return  new  BlockRealMatrix(nObs,  nVars);  }	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
88	[BUG]  [BUGGY]  return  new  BlockRealMatrix(out,  nVars,  nObs);  [CE]  no  suitable  constructor  found  for  BlockRealMatrix(double[][],int,int)  [FE]            AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(out,  nVars,  nObs);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(out,  nVars,  nObs);	  return    new    BlockRealMatrix(out,    nObs);    	non-compiled	[CE]  no  suitable  constructor  found  for  BlockRealMatrix(double[][],int,int)	35	None	replace
89	[BUG]  [BUGGY]  return  new  BlockRealMatrix(out,  nObs,  covarianceMatrix);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]              AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(out,  nObs,  covarianceMatrix);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(out,  nObs,  covarianceMatrix);	  return    new    BlockRealMatrix(out,    nObs);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	35	None	replace
90	[BUG]  [BUGGY]  return  new  BlockRealMatrix(out,  covarianceMatrix,  nObs);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(out,  covarianceMatrix,  nObs);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(out,  covarianceMatrix,  nObs);	  return    new    BlockRealMatrix(out,    nObs);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	35	None	replace
91	[BUG]  [BUGGY]  return  new  BlockRealMatrix(nObs);  [CE]  no  suitable  constructor  found  for  BlockRealMatrix(int)  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(nObs);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(nObs);	  return    new    BlockRealMatrix(r);    	non-compiled	[CE]  no  suitable  constructor  found  for  BlockRealMatrix(int)	27	None	replace
92	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  t)));  [CE]  cannot  find  symbol  i  [FE]            AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  t)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  t)));	  out[i][j]    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    	non-compiled	[CE]  cannot  find  symbol  i	17	None	replace
93	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  [CE]  cannot  find  symbol  i  [FE]              AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));	  out[i][j]    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    	non-compiled	[CE]  cannot  find  symbol  i	17	None	replace
94	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  l)));  [CE]  cannot  find  symbol  i  [FE]                AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  l)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  l)));	  out[i][j]    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    	non-compiled	[CE]  cannot  find  symbol  i	17	None	replace
95	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  r  *  t)));  [CE]  cannot  find  symbol  i  [FE]            AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  r  *  t)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  r  *  t)));	  out[i][j]    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    n    *    t)));    	non-compiled	[CE]  cannot  find  symbol  i	22	None	replace
96	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(t  *  Math.sqrt((  nObs  -  1)/(1  -  r  *  r)));  [CE]  cannot  find  symbol  i  [FE]              AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[i][j]  =  Math.abs(t  *  Math.sqrt((  nObs  -  1)/(1  -  r  *  r)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(t  *  Math.sqrt((  nObs  -  1)/(1  -  r  *  r)));	  out[i][j]    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    n    *    t)));    	non-compiled	[CE]  cannot  find  symbol  i	22	None	replace
97	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs;  i++)  {  double[][]  out[]  =  matrix.getEntry(i,  j);  for(int  j  =  0;  j  <  nVars;  j++)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  nObs;  i++)  {  double[][]  out[]  =  matrix.getEntry(i,  j);  for(int  j  =  0;  j  <  nVars;  j++)  {  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	for(int  i  =  0;  i  <  nObs;  i++)  {  double[][]  out[]  =  matrix.getEntry(i,  j);  for(int  j  =  0;  j  <  nVars;  j++)  {	  for(int    i    =    0;    i    <    nVars;    i++)    {    double[][]    out[]    =    matrix.getEntry(i,    j);    for(int    j    =    0;    j    <    nVars;    j++)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
98	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs;  i++)  {  int[][]  out[]  =  matrix.getEntry(i,  j);  for(int  j  =  0;  j  <  nVars;  j++)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  nObs;  i++)  {  int[][]  out[]  =  matrix.getEntry(i,  j);  for(int  j  =  0;  j  <  nVars;  j++)  {  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	for(int  i  =  0;  i  <  nObs;  i++)  {  int[][]  out[]  =  matrix.getEntry(i,  j);  for(int  j  =  0;  j  <  nVars;  j++)  {	  for(int    i    =    0;    i    <    nVars;    i++)    {    double[][]    out[]    =    matrix.getEntry(i,    j);    for(int    j    =    0;    j    <    nVars;    j++)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
99	[BUG]  [BUGGY]  double[][]  out[]  =  matrix.getEntry(i,  j);  for(int  j  =  0;  j  <  nVars;  j++)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  double[][]  out[]  =  matrix.getEntry(i,  j);  for(int  j  =  0;  j  <  nVars;  j++)  {  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	double[][]  out[]  =  matrix.getEntry(i,  j);  for(int  j  =  0;  j  <  nVars;  j++)  {	  for(int    i    =    0;    i    <    nVars;    i++)    {    double[][]    out[]    =    matrix.getEntry(i,    j);    for(int    j    =    0;    j    <    nVars;    j++)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
100	[BUG]  [BUGGY]  return  new  BlockRealMatrix(out,  j);  [CE]  cannot  find  symbol  j  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(out,  j);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(out,  j);	  return    new    BlockRealMatrix(out,    t);    	non-compiled	[CE]  cannot  find  symbol  j	9	None	replace
101	[BUG]  [BUGGY]  return  new  BlockRealMatrix(tDistribution,  correlationMatrix);  [CE]  no  suitable  constructor  found  for  BlockRealMatrix(TDistribution,RealMatrix)  [FE]              AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(tDistribution,  correlationMatrix);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(tDistribution,  correlationMatrix);	  return    new    BlockRealMatrix(covarianceMatrix,    correlationMatrix);    	non-compiled	[CE]  no  suitable  constructor  found  for  BlockRealMatrix(TDistribution,RealMatrix)	67	None	replace
102	[BUG]  [BUGGY]  return  new  BlockRealMatrix(nVars,  correlationMatrix);  [CE]  no  suitable  constructor  found  for  BlockRealMatrix(int,RealMatrix)  [FE]                AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(nVars,  correlationMatrix);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(nVars,  correlationMatrix);	  return    new    BlockRealMatrix(covarianceMatrix,    correlationMatrix);    	non-compiled	[CE]  no  suitable  constructor  found  for  BlockRealMatrix(int,RealMatrix)	67	None	replace
103	[BUG]  [BUGGY]  return  correlationMatrix.getEntry(nVars,  j);  [CE]  cannot  find  symbol  j  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  correlationMatrix.getEntry(nVars,  j);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  correlationMatrix.getEntry(nVars,  j);	  return    correlationMatrix.getEntry(i,    j);    	non-compiled	[CE]  cannot  find  symbol  j	50	None	replace
104	[BUG]  [BUGGY]  return  correlationMatrix.getEntry(nObs,  j);  [CE]  cannot  find  symbol  j  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  correlationMatrix.getEntry(nObs,  j);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  correlationMatrix.getEntry(nObs,  j);	  return    correlationMatrix.getEntry(i,    j);    	non-compiled	[CE]  cannot  find  symbol  j	50	None	replace
105	[BUG]  [BUGGY]  return  correlationMatrix.getEntry(j,  i);  [CE]  cannot  find  symbol  j  [FE]                        AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  correlationMatrix.getEntry(j,  i);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  correlationMatrix.getEntry(j,  i);	  return    correlationMatrix.getEntry(i,    j);    	non-compiled	[CE]  cannot  find  symbol  j	50	None	replace
106	[BUG]  [BUGGY]  int  numberOfObservations  =  dataMatrix.getNumberOfObservations();  [CE]  cannot  find  symbol  dataMatrix  [FE]              AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  int  numberOfObservations  =  dataMatrix.getNumberOfObservations();  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	int  numberOfObservations  =  dataMatrix.getNumberOfObservations();	  int    numberOfObservations    =    covarianceMatrix.getNumberOfObservations();    	non-compiled	[CE]  cannot  find  symbol  dataMatrix	3	None	replace
107	[BUG]  [BUGGY]  int  numberOfObservations  =  nMatrix.getNumberOfObservations();  [CE]  cannot  find  symbol  nMatrix  [FE]                AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  int  numberOfObservations  =  nMatrix.getNumberOfObservations();  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	int  numberOfObservations  =  nMatrix.getNumberOfObservations();	  int    numberOfObservations    =    covarianceMatrix.getNumberOfObservations();    	non-compiled	[CE]  cannot  find  symbol  nMatrix	3	None	replace
108	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nVars  -  2)/(1  -  r  *  r)));  [CE]  cannot  find  symbol  i  [FE]                AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nVars  -  2)/(1  -  r  *  r)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nVars  -  2)/(1  -  r  *  r)));	  out[i][j]    =    Math.abs(relativeProbability    *    Math.sqrt((    nObs    -    2)/(1    -    r    *    r)));    	non-compiled	[CE]  cannot  find  symbol  i	19	None	replace
109	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nVars  -  2)/(1  -  r  *  t)));  [CE]  cannot  find  symbol  i  [FE]                AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nVars  -  2)/(1  -  r  *  t)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nVars  -  2)/(1  -  r  *  t)));	  out[i][j]    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    r    *    t)));    	non-compiled	[CE]  cannot  find  symbol  i	54	None	replace
110	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  r)));  [CE]  cannot  find  symbol  i  [FE]              AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  r)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  r)));	  out[i][j]    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    n    *    r)));    	non-compiled	[CE]  cannot  find  symbol  i	47	None	replace
111	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nObs  *  t)));  [CE]  cannot  find  symbol  i  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nObs  *  t)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nObs  *  t)));	  out[i][j]    =    Math.abs(r    *    Math.sqrt((    numberOfObservations    -    2)/(1    -    nObs    *    r)));    	non-compiled	[CE]  cannot  find  symbol  i	20	None	replace
112	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  numberOfObservations  -  2)/(1  -  nObs  *  t)));  [CE]  cannot  find  symbol  i  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  numberOfObservations  -  2)/(1  -  nObs  *  t)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(r  *  Math.sqrt((  numberOfObservations  -  2)/(1  -  nObs  *  t)));	  out[i][j]    =    Math.abs(r    *    Math.sqrt((    numberOfObservations    -    2)/(1    -    nObs    *    r)));    	non-compiled	[CE]  cannot  find  symbol  i	20	None	replace
113	[BUG]  [BUGGY]  return  new  BlockRealMatrix(nObs,  nVars,  covarianceMatrix,  out);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(nObs,  nVars,  covarianceMatrix,  out);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(nObs,  nVars,  covarianceMatrix,  out);	  return    new    BlockRealMatrix(nObs,    nVars,    out);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	41	None	replace
114	[BUG]  [BUGGY]  return  new  BlockRealMatrix(nObs,  nVars,  correlationMatrix,  out);  [CE]  no  suitable  constructor  found  for  BlockRealMatrix(int,int,RealMatrix,double[][])  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(nObs,  nVars,  correlationMatrix,  out);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(nObs,  nVars,  correlationMatrix,  out);	  return    new    BlockRealMatrix(nObs,    nVars,    out);    	non-compiled	[CE]  no  suitable  constructor  found  for  BlockRealMatrix(int,int,RealMatrix,double[][])	41	None	replace
115	[BUG]  [BUGGY]  return  new  BlockRealMatrix(nObs,  t,  out);  [CE]  cannot  find  symbol  t  [FE]                AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(nObs,  t,  out);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(nObs,  t,  out);	  return    new    BlockRealMatrix(nObs,    out);    	non-compiled	[CE]  cannot  find  symbol  t	34	None	replace
116	[BUG]  [BUGGY]  return  new  BlockRealMatrix(nObs,  out,  covarianceMatrix);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(nObs,  out,  covarianceMatrix);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(nObs,  out,  covarianceMatrix);	  return    new    BlockRealMatrix(nObs,    out);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	34	None	replace
117	[BUG]  [BUGGY]  return  new  BlockRealMatrix(r,  tDistribution);  [CE]  cannot  find  symbol  r  [FE]            AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(r,  tDistribution);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(r,  tDistribution);	  return    new    BlockRealMatrix(tDistribution);    	non-compiled	[CE]  cannot  find  symbol  r	10	None	replace
118	[BUG]  [BUGGY]  return  new  BlockRealMatrix(tDistribution,  covarianceMatrix);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]              AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(tDistribution,  covarianceMatrix);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(tDistribution,  covarianceMatrix);	  return    new    BlockRealMatrix(tDistribution);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	10	None	replace
119	[BUG]  [BUGGY]  return  new  BlockRealMatrix(covarianceMatrix,  tDistribution);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(covarianceMatrix,  tDistribution);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(covarianceMatrix,  tDistribution);	  return    new    BlockRealMatrix(tDistribution);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	10	None	replace
120	[BUG]  [BUGGY]  return  new  BlockRealMatrix(nObs,  tDistribution);  [CE]  no  suitable  constructor  found  for  BlockRealMatrix(int,TDistribution)  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(nObs,  tDistribution);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(nObs,  tDistribution);	  return    new    BlockRealMatrix(tDistribution);    	non-compiled	[CE]  no  suitable  constructor  found  for  BlockRealMatrix(int,TDistribution)	10	None	replace
121	[BUG]  [BUGGY]  int  numberOfObservations  =  coefficientMatrix.getNumberOfObservations();  [CE]  cannot  find  symbol  coefficientMatrix  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  int  numberOfObservations  =  coefficientMatrix.getNumberOfObservations();  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	int  numberOfObservations  =  coefficientMatrix.getNumberOfObservations();	  int    numberOfObservations    =    matrix.getNumberOfObservations();    	non-compiled	[CE]  cannot  find  symbol  coefficientMatrix	5	None	replace
122	[BUG]  [BUGGY]  int  numberOfObservations  =  datasetMatrix.getNumberOfObservations();  [CE]  cannot  find  symbol  datasetMatrix  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  int  numberOfObservations  =  datasetMatrix.getNumberOfObservations();  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	int  numberOfObservations  =  datasetMatrix.getNumberOfObservations();	  int    numberOfObservations    =    matrix.getNumberOfObservations();    	non-compiled	[CE]  cannot  find  symbol  datasetMatrix	5	None	replace
123	[BUG]  [BUGGY]  return  Math.pow(10,  correlationMatrix.getEntry(j,  j),  t);  [CE]  cannot  find  symbol  j  [FE]                          AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  Math.pow(10,  correlationMatrix.getEntry(j,  j),  t);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  Math.pow(10,  correlationMatrix.getEntry(j,  j),  t);	  return    Math.pow(10,    correlationMatrix.getEntry(i,    j),    t);    	non-compiled	[CE]  cannot  find  symbol  j	53	None	replace
124	[BUG]  [BUGGY]  return  Math.pow(10,  correlationMatrix.getEntry(i,  j),  tDistribution);  [CE]  cannot  find  symbol  i  [FE]                            AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  Math.pow(10,  correlationMatrix.getEntry(i,  j),  tDistribution);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  Math.pow(10,  correlationMatrix.getEntry(i,  j),  tDistribution);	  return    Math.pow(10,    correlationMatrix.getEntry(i,    j),    t);    	non-compiled	[CE]  cannot  find  symbol  i	53	None	replace
125	[BUG]  [BUGGY]  return  Math.pow(10,  correlationMatrix.getEntry(i,  j),  covarianceMatrix);  [CE]  cannot  find  symbol  i  [FE]                              AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  Math.pow(10,  correlationMatrix.getEntry(i,  j),  covarianceMatrix);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  Math.pow(10,  correlationMatrix.getEntry(i,  j),  covarianceMatrix);	  return    Math.pow(10,    correlationMatrix.getEntry(i,    j),    t);    	non-compiled	[CE]  cannot  find  symbol  i	53	None	replace
126	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(nVars,  nObs);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	add	return  new  BlockRealMatrix(nVars,  nObs);	  return    new    BlockRealMatrix(nObs,    nVars);    	compilable	  [FE]  AssertionFailedError  	14	6	replace
127	[BUG]  [BUGGY]  return  new  BlockRealMatrix(nVars,  nObs);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(nVars,  nObs);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(nVars,  nObs);	  return    new    BlockRealMatrix(nObs,    nVars);    	compilable	  [FE]  AssertionFailedError  	14	6	replace
128	[BUG]  [BUGGY]  return  new  BlockRealMatrix(nObs,  nVars,  t);  [CE]  cannot  find  symbol  t  [FE]      AssertionFailedError    [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(nObs,  nVars,  t);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(nObs,  nVars,  t);	  return    new    BlockRealMatrix(nObs,    nVars);    	non-compiled	[CE]  cannot  find  symbol  t	14	None	replace
129	[BUG]  [BUGGY]  return  new  BlockRealMatrix(nObs,  out,  nVars);  [CE]  no  suitable  constructor  found  for  BlockRealMatrix(int,double[][],int)  [FE]                AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(nObs,  out,  nVars);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(nObs,  out,  nVars);	  return    new    BlockRealMatrix(out,    nVars);    	non-compiled	[CE]  no  suitable  constructor  found  for  BlockRealMatrix(int,double[][],int)	7	None	replace
130	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs;  j++)  {  if(covarianceMatrix.getEntry(i,  j)!=  correlationMatrix.getEntry(i,  j))  {  out[i][j]  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  for(int  j  =  0;  j  <  nObs;  j++)  {  if(covarianceMatrix.getEntry(i,  j)!=  correlationMatrix.getEntry(i,  j))  {  out[i][j]  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	for(int  j  =  0;  j  <  nObs;  j++)  {  if(covarianceMatrix.getEntry(i,  j)!=  correlationMatrix.getEntry(i,  j))  {  out[i][j]	  for(int    j    =    0;    j    <    nVars;    j++)    {    if(covarianceMatrix.getEntry(i,    j)!=    correlationMatrix.getEntry(i,    j))    {    out[i][j]    =    	non-compiled	[CE]  not  a  statement	77	None	replace
131	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numberOfObservations;  j++)  {  if(covarianceMatrix.getEntry(i,  j)!=  correlationMatrix.getEntry(i,  j))  {  out[i][j]  =  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  for(int  j  =  0;  j  <  numberOfObservations;  j++)  {  if(covarianceMatrix.getEntry(i,  j)!=  correlationMatrix.getEntry(i,  j))  {  out[i][j]  =  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	for(int  j  =  0;  j  <  numberOfObservations;  j++)  {  if(covarianceMatrix.getEntry(i,  j)!=  correlationMatrix.getEntry(i,  j))  {  out[i][j]  =	  for(int    j    =    0;    j    <    nVars;    j++)    {    if(covarianceMatrix.getEntry(i,    j)!=    correlationMatrix.getEntry(i,    j))    {    out[i][j]    =    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
132	[BUG]  [BUGGY]  return  new  BlockRealMatrix(tDistribution,  covarianceMatrix,  out);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(tDistribution,  covarianceMatrix,  out);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(tDistribution,  covarianceMatrix,  out);	  return    new    BlockRealMatrix(tDistribution,    out);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	2	None	replace
133	[BUG]  [BUGGY]  return  new  BlockRealMatrix(r,  tDistribution,  out);  [CE]  cannot  find  symbol  r  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(r,  tDistribution,  out);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(r,  tDistribution,  out);	  return    new    BlockRealMatrix(tDistribution,    out);    	non-compiled	[CE]  cannot  find  symbol  r	2	None	replace
134	[BUG]  [BUGGY]  return  new  BlockRealMatrix(nObs,  correlationMatrix);  [CE]  no  suitable  constructor  found  for  BlockRealMatrix(int,RealMatrix)  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(nObs,  correlationMatrix);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(nObs,  correlationMatrix);	  return    new    BlockRealMatrix(correlationMatrix);    	non-compiled	[CE]  no  suitable  constructor  found  for  BlockRealMatrix(int,RealMatrix)	28	None	replace
135	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs;  j++)  {  if(covarianceMatrix.getEntry(i,  j)!=  null)  {  return  covarianceMatrix.getEntry(i,  j);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  for(int  j  =  0;  j  <  nObs;  j++)  {  if(covarianceMatrix.getEntry(i,  j)!=  null)  {  return  covarianceMatrix.getEntry(i,  j);  }  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	for(int  j  =  0;  j  <  nObs;  j++)  {  if(covarianceMatrix.getEntry(i,  j)!=  null)  {  return  covarianceMatrix.getEntry(i,  j);  }	  for(int    j    =    0;    j    <    nVars;    j++)    {    if(covarianceMatrix.getEntry(i,    j)!=    null)    {    return    covarianceMatrix.getEntry(i,    j);    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
136	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs;  j++)  {  if(covarianceMatrix.getEntry(i,  j)!=  null)  {  return  correlationMatrix.getEntry(i,  j);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  for(int  j  =  0;  j  <  nObs;  j++)  {  if(covarianceMatrix.getEntry(i,  j)!=  null)  {  return  correlationMatrix.getEntry(i,  j);  }  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	for(int  j  =  0;  j  <  nObs;  j++)  {  if(covarianceMatrix.getEntry(i,  j)!=  null)  {  return  correlationMatrix.getEntry(i,  j);  }	  for(int    j    =    0;    j    <    nVars;    j++)    {    if(covarianceMatrix.getEntry(i,    j)!=    null)    {    return    covarianceMatrix.getEntry(i,    j);    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
137	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numberOfObservations;  j++)  {  if(covarianceMatrix.getEntry(i,  j)!=  null)  {  return  covarianceMatrix.getEntry(i,  j);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  for(int  j  =  0;  j  <  numberOfObservations;  j++)  {  if(covarianceMatrix.getEntry(i,  j)!=  null)  {  return  covarianceMatrix.getEntry(i,  j);  }  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	for(int  j  =  0;  j  <  numberOfObservations;  j++)  {  if(covarianceMatrix.getEntry(i,  j)!=  null)  {  return  covarianceMatrix.getEntry(i,  j);  }	  for(int    j    =    0;    j    <    nVars;    j++)    {    if(covarianceMatrix.getEntry(i,    j)!=    null)    {    return    covarianceMatrix.getEntry(i,    j);    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
138	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs;  j++)  {  if(covarianceMatrix.getEntry(i,  j)  ==  null)  {  return  covarianceMatrix.getEntry(i,  j);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  for(int  j  =  0;  j  <  nObs;  j++)  {  if(covarianceMatrix.getEntry(i,  j)  ==  null)  {  return  covarianceMatrix.getEntry(i,  j);  }  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	for(int  j  =  0;  j  <  nObs;  j++)  {  if(covarianceMatrix.getEntry(i,  j)  ==  null)  {  return  covarianceMatrix.getEntry(i,  j);  }	  for(int    j    =    0;    j    <    nVars;    j++)    {    if(covarianceMatrix.getEntry(i,    j)!=    null)    {    return    covarianceMatrix.getEntry(i,    j);    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
139	[BUG]  [BUGGY]  return  new  BlockRealMatrix(out,  tDistribution,  covarianceMatrix);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(out,  tDistribution,  covarianceMatrix);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(out,  tDistribution,  covarianceMatrix);	  return    new    BlockRealMatrix(out,    tDistribution);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	8	None	replace
140	[BUG]  [BUGGY]  return  new  BlockRealMatrix(out,  covarianceMatrix,  tDistribution);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(out,  covarianceMatrix,  tDistribution);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(out,  covarianceMatrix,  tDistribution);	  return    new    BlockRealMatrix(out,    tDistribution);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	8	None	replace
141	[BUG]  [BUGGY]  return  new  BlockRealMatrix(out,  nVars,  tDistribution);  [CE]  no  suitable  constructor  found  for  BlockRealMatrix(double[][],int,TDistribution)  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(out,  nVars,  tDistribution);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(out,  nVars,  tDistribution);	  return    new    BlockRealMatrix(out,    tDistribution);    	non-compiled	[CE]  no  suitable  constructor  found  for  BlockRealMatrix(double[][],int,TDistribution)	8	None	replace
142	[BUG]  [BUGGY]  return  new  BlockRealMatrix(matrix,  nVars);  [CE]  cannot  find  symbol  matrix  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(matrix,  nVars);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(matrix,  nVars);	  return    new    BlockRealMatrix(covarianceMatrix,    nVars);    	non-compiled	[CE]  cannot  find  symbol  matrix	45	None	replace
143	[BUG]  [BUGGY]  out[j][j]  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  r)));  [CE]  cannot  find  symbol  j  [FE]            AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[j][j]  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  r)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[j][j]  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  r)));	  out[j][j]    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    n    *    r)));    	non-compiled	[CE]  cannot  find  symbol  j	70	None	replace
144	[BUG]  [BUGGY]  out[j][j]  =  Math.abs(t  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  [CE]  cannot  find  symbol  j  [FE]              AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[j][j]  =  Math.abs(t  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[j][j]  =  Math.abs(t  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));	  out[j][j]    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    n    *    r)));    	non-compiled	[CE]  cannot  find  symbol  j	70	None	replace
145	[BUG]  [BUGGY]  return  new  BlockRealMatrix(comparisonMatrix,  out,  nObs);  [CE]  cannot  find  symbol  comparisonMatrix  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(comparisonMatrix,  out,  nObs);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(comparisonMatrix,  out,  nObs);	  return    new    BlockRealMatrix(comparisonMatrix,    nVars,    out);    	non-compiled	[CE]  cannot  find  symbol  comparisonMatrix	65	None	replace
146	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(l  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  r)));  [CE]  cannot  find  symbol  i  [FE]            AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[i][j]  =  Math.abs(l  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  r)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(l  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  r)));	  out[i][j]    =    Math.abs(t    *    Math.sqrt((    nVars    -    2)/(1    -    n    *    r)));    	non-compiled	[CE]  cannot  find  symbol  i	62	None	replace
147	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfObservations;  i++)  {  double[][]  out[]  =  matrix.getEntry(i,  j);  for(int  i  =  0;  i  <  nVars;  i++)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  numberOfObservations;  i++)  {  double[][]  out[]  =  matrix.getEntry(i,  j);  for(int  i  =  0;  i  <  nVars;  i++)  {  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	for(int  i  =  0;  i  <  numberOfObservations;  i++)  {  double[][]  out[]  =  matrix.getEntry(i,  j);  for(int  i  =  0;  i  <  nVars;  i++)  {	  for(int    i    =    0;    i    <    nVars;    i++)    {    double[][]    out[]    =    matrix.getEntry(i,    j);    for(int    i    =    0;    i    <    nVars;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
148	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs;  i++)  {  double[][]  out[]  =  matrix.getEntry(i,  j);  for(int  i  =  0;  i  <  nVars;  i++)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  nObs;  i++)  {  double[][]  out[]  =  matrix.getEntry(i,  j);  for(int  i  =  0;  i  <  nVars;  i++)  {  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	for(int  i  =  0;  i  <  nObs;  i++)  {  double[][]  out[]  =  matrix.getEntry(i,  j);  for(int  i  =  0;  i  <  nVars;  i++)  {	  for(int    i    =    0;    i    <    nVars;    i++)    {    double[][]    out[]    =    matrix.getEntry(i,    j);    for(int    i    =    0;    i    <    nVars;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
149	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs;  j++)  {  if(i  >=  j)  {  out[i][j]  =  0d;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  for(int  j  =  0;  j  <  nObs;  j++)  {  if(i  >=  j)  {  out[i][j]  =  0d;  }  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	for(int  j  =  0;  j  <  nObs;  j++)  {  if(i  >=  j)  {  out[i][j]  =  0d;  }	  for(int    j    =    0;    j    <    nVars;    j++)    {    if(i    ==    j)    {    out[i][j]    =    0d;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
150	[BUG]  [BUGGY]  return  new  BlockRealMatrix(combineMatrix);  [CE]  cannot  find  symbol  combineMatrix  [FE]            AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(combineMatrix);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(combineMatrix);	  return    new    BlockRealMatrix(matrix);    	non-compiled	[CE]  cannot  find  symbol  combineMatrix	72	None	replace
151	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  n  *  l)));  [CE]  cannot  find  symbol  i  [FE]            AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  n  *  l)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  n  *  l)));	  out[i][j]    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    n    *    l)));    	non-compiled	[CE]  cannot  find  symbol  i	78	None	replace
152	[BUG]  [BUGGY]  return  new  BlockRealMatrix(relativeMatrix,  dataMatrix);  [CE]  cannot  find  symbol  relativeMatrix  [FE]              AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(relativeMatrix,  dataMatrix);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(relativeMatrix,  dataMatrix);	  return    new    BlockRealMatrix(covarianceMatrix,    correlationMatrix);    	non-compiled	[CE]  cannot  find  symbol  relativeMatrix	67	None	replace
153	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(l  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  [CE]  cannot  find  symbol  i  [FE]              AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[i][j]  =  Math.abs(l  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(l  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));	  out[i][j]    =    Math.abs(d    *    Math.sqrt((    nObs    -    2)/(1    -    n    *    r)));    	non-compiled	[CE]  cannot  find  symbol  i	26	None	replace
154	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfObservations;  i++)  {  double[][]  out[]  =  matrix.getEntry(i,  j);  for(int  j  =  0;  j  <  nVars;  j++)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  numberOfObservations;  i++)  {  double[][]  out[]  =  matrix.getEntry(i,  j);  for(int  j  =  0;  j  <  nVars;  j++)  {  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	for(int  i  =  0;  i  <  numberOfObservations;  i++)  {  double[][]  out[]  =  matrix.getEntry(i,  j);  for(int  j  =  0;  j  <  nVars;  j++)  {	  for(int    i    =    0;    i    <    nVars;    i++)    {    double[][]    out[]    =    matrix.getEntry(i,    j);    for(int    j    =    0;    j    <    nVars;    j++)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
155	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  noObs;  i++)  {  double[][]  out[]  =  matrix.getEntry(i,  j);  for(int  j  =  0;  j  <  nVars;  j++)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  noObs;  i++)  {  double[][]  out[]  =  matrix.getEntry(i,  j);  for(int  j  =  0;  j  <  nVars;  j++)  {  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	for(int  i  =  0;  i  <  noObs;  i++)  {  double[][]  out[]  =  matrix.getEntry(i,  j);  for(int  j  =  0;  j  <  nVars;  j++)  {	  for(int    i    =    0;    i    <    nVars;    i++)    {    double[][]    out[]    =    matrix.getEntry(i,    j);    for(int    j    =    0;    j    <    nVars;    j++)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
156	[BUG]  [BUGGY]  return  new  BlockRealMatrix(relativeMatrix,  nVars,  nObs,  out);  [CE]  cannot  find  symbol  relativeMatrix  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(relativeMatrix,  nVars,  nObs,  out);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(relativeMatrix,  nVars,  nObs,  out);	  return    new    BlockRealMatrix(nVars,    nObs,    out);    	non-compiled	[CE]  cannot  find  symbol  relativeMatrix	42	None	replace
157	[BUG]  [BUGGY]  return  new  BlockRealMatrix(matrix,  nVars,  nObs,  out);  [CE]  cannot  find  symbol  matrix  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(matrix,  nVars,  nObs,  out);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(matrix,  nVars,  nObs,  out);	  return    new    BlockRealMatrix(nVars,    nObs,    out);    	non-compiled	[CE]  cannot  find  symbol  matrix	42	None	replace
158	[BUG]  [BUGGY]  return  Math.max(covarianceMatrix.getEntry(i,  j));  [CE]  cannot  find  symbol  i  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  Math.max(covarianceMatrix.getEntry(i,  j));  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  Math.max(covarianceMatrix.getEntry(i,  j));	  return    Math.max(relativeMatrix.getEntry(i,    j));    	non-compiled	[CE]  cannot  find  symbol  i	51	None	replace
159	[BUG]  [BUGGY]  return  Math.max(relativeMatrix.getEntry(j,  i));  [CE]  cannot  find  symbol  j  [FE]                        AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  Math.max(relativeMatrix.getEntry(j,  i));  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  Math.max(relativeMatrix.getEntry(j,  i));	  return    Math.max(relativeMatrix.getEntry(i,    j));    	non-compiled	[CE]  cannot  find  symbol  j	51	None	replace
160	[BUG]  [BUGGY]  return  new  BlockRealMatrix(combinedMatrix);  [CE]  cannot  find  symbol  combinedMatrix  [FE]              AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(combinedMatrix);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(combinedMatrix);	  return    new    BlockRealMatrix(relationMatrix);    	non-compiled	[CE]  cannot  find  symbol  combinedMatrix	11	None	replace
161	[BUG]  [BUGGY]  return  new  BlockRealMatrix(compovarianceMatrix,  nVars,  out);  [CE]  cannot  find  symbol  compovarianceMatrix  [FE]                AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(compovarianceMatrix,  nVars,  out);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(compovarianceMatrix,  nVars,  out);	  return    new    BlockRealMatrix(relativeMatrix,    nVars,    out);    	non-compiled	[CE]  cannot  find  symbol  compovarianceMatrix	55	None	replace
162	[BUG]  [BUGGY]  return  new  BlockRealMatrix(relativeMatrix,  out,  nVars);  [CE]  cannot  find  symbol  relativeMatrix  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(relativeMatrix,  out,  nVars);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(relativeMatrix,  out,  nVars);	  return    new    BlockRealMatrix(relativeMatrix,    nVars,    out);    	non-compiled	[CE]  cannot  find  symbol  relativeMatrix	55	None	replace
163	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(matrix  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  r)));  [CE]  cannot  find  symbol  i  [FE]              AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[i][j]  =  Math.abs(matrix  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  r)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(matrix  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  r)));	  out[j][j]    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    n    *    r)));    	non-compiled	[CE]  cannot  find  symbol  i	71	None	replace
164	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(t  *  Math.sqrt((  nObs  -  1)/(1  -  r  *  t)));  [CE]  cannot  find  symbol  i  [FE]            AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[i][j]  =  Math.abs(t  *  Math.sqrt((  nObs  -  1)/(1  -  r  *  t)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(t  *  Math.sqrt((  nObs  -  1)/(1  -  r  *  t)));	  out[i][j]    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    n    *    t)));    	non-compiled	[CE]  cannot  find  symbol  i	22	None	replace
165	[BUG]  [BUGGY]  return  new  BlockRealMatrix(out,  correlationMatrix,  nVars);  [CE]  no  suitable  constructor  found  for  BlockRealMatrix(double[][],RealMatrix,int)  [FE]                AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(out,  correlationMatrix,  nVars);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(out,  correlationMatrix,  nVars);	  return    new    BlockRealMatrix(out,    nVars);    	non-compiled	[CE]  no  suitable  constructor  found  for  BlockRealMatrix(double[][],RealMatrix,int)	7	None	replace
166	[BUG]  [BUGGY]  return  new  BlockRealMatrix(out,  dataMatrix,  nVars);  [CE]  cannot  find  symbol  dataMatrix  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(out,  dataMatrix,  nVars);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(out,  dataMatrix,  nVars);	  return    new    BlockRealMatrix(out,    nVars);    	non-compiled	[CE]  cannot  find  symbol  dataMatrix	7	None	replace
167	[BUG]  [BUGGY]  return  new  BlockRealMatrix(out,  correlationMatrix,  tDistribution);  [CE]  no  suitable  constructor  found  for  BlockRealMatrix(double[][],RealMatrix,TDistribution)  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(out,  correlationMatrix,  tDistribution);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(out,  correlationMatrix,  tDistribution);	  return    new    BlockRealMatrix(out,    tDistribution);    	non-compiled	[CE]  no  suitable  constructor  found  for  BlockRealMatrix(double[][],RealMatrix,TDistribution)	8	None	replace
168	[BUG]  [BUGGY]  return  new  BlockRealMatrix(out,  i,  tDistribution);  [CE]  cannot  find  symbol  i  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(out,  i,  tDistribution);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(out,  i,  tDistribution);	  return    new    BlockRealMatrix(out,    tDistribution);    	non-compiled	[CE]  cannot  find  symbol  i	8	None	replace
169	[BUG]  [BUGGY]  return  new  BlockRealMatrix(matrix,  nVars,  nObs);  [CE]  cannot  find  symbol  matrix  [FE]                AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(matrix,  nVars,  nObs);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(matrix,  nVars,  nObs);	  return    new    BlockRealMatrix(covarianceMatrix,    nVars,    out);    	non-compiled	[CE]  cannot  find  symbol  matrix	64	None	replace
170	[BUG]  [BUGGY]  return  new  BlockRealMatrix(out,  i);  [CE]  cannot  find  symbol  i  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(out,  i);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(out,  i);	  return    new    BlockRealMatrix(out,    t);    	non-compiled	[CE]  cannot  find  symbol  i	9	None	replace
171	[BUG]  [BUGGY]  return  new  BlockRealMatrix(tDistribution.cumulativeProbability(out));  [CE]  no  suitable  method  found  for  cumulativeProbability(double[][])  [FE]                AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(tDistribution.cumulativeProbability(out));  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(tDistribution.cumulativeProbability(out));	  return    new    BlockRealMatrix(tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  no  suitable  method  found  for  cumulativeProbability(double[][])	12	None	replace
172	[BUG]  [BUGGY]  return  new  BlockRealMatrix(covarianceMatrix.cumulativeProbability(t));  [CE]  cannot  find  symbol  t  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(covarianceMatrix.cumulativeProbability(t));  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(covarianceMatrix.cumulativeProbability(t));	  return    new    BlockRealMatrix(tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  cannot  find  symbol  t	12	None	replace
173	[BUG]  [BUGGY]  return  new  BlockRealMatrix(compovarianceMatrix,  out,  nVars);  [CE]  cannot  find  symbol  compovarianceMatrix  [FE]                AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(compovarianceMatrix,  out,  nVars);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(compovarianceMatrix,  out,  nVars);	  return    new    BlockRealMatrix(compovarianceMatrix,    out);    	non-compiled	[CE]  cannot  find  symbol  compovarianceMatrix	58	None	replace
174	[BUG]  [BUGGY]  return  correlationMatrix.getEntry(out,  j);  [CE]  cannot  find  symbol  j  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  correlationMatrix.getEntry(out,  j);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  correlationMatrix.getEntry(out,  j);	  return    correlationMatrix.getEntry(i,    j);    	non-compiled	[CE]  cannot  find  symbol  j	50	None	replace
175	[BUG]  [BUGGY]  return  new  BlockRealMatrix(nObs,  nVars);  int  numberOfObservations  =  getNumberOfObservations();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(nObs,  nVars);  int  numberOfObservations  =  getNumberOfObservations();  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return    new    BlockRealMatrix(nObs,    nVars);    int  numberOfObservations  =  getNumberOfObservations();	  	non-compiled	[CE]  cannot  find  symbol	13	None	add
176	[BUG]  [BUGGY]  return  new  BlockRealMatrix(nObs,  nVars);  int  nVars  =  getNumberOfObservations();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(nObs,  nVars);  int  nVars  =  getNumberOfObservations();  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return    new    BlockRealMatrix(nObs,    nVars);    int  nVars  =  getNumberOfObservations();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	13	None	add
177	[BUG]  [BUGGY]  return  new  BlockRealMatrix(nObs,  nVars);  int  numberOfObservations  =  Math.abs(nObs  -  1);  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(nObs,  nVars);  int  numberOfObservations  =  Math.abs(nObs  -  1);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return    new    BlockRealMatrix(nObs,    nVars);    int  numberOfObservations  =  Math.abs(nObs  -  1);	  	non-compiled	[CE]  unreachable  statement	13	None	add
178	[BUG]  [BUGGY]  return  new  BlockRealMatrix(nObs,  nVars);  int  nVars  =  getNumberOfObservations().size();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]          AssertionFailedError    [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(nObs,  nVars);  int  nVars  =  getNumberOfObservations().size();  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return    new    BlockRealMatrix(nObs,    nVars);    int  nVars  =  getNumberOfObservations().size();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	13	None	add
179	[BUG]  [BUGGY]  return  tDistribution.cumulativeProbability(nVars);  [CE]  incompatible  types  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  tDistribution.cumulativeProbability(nVars);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  tDistribution.cumulativeProbability(nVars);	  return    tDistribution.cumulativeProbability(t);    	non-compiled	[CE]  incompatible  types	30	None	replace
180	[BUG]  [BUGGY]  return  tDistribution.cumulativeProbability(matrix);  [CE]  cannot  find  symbol  matrix  [FE]                        AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  tDistribution.cumulativeProbability(matrix);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  tDistribution.cumulativeProbability(matrix);	  return    tDistribution.cumulativeProbability(t);    	non-compiled	[CE]  cannot  find  symbol  matrix	30	None	replace
181	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  d)));  [CE]  cannot  find  symbol  i  [FE]                AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  d)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  d)));	  out[i][j]    =    Math.abs(relativeProbability    *    Math.sqrt((    nObs    -    2)/(1    -    r    *    r)));    	non-compiled	[CE]  cannot  find  symbol  i	19	None	replace
182	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  d)));  [CE]  cannot  find  symbol  i  [FE]            AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  d)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  d)));	  out[i][j]    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    n    *    d)));    	non-compiled	[CE]  cannot  find  symbol  i	25	None	replace
183	[BUG]  [BUGGY]  return  Math.pow(10,  covarianceMatrix.getEntry(i,  j));  [CE]  cannot  find  symbol  i  [FE]                        AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  Math.pow(10,  covarianceMatrix.getEntry(i,  j));  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  Math.pow(10,  covarianceMatrix.getEntry(i,  j));	  return    Math.pow(10,    correlationMatrix.getEntry(i,    j));    	non-compiled	[CE]  cannot  find  symbol  i	52	None	replace
184	[BUG]  [BUGGY]  return  new  BlockRealMatrix(nObs,  nVars,  dataMatrix,  out);  [CE]  cannot  find  symbol  dataMatrix  [FE]                AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(nObs,  nVars,  dataMatrix,  out);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(nObs,  nVars,  dataMatrix,  out);	  return    new    BlockRealMatrix(nObs,    nVars,    out);    	non-compiled	[CE]  cannot  find  symbol  dataMatrix	41	None	replace
185	[BUG]  [BUGGY]  return  new  BlockRealMatrix(combinedMatrix,  nVars);  [CE]  cannot  find  symbol  combinedMatrix  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(combinedMatrix,  nVars);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(combinedMatrix,  nVars);	  return    new    BlockRealMatrix(relationMatrix,    nVars);    	non-compiled	[CE]  cannot  find  symbol  combinedMatrix	16	None	replace
186	[BUG]  [BUGGY]  return  new  BlockRealMatrix(comparisonMatrix,  nVars);  [CE]  cannot  find  symbol  comparisonMatrix  [FE]                        AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(comparisonMatrix,  nVars);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(comparisonMatrix,  nVars);	  return    new    BlockRealMatrix(relationMatrix,    nVars);    	non-compiled	[CE]  cannot  find  symbol  comparisonMatrix	16	None	replace
187	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(t  *  Math.sqrt((  nVars  -  2)/(1  -  r  *  t)));  [CE]  cannot  find  symbol  i  [FE]                AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[i][j]  =  Math.abs(t  *  Math.sqrt((  nVars  -  2)/(1  -  r  *  t)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(t  *  Math.sqrt((  nVars  -  2)/(1  -  r  *  t)));	  out[i][j]    =    Math.abs(t    *    Math.sqrt((    nObs    -    2)/(1    -    r    *    t)));    	non-compiled	[CE]  cannot  find  symbol  i	73	None	replace
188	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  [CE]  cannot  find  symbol  i  [FE]            AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));	  out[i][j]    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    	non-compiled	[CE]  cannot  find  symbol  i	17	None	replace
189	[BUG]  [BUGGY]  return  Math.pow(10,  correlationMatrix.getEntry(i,  j),  out);  [CE]  cannot  find  symbol  i  [FE]                          AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  Math.pow(10,  correlationMatrix.getEntry(i,  j),  out);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  Math.pow(10,  correlationMatrix.getEntry(i,  j),  out);	  return    Math.pow(10,    correlationMatrix.getEntry(i,    j),    t);    	non-compiled	[CE]  cannot  find  symbol  i	53	None	replace
190	[BUG]  [BUGGY]  return  new  BlockRealMatrix(matrix,  covarianceMatrix);  [CE]  cannot  find  symbol  matrix  [FE]              AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(matrix,  covarianceMatrix);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(matrix,  covarianceMatrix);	  return    new    BlockRealMatrix(r,    covarianceMatrix);    	non-compiled	[CE]  cannot  find  symbol  matrix	33	None	replace
191	[BUG]  [BUGGY]  return  new  BlockRealMatrix(out,  dataMatrix,  nObs);  [CE]  cannot  find  symbol  dataMatrix  [FE]            AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(out,  dataMatrix,  nObs);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(out,  dataMatrix,  nObs);	  return    new    BlockRealMatrix(out,    nObs);    	non-compiled	[CE]  cannot  find  symbol  dataMatrix	35	None	replace
192	[BUG]  [BUGGY]  return  new  BlockRealMatrix(out,  0,  nObs);  [CE]  no  suitable  constructor  found  for  BlockRealMatrix(double[][],int,int)  [FE]              AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(out,  0,  nObs);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(out,  0,  nObs);	  return    new    BlockRealMatrix(out,    nObs);    	non-compiled	[CE]  no  suitable  constructor  found  for  BlockRealMatrix(double[][],int,int)	35	None	replace
193	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  d)));  [CE]  cannot  find  symbol  i  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  d)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  d)));	  out[i][j]    =    Math.abs(r    *    Math.sqrt((    numberOfObservations    -    2)/(1    -    nObs    *    r)));    	non-compiled	[CE]  cannot  find  symbol  i	20	None	replace
194	[BUG]  [BUGGY]  return  new  BlockRealMatrix(relationMatrix,  out,  nVars);  [CE]  cannot  find  symbol  relationMatrix  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(relationMatrix,  out,  nVars);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(relationMatrix,  out,  nVars);	  return    new    BlockRealMatrix(relationMatrix,    nVars,    out);    	non-compiled	[CE]  cannot  find  symbol  relationMatrix	56	None	replace
195	[BUG]  [BUGGY]  return  new  BlockRealMatrix(out,  covarianceMatrix,  out);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]              AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(out,  covarianceMatrix,  out);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(out,  covarianceMatrix,  out);	  return    new    BlockRealMatrix(out,    correlationMatrix);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	6	None	replace
196	[BUG]  [BUGGY]  out[j][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  r)));  [CE]  cannot  find  symbol  j  [FE]              AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[j][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  r)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[j][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  r)));	  out[i][j]    =    Math.abs(t    *    Math.sqrt((    nObs    -    2)/(1    -    r    *    r)));    	non-compiled	[CE]  cannot  find  symbol  j	18	None	replace
197	[BUG]  [BUGGY]  return  new  BlockRealMatrix(relativeMatrix,  nObs,  out);  [CE]  cannot  find  symbol  relativeMatrix  [FE]                AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(relativeMatrix,  nObs,  out);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(relativeMatrix,  nObs,  out);	  return    new    BlockRealMatrix(nObs,    out);    	non-compiled	[CE]  cannot  find  symbol  relativeMatrix	34	None	replace
198	[BUG]  [BUGGY]  return  new  BlockRealMatrix(relationMatrix,  out,  nObs);  [CE]  cannot  find  symbol  relationMatrix  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(relationMatrix,  out,  nObs);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(relationMatrix,  out,  nObs);	  return    new    BlockRealMatrix(correlationMatrix,    out);    	non-compiled	[CE]  cannot  find  symbol  relationMatrix	37	None	replace
199	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  l)));  [CE]  cannot  find  symbol  i  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  l)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  l)));	  out[i][j]    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    n    *    l)));    	non-compiled	[CE]  cannot  find  symbol  i	40	None	replace
200	[BUG]  [BUGGY]  return  new  BlockRealMatrix(comparisonMatrix,  correlationMatrix);  [CE]  cannot  find  symbol  comparisonMatrix  [FE]                AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(comparisonMatrix,  correlationMatrix);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(comparisonMatrix,  correlationMatrix);	  return    new    BlockRealMatrix(relativeMatrix,    covarianceMatrix);    	non-compiled	[CE]  cannot  find  symbol  comparisonMatrix	36	None	replace
201	[BUG]  [BUGGY]  return  new  BlockRealMatrix(comparanceMatrix,  correlationMatrix);  [CE]  cannot  find  symbol  comparanceMatrix  [FE]                AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(comparanceMatrix,  correlationMatrix);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(comparanceMatrix,  correlationMatrix);	  return    new    BlockRealMatrix(comparanceMatrix,    out);    	non-compiled	[CE]  cannot  find  symbol  comparanceMatrix	66	None	replace
202	[BUG]  [BUGGY]  return  new  BlockRealMatrix(relationMatrix,  correlationMatrix);  [CE]  cannot  find  symbol  relationMatrix  [FE]              AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(relationMatrix,  correlationMatrix);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(relationMatrix,  correlationMatrix);	  return    new    BlockRealMatrix(covarianceMatrix,    correlationMatrix);    	non-compiled	[CE]  cannot  find  symbol  relationMatrix	67	None	replace
203	[BUG]  [BUGGY]  return  new  BlockRealMatrix(covarianceMatrix,  t,  out);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(covarianceMatrix,  t,  out);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(covarianceMatrix,  t,  out);	  return    new    BlockRealMatrix(nVars,    t,    out);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	43	None	replace
204	[BUG]  [BUGGY]  return  tDistribution.cumulativeProbability(comparisonMatrix);  [CE]  cannot  find  symbol  comparisonMatrix  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  tDistribution.cumulativeProbability(comparisonMatrix);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  tDistribution.cumulativeProbability(comparisonMatrix);	  return    tDistribution.cumulativeProbability(t);    	non-compiled	[CE]  cannot  find  symbol  comparisonMatrix	30	None	replace
205	[BUG]  [BUGGY]  return  new  BlockRealMatrix(comparanceMatrix,  nVars);  [CE]  cannot  find  symbol  comparanceMatrix  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(comparanceMatrix,  nVars);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(comparanceMatrix,  nVars);	  return    new    BlockRealMatrix(relativeMatrix,    nVars);    	non-compiled	[CE]  cannot  find  symbol  comparanceMatrix	46	None	replace
206	[BUG]  [BUGGY]  return  new  BlockRealMatrix(comparableMatrix,  nVars,  out);  [CE]  cannot  find  symbol  comparableMatrix  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(comparableMatrix,  nVars,  out);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(comparableMatrix,  nVars,  out);	  return    new    BlockRealMatrix(relationMatrix,    nVars,    out);    	non-compiled	[CE]  cannot  find  symbol  comparableMatrix	56	None	replace
207	[BUG]  [BUGGY]  return  new  BlockRealMatrix(correlationMatrix,  nVars,  nObs);  [CE]  no  suitable  constructor  found  for  BlockRealMatrix(RealMatrix,int,int)  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(correlationMatrix,  nVars,  nObs);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(correlationMatrix,  nVars,  nObs);	  return    new    BlockRealMatrix(relationMatrix,    nVars,    out);    	non-compiled	[CE]  no  suitable  constructor  found  for  BlockRealMatrix(RealMatrix,int,int)	56	None	replace
208	[BUG]  [BUGGY]  return  new  BlockRealMatrix(nObs,  nVars);  int  nVars  =  correlationMatrix.getNumberOfObservations();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(nObs,  nVars);  int  nVars  =  correlationMatrix.getNumberOfObservations();  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return    new    BlockRealMatrix(nObs,    nVars);    int  nVars  =  correlationMatrix.getNumberOfObservations();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	13	None	add
209	[BUG]  [BUGGY]  return  new  BlockRealMatrix(nObs,  nVars);  int  nVars  =  correlationMatrix.getVarCount();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(nObs,  nVars);  int  nVars  =  correlationMatrix.getVarCount();  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return    new    BlockRealMatrix(nObs,    nVars);    int  nVars  =  correlationMatrix.getVarCount();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	13	None	add
210	[BUG]  [BUGGY]  return  new  BlockRealMatrix(nObs,  nVars);  int  nVars  =  correlationMatrix.getVar(j);  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(nObs,  nVars);  int  nVars  =  correlationMatrix.getVar(j);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return    new    BlockRealMatrix(nObs,    nVars);    int  nVars  =  correlationMatrix.getVar(j);	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	13	None	add
211	[BUG]  [BUGGY]  return  Math.pow(10,  correlationMatrix.getEntry(i,  j),  out[i][j]);  [CE]  cannot  find  symbol  i  [FE]                        AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  Math.pow(10,  correlationMatrix.getEntry(i,  j),  out[i][j]);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  Math.pow(10,  correlationMatrix.getEntry(i,  j),  out[i][j]);	  return    Math.pow(10,    correlationMatrix.getEntry(i,    j));    	non-compiled	[CE]  cannot  find  symbol  i	52	None	replace
212	[BUG]  [BUGGY]  return  new  BlockRealMatrix(comparableMatrix,  out);  [CE]  cannot  find  symbol  comparableMatrix  [FE]              AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(comparableMatrix,  out);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(comparableMatrix,  out);	  return    new    BlockRealMatrix(relationMatrix,    out);    	non-compiled	[CE]  cannot  find  symbol  comparableMatrix	1	None	replace
213	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(t  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  l)));  [CE]  cannot  find  symbol  i  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[i][j]  =  Math.abs(t  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  l)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(t  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  l)));	  out[i][j]    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    n    *    l)));    	non-compiled	[CE]  cannot  find  symbol  i	40	None	replace
214	[BUG]  [BUGGY]  return  new  BlockRealMatrix(relativeMatrix,  out,  tDistribution);  [CE]  cannot  find  symbol  relativeMatrix  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(relativeMatrix,  out,  tDistribution);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(relativeMatrix,  out,  tDistribution);	  return    new    BlockRealMatrix(out,    tDistribution);    	non-compiled	[CE]  cannot  find  symbol  relativeMatrix	8	None	replace
215	[BUG]  [BUGGY]  return  new  BlockRealMatrix(r,  out,  tDistribution);  [CE]  cannot  find  symbol  r  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(r,  out,  tDistribution);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(r,  out,  tDistribution);	  return    new    BlockRealMatrix(out,    tDistribution);    	non-compiled	[CE]  cannot  find  symbol  r	8	None	replace
216	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs;  j++)  {  if(i  >  j)  {  out[i][j]  =  0d;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  for(int  j  =  0;  j  <  nObs;  j++)  {  if(i  >  j)  {  out[i][j]  =  0d;  }  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	for(int  j  =  0;  j  <  nObs;  j++)  {  if(i  >  j)  {  out[i][j]  =  0d;  }	  for(int    j    =    0;    j    <    nVars;    j++)    {    if(i    ==    j)    {    out[i][j]    =    0d;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
217	[BUG]  [BUGGY]  return  new  BlockRealMatrix(relativeMatrix,  tDistribution,  out);  [CE]  cannot  find  symbol  relativeMatrix  [FE]                AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(relativeMatrix,  tDistribution,  out);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(relativeMatrix,  tDistribution,  out);	  return    new    BlockRealMatrix(tDistribution,    out);    	non-compiled	[CE]  cannot  find  symbol  relativeMatrix	2	None	replace
218	[BUG]  [BUGGY]  return  new  BlockRealMatrix(matrix,  out,  nVars);  [CE]  cannot  find  symbol  matrix  [FE]                AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(matrix,  out,  nVars);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(matrix,  out,  nVars);	  return    new    BlockRealMatrix(out,    nVars);    	non-compiled	[CE]  cannot  find  symbol  matrix	7	None	replace
219	[BUG]  [BUGGY]  for(int  i  =  0d;  i  <  nVars;  i++)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  for(int  i  =  0d;  i  <  nVars;  i++)  {  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	for(int  i  =  0d;  i  <  nVars;  i++)  {	  for(int    i    =    0;    i    <    nVars;    i++)    {    double[][]    out[]    =    matrix.getEntry(i,    j);    for(int    i    =    0;    i    <    nVars;    i++)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
220	[BUG]  [BUGGY]  return  new  BlockRealMatrix(comparisonMatrix,  nVars,  nObs,  out);  [CE]  cannot  find  symbol  comparisonMatrix  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(comparisonMatrix,  nVars,  nObs,  out);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(comparisonMatrix,  nVars,  nObs,  out);	  return    new    BlockRealMatrix(nVars,    nObs,    out);    	non-compiled	[CE]  cannot  find  symbol  comparisonMatrix	42	None	replace
221	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs;  i++)  {  double[][]  out[]  =  matrix.getEntry(i,  j);  for(int  j  =  0;  j  <  nVars;  j++)  {  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  for(int  i  =  0;  i  <  nObs;  i++)  {  double[][]  out[]  =  matrix.getEntry(i,  j);  for(int  j  =  0;  j  <  nVars;  j++)  {  }  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	for(int  i  =  0;  i  <  nObs;  i++)  {  double[][]  out[]  =  matrix.getEntry(i,  j);  for(int  j  =  0;  j  <  nVars;  j++)  {  }	  for(int    i    =    0;    i    <    nVars;    i++)    {    double[][]    out[]    =    matrix.getEntry(i,    j);    for(int    j    =    0;    j    <    nVars;    j++)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
222	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  2;  j++)  {  if(covarianceMatrix.getEntry(i,  j)!=  correlationMatrix.getEntry(i,  j))  {  out[i][j]  =  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  for(int  j  =  0;  j  <  2;  j++)  {  if(covarianceMatrix.getEntry(i,  j)!=  correlationMatrix.getEntry(i,  j))  {  out[i][j]  =  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	for(int  j  =  0;  j  <  2;  j++)  {  if(covarianceMatrix.getEntry(i,  j)!=  correlationMatrix.getEntry(i,  j))  {  out[i][j]  =	  for(int    j    =    0;    j    <    nVars;    j++)    {    if(covarianceMatrix.getEntry(i,    j)!=    correlationMatrix.getEntry(i,    j))    {    out[i][j]    =    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
223	[BUG]  [BUGGY]  int  numberOfObservations  =  tDistribution.getNumberOfObservations();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  int  numberOfObservations  =  tDistribution.getNumberOfObservations();  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	int  numberOfObservations  =  tDistribution.getNumberOfObservations();	  int    numberOfObservations    =    matrix.getNumberOfObservations();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
224	[BUG]  [BUGGY]  return  new  BlockRealMatrix(compovarianceMatrix,  correlationMatrix);  [CE]  cannot  find  symbol  compovarianceMatrix  [FE]            AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(compovarianceMatrix,  correlationMatrix);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(compovarianceMatrix,  correlationMatrix);	  return    new    BlockRealMatrix(compovarianceMatrix);    	non-compiled	[CE]  cannot  find  symbol  compovarianceMatrix	44	None	replace
225	[BUG]  [BUGGY]  return  new  BlockRealMatrix(comparableMatrix,  nVars);  [CE]  cannot  find  symbol  comparableMatrix  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(comparableMatrix,  nVars);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(comparableMatrix,  nVars);	  return    new    BlockRealMatrix(relationMatrix,    nVars);    	non-compiled	[CE]  cannot  find  symbol  comparableMatrix	16	None	replace
226	[BUG]  [BUGGY]  out[j][j]  =  Math.abs(t  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  r)));  [CE]  cannot  find  symbol  j  [FE]              AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[j][j]  =  Math.abs(t  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  r)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[j][j]  =  Math.abs(t  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  r)));	  out[j][j]    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    n    *    r)));    	non-compiled	[CE]  cannot  find  symbol  j	71	None	replace
227	[BUG]  [BUGGY]  out[j][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  l)));  [CE]  cannot  find  symbol  j  [FE]                AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[j][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  l)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[j][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  l)));	  out[j][j]    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    n    *    r)));    	non-compiled	[CE]  cannot  find  symbol  j	71	None	replace
228	[BUG]  [BUGGY]  return  new  BlockRealMatrix(comparableMatrix);  [CE]  cannot  find  symbol  comparableMatrix  [FE]              AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(comparableMatrix);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(comparableMatrix);	  return    new    BlockRealMatrix(relationMatrix);    	non-compiled	[CE]  cannot  find  symbol  comparableMatrix	11	None	replace
229	[BUG]  [BUGGY]  return  new  BlockRealMatrix(covarianceMatrix,  out.length);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(covarianceMatrix,  out.length);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(covarianceMatrix,  out.length);	  return    new    BlockRealMatrix(compovarianceMatrix,    out);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	58	None	replace
230	[BUG]  [BUGGY]  return  new  BlockRealMatrix(comparisonMatrix,  covarianceMatrix);  [CE]  cannot  find  symbol  comparisonMatrix  [FE]            AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(comparisonMatrix,  covarianceMatrix);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(comparisonMatrix,  covarianceMatrix);	  return    new    BlockRealMatrix(comparisonMatrix,    out);    	non-compiled	[CE]  cannot  find  symbol  comparisonMatrix	63	None	replace
231	[BUG]  [BUGGY]  return  Math.pow(10,  correlationMatrix.getEntry(i,  j),  out[j]);  [CE]  cannot  find  symbol  i  [FE]                          AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  Math.pow(10,  correlationMatrix.getEntry(i,  j),  out[j]);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  Math.pow(10,  correlationMatrix.getEntry(i,  j),  out[j]);	  return    Math.pow(10,    correlationMatrix.getEntry(i,    j),    t);    	non-compiled	[CE]  cannot  find  symbol  i	53	None	replace
232	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(t  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  [CE]  cannot  find  symbol  i  [FE]            AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[i][j]  =  Math.abs(t  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(t  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));	  out[i][j]    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    	non-compiled	[CE]  cannot  find  symbol  i	17	None	replace
233	[BUG]  [BUGGY]  return  correlationMatrix.getEntry(i,  out);  [CE]  cannot  find  symbol  i  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  correlationMatrix.getEntry(i,  out);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  correlationMatrix.getEntry(i,  out);	  return    correlationMatrix.getEntry(i,    j);    	non-compiled	[CE]  cannot  find  symbol  i	50	None	replace
234	[BUG]  [BUGGY]  return  new  BlockRealMatrix(covarianceMatrix,  nObs,  nVars);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(covarianceMatrix,  nObs,  nVars);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(covarianceMatrix,  nObs,  nVars);	  return    new    BlockRealMatrix(covarianceMatrix,    nVars,    out);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	64	None	replace
235	[BUG]  [BUGGY]  return  new  BlockRealMatrix(relativeMatrix,  out,  nObs);  [CE]  cannot  find  symbol  relativeMatrix  [FE]            AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(relativeMatrix,  out,  nObs);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(relativeMatrix,  out,  nObs);	  return    new    BlockRealMatrix(out,    nObs);    	non-compiled	[CE]  cannot  find  symbol  relativeMatrix	35	None	replace
236	[BUG]  [BUGGY]  return  new  BlockRealMatrix(matrix,  correlationMatrix);  [CE]  cannot  find  symbol  matrix  [FE]                    AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  new  BlockRealMatrix(matrix,  correlationMatrix);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(matrix,  correlationMatrix);	  return    new    BlockRealMatrix(correlationMatrix);    	non-compiled	[CE]  cannot  find  symbol  matrix	28	None	replace
237	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(t  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  d)));  [CE]  cannot  find  symbol  i  [FE]              AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[i][j]  =  Math.abs(t  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  d)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(t  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  d)));	  out[i][j]    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    n    *    d)));    	non-compiled	[CE]  cannot  find  symbol  i	21	None	replace
238	[BUG]  [BUGGY]  return  Math.max(relativeMatrix.getEntry(i,  j),  correlationMatrix);  [CE]  cannot  find  symbol  i  [FE]                      AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  return  Math.max(relativeMatrix.getEntry(i,  j),  correlationMatrix);  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  Math.max(relativeMatrix.getEntry(i,  j),  correlationMatrix);	  return    Math.max(relativeMatrix.getEntry(i,    j));    	non-compiled	[CE]  cannot  find  symbol  i	51	None	replace
239	[BUG]  [BUGGY]  for(int  j  =  0d;  j  <  nVars;  j++)  {  if(covarianceMatrix.getEntry(i,  j)  ==  correlationMatrix.getEntry(i,  j))  {  out[i][j]  =  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  for(int  j  =  0d;  j  <  nVars;  j++)  {  if(covarianceMatrix.getEntry(i,  j)  ==  correlationMatrix.getEntry(i,  j))  {  out[i][j]  =  [BUGGY]      }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	for(int  j  =  0d;  j  <  nVars;  j++)  {  if(covarianceMatrix.getEntry(i,  j)  ==  correlationMatrix.getEntry(i,  j))  {  out[i][j]  =	  for(int    j    =    0;    j    <    nVars;    j++)    {    if(covarianceMatrix.getEntry(i,    j)    ==    correlationMatrix.getEntry(i,    j))    {    out[i][j]    =    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
240	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(t  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  l)));  [CE]  cannot  find  symbol  i  [FE]            AssertionFailedError      [CONTEXT]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }      [BUGGY]  out[i][j]  =  Math.abs(t  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  l)));  [BUGGY]      return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(t  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  l)));	  out[i][j]    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    n    *    l)));    	non-compiled	[CE]  cannot  find  symbol  i	78	None	replace
