bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  new  BlockRealMatrix(relationMatrix,  out);  [CE]  cannot  find  symbol  relationMatrix  [FE]          AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  new  BlockRealMatrix(relationMatrix,  out);  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(relationMatrix,  out);	  return    new    BlockRealMatrix(covarianceMatrix,    out);    	non-compiled	[CE]  cannot  find  symbol  relationMatrix	18	None	replace
2	[BUG]  [BUGGY]  return  new  BlockRealMatrix(tDistribution,  out);  [CE]  no  suitable  constructor  found  for  BlockRealMatrix(TDistribution,double[][])  [FE]            AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  new  BlockRealMatrix(tDistribution,  out);  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(tDistribution,  out);	  return    new    BlockRealMatrix(covarianceMatrix,    out);    	non-compiled	[CE]  no  suitable  constructor  found  for  BlockRealMatrix(TDistribution,double[][])	18	None	replace
3	[BUG]  [BUGGY]  int  numberOfObservations  =  covarianceMatrix.getNumberOfObservations();  [CE]  cannot  find  symbol  covarianceMatrix  [FE]          AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  int  numberOfObservations  =  covarianceMatrix.getNumberOfObservations();  [BUGGY]    return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	int  numberOfObservations  =  covarianceMatrix.getNumberOfObservations();	      int    numberOfObservations    =    correlationMatrix.getNumberOfObservations();    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	10	None	replace
4	[BUG]  [BUGGY]  int  numberOfObservations  =  this.covarianceMatrix.getNumberOfObservations();  [CE]  cannot  find  symbol  covarianceMatrix  [FE]            AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  int  numberOfObservations  =  this.covarianceMatrix.getNumberOfObservations();  [BUGGY]    return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	int  numberOfObservations  =  this.covarianceMatrix.getNumberOfObservations();	      int    numberOfObservations    =    correlationMatrix.getNumberOfObservations();    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	10	None	replace
5	[BUG]  [BUGGY]  int  numberOfObservations  =  matrix.getNumberOfObservations();  [CE]  cannot  find  symbol  matrix  [FE]              AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  int  numberOfObservations  =  matrix.getNumberOfObservations();  [BUGGY]    return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	int  numberOfObservations  =  matrix.getNumberOfObservations();	      int    numberOfObservations    =    correlationMatrix.getNumberOfObservations();    	non-compiled	[CE]  cannot  find  symbol  matrix	10	None	replace
6	[BUG]  [BUGGY]  return  new  BlockRealMatrix(out,  correlationMatrix);  [CE]  no  suitable  constructor  found  for  BlockRealMatrix(double[][],RealMatrix)  [FE]          AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  new  BlockRealMatrix(out,  correlationMatrix);  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(out,  correlationMatrix);	  return    new    BlockRealMatrix(out,    covarianceMatrix);    	non-compiled	[CE]  no  suitable  constructor  found  for  BlockRealMatrix(double[][],RealMatrix)	12	None	replace
7	[BUG]  [BUGGY]  return  new  BlockRealMatrix(out,  nVars);  [CE]  no  suitable  constructor  found  for  BlockRealMatrix(double[][],int)  [FE]            AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  new  BlockRealMatrix(out,  nVars);  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(out,  nVars);	  return    new    BlockRealMatrix(out,    covarianceMatrix);    	non-compiled	[CE]  no  suitable  constructor  found  for  BlockRealMatrix(double[][],int)	12	None	replace
8	[BUG]  [BUGGY]  return  new  BlockRealMatrix(out,  tDistribution);  [CE]  no  suitable  constructor  found  for  BlockRealMatrix(double[][],TDistribution)  [FE]              AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  new  BlockRealMatrix(out,  tDistribution);  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(out,  tDistribution);	  return    new    BlockRealMatrix(out,    covarianceMatrix);    	non-compiled	[CE]  no  suitable  constructor  found  for  BlockRealMatrix(double[][],TDistribution)	12	None	replace
9	[BUG]  [BUGGY]  return  new  BlockRealMatrix(out,  t);  [CE]  cannot  find  symbol  t  [FE]                AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  new  BlockRealMatrix(out,  t);  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(out,  t);	  return    new    BlockRealMatrix(out,    covarianceMatrix);    	non-compiled	[CE]  cannot  find  symbol  t	12	None	replace
10	[BUG]  [BUGGY]  return  new  BlockRealMatrix(tDistribution);  [CE]  no  suitable  constructor  found  for  BlockRealMatrix(TDistribution)  [FE]        AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  new  BlockRealMatrix(tDistribution);  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(tDistribution);	  return    new    BlockRealMatrix(covarianceMatrix);    	non-compiled	[CE]  no  suitable  constructor  found  for  BlockRealMatrix(TDistribution)	17	None	replace
11	[BUG]  [BUGGY]  return  new  BlockRealMatrix(relationMatrix);  [CE]  cannot  find  symbol  relationMatrix  [FE]          AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  new  BlockRealMatrix(relationMatrix);  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(relationMatrix);	  return    new    BlockRealMatrix(covarianceMatrix);    	non-compiled	[CE]  cannot  find  symbol  relationMatrix	17	None	replace
12	[BUG]  [BUGGY]  return  new  BlockRealMatrix(tDistribution.cumulativeProbability(t));  [CE]  cannot  find  symbol  t  [FE]            AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  new  BlockRealMatrix(tDistribution.cumulativeProbability(t));  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(tDistribution.cumulativeProbability(t));	  return    new    BlockRealMatrix(covarianceMatrix);    	non-compiled	[CE]  cannot  find  symbol  t	17	None	replace
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  new  BlockRealMatrix(nObs,  nVars);  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	add	return  new  BlockRealMatrix(nObs,  nVars);	  return    new    BlockRealMatrix(nVars);    	compilable	  [FE]  AssertionFailedError  	14	6	replace
14	[BUG]  [BUGGY]  return  new  BlockRealMatrix(nObs,  nVars);  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  new  BlockRealMatrix(nObs,  nVars);  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(nObs,  nVars);	  return    new    BlockRealMatrix(nVars);    	compilable	  [FE]  AssertionFailedError  	14	6	replace
15	[BUG]  [BUGGY]  return  new  BlockRealMatrix(r,  nVars);  [CE]  cannot  find  symbol  r  [FE]                AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  new  BlockRealMatrix(r,  nVars);  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(r,  nVars);	  return    new    BlockRealMatrix(nVars);    	non-compiled	[CE]  cannot  find  symbol  r	14	None	replace
16	[BUG]  [BUGGY]  return  new  BlockRealMatrix(relationMatrix,  nVars);  [CE]  cannot  find  symbol  relationMatrix  [FE]                  AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  new  BlockRealMatrix(relationMatrix,  nVars);  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(relationMatrix,  nVars);	  return    new    BlockRealMatrix(nVars);    	non-compiled	[CE]  cannot  find  symbol  relationMatrix	14	None	replace
17	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  [CE]  cannot  find  symbol  i  [FE]        AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  [BUGGY]    return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));	      out[i][j]    =    Math.abs(r    *    Math.sqrt((nObs    -    2)/(1    -    r    *    r)));    	non-compiled	[CE]  cannot  find  symbol  i	6	None	replace
18	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(t  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  r)));  [CE]  cannot  find  symbol  i  [FE]          AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  out[i][j]  =  Math.abs(t  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  r)));  [BUGGY]    return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(t  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  r)));	      out[i][j]    =    Math.abs(r    *    Math.sqrt((nObs    -    2)/(1    -    r    *    r)));    	non-compiled	[CE]  cannot  find  symbol  i	6	None	replace
19	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  r)));  [CE]  cannot  find  symbol  i  [FE]            AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  r)));  [BUGGY]    return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  r)));	      out[i][j]    =    Math.abs(r    *    Math.sqrt((nObs    -    2)/(1    -    r    *    r)));    	non-compiled	[CE]  cannot  find  symbol  i	6	None	replace
20	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  numberOfObservations  -  2)/(1  -  nObs  *  r)));  [CE]  cannot  find  symbol  i  [FE]              AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  numberOfObservations  -  2)/(1  -  nObs  *  r)));  [BUGGY]    return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(r  *  Math.sqrt((  numberOfObservations  -  2)/(1  -  nObs  *  r)));	      out[i][j]    =    Math.abs(r    *    Math.sqrt((nObs    -    2)/(1    -    r    *    r)));    	non-compiled	[CE]  cannot  find  symbol  i	6	None	replace
21	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  d)));  [CE]  cannot  find  symbol  i  [FE]          AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  d)));  [BUGGY]    return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  d)));	      out[i][j]    =    Math.abs(t    *    Math.sqrt((    nObs    -    1)/(1    -    n    *    r)));    	non-compiled	[CE]  cannot  find  symbol  i	16	None	replace
22	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  t)));  [CE]  cannot  find  symbol  i  [FE]        AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  t)));  [BUGGY]    return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  t)));	      out[i][j]    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    n    *    r)));    	non-compiled	[CE]  cannot  find  symbol  i	9	None	replace
23	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  n  *  r)));  [CE]  cannot  find  symbol  i  [FE]          AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  n  *  r)));  [BUGGY]    return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  n  *  r)));	      out[i][j]    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    n    *    r)));    	non-compiled	[CE]  cannot  find  symbol  i	9	None	replace
24	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  t)));  [CE]  cannot  find  symbol  i  [FE]            AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  t)));  [BUGGY]    return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  t)));	      out[i][j]    =    Math.abs(r    *    Math.sqrt((nObs    -    2)/(1    -    r    *    t)));    	non-compiled	[CE]  cannot  find  symbol  i	8	None	replace
25	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  d)));  [CE]  cannot  find  symbol  i  [FE]        AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  d)));  [BUGGY]    return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  d)));	      out[i][j]    =    Math.abs(t    *    Math.sqrt((    nObs    -    2)/(1    -    n    *    r)));    	non-compiled	[CE]  cannot  find  symbol  i	15	None	replace
26	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(d  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  [CE]  cannot  find  symbol  i  [FE]          AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  out[i][j]  =  Math.abs(d  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  [BUGGY]    return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(d  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));	      out[i][j]    =    Math.abs(t    *    Math.sqrt((    nObs    -    2)/(1    -    n    *    r)));    	non-compiled	[CE]  cannot  find  symbol  i	15	None	replace
27	[BUG]  [BUGGY]  return  new  BlockRealMatrix(r);  [CE]  cannot  find  symbol  r  [FE]              AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  new  BlockRealMatrix(r);  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(r);	  return    new    BlockRealMatrix(t);    	non-compiled	[CE]  cannot  find  symbol  r	4	None	replace
28	[BUG]  [BUGGY]  return  new  BlockRealMatrix(correlationMatrix);  [CE]  no  suitable  constructor  found  for  BlockRealMatrix(RealMatrix)  [FE]                AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  new  BlockRealMatrix(correlationMatrix);  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(correlationMatrix);	  return    new    BlockRealMatrix(t);    	non-compiled	[CE]  no  suitable  constructor  found  for  BlockRealMatrix(RealMatrix)	4	None	replace
29	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nVars;  j++)  {  if(i  ==  j)  {  out[i][j]  =  0d;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  for(int  j  =  0;  j  <  nVars;  j++)  {  if(i  ==  j)  {  out[i][j]  =  0d;  }  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	for(int  j  =  0;  j  <  nVars;  j++)  {  if(i  ==  j)  {  out[i][j]  =  0d;  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
30	[BUG]  [BUGGY]  return  tDistribution.cumulativeProbability(t);  [CE]  cannot  find  symbol  t  [FE]                  AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  tDistribution.cumulativeProbability(t);  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  tDistribution.cumulativeProbability(t);	      	non-compiled	[CE]  cannot  find  symbol  t	5	None	replace
31	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  double[][]  out[]  =  matrix.getEntry(i,  j);  for(int  i  =  0;  i  <  nVars;  i++)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  double[][]  out[]  =  matrix.getEntry(i,  j);  for(int  i  =  0;  i  <  nVars;  i++)  {  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	for(int  i  =  0;  i  <  nVars;  i++)  {  double[][]  out[]  =  matrix.getEntry(i,  j);  for(int  i  =  0;  i  <  nVars;  i++)  {	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
32	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  double[][]  out[]  =  matrix.getEntry(i,  j);  for(int  j  =  0;  j  <  nVars;  j++)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  double[][]  out[]  =  matrix.getEntry(i,  j);  for(int  j  =  0;  j  <  nVars;  j++)  {  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	for(int  i  =  0;  i  <  nVars;  i++)  {  double[][]  out[]  =  matrix.getEntry(i,  j);  for(int  j  =  0;  j  <  nVars;  j++)  {	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
33	[BUG]  [BUGGY]  return  new  BlockRealMatrix(r,  covarianceMatrix);  [CE]  cannot  find  symbol  r  [FE]          AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  new  BlockRealMatrix(r,  covarianceMatrix);  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(r,  covarianceMatrix);	  return    new    BlockRealMatrix(r,    out);    	non-compiled	[CE]  cannot  find  symbol  r	2	None	replace
34	[BUG]  [BUGGY]  return  new  BlockRealMatrix(nObs,  out);  [CE]  no  suitable  constructor  found  for  BlockRealMatrix(int,double[][])  [FE]            AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  new  BlockRealMatrix(nObs,  out);  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(nObs,  out);	  return    new    BlockRealMatrix(r,    out);    	non-compiled	[CE]  no  suitable  constructor  found  for  BlockRealMatrix(int,double[][])	2	None	replace
35	[BUG]  [BUGGY]  return  new  BlockRealMatrix(out,  nObs);  [CE]  no  suitable  constructor  found  for  BlockRealMatrix(double[][],int)  [FE]        AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  new  BlockRealMatrix(out,  nObs);  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(out,  nObs);	  return    new    BlockRealMatrix(t,    out);    	non-compiled	[CE]  no  suitable  constructor  found  for  BlockRealMatrix(double[][],int)	1	None	replace
36	[BUG]  [BUGGY]  return  new  BlockRealMatrix(relativeMatrix,  covarianceMatrix);  [CE]  cannot  find  symbol  relativeMatrix  [FE]            AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  new  BlockRealMatrix(relativeMatrix,  covarianceMatrix);  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(relativeMatrix,  covarianceMatrix);	  return    new    BlockRealMatrix(relativeMatrix,    out);    	non-compiled	[CE]  cannot  find  symbol  relativeMatrix	13	None	replace
37	[BUG]  [BUGGY]  return  new  BlockRealMatrix(correlationMatrix,  out);  [CE]  no  suitable  constructor  found  for  BlockRealMatrix(RealMatrix,double[][])  [FE]              AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  new  BlockRealMatrix(correlationMatrix,  out);  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(correlationMatrix,  out);	  return    new    BlockRealMatrix(relativeMatrix,    out);    	non-compiled	[CE]  no  suitable  constructor  found  for  BlockRealMatrix(RealMatrix,double[][])	13	None	replace
38	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  t)));  [CE]  cannot  find  symbol  i  [FE]          AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  t)));  [BUGGY]    return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  t)));	      out[i][j]    =    Math.abs(r    *    Math.sqrt((nObs    -    2)/(1    -    n    *    r)));    	non-compiled	[CE]  cannot  find  symbol  i	7	None	replace
39	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  [CE]  cannot  find  symbol  i  [FE]            AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  [BUGGY]    return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));	      out[i][j]    =    Math.abs(r    *    Math.sqrt((nObs    -    2)/(1    -    n    *    r)));    	non-compiled	[CE]  cannot  find  symbol  i	7	None	replace
40	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  l)));  [CE]  cannot  find  symbol  i  [FE]              AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  l)));  [BUGGY]    return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  l)));	      out[i][j]    =    Math.abs(r    *    Math.sqrt((nObs    -    2)/(1    -    n    *    r)));    	non-compiled	[CE]  cannot  find  symbol  i	7	None	replace
41	[BUG]  [BUGGY]  return  new  BlockRealMatrix(nObs,  nVars,  out);  [CE]  no  suitable  constructor  found  for  BlockRealMatrix(int,int,double[][])  [FE]            AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  new  BlockRealMatrix(nObs,  nVars,  out);  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(nObs,  nVars,  out);	  return    new    BlockRealMatrix(nVars,    out);    	non-compiled	[CE]  no  suitable  constructor  found  for  BlockRealMatrix(int,int,double[][])	3	None	replace
42	[BUG]  [BUGGY]  return  new  BlockRealMatrix(nVars,  nObs,  out);  [CE]  no  suitable  constructor  found  for  BlockRealMatrix(int,int,double[][])  [FE]              AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  new  BlockRealMatrix(nVars,  nObs,  out);  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(nVars,  nObs,  out);	  return    new    BlockRealMatrix(nVars,    out);    	non-compiled	[CE]  no  suitable  constructor  found  for  BlockRealMatrix(int,int,double[][])	3	None	replace
43	[BUG]  [BUGGY]  return  new  BlockRealMatrix(nVars,  t,  out);  [CE]  cannot  find  symbol  t  [FE]                AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  new  BlockRealMatrix(nVars,  t,  out);  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(nVars,  t,  out);	  return    new    BlockRealMatrix(nVars,    out);    	non-compiled	[CE]  cannot  find  symbol  t	3	None	replace
44	[BUG]  [BUGGY]  return  new  BlockRealMatrix(compovarianceMatrix);  [CE]  cannot  find  symbol  compovarianceMatrix  [FE]        AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  new  BlockRealMatrix(compovarianceMatrix);  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(compovarianceMatrix);	  return    new    BlockRealMatrix(relativeMatrix);    	non-compiled	[CE]  cannot  find  symbol  compovarianceMatrix	11	None	replace
45	[BUG]  [BUGGY]  return  new  BlockRealMatrix(covarianceMatrix,  nVars);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]              AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  new  BlockRealMatrix(covarianceMatrix,  nVars);  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(covarianceMatrix,  nVars);	  return    new    BlockRealMatrix(nVars);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	14	None	replace
46	[BUG]  [BUGGY]  return  new  BlockRealMatrix(relativeMatrix,  nVars);  [CE]  cannot  find  symbol  relativeMatrix  [FE]                AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  new  BlockRealMatrix(relativeMatrix,  nVars);  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(relativeMatrix,  nVars);	  return    new    BlockRealMatrix(nVars);    	non-compiled	[CE]  cannot  find  symbol  relativeMatrix	14	None	replace
47	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  r)));  [CE]  cannot  find  symbol  i  [FE]          AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  r)));  [BUGGY]    return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  r)));	      out[i][j]    =    Math.abs(r    *    Math.sqrt((nObs    -    2)/(1    -    n    *    r)));    	non-compiled	[CE]  cannot  find  symbol  i	7	None	replace
48	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(t  *  Math.sqrt((  nObs  -  1)/(2  -  n  *  r)));  [CE]  cannot  find  symbol  i  [FE]          AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  out[i][j]  =  Math.abs(t  *  Math.sqrt((  nObs  -  1)/(2  -  n  *  r)));  [BUGGY]    return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(t  *  Math.sqrt((  nObs  -  1)/(2  -  n  *  r)));	      out[i][j]    =    Math.abs(t    *    Math.sqrt((    nObs    -    1)/(1    -    n    *    r)));    	non-compiled	[CE]  cannot  find  symbol  i	16	None	replace
49	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  r)));  [CE]  cannot  find  symbol  i  [FE]            AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  r)));  [BUGGY]    return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  r)));	      out[i][j]    =    Math.abs(t    *    Math.sqrt((    nObs    -    1)/(1    -    n    *    r)));    	non-compiled	[CE]  cannot  find  symbol  i	16	None	replace
50	[BUG]  [BUGGY]  return  correlationMatrix.getEntry(i,  j);  [CE]  cannot  find  symbol  i  [FE]                AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  correlationMatrix.getEntry(i,  j);  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  correlationMatrix.getEntry(i,  j);	      	non-compiled	[CE]  cannot  find  symbol  i	5	None	replace
51	[BUG]  [BUGGY]  return  Math.max(relativeMatrix.getEntry(i,  j));  [CE]  cannot  find  symbol  i  [FE]                  AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  Math.max(relativeMatrix.getEntry(i,  j));  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  Math.max(relativeMatrix.getEntry(i,  j));	      	non-compiled	[CE]  cannot  find  symbol  i	5	None	replace
52	[BUG]  [BUGGY]  return  Math.pow(10,  correlationMatrix.getEntry(i,  j));  [CE]  cannot  find  symbol  i  [FE]                    AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  Math.pow(10,  correlationMatrix.getEntry(i,  j));  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  Math.pow(10,  correlationMatrix.getEntry(i,  j));	      	non-compiled	[CE]  cannot  find  symbol  i	5	None	replace
53	[BUG]  [BUGGY]  return  Math.pow(10,  correlationMatrix.getEntry(i,  j),  t);  [CE]  cannot  find  symbol  i  [FE]                      AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  Math.pow(10,  correlationMatrix.getEntry(i,  j),  t);  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  Math.pow(10,  correlationMatrix.getEntry(i,  j),  t);	      	non-compiled	[CE]  cannot  find  symbol  i	5	None	replace
54	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  r  *  t)));  [CE]  cannot  find  symbol  i  [FE]            AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  r  *  t)));  [BUGGY]    return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  r  *  t)));	      out[i][j]    =    Math.abs(r    *    Math.sqrt((nObs    -    2)/(1    -    r    *    t)));    	non-compiled	[CE]  cannot  find  symbol  i	8	None	replace
55	[BUG]  [BUGGY]  return  new  BlockRealMatrix(relativeMatrix,  nVars,  out);  [CE]  cannot  find  symbol  relativeMatrix  [FE]            AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  new  BlockRealMatrix(relativeMatrix,  nVars,  out);  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(relativeMatrix,  nVars,  out);	  return    new    BlockRealMatrix(nVars,    out);    	non-compiled	[CE]  cannot  find  symbol  relativeMatrix	3	None	replace
56	[BUG]  [BUGGY]  return  new  BlockRealMatrix(relationMatrix,  nVars,  out);  [CE]  cannot  find  symbol  relationMatrix  [FE]              AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  new  BlockRealMatrix(relationMatrix,  nVars,  out);  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(relationMatrix,  nVars,  out);	  return    new    BlockRealMatrix(nVars,    out);    	non-compiled	[CE]  cannot  find  symbol  relationMatrix	3	None	replace
57	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  r  *  r)));  [CE]  cannot  find  symbol  i  [FE]        AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  r  *  r)));  [BUGGY]    return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  r  *  r)));	      out[i][j]    =    Math.abs(r    *    Math.sqrt((nObs    -    2)/(1    -    r    *    r)));    	non-compiled	[CE]  cannot  find  symbol  i	6	None	replace
58	[BUG]  [BUGGY]  return  new  BlockRealMatrix(compovarianceMatrix,  out);  [CE]  cannot  find  symbol  compovarianceMatrix  [FE]            AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  new  BlockRealMatrix(compovarianceMatrix,  out);  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(compovarianceMatrix,  out);	  return    new    BlockRealMatrix(relativeMatrix,    out);    	non-compiled	[CE]  cannot  find  symbol  compovarianceMatrix	13	None	replace
59	[BUG]  [BUGGY]  return  new  BlockRealMatrix(combinedMatrix,  out);  [CE]  cannot  find  symbol  combinedMatrix  [FE]              AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  new  BlockRealMatrix(combinedMatrix,  out);  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(combinedMatrix,  out);	  return    new    BlockRealMatrix(relativeMatrix,    out);    	non-compiled	[CE]  cannot  find  symbol  combinedMatrix	13	None	replace
60	[BUG]  [BUGGY]  return  new  BlockRealMatrix(matrix,  out);  [CE]  cannot  find  symbol  matrix  [FE]          AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  new  BlockRealMatrix(matrix,  out);  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(matrix,  out);	  return    new    BlockRealMatrix(covarianceMatrix,    out);    	non-compiled	[CE]  cannot  find  symbol  matrix	18	None	replace
61	[BUG]  [BUGGY]  return  new  BlockRealMatrix(out,  dataMatrix);  [CE]  cannot  find  symbol  dataMatrix  [FE]          AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  new  BlockRealMatrix(out,  dataMatrix);  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(out,  dataMatrix);	  return    new    BlockRealMatrix(out,    covarianceMatrix);    	non-compiled	[CE]  cannot  find  symbol  dataMatrix	12	None	replace
62	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(t  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  r)));  [CE]  cannot  find  symbol  i  [FE]        AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  out[i][j]  =  Math.abs(t  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  r)));  [BUGGY]    return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(t  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  r)));	      out[i][j]    =    Math.abs(t    *    Math.sqrt((    nObs    -    2)/(1    -    n    *    r)));    	non-compiled	[CE]  cannot  find  symbol  i	15	None	replace
63	[BUG]  [BUGGY]  return  new  BlockRealMatrix(comparisonMatrix,  out);  [CE]  cannot  find  symbol  comparisonMatrix  [FE]        AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  new  BlockRealMatrix(comparisonMatrix,  out);  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(comparisonMatrix,  out);	  return    new    BlockRealMatrix(t,    out);    	non-compiled	[CE]  cannot  find  symbol  comparisonMatrix	1	None	replace
64	[BUG]  [BUGGY]  return  new  BlockRealMatrix(covarianceMatrix,  nVars,  out);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]            AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  new  BlockRealMatrix(covarianceMatrix,  nVars,  out);  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(covarianceMatrix,  nVars,  out);	  return    new    BlockRealMatrix(nVars,    out);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	3	None	replace
65	[BUG]  [BUGGY]  return  new  BlockRealMatrix(comparisonMatrix,  nVars,  out);  [CE]  cannot  find  symbol  comparisonMatrix  [FE]              AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  new  BlockRealMatrix(comparisonMatrix,  nVars,  out);  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(comparisonMatrix,  nVars,  out);	  return    new    BlockRealMatrix(nVars,    out);    	non-compiled	[CE]  cannot  find  symbol  comparisonMatrix	3	None	replace
66	[BUG]  [BUGGY]  return  new  BlockRealMatrix(comparanceMatrix,  out);  [CE]  cannot  find  symbol  comparanceMatrix  [FE]            AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  new  BlockRealMatrix(comparanceMatrix,  out);  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(comparanceMatrix,  out);	  return    new    BlockRealMatrix(relativeMatrix,    out);    	non-compiled	[CE]  cannot  find  symbol  comparanceMatrix	13	None	replace
67	[BUG]  [BUGGY]  return  new  BlockRealMatrix(covarianceMatrix,  correlationMatrix);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]          AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  new  BlockRealMatrix(covarianceMatrix,  correlationMatrix);  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(covarianceMatrix,  correlationMatrix);	  return    new    BlockRealMatrix(covarianceMatrix,    out);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	18	None	replace
68	[BUG]  [BUGGY]  return  new  BlockRealMatrix(comparanceMatrix);  [CE]  cannot  find  symbol  comparanceMatrix  [FE]        AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  new  BlockRealMatrix(comparanceMatrix);  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(comparanceMatrix);	  return    new    BlockRealMatrix(relativeMatrix);    	non-compiled	[CE]  cannot  find  symbol  comparanceMatrix	11	None	replace
69	[BUG]  [BUGGY]  return  new  BlockRealMatrix(comparisonMatrix);  [CE]  cannot  find  symbol  comparisonMatrix  [FE]              AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  new  BlockRealMatrix(comparisonMatrix);  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(comparisonMatrix);	  return    new    BlockRealMatrix(t);    	non-compiled	[CE]  cannot  find  symbol  comparisonMatrix	4	None	replace
70	[BUG]  [BUGGY]  out[j][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  [CE]  cannot  find  symbol  j  [FE]        AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  out[j][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  [BUGGY]    return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[j][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));	      out[i][j]    =    Math.abs(t    *    Math.sqrt((    nObs    -    2)/(1    -    n    *    r)));    	non-compiled	[CE]  cannot  find  symbol  j	15	None	replace
71	[BUG]  [BUGGY]  out[j][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  r)));  [CE]  cannot  find  symbol  j  [FE]          AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  out[j][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  r)));  [BUGGY]    return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[j][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  r)));	      out[i][j]    =    Math.abs(t    *    Math.sqrt((    nObs    -    1)/(1    -    n    *    r)));    	non-compiled	[CE]  cannot  find  symbol  j	16	None	replace
72	[BUG]  [BUGGY]  return  new  BlockRealMatrix(matrix);  [CE]  cannot  find  symbol  matrix  [FE]        AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  return  new  BlockRealMatrix(matrix);  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(matrix);	  return    new    BlockRealMatrix(covarianceMatrix);    	non-compiled	[CE]  cannot  find  symbol  matrix	17	None	replace
73	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(t  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  t)));  [CE]  cannot  find  symbol  i  [FE]            AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  out[i][j]  =  Math.abs(t  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  t)));  [BUGGY]    return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(t  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  t)));	      out[i][j]    =    Math.abs(r    *    Math.sqrt((nObs    -    2)/(1    -    r    *    t)));    	non-compiled	[CE]  cannot  find  symbol  i	8	None	replace
74	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nVars;  j++)  {  if(covarianceMatrix.getEntry(i,  j)!=  null)  {  return  covarianceMatrix.getEntry(i,  j);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  for(int  j  =  0;  j  <  nVars;  j++)  {  if(covarianceMatrix.getEntry(i,  j)!=  null)  {  return  covarianceMatrix.getEntry(i,  j);  }  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	for(int  j  =  0;  j  <  nVars;  j++)  {  if(covarianceMatrix.getEntry(i,  j)!=  null)  {  return  covarianceMatrix.getEntry(i,  j);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
75	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nVars;  j++)  {  if(covarianceMatrix.getEntry(i,  j)!=  null)  {  out[i][j]  =  0d;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  for(int  j  =  0;  j  <  nVars;  j++)  {  if(covarianceMatrix.getEntry(i,  j)!=  null)  {  out[i][j]  =  0d;  }  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	for(int  j  =  0;  j  <  nVars;  j++)  {  if(covarianceMatrix.getEntry(i,  j)!=  null)  {  out[i][j]  =  0d;  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
76	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nVars;  j++)  {  if(covarianceMatrix.getEntry(i,  j)  ==  correlationMatrix.getEntry(i,  j))  {  out[i][j]  =  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  for(int  j  =  0;  j  <  nVars;  j++)  {  if(covarianceMatrix.getEntry(i,  j)  ==  correlationMatrix.getEntry(i,  j))  {  out[i][j]  =  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	for(int  j  =  0;  j  <  nVars;  j++)  {  if(covarianceMatrix.getEntry(i,  j)  ==  correlationMatrix.getEntry(i,  j))  {  out[i][j]  =	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
77	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nVars;  j++)  {  if(covarianceMatrix.getEntry(i,  j)!=  correlationMatrix.getEntry(i,  j))  {  out[i][j]  =  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  for(int  j  =  0;  j  <  nVars;  j++)  {  if(covarianceMatrix.getEntry(i,  j)!=  correlationMatrix.getEntry(i,  j))  {  out[i][j]  =  [BUGGY]    }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	for(int  j  =  0;  j  <  nVars;  j++)  {  if(covarianceMatrix.getEntry(i,  j)!=  correlationMatrix.getEntry(i,  j))  {  out[i][j]  =	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
78	[BUG]  [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  l)));  [CE]  cannot  find  symbol  i  [FE]        AssertionFailedError    [CONTEXT]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }    [BUGGY]  out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  l)));  [BUGGY]    return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  l)));	      out[i][j]    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    n    *    r)));    	non-compiled	[CE]  cannot  find  symbol  i	9	None	replace
