bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  new  BlockRealMatrix(t,  out);  [CE]  cannot  find  symbol  t  [FE]    AssertionFailedError  [CONTEXT]  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [BUGGY]  return  new  BlockRealMatrix(t,  out);  [BUGGY]  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(t,  out);	return  new  BlockRealMatrix(out);  	non-compiled	[CE]  cannot  find  symbol  t	25	None	replace
2	[BUG]  [BUGGY]  return  new  BlockRealMatrix(r,  out);  [CE]  cannot  find  symbol  r  [FE]      AssertionFailedError  [CONTEXT]  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [BUGGY]  return  new  BlockRealMatrix(r,  out);  [BUGGY]  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(r,  out);	return  new  BlockRealMatrix(out);  	non-compiled	[CE]  cannot  find  symbol  r	25	None	replace
3	[BUG]  [BUGGY]  return  new  BlockRealMatrix(nVars,  out);  [CE]  no  suitable  constructor  found  for  BlockRealMatrix(int,double[][])  [FE]        AssertionFailedError  [CONTEXT]  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [BUGGY]  return  new  BlockRealMatrix(nVars,  out);  [BUGGY]  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(nVars,  out);	return  new  BlockRealMatrix(out);  	non-compiled	[CE]  no  suitable  constructor  found  for  BlockRealMatrix(int,double[][])	25	None	replace
4	[BUG]  [BUGGY]  return  new  BlockRealMatrix(t);  [CE]  cannot  find  symbol  t  [FE]          AssertionFailedError  [CONTEXT]  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [BUGGY]  return  new  BlockRealMatrix(t);  [BUGGY]  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(t);	return  new  BlockRealMatrix(out);  	non-compiled	[CE]  cannot  find  symbol  t	25	None	replace
5	[BUG]  [BUGGY]    [CE]  missing  return  statement  [FE]            AssertionFailedError  [CONTEXT]  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [BUGGY]    [BUGGY]  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	  	return  new  BlockRealMatrix(out);  	non-compiled	[CE]  missing  return  statement	25	None	replace
6	[BUG]  [BUGGY]    out[i][j]  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  [CE]  cannot  find  symbol  i  [FE]    AssertionFailedError  [CONTEXT]  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [BUGGY]    out[i][j]  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  [BUGGY]  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	    out[i][j]  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));		non-compiled	[CE]  cannot  find  symbol  i	26	None	add
7	[BUG]  [BUGGY]    out[i][j]  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  n  *  r)));  [CE]  cannot  find  symbol  i  [FE]      AssertionFailedError  [CONTEXT]  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [BUGGY]    out[i][j]  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  n  *  r)));  [BUGGY]  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	    out[i][j]  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  n  *  r)));		non-compiled	[CE]  cannot  find  symbol  i	26	None	add
8	[BUG]  [BUGGY]    out[i][j]  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  t)));  [CE]  cannot  find  symbol  i  [FE]        AssertionFailedError  [CONTEXT]  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [BUGGY]    out[i][j]  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  t)));  [BUGGY]  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	    out[i][j]  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  t)));		non-compiled	[CE]  cannot  find  symbol  i	26	None	add
9	[BUG]  [BUGGY]    out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  r)));  [CE]  cannot  find  symbol  i  [FE]    AssertionFailedError  [CONTEXT]  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [BUGGY]    out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  r)));  [BUGGY]  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	    out[i][j]  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  r)));		non-compiled	[CE]  cannot  find  symbol  i	26	None	add
10	[BUG]  [BUGGY]    int  numberOfObservations  =  correlationMatrix.getNumberOfObservations();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError  [CONTEXT]  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [BUGGY]    int  numberOfObservations  =  correlationMatrix.getNumberOfObservations();  [BUGGY]  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	    int  numberOfObservations  =  correlationMatrix.getNumberOfObservations();		non-compiled	[CE]  cannot  find  symbol	26	None	add
11	[BUG]  [BUGGY]  return  new  BlockRealMatrix(relativeMatrix);  [CE]  cannot  find  symbol  relativeMatrix  [FE]    AssertionFailedError  [CONTEXT]  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [BUGGY]  return  new  BlockRealMatrix(relativeMatrix);  [BUGGY]  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(relativeMatrix);	return  new  BlockRealMatrix(out);  	non-compiled	[CE]  cannot  find  symbol  relativeMatrix	25	None	replace
12	[BUG]  [BUGGY]  return  new  BlockRealMatrix(out,  covarianceMatrix);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]      AssertionFailedError  [CONTEXT]  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [BUGGY]  return  new  BlockRealMatrix(out,  covarianceMatrix);  [BUGGY]  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(out,  covarianceMatrix);	return  new  BlockRealMatrix(out);  	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	25	None	replace
13	[BUG]  [BUGGY]  return  new  BlockRealMatrix(relativeMatrix,  out);  [CE]  cannot  find  symbol  relativeMatrix  [FE]        AssertionFailedError  [CONTEXT]  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [BUGGY]  return  new  BlockRealMatrix(relativeMatrix,  out);  [BUGGY]  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(relativeMatrix,  out);	return  new  BlockRealMatrix(out);  	non-compiled	[CE]  cannot  find  symbol  relativeMatrix	25	None	replace
14	[BUG]  [BUGGY]  return  new  BlockRealMatrix(nVars);  [CE]  no  suitable  constructor  found  for  BlockRealMatrix(int)  [FE]          AssertionFailedError  [CONTEXT]  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [BUGGY]  return  new  BlockRealMatrix(nVars);  [BUGGY]  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(nVars);	return  new  BlockRealMatrix(out);  	non-compiled	[CE]  no  suitable  constructor  found  for  BlockRealMatrix(int)	25	None	replace
15	[BUG]  [BUGGY]    out[i][j]  =  Math.abs(t  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  [CE]  cannot  find  symbol  i  [FE]    AssertionFailedError  [CONTEXT]  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [BUGGY]    out[i][j]  =  Math.abs(t  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  [BUGGY]  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	    out[i][j]  =  Math.abs(t  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));		non-compiled	[CE]  cannot  find  symbol  i	26	None	add
16	[BUG]  [BUGGY]    out[i][j]  =  Math.abs(t  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  r)));  [CE]  cannot  find  symbol  i  [FE]      AssertionFailedError  [CONTEXT]  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [BUGGY]    out[i][j]  =  Math.abs(t  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  r)));  [BUGGY]  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	    out[i][j]  =  Math.abs(t  *  Math.sqrt((  nObs  -  1)/(1  -  n  *  r)));		non-compiled	[CE]  cannot  find  symbol  i	26	None	add
17	[BUG]  [BUGGY]  return  new  BlockRealMatrix(covarianceMatrix);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]    AssertionFailedError  [CONTEXT]  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [BUGGY]  return  new  BlockRealMatrix(covarianceMatrix);  [BUGGY]  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(covarianceMatrix);	return  new  BlockRealMatrix(out);  	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	25	None	replace
18	[BUG]  [BUGGY]  return  new  BlockRealMatrix(covarianceMatrix,  out);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]      AssertionFailedError  [CONTEXT]  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [BUGGY]  return  new  BlockRealMatrix(covarianceMatrix,  out);  [BUGGY]  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	175	175	2	replace	return  new  BlockRealMatrix(covarianceMatrix,  out);	return  new  BlockRealMatrix(out);  	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	25	None	replace
