bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getCorrelationPValues(out[i][i],  covarianceMatrix);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getCorrelationPValues(out[i][i],  covarianceMatrix);  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getCorrelationPValues(out[i][i],  covarianceMatrix);	  ((    RealMatrix)relativeMatrix).getCorrelationPValues(out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
2	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getCorrelationPValues(out[i],  out[i][i]);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getCorrelationPValues(out[i],  out[i][i]);  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getCorrelationPValues(out[i],  out[i][i]);	  ((    RealMatrix)relativeMatrix).getCorrelationPValues(out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
3	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getCorrelationPValues(out[i][i],  tDistribution);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getCorrelationPValues(out[i][i],  tDistribution);  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getCorrelationPValues(out[i][i],  tDistribution);	  ((    RealMatrix)relativeMatrix).getCorrelationPValues(out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
4	[BUG]  [BUGGY]  ((  RealMatrix)covarianceMatrix).getCorrelationPValues(out[i][i]);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)covarianceMatrix).getCorrelationPValues(out[i][i]);  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)covarianceMatrix).getCorrelationPValues(out[i][i]);	  ((    RealMatrix)relativeMatrix).getCorrelationPValues(out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
5	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getObjDimension();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  covarianceMatrix.getObjDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  covarianceMatrix.getObjDimension();	  int    nObs    =    correlationMatrix.getObjDimension();    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
6	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getObjDimension();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  dataMatrix.getObjDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  dataMatrix.getObjDimension();	  int    nObs    =    correlationMatrix.getObjDimension();    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
7	[BUG]  [BUGGY]  int  nObs  =  this.covarianceMatrix.getObjDimension();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  this.covarianceMatrix.getObjDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  this.covarianceMatrix.getObjDimension();	  int    nObs    =    correlationMatrix.getObjDimension();    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
8	[BUG]  [BUGGY]  int  j  =  covarianceMatrix.getEntryCount(i);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  j  =  covarianceMatrix.getEntryCount(i);  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  j  =  covarianceMatrix.getEntryCount(i);	  int    j    =    correlationMatrix.getEntryCount(i);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
9	[BUG]  [BUGGY]  int  j  =  correlationMatrix.getEntryCount(i,  nVars);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  j  =  correlationMatrix.getEntryCount(i,  nVars);  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  j  =  correlationMatrix.getEntryCount(i,  nVars);	  int    j    =    correlationMatrix.getEntryCount(i);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
10	[BUG]  [BUGGY]  int  j  =  this.covarianceMatrix.getEntryCount(i);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  j  =  this.covarianceMatrix.getEntryCount(i);  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  j  =  this.covarianceMatrix.getEntryCount(i);	  int    j    =    correlationMatrix.getEntryCount(i);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
11	[BUG]  [BUGGY]  int  j  =  dataMatrix.getEntryCount(i);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  j  =  dataMatrix.getEntryCount(i);  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  j  =  dataMatrix.getEntryCount(i);	  int    j    =    correlationMatrix.getEntryCount(i);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
12	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getRowDimension();  int  nObs  =  correlationMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  covarianceMatrix.getRowDimension();  int  nObs  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  covarianceMatrix.getRowDimension();  int  nObs  =  correlationMatrix.getColumnDimension();	          int    nObs    =    correlationMatrix.getRowDimension();    int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
13	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getRowDimension();  int  nObs  =  dataMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  dataMatrix.getRowDimension();  int  nObs  =  dataMatrix.getColumnDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  dataMatrix.getRowDimension();  int  nObs  =  dataMatrix.getColumnDimension();	          int    nObs    =    correlationMatrix.getRowDimension();    int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nVars  -  2;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	add	for(int  j  =  0;  j  <  nVars  -  2;  j++)  {	  for(int    j    =    0;    j    <    nObs    -    2;    j++)    {    	compilable	  [FE]  AssertionFailedError  	80	6	replace
15	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nVars  -  2;  j++)  {  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nVars  -  2;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int  j  =  0;  j  <  nVars  -  2;  j++)  {	  for(int    j    =    0;    j    <    nObs    -    2;    j++)    {    	compilable	  [FE]  AssertionFailedError  	80	6	replace
16	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs.length  -  2;  j++)  {  [CE]  int  cannot  be  dereferenced  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nObs.length  -  2;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int  j  =  0;  j  <  nObs.length  -  2;  j++)  {	  for(int    j    =    0;    j    <    nObs    -    2;    j++)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	80	None	replace
17	[BUG]  [BUGGY]  TDistribution  tDistribution  =  new  TDistributionImpl(i,  nVars);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  TDistribution  tDistribution  =  new  TDistributionImpl(i,  nVars);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	TDistribution  tDistribution  =  new  TDistributionImpl(i,  nVars);	  TDistribution    tDistribution    =    new    TDistributionImpl(nVars,    i);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
18	[BUG]  [BUGGY]  TDistribution  tDistribution  =  new  TDistributionImpl(nVars,  i  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  TDistribution  tDistribution  =  new  TDistributionImpl(nVars,  i  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	TDistribution  tDistribution  =  new  TDistributionImpl(nVars,  i  +  1);	  TDistribution    tDistribution    =    new    TDistributionImpl(nVars,    i);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
19	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs  -  2;  j++)  {  for(int  j  =  0;  j  <  nObs  -  2;  j++)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nObs  -  2;  j++)  {  for(int  j  =  0;  j  <  nObs  -  2;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nObs    -    2;    j++)    {    for(int  j  =  0;  j  <  nObs  -  2;  j++)  {	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
20	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs  -  2;  j++)  {  For(int  j  =  0;  j  <  nObs  -  2;  j++)  {  [CE]  '.class'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nObs  -  2;  j++)  {  For(int  j  =  0;  j  <  nObs  -  2;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nObs    -    2;    j++)    {    For(int  j  =  0;  j  <  nObs  -  2;  j++)  {	  	non-compiled	[CE]  '.class'  expected	79	None	add
21	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs  -  2;  j++)  {  int  j  =  0;  j  <  nObs  -  2;  j++)  {  [CE]  >  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nObs  -  2;  j++)  {  int  j  =  0;  j  <  nObs  -  2;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nObs    -    2;    j++)    {    int  j  =  0;  j  <  nObs  -  2;  j++)  {	  	non-compiled	[CE]  >  expected	79	None	add
22	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs  -  2;  j++)  {  for(int  j  =  0;  j  <  nobs  -  2;  j++)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nObs  -  2;  j++)  {  for(int  j  =  0;  j  <  nobs  -  2;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nObs    -    2;    j++)    {    for(int  j  =  0;  j  <  nobs  -  2;  j++)  {	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
23	[BUG]  [BUGGY]  nObs  =  dataMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  nObs  =  dataMatrix.getColumnDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	nObs  =  dataMatrix.getColumnDimension();	  nObs    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
24	[BUG]  [BUGGY]  out[i]  =  tDistribution.getColumnDimension();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  out[i]  =  tDistribution.getColumnDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	out[i]  =  tDistribution.getColumnDimension();	  out[i]    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
25	[BUG]  [BUGGY]  out[i]  =  covarianceMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  out[i]  =  covarianceMatrix.getColumnDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	out[i]  =  covarianceMatrix.getColumnDimension();	  out[i]    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
26	[BUG]  [BUGGY]  out[i]  =  covarianceMatrix.getRowDimension();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  out[i]  =  covarianceMatrix.getRowDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	out[i]  =  covarianceMatrix.getRowDimension();	  out[i]    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
27	[BUG]  [BUGGY]  out[i]  =  tDistribution.getRowDimension();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  out[i]  =  tDistribution.getRowDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	out[i]  =  tDistribution.getRowDimension();	  out[i]    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
28	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nVars  +  2;  j++)  {  for(int  j  =  0;  j  <  nVars  +  2;  j++)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nVars  +  2;  j++)  {  for(int  j  =  0;  j  <  nVars  +  2;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nVars    +    2;    j++)    {    for(int  j  =  0;  j  <  nVars  +  2;  j++)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
29	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nVars  +  2;  j++)  {  For(int  j  =  0;  j  <  nVars  +  2;  j++)  {  [CE]  '.class'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nVars  +  2;  j++)  {  For(int  j  =  0;  j  <  nVars  +  2;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nVars    +    2;    j++)    {    For(int  j  =  0;  j  <  nVars  +  2;  j++)  {	  	non-compiled	[CE]  '.class'  expected	27	None	add
30	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nVars  +  2;  j++)  {  int  j  =  0;  j  <  nVars  +  2;  j++)  {  [CE]  >  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nVars  +  2;  j++)  {  int  j  =  0;  j  <  nVars  +  2;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nVars    +    2;    j++)    {    int  j  =  0;  j  <  nVars  +  2;  j++)  {	  	non-compiled	[CE]  >  expected	27	None	add
31	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(i,  j,  covarianceMatrix);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(i,  j,  covarianceMatrix);  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(i,  j,  covarianceMatrix);	  ((    RealMatrix)relativeMatrix).getEntry(i,    j);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
32	[BUG]  [BUGGY]  ((  RealMatrix)covarianceMatrix).getEntry(i,  j);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)covarianceMatrix).getEntry(i,  j);  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)covarianceMatrix).getEntry(i,  j);	  ((    RealMatrix)relativeMatrix).getEntry(i,    j);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
33	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars);  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(i,  nVars);	  ((    RealMatrix)relativeMatrix).getEntry(i,    j);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
34	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(i,  j  +  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(i,  j  +  1);  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(i,  j  +  1);	  ((    RealMatrix)relativeMatrix).getEntry(i,    j);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
35	[BUG]  [BUGGY]  ((  RealMatrix)tDistribution).getEntry(out[i][i],  covarianceMatrix);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)tDistribution).getEntry(out[i][i],  covarianceMatrix);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)tDistribution).getEntry(out[i][i],  covarianceMatrix);	  ((    RealMatrix)tDistribution).getEntry(out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
36	[BUG]  [BUGGY]  ((  RealMatrix)tDistribution).getEntry(out[i][i],  tDistribution);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)tDistribution).getEntry(out[i][i],  tDistribution);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)tDistribution).getEntry(out[i][i],  tDistribution);	  ((    RealMatrix)tDistribution).getEntry(out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
37	[BUG]  [BUGGY]  ((  RealMatrix)tDistribution).getEntry(out[i][i],  nVars);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)tDistribution).getEntry(out[i][i],  nVars);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)tDistribution).getEntry(out[i][i],  nVars);	  ((    RealMatrix)tDistribution).getEntry(out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
38	[BUG]  [BUGGY]  ((  RealMatrix)tDistribution).getEntry(out[i],  nVars);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)tDistribution).getEntry(out[i],  nVars);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)tDistribution).getEntry(out[i],  nVars);	  ((    RealMatrix)tDistribution).getEntry(out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
39	[BUG]  [BUGGY]  int  j  =  covarianceMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  j  =  covarianceMatrix.getColumnDimension();  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  j  =  covarianceMatrix.getColumnDimension();	  int    j    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
40	[BUG]  [BUGGY]  int  j  =  nObs.getRowDimension();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  j  =  nObs.getRowDimension();  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  j  =  nObs.getRowDimension();	  int    j    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
41	[BUG]  [BUGGY]  int  j  =  dataMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  j  =  dataMatrix.getColumnDimension();  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  j  =  dataMatrix.getColumnDimension();	  int    j    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
42	[BUG]  [BUGGY]  Double  nObs  =  correlationMatrix.getEntry(i,  nVars);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  Double  nObs  =  correlationMatrix.getEntry(i,  nVars);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	Double  nObs  =  correlationMatrix.getEntry(i,  nVars);	  Double    nObs    =    correlationMatrix.getEntry(i,    i);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
43	[BUG]  [BUGGY]  Double  nObs  =  covarianceMatrix.getEntry(i,  i);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  Double  nObs  =  covarianceMatrix.getEntry(i,  i);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	Double  nObs  =  covarianceMatrix.getEntry(i,  i);	  Double    nObs    =    correlationMatrix.getEntry(i,    i);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
44	[BUG]  [BUGGY]  Double  nObs  =  dataMatrix.getEntry(i,  i);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  Double  nObs  =  dataMatrix.getEntry(i,  i);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	Double  nObs  =  dataMatrix.getEntry(i,  i);	  Double    nObs    =    correlationMatrix.getEntry(i,    i);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
45	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out,  covarianceMatrix[i][i],  tDistribution);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out,  covarianceMatrix[i][i],  tDistribution);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(out,  covarianceMatrix[i][i],  tDistribution);	  ((    RealMatrix)relativeMatrix).getEntry(out,    covarianceMatrix[i][i]);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
46	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out,  covarianceMatrix[i],  nVars);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out,  covarianceMatrix[i],  nVars);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(out,  covarianceMatrix[i],  nVars);	  ((    RealMatrix)relativeMatrix).getEntry(out,    covarianceMatrix[i][i]);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
47	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out,  covarianceMatrix[i][i],  nVars);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out,  covarianceMatrix[i][i],  nVars);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(out,  covarianceMatrix[i][i],  nVars);	  ((    RealMatrix)relativeMatrix).getEntry(out,    covarianceMatrix[i][i]);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
48	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out,  nVars[i][i]);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out,  nVars[i][i]);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(out,  nVars[i][i]);	  ((    RealMatrix)relativeMatrix).getEntry(out,    covarianceMatrix[i][i]);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
49	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getEntry(i).getRowDimension();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  covarianceMatrix.getEntry(i).getRowDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  covarianceMatrix.getEntry(i).getRowDimension();	  int    nObs    =    correlationMatrix.getEntry(i).getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
50	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getEntry(i,  i);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  dataMatrix.getEntry(i,  i);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  dataMatrix.getEntry(i,  i);	  int    nObs    =    covarianceMatrix.getEntry(i,    i);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
51	[BUG]  [BUGGY]  int  nObs  =  datasetMatrix.getEntry(i,  i);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  datasetMatrix.getEntry(i,  i);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  datasetMatrix.getEntry(i,  i);	  int    nObs    =    covarianceMatrix.getEntry(i,    i);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
52	[BUG]  [BUGGY]  double  nObs  =  covarianceMatrix.getEntry(i);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  double  nObs  =  covarianceMatrix.getEntry(i);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	double  nObs  =  covarianceMatrix.getEntry(i);	  double    nObs    =    correlationMatrix.getEntry(i);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
53	[BUG]  [BUGGY]  double  nObs  =  correlationMatrix.getEntry(i,  nVars);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  double  nObs  =  correlationMatrix.getEntry(i,  nVars);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	double  nObs  =  correlationMatrix.getEntry(i,  nVars);	  double    nObs    =    correlationMatrix.getEntry(i);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
54	[BUG]  [BUGGY]  double  nObs  =  dataMatrix.getEntry(i);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  double  nObs  =  dataMatrix.getEntry(i);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	double  nObs  =  dataMatrix.getEntry(i);	  double    nObs    =    correlationMatrix.getEntry(i);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
55	[BUG]  [BUGGY]  double  nObs  =  this.covarianceMatrix.getEntry(i);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  double  nObs  =  this.covarianceMatrix.getEntry(i);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	double  nObs  =  this.covarianceMatrix.getEntry(i);	  double    nObs    =    correlationMatrix.getEntry(i);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
56	[BUG]  [BUGGY]  TDistribution  tDistribution  =  new  TDistributionImpl(i,  out);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  TDistribution  tDistribution  =  new  TDistributionImpl(i,  out);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	TDistribution  tDistribution  =  new  TDistributionImpl(i,  out);	  TDistribution    tDistribution    =    new    TDistributionImpl(i,    nObs);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
57	[BUG]  [BUGGY]  TDistribution  tDistribution  =  new  TDistributionImpl(i,  out.length);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  TDistribution  tDistribution  =  new  TDistributionImpl(i,  out.length);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	TDistribution  tDistribution  =  new  TDistributionImpl(i,  out.length);	  TDistribution    tDistribution    =    new    TDistributionImpl(i,    nObs);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
58	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getCorrelationPValues(out,  i,  covarianceMatrix);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getCorrelationPValues(out,  i,  covarianceMatrix);  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getCorrelationPValues(out,  i,  covarianceMatrix);	  ((    RealMatrix)relativeMatrix).getCorrelationPValues(out,    i);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
59	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getCorrelationPValues(out,  i  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getCorrelationPValues(out,  i  +  1);  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getCorrelationPValues(out,  i  +  1);	  ((    RealMatrix)relativeMatrix).getCorrelationPValues(out,    i);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
60	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getCorrelationPValues(out,  covarianceMatrix,  i);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getCorrelationPValues(out,  covarianceMatrix,  i);  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getCorrelationPValues(out,  covarianceMatrix,  i);	  ((    RealMatrix)relativeMatrix).getCorrelationPValues(out,    i);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
61	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getCorrelationPValues(i,  out);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getCorrelationPValues(i,  out);  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getCorrelationPValues(i,  out);	  ((    RealMatrix)relativeMatrix).getCorrelationPValues(out,    i);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
62	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i][i],  tDistribution);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i][i],  tDistribution);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(out[i][i],  tDistribution);	  ((    RealMatrix)relativeMatrix).getEntry(out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
63	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i],  nVars);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i],  nVars);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(out[i],  nVars);	  ((    RealMatrix)relativeMatrix).getEntry(out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
64	[BUG]  [BUGGY]  ((  RealMatrix)covarianceMatrix).getEntry(out[i][i]);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)covarianceMatrix).getEntry(out[i][i]);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)covarianceMatrix).getEntry(out[i][i]);	  ((    RealMatrix)relativeMatrix).getEntry(out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
65	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getEntry(i).getRowDimension()  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  correlationMatrix.getEntry(i).getRowDimension()  +  1;  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  correlationMatrix.getEntry(i).getRowDimension()  +  1;	  int    nObs    =    correlationMatrix.getEntry(i).getColumnDimension()    +    1;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
66	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nVars  -  1;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	add	for(int  j  =  0;  j  <  nVars  -  1;  j++)  {	  for(int    j    =    0;    j    <    nObs    -    1;    j++)    {    	compilable	  [FE]  AssertionFailedError  	20	5	replace
67	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nVars  -  1;  j++)  {  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nVars  -  1;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int  j  =  0;  j  <  nVars  -  1;  j++)  {	  for(int    j    =    0;    j    <    nObs    -    1;    j++)    {    	compilable	  [FE]  AssertionFailedError  	20	5	replace
68	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs.length  -  1;  j++)  {  [CE]  int  cannot  be  dereferenced  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nObs.length  -  1;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int  j  =  0;  j  <  nObs.length  -  1;  j++)  {	  for(int    j    =    0;    j    <    nObs    -    1;    j++)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	20	None	replace
69	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getEntryCount()  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  dataMatrix.getEntryCount()  -  1;  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  dataMatrix.getEntryCount()  -  1;	  int    nObs    =    dataMatrix.getEntryCount();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
70	[BUG]  [BUGGY]  int  nObs  =  datasetMatrix.getEntryCount();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  datasetMatrix.getEntryCount();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  datasetMatrix.getEntryCount();	  int    nObs    =    dataMatrix.getEntryCount();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
71	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  nVars  +  1;  j++)  {  [CE]  '.class'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  For(int  j  =  0;  j  <  nVars  +  1;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	For(int  j  =  0;  j  <  nVars  +  1;  j++)  {	  for(int    j    =    0;    j    <    nVars    +    1;    j++)    {    For(int    j    =    0;    j    <    nVars    +    1;    j++)    {    	non-compiled	[CE]  '.class'  expected	38	None	replace
72	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getEntry(i,  nVars);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  dataMatrix.getEntry(i,  nVars);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  dataMatrix.getEntry(i,  nVars);	  int    nObs    =    dataMatrix.getEntry(i);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
73	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getRowDimension();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  dataMatrix.getRowDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  dataMatrix.getRowDimension();	  int    nObs    =    covarianceMatrix.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
74	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getEntry(i).getRowDimension();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  dataMatrix.getEntry(i).getRowDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  dataMatrix.getEntry(i).getRowDimension();	  int    nObs    =    dataMatrix.getEntry(i).getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
75	[BUG]  [BUGGY]  double  nObs  =  correlationMatrix.getEntry(i).getRowDimension();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  double  nObs  =  correlationMatrix.getEntry(i).getRowDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	double  nObs  =  correlationMatrix.getEntry(i).getRowDimension();	  double    nObs    =    correlationMatrix.getEntry(i).getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
76	[BUG]  [BUGGY]  double  nObs  =  covarianceMatrix.getEntry(i).getColumnDimension();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  double  nObs  =  covarianceMatrix.getEntry(i).getColumnDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	double  nObs  =  covarianceMatrix.getEntry(i).getColumnDimension();	  double    nObs    =    correlationMatrix.getEntry(i).getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
77	[BUG]  [BUGGY]  double  nObs  =  dataMatrix.getEntry(i).getColumnDimension();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  double  nObs  =  dataMatrix.getEntry(i).getColumnDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	double  nObs  =  dataMatrix.getEntry(i).getColumnDimension();	  double    nObs    =    correlationMatrix.getEntry(i).getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
78	[BUG]  [BUGGY]  int  j  =  covarianceMatrix.getEntry(i,  0);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  j  =  covarianceMatrix.getEntry(i,  0);  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  j  =  covarianceMatrix.getEntry(i,  0);	  int    j    =    correlationMatrix.getEntry(i,    0);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
79	[BUG]  [BUGGY]  int  j  =  this.covarianceMatrix.getEntry(i,  0);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  j  =  this.covarianceMatrix.getEntry(i,  0);  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  j  =  this.covarianceMatrix.getEntry(i,  0);	  int    j    =    correlationMatrix.getEntry(i,    0);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
80	[BUG]  [BUGGY]  int  j  =  dataMatrix.getEntry(i,  0);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  j  =  dataMatrix.getEntry(i,  0);  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  j  =  dataMatrix.getEntry(i,  0);	  int    j    =    correlationMatrix.getEntry(i,    0);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
81	[BUG]  [BUGGY]  ((  RealMatrix)covarianceMatrix).getEntry(out[i][i],  tDistribution);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)covarianceMatrix).getEntry(out[i][i],  tDistribution);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)covarianceMatrix).getEntry(out[i][i],  tDistribution);	  ((    RealMatrix)covarianceMatrix).getEntry(i,    out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
82	[BUG]  [BUGGY]  ((  RealMatrix)covarianceMatrix).getEntry(out[i][i],  nVars);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)covarianceMatrix).getEntry(out[i][i],  nVars);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)covarianceMatrix).getEntry(out[i][i],  nVars);	  ((    RealMatrix)covarianceMatrix).getEntry(i,    out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
83	[BUG]  [BUGGY]  ((  RealMatrix)covarianceMatrix).getEntry(out[i],  covarianceMatrix[i]);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)covarianceMatrix).getEntry(out[i],  covarianceMatrix[i]);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)covarianceMatrix).getEntry(out[i],  covarianceMatrix[i]);	  ((    RealMatrix)covarianceMatrix).getEntry(i,    out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
84	[BUG]  [BUGGY]  ((  RealMatrix)covarianceMatrix).getEntry(out,  i[i][i]);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)covarianceMatrix).getEntry(out,  i[i][i]);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)covarianceMatrix).getEntry(out,  i[i][i]);	  ((    RealMatrix)covarianceMatrix).getEntry(i,    out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
85	[BUG]  [BUGGY]  int  nObs  =  this.covarianceMatrix.getEntryCount()  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  this.covarianceMatrix.getEntryCount()  -  1;  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  this.covarianceMatrix.getEntryCount()  -  1;	  int    nObs    =    this.covarianceMatrix.getEntryCount();    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
86	[BUG]  [BUGGY]  int  j  =  0;  j  <  nObs;  j++)  {  [CE]  >  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  j  =  0;  j  <  nObs;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  j  =  0;  j  <  nObs;  j++)  {	  for(int    j    =    0;    j    <    nObs;    j++)    {    int    j    =    0;    j    <    nObs;    j++)    {    	non-compiled	[CE]  >  expected	3	None	replace
87	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nVars;  j++)  {  int  j  =  0;  j  <  nObs;  j++)  {  [CE]  >  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nVars;  j++)  {  int  j  =  0;  j  <  nObs;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int  j  =  0;  j  <  nVars;  j++)  {  int  j  =  0;  j  <  nObs;  j++)  {	  for(int    j    =    0;    j    <    nObs;    j++)    {    int    j    =    0;    j    <    nObs;    j++)    {    	non-compiled	[CE]  >  expected	3	None	replace
88	[BUG]  [BUGGY]  int  j  =  0;  j  <  nVars;  j++)  {  [CE]  >  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  j  =  0;  j  <  nVars;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  j  =  0;  j  <  nVars;  j++)  {	  for(int    j    =    0;    j    <    nObs;    j++)    {    int    j    =    0;    j    <    nObs;    j++)    {    	non-compiled	[CE]  >  expected	3	None	replace
89	[BUG]  [BUGGY]  int  j  =  covarianceMatrix.getRowDimension();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  j  =  covarianceMatrix.getRowDimension();  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  j  =  covarianceMatrix.getRowDimension();	  int    j    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
90	[BUG]  [BUGGY]  int  j  =  nObs.getColumnDimension();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  j  =  nObs.getColumnDimension();  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  j  =  nObs.getColumnDimension();	  int    j    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
91	[BUG]  [BUGGY]  int  j  =  this.covarianceMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  j  =  this.covarianceMatrix.getColumnDimension();  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  j  =  this.covarianceMatrix.getColumnDimension();	  int    j    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
92	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getEntryCount()  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  covarianceMatrix.getEntryCount()  -  1;  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  covarianceMatrix.getEntryCount()  -  1;	  int    nObs    =    covarianceMatrix.getEntryCount();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
93	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getEntryCount()  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  covarianceMatrix.getEntryCount()  +  1;  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  covarianceMatrix.getEntryCount()  +  1;	  int    nObs    =    covarianceMatrix.getEntryCount();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
94	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i][i],  nVars);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i][i],  nVars);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(out[i][i],  nVars);	  ((    RealMatrix)relativeMatrix).getEntry(out[i][i],    covarianceMatrix);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
95	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i][i],  correlationMatrix);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i][i],  correlationMatrix);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(out[i][i],  correlationMatrix);	  ((    RealMatrix)relativeMatrix).getEntry(out[i][i],    covarianceMatrix);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
96	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i][i],  matrix);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i][i],  matrix);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(out[i][i],  matrix);	  ((    RealMatrix)relativeMatrix).getEntry(out[i][i],    covarianceMatrix);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
97	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i][i],  covarianceMatrix,  out[i][i]);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i][i],  covarianceMatrix,  out[i][i]);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(out[i][i],  covarianceMatrix,  out[i][i]);	  ((    RealMatrix)relativeMatrix).getEntry(out[i][i],    covarianceMatrix);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
98	[BUG]  [BUGGY]  int  j  =  0;  j  <  nVars  +  1;  j++)  {  [CE]  >  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  j  =  0;  j  <  nVars  +  1;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  j  =  0;  j  <  nVars  +  1;  j++)  {	  for(int    j    =    0;    j    <    nVars    +    1;    j++)    {    int    j    =    0;    j    <    nVars    +    1;    j++)    {    	non-compiled	[CE]  >  expected	39	None	replace
99	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nVars;  j++)  {  (int  j  =  0;  j  <  nObs;  j++)  {  [CE]  ')'  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nVars;  j++)  {  (int  j  =  0;  j  <  nObs;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int  j  =  0;  j  <  nVars;  j++)  {  (int  j  =  0;  j  <  nObs;  j++)  {	  for(int    j    =    0;    j    <    nObs;    j++)    {    (int    j    =    0;    j    <    nObs;    j++)    {    	non-compiled	[CE]  ')'  expected	55	None	replace
100	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs;  j++)  {  (int  j  =  0;  j  <  nVars;  j++)  {  [CE]  ')'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nObs;  j++)  {  (int  j  =  0;  j  <  nVars;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int  j  =  0;  j  <  nObs;  j++)  {  (int  j  =  0;  j  <  nVars;  j++)  {	  for(int    j    =    0;    j    <    nObs;    j++)    {    (int    j    =    0;    j    <    nObs;    j++)    {    	non-compiled	[CE]  ')'  expected	55	None	replace
101	[BUG]  [BUGGY]  (int  j  =  0;  j  <  nObs;  j++)  {  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  (int  j  =  0;  j  <  nObs;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	(int  j  =  0;  j  <  nObs;  j++)  {	  for(int    j    =    0;    j    <    nObs;    j++)    {    (int    j    =    0;    j    <    nObs;    j++)    {    	non-compiled	[CE]  ')'  expected	55	None	replace
102	[BUG]  [BUGGY]  int  nObs  =  this.covarianceMatrix.getRowDimension();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  this.covarianceMatrix.getRowDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  this.covarianceMatrix.getRowDimension();	  int    nObs    =    this.covarianceMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
103	[BUG]  [BUGGY]  double  nObs  =  covarianceMatrix.getEntry(i,  0);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  double  nObs  =  covarianceMatrix.getEntry(i,  0);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	double  nObs  =  covarianceMatrix.getEntry(i,  0);	  double    nObs    =    correlationMatrix.getEntry(i,    0);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
104	[BUG]  [BUGGY]  double  nObs  =  correlationMatrix.getEntry(i,  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  double  nObs  =  correlationMatrix.getEntry(i,  1);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	double  nObs  =  correlationMatrix.getEntry(i,  1);	  double    nObs    =    correlationMatrix.getEntry(i,    0);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
105	[BUG]  [BUGGY]  double  nObs  =  correlationMatrix.getEntry(i,  0)+  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  double  nObs  =  correlationMatrix.getEntry(i,  0)+  1;  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	double  nObs  =  correlationMatrix.getEntry(i,  0)+  1;	  double    nObs    =    correlationMatrix.getEntry(i,    0);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
106	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getCorrelationPValues(out[i],  covarianceMatrix);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getCorrelationPValues(out[i],  covarianceMatrix);  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getCorrelationPValues(out[i],  covarianceMatrix);	  ((    RealMatrix)relativeMatrix).getCorrelationPValues(out[i]);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
107	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getCorrelationPValues(out[i],  nVars);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getCorrelationPValues(out[i],  nVars);  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getCorrelationPValues(out[i],  nVars);	  ((    RealMatrix)relativeMatrix).getCorrelationPValues(out[i]);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
108	[BUG]  [BUGGY]  Integer  j  =  0;  j  <  nVars  +  1;  j++)  {  [CE]  >  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  Integer  j  =  0;  j  <  nVars  +  1;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	Integer  j  =  0;  j  <  nVars  +  1;  j++)  {	  for(int    j    =    0;    j    <    nVars    +    1;    j++)    {    Integer    j    =    0;    j    <    nVars    +    1;    j++)    {    	non-compiled	[CE]  >  expected	66	None	replace
109	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i],  covarianceMatrix[i][i]);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i],  covarianceMatrix[i][i]);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(out[i],  covarianceMatrix[i][i]);	  ((    RealMatrix)relativeMatrix).getEntry(out[i],    nVars[i][i]);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
110	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i],  covarianceMatrix,  nVars[i][i]);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i],  covarianceMatrix,  nVars[i][i]);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(out[i],  covarianceMatrix,  nVars[i][i]);	  ((    RealMatrix)relativeMatrix).getEntry(out[i],    nVars[i][i]);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
111	[BUG]  [BUGGY]  ((  RealMatrix)negativeMatrix).getEntry(out[i],  nVars[i][i]);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)negativeMatrix).getEntry(out[i],  nVars[i][i]);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)negativeMatrix).getEntry(out[i],  nVars[i][i]);	  ((    RealMatrix)relativeMatrix).getEntry(out[i],    nVars[i][i]);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
112	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i],  nVars[i][i],  covarianceMatrix);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i],  nVars[i][i],  covarianceMatrix);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(out[i],  nVars[i][i],  covarianceMatrix);	  ((    RealMatrix)relativeMatrix).getEntry(out[i],    nVars[i][i]);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
113	[BUG]  [BUGGY]  int  nObs  =  dataArea.getEntryCount();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  dataArea.getEntryCount();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  dataArea.getEntryCount();	  int    nObs    =    matrix.getEntryCount();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
114	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nObs  +  3;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	add	for(int  j  =  0;  j  <  nObs  +  3;  j++)  {	  for(int    j    =    0;    j    <    nObs    +    2;    j++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	68	7	replace
115	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs  +  3;  j++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nObs  +  3;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int  j  =  0;  j  <  nObs  +  3;  j++)  {	  for(int    j    =    0;    j    <    nObs    +    2;    j++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	68	7	replace
116	[BUG]  [BUGGY]  Double  nObs  =  covarianceMatrix.getEntry(i,  0);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  Double  nObs  =  covarianceMatrix.getEntry(i,  0);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	Double  nObs  =  covarianceMatrix.getEntry(i,  0);	  Double    nObs    =    correlationMatrix.getEntry(i,    0);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
117	[BUG]  [BUGGY]  Double  nObs  =  correlationMatrix.getEntry(i,  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  Double  nObs  =  correlationMatrix.getEntry(i,  1);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	Double  nObs  =  correlationMatrix.getEntry(i,  1);	  Double    nObs    =    correlationMatrix.getEntry(i,    0);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
118	[BUG]  [BUGGY]  Double  nObs  =  dataMatrix.getEntry(i,  0);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  Double  nObs  =  dataMatrix.getEntry(i,  0);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	Double  nObs  =  dataMatrix.getEntry(i,  0);	  Double    nObs    =    correlationMatrix.getEntry(i,    0);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
119	[BUG]  [BUGGY]  double  nObs  =  covarianceMatrix.getEntry(i,  i);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  double  nObs  =  covarianceMatrix.getEntry(i,  i);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	double  nObs  =  covarianceMatrix.getEntry(i,  i);	  double    nObs    =    correlationMatrix.getEntry(i,    i);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
120	[BUG]  [BUGGY]  double  nObs  =  dataMatrix.getEntry(i,  i);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  double  nObs  =  dataMatrix.getEntry(i,  i);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	double  nObs  =  dataMatrix.getEntry(i,  i);	  double    nObs    =    correlationMatrix.getEntry(i,    i);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
121	[BUG]  [BUGGY]  double  nObs  =  correlationMatrix.getEntry(i,  i  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  double  nObs  =  correlationMatrix.getEntry(i,  i  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	double  nObs  =  correlationMatrix.getEntry(i,  i  +  1);	  double    nObs    =    correlationMatrix.getEntry(i,    i);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
122	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out,  covarianceMatrix[i],  out[i][i]);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out,  covarianceMatrix[i],  out[i][i]);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(out,  covarianceMatrix[i],  out[i][i]);	  ((    RealMatrix)relativeMatrix).getEntry(out,    out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
123	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out,  covarianceMatrix[i][0]);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out,  covarianceMatrix[i][0]);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(out,  covarianceMatrix[i][0]);	  ((    RealMatrix)relativeMatrix).getEntry(out,    out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
124	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getColumnDimension();  Integer  nObs  =  correlationMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  correlationMatrix.getColumnDimension();  Integer  nObs  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  correlationMatrix.getColumnDimension();  Integer  nObs  =  correlationMatrix.getColumnDimension();	          int    nObs    =    correlationMatrix.getColumnDimension();    Int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
125	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getColumnDimension();  Integer  nObs  =  correlationMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  covarianceMatrix.getColumnDimension();  Integer  nObs  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  covarianceMatrix.getColumnDimension();  Integer  nObs  =  correlationMatrix.getColumnDimension();	          int    nObs    =    correlationMatrix.getColumnDimension();    Int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
126	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  Integer  nObs  =  dataMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  Integer  nObs  =  dataMatrix.getColumnDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  dataMatrix.getColumnDimension();  Integer  nObs  =  dataMatrix.getColumnDimension();	          int    nObs    =    correlationMatrix.getColumnDimension();    Int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
127	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs  +  1;  j++)  {  (int  j  =  0;  j  <  nVars  +  1;  j++)  {  [CE]  ')'  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nObs  +  1;  j++)  {  (int  j  =  0;  j  <  nVars  +  1;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int  j  =  0;  j  <  nObs  +  1;  j++)  {  (int  j  =  0;  j  <  nVars  +  1;  j++)  {	  for(int    j    =    0;    j    <    nVars    +    1;    j++)    {    (int    j    =    0;    j    <    nVars    +    1;    j++)    {    	non-compiled	[CE]  ')'  expected	65	None	replace
128	[BUG]  [BUGGY]  (int  j  =  0;  j  <  nVars  +  1;  j++)  {  [CE]  ')'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  (int  j  =  0;  j  <  nVars  +  1;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	(int  j  =  0;  j  <  nVars  +  1;  j++)  {	  for(int    j    =    0;    j    <    nVars    +    1;    j++)    {    (int    j    =    0;    j    <    nVars    +    1;    j++)    {    	non-compiled	[CE]  ')'  expected	65	None	replace
129	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs  +  1;  j++)  {  (int  j  =  0;  j  <  nVars  +  2;  j++)  {  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nObs  +  1;  j++)  {  (int  j  =  0;  j  <  nVars  +  2;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int  j  =  0;  j  <  nObs  +  1;  j++)  {  (int  j  =  0;  j  <  nVars  +  2;  j++)  {	  for(int    j    =    0;    j    <    nVars    +    1;    j++)    {    (int    j    =    0;    j    <    nVars    +    1;    j++)    {    	non-compiled	[CE]  ')'  expected	65	None	replace
130	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs  +  1;  j++)  {  for(int  j  =  0;  j  <  nObs  +  1;  j++)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nObs  +  1;  j++)  {  for(int  j  =  0;  j  <  nObs  +  1;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nObs    +    1;    j++)    {    for(int  j  =  0;  j  <  nObs  +  1;  j++)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
131	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs  +  1;  j++)  {  For(int  j  =  0;  j  <  nObs  +  1;  j++)  {  [CE]  '.class'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nObs  +  1;  j++)  {  For(int  j  =  0;  j  <  nObs  +  1;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nObs    +    1;    j++)    {    For(int  j  =  0;  j  <  nObs  +  1;  j++)  {	  	non-compiled	[CE]  '.class'  expected	17	None	add
132	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs  +  1;  j++)  {  int  j  =  0;  j  <  nObs  +  1;  j++)  {  [CE]  >  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nObs  +  1;  j++)  {  int  j  =  0;  j  <  nObs  +  1;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nObs    +    1;    j++)    {    int  j  =  0;  j  <  nObs  +  1;  j++)  {	  	non-compiled	[CE]  >  expected	17	None	add
133	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs  +  1;  j++)  {  for(int  j  =  0;  j  <  nObs  +  1);  j++)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nObs  +  1;  j++)  {  for(int  j  =  0;  j  <  nObs  +  1);  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nObs    +    1;    j++)    {    for(int  j  =  0;  j  <  nObs  +  1);  j++)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
134	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getEntry(i,  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  covarianceMatrix.getEntry(i,  1);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  covarianceMatrix.getEntry(i,  1);	  int    nObs    =    covarianceMatrix.getEntry(i,    0);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
135	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getEntry(i,  0);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  dataMatrix.getEntry(i,  0);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  dataMatrix.getEntry(i,  0);	  int    nObs    =    covarianceMatrix.getEntry(i,    0);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
136	[BUG]  [BUGGY]  int  nObs  =  this.covarianceMatrix.getEntry(i,  nVars);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  this.covarianceMatrix.getEntry(i,  nVars);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  this.covarianceMatrix.getEntry(i,  nVars);	  int    nObs    =    correlationMatrix.getEntry(i,    nVars);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
137	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getEntry(i,  nVars,  nDistribution);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  correlationMatrix.getEntry(i,  nVars,  nDistribution);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  correlationMatrix.getEntry(i,  nVars,  nDistribution);	  int    nObs    =    correlationMatrix.getEntry(i,    nVars);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
138	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i],  nVars,  covarianceMatrix[i]);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i],  nVars,  covarianceMatrix[i]);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(out[i],  nVars,  covarianceMatrix[i]);	  ((    RealMatrix)relativeMatrix).getEntry(out[i],    covarianceMatrix[i]);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
139	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i],  correlationMatrix[i]);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i],  correlationMatrix[i]);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(out[i],  correlationMatrix[i]);	  ((    RealMatrix)relativeMatrix).getEntry(out[i],    covarianceMatrix[i]);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
140	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i],  nVars[i]);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i],  nVars[i]);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(out[i],  nVars[i]);	  ((    RealMatrix)relativeMatrix).getEntry(out[i],    covarianceMatrix[i]);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
141	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getRowDimension();  Integer  nObs  =  correlationMatrix.getRowDimension();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  correlationMatrix.getRowDimension();  Integer  nObs  =  correlationMatrix.getRowDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  correlationMatrix.getRowDimension();  Integer  nObs  =  correlationMatrix.getRowDimension();	          int    nObs    =    correlationMatrix.getRowDimension();    Int    nObs    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
142	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getColumnDimension();  Integer  nObs  =  correlationMatrix.getRowDimension();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  correlationMatrix.getColumnDimension();  Integer  nObs  =  correlationMatrix.getRowDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  correlationMatrix.getColumnDimension();  Integer  nObs  =  correlationMatrix.getRowDimension();	          int    nObs    =    correlationMatrix.getRowDimension();    Int    nObs    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
143	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getRowDimension();  Integer  nObs  =  dataMatrix.getRowDimension();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  dataMatrix.getRowDimension();  Integer  nObs  =  dataMatrix.getRowDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  dataMatrix.getRowDimension();  Integer  nObs  =  dataMatrix.getRowDimension();	          int    nObs    =    correlationMatrix.getRowDimension();    Int    nObs    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
144	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getRowDimension();  Integer  nObs  =  correlationMatrix.getRowDimension();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  covarianceMatrix.getRowDimension();  Integer  nObs  =  correlationMatrix.getRowDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  covarianceMatrix.getRowDimension();  Integer  nObs  =  correlationMatrix.getRowDimension();	          int    nObs    =    correlationMatrix.getRowDimension();    Int    nObs    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
145	[BUG]  [BUGGY]  TDistribution  tDistribution  =  new  TDistributionImpl(i,  nObs  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  TDistribution  tDistribution  =  new  TDistributionImpl(i,  nObs  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	TDistribution  tDistribution  =  new  TDistributionImpl(i,  nObs  +  1);	  TDistribution    tDistribution    =    new    TDistributionImpl(nObs,    i    +    1);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
146	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nVars  +  3;  j++)  {  for(int  j  =  0;  j  <  nVars  +  3;  j++)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nVars  +  3;  j++)  {  for(int  j  =  0;  j  <  nVars  +  3;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nVars    +    3;    j++)    {    for(int  j  =  0;  j  <  nVars  +  3;  j++)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
147	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nVars  +  3;  j++)  {  For(int  j  =  0;  j  <  nVars  +  3;  j++)  {  [CE]  '.class'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nVars  +  3;  j++)  {  For(int  j  =  0;  j  <  nVars  +  3;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nVars    +    3;    j++)    {    For(int  j  =  0;  j  <  nVars  +  3;  j++)  {	  	non-compiled	[CE]  '.class'  expected	29	None	add
148	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nVars  +  3;  j++)  {  int  j  =  0;  j  <  nVars  +  3;  j++)  {  [CE]  >  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nVars  +  3;  j++)  {  int  j  =  0;  j  <  nVars  +  3;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nVars    +    3;    j++)    {    int  j  =  0;  j  <  nVars  +  3;  j++)  {	  	non-compiled	[CE]  >  expected	29	None	add
149	[BUG]  [BUGGY]  ((  RealMatrix)correlationMatrix).getEntry(out[i][i],  tDistribution);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)correlationMatrix).getEntry(out[i][i],  tDistribution);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)correlationMatrix).getEntry(out[i][i],  tDistribution);	  ((    RealMatrix)correlationMatrix).getEntry(i,    out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
150	[BUG]  [BUGGY]  ((  RealMatrix)correlationMatrix).getEntry(out[i][i],  covarianceMatrix);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)correlationMatrix).getEntry(out[i][i],  covarianceMatrix);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)correlationMatrix).getEntry(out[i][i],  covarianceMatrix);	  ((    RealMatrix)correlationMatrix).getEntry(i,    out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
151	[BUG]  [BUGGY]  ((  RealMatrix)correlationMatrix).getEntry(out[i][i],  nVars);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)correlationMatrix).getEntry(out[i][i],  nVars);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)correlationMatrix).getEntry(out[i][i],  nVars);	  ((    RealMatrix)correlationMatrix).getEntry(i,    out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
152	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs  -  1;  j++)  {  for(int  j  =  0;  j  <  nObs  -  1;  j++)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nObs  -  1;  j++)  {  for(int  j  =  0;  j  <  nObs  -  1;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nObs    -    1;    j++)    {    for(int  j  =  0;  j  <  nObs  -  1;  j++)  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
153	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs  -  1;  j++)  {  For(int  j  =  0;  j  <  nObs  -  1;  j++)  {  [CE]  '.class'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nObs  -  1;  j++)  {  For(int  j  =  0;  j  <  nObs  -  1;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nObs    -    1;    j++)    {    For(int  j  =  0;  j  <  nObs  -  1;  j++)  {	  	non-compiled	[CE]  '.class'  expected	19	None	add
154	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs  -  1;  j++)  {  int  j  =  0;  j  <  nObs  -  1;  j++)  {  [CE]  >  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nObs  -  1;  j++)  {  int  j  =  0;  j  <  nObs  -  1;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nObs    -    1;    j++)    {    int  j  =  0;  j  <  nObs  -  1;  j++)  {	  	non-compiled	[CE]  >  expected	19	None	add
155	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs  -  1;  j++)  {  for(int  j  =  0;  j  <  nobs  -  1;  j++)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nObs  -  1;  j++)  {  for(int  j  =  0;  j  <  nobs  -  1;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nObs    -    1;    j++)    {    for(int  j  =  0;  j  <  nobs  -  1;  j++)  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
156	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  nObs;  j++)  {  [CE]  '.class'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  For(int  j  =  0;  j  <  nObs;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	For(int  j  =  0;  j  <  nObs;  j++)  {	  for(int    j    =    0;    j    <    nObs;    j++)    {    For(int    j    =    0;    j    <    nObs;    j++)    {    	non-compiled	[CE]  '.class'  expected	2	None	replace
157	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  nVars;  j++)  {  [CE]  '.class'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  For(int  j  =  0;  j  <  nVars;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	For(int  j  =  0;  j  <  nVars;  j++)  {	  for(int    j    =    0;    j    <    nObs;    j++)    {    For(int    j    =    0;    j    <    nObs;    j++)    {    	non-compiled	[CE]  '.class'  expected	2	None	replace
158	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getEntry(i,  nVars,  nDistribution);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  covarianceMatrix.getEntry(i,  nVars,  nDistribution);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  covarianceMatrix.getEntry(i,  nVars,  nDistribution);	  int    nObs    =    covarianceMatrix.getEntry(i,    nVars);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
159	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getEntry(i,  nVars,  nNumberOfObservations);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  covarianceMatrix.getEntry(i,  nVars,  nNumberOfObservations);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  covarianceMatrix.getEntry(i,  nVars,  nNumberOfObservations);	  int    nObs    =    covarianceMatrix.getEntry(i,    nVars);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
160	[BUG]  [BUGGY]  double  j  =  correlationMatrix.getEntry(i,  nVars);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  double  j  =  correlationMatrix.getEntry(i,  nVars);  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	double  j  =  correlationMatrix.getEntry(i,  nVars);	  double    j    =    correlationMatrix.getEntry(i,    i);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
161	[BUG]  [BUGGY]  double  j  =  covarianceMatrix.getEntry(i,  i);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  double  j  =  covarianceMatrix.getEntry(i,  i);  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	double  j  =  covarianceMatrix.getEntry(i,  i);	  double    j    =    correlationMatrix.getEntry(i,    i);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
162	[BUG]  [BUGGY]  double  j  =  correlationMatrix.getEntry(i,  i  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  double  j  =  correlationMatrix.getEntry(i,  i  +  1);  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	double  j  =  correlationMatrix.getEntry(i,  i  +  1);	  double    j    =    correlationMatrix.getEntry(i,    i);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
163	[BUG]  [BUGGY]  Integer  j  =  0;  j  <  nObs;  j++)  {  [CE]  >  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  Integer  j  =  0;  j  <  nObs;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	Integer  j  =  0;  j  <  nObs;  j++)  {	  for(int    j    =    0;    j    <    nObs;    j++)    {    Integer    j    =    0;    j    <    nObs;    j++)    {    	non-compiled	[CE]  >  expected	56	None	replace
164	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nVars;  j++)  {  Integer  j  =  0;  j  <  nObs;  j++)  {  [CE]  >  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nVars;  j++)  {  Integer  j  =  0;  j  <  nObs;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int  j  =  0;  j  <  nVars;  j++)  {  Integer  j  =  0;  j  <  nObs;  j++)  {	  for(int    j    =    0;    j    <    nObs;    j++)    {    Integer    j    =    0;    j    <    nObs;    j++)    {    	non-compiled	[CE]  >  expected	56	None	replace
165	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs  +  2;  j++)  {  for(int  j  =  0;  j  <  nObs  +  2;  j++)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nObs  +  2;  j++)  {  for(int  j  =  0;  j  <  nObs  +  2;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nObs    +    2;    j++)    {    for(int  j  =  0;  j  <  nObs  +  2;  j++)  {	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
166	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs  +  2;  j++)  {  For(int  j  =  0;  j  <  nObs  +  2;  j++)  {  [CE]  '.class'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nObs  +  2;  j++)  {  For(int  j  =  0;  j  <  nObs  +  2;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nObs    +    2;    j++)    {    For(int  j  =  0;  j  <  nObs  +  2;  j++)  {	  	non-compiled	[CE]  '.class'  expected	67	None	add
167	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs  +  2;  j++)  {  int  j  =  0;  j  <  nObs  +  2;  j++)  {  [CE]  >  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nObs  +  2;  j++)  {  int  j  =  0;  j  <  nObs  +  2;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nObs    +    2;    j++)    {    int  j  =  0;  j  <  nObs  +  2;  j++)  {	  	non-compiled	[CE]  >  expected	67	None	add
168	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs  +  2;  j++)  {  for(int  j  =  0;  j  <  nobs  +  2;  j++)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nObs  +  2;  j++)  {  for(int  j  =  0;  j  <  nobs  +  2;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nObs    +    2;    j++)    {    for(int  j  =  0;  j  <  nobs  +  2;  j++)  {	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
169	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs  +  1;  j++)  {  Integer  j  =  0;  j  <  nVars  +  1;  j++)  {  [CE]  >  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nObs  +  1;  j++)  {  Integer  j  =  0;  j  <  nVars  +  1;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int  j  =  0;  j  <  nObs  +  1;  j++)  {  Integer  j  =  0;  j  <  nVars  +  1;  j++)  {	  for(int    j    =    0;    j    <    nVars    +    1;    j++)    {    Integer    j    =    0;    j    <    nVars    +    1;    j++)    {    	non-compiled	[CE]  >  expected	66	None	replace
170	[BUG]  [BUGGY]  out[i]  =  matrix.getRowDimension();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  out[i]  =  matrix.getRowDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	out[i]  =  matrix.getRowDimension();	  out[i]    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
171	[BUG]  [BUGGY]  out[i]  =  matrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  out[i]  =  matrix.getColumnDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	out[i]  =  matrix.getColumnDimension();	  out[i]    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
172	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out,  covarianceMatrix[i],  tDistribution);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out,  covarianceMatrix[i],  tDistribution);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(out,  covarianceMatrix[i],  tDistribution);	  ((    RealMatrix)relativeMatrix).getEntry(out,    out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
173	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getEntry(i,  nVars  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  correlationMatrix.getEntry(i,  nVars  -  1);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  correlationMatrix.getEntry(i,  nVars  -  1);	  int    nObs    =    correlationMatrix.getEntry(i,    nVars);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
174	[BUG]  [BUGGY]  Double  nObs  =  this.covarianceMatrix.getEntry(i,  i);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  Double  nObs  =  this.covarianceMatrix.getEntry(i,  i);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	Double  nObs  =  this.covarianceMatrix.getEntry(i,  i);	  Double    nObs    =    correlationMatrix.getEntry(i,    i);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
175	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs  -  2;  j++)  {  TDistribution  j  =  0;  j  <  nObs  -  2;  j++)  {  [CE]  >  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nObs  -  2;  j++)  {  TDistribution  j  =  0;  j  <  nObs  -  2;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nObs    -    2;    j++)    {    TDistribution  j  =  0;  j  <  nObs  -  2;  j++)  {	  	non-compiled	[CE]  >  expected	79	None	add
176	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs  -  2;  j++)  {  Integer  j  =  0;  j  <  nObs  -  2;  j++)  {  [CE]  >  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nObs  -  2;  j++)  {  Integer  j  =  0;  j  <  nObs  -  2;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nObs    -    2;    j++)    {    Integer  j  =  0;  j  <  nObs  -  2;  j++)  {	  	non-compiled	[CE]  >  expected	79	None	add
177	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i][i],  dataMatrix);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i][i],  dataMatrix);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(out[i][i],  dataMatrix);	  ((    RealMatrix)relativeMatrix).getEntry(out[i][i],    covarianceMatrix);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
178	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i][0],  covarianceMatrix);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i][0],  covarianceMatrix);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(out[i][0],  covarianceMatrix);	  ((    RealMatrix)relativeMatrix).getEntry(out[i][i],    covarianceMatrix);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
179	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i],  out[i][i]);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i],  out[i][i]);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(out[i],  out[i][i]);	  ((    RealMatrix)relativeMatrix).getEntry(out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
180	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getRowDimension();  int  nObs  =  correlationMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  dataMatrix.getRowDimension();  int  nObs  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  dataMatrix.getRowDimension();  int  nObs  =  correlationMatrix.getColumnDimension();	          int    nObs    =    correlationMatrix.getRowDimension();    int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
181	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(i,  out);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(i,  out);  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(i,  out);	  ((    RealMatrix)relativeMatrix).getEntry(i,    j);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
182	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(i,  out[j]);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(i,  out[j]);  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(i,  out[j]);	  ((    RealMatrix)relativeMatrix).getEntry(i,    j);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
183	[BUG]  [BUGGY]  For(int  j  =  0;  j  <  nVars;  j++)  {  (int  j  =  0;  j  <  nObs;  j++)  {  [CE]  '.class'  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  For(int  j  =  0;  j  <  nVars;  j++)  {  (int  j  =  0;  j  <  nObs;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	For(int  j  =  0;  j  <  nVars;  j++)  {  (int  j  =  0;  j  <  nObs;  j++)  {	  for(int    j    =    0;    j    <    nObs;    j++)    {    (int    j    =    0;    j    <    nObs;    j++)    {    	non-compiled	[CE]  '.class'  expected	55	None	replace
184	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getRowDimension();  Int  nObs  =  correlationMatrix.getRowDimension();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  dataMatrix.getRowDimension();  Int  nObs  =  correlationMatrix.getRowDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  dataMatrix.getRowDimension();  Int  nObs  =  correlationMatrix.getRowDimension();	          int    nObs    =    correlationMatrix.getRowDimension();    Int    nObs    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
185	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getColumnDimension();  Int  nObs  =  correlationMatrix.getRowDimension();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  correlationMatrix.getColumnDimension();  Int  nObs  =  correlationMatrix.getRowDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  correlationMatrix.getColumnDimension();  Int  nObs  =  correlationMatrix.getRowDimension();	          int    nObs    =    correlationMatrix.getRowDimension();    Int    nObs    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
186	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getRowDimension();  Int  nObs  =  correlationMatrix.getRowDimension();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  covarianceMatrix.getRowDimension();  Int  nObs  =  correlationMatrix.getRowDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  covarianceMatrix.getRowDimension();  Int  nObs  =  correlationMatrix.getRowDimension();	          int    nObs    =    correlationMatrix.getRowDimension();    Int    nObs    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
187	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nNumberOfObservations;  j++)  {  [CE]  cannot  find  symbol  nNumberOfObservations  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nNumberOfObservations;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int  j  =  0;  j  <  nNumberOfObservations;  j++)  {	  for(int    j    =    0;    j    <    nObs;    j++)    {    for(int    j    =    0;    j    <    nObs;    j++)    {    	non-compiled	[CE]  cannot  find  symbol  nNumberOfObservations	1	None	replace
188	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  int  nObs  =  dataMatrix.getRowDimension();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  int  nObs  =  dataMatrix.getRowDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  dataMatrix.getColumnDimension();  int  nObs  =  dataMatrix.getRowDimension();	          int    nObs    =    correlationMatrix.getColumnDimension();    int    nObs    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
189	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getColumnDimension();  int  nObs  =  correlationMatrix.getRowDimension();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  covarianceMatrix.getColumnDimension();  int  nObs  =  correlationMatrix.getRowDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  covarianceMatrix.getColumnDimension();  int  nObs  =  correlationMatrix.getRowDimension();	          int    nObs    =    correlationMatrix.getColumnDimension();    int    nObs    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
190	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i],  covarianceMatrix,  out[i][i]);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i],  covarianceMatrix,  out[i][i]);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(out[i],  covarianceMatrix,  out[i][i]);	  ((    RealMatrix)relativeMatrix).getEntry(out[i],    nVars[i][i]);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
191	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i],  dataMatrix[i]);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i],  dataMatrix[i]);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(out[i],  dataMatrix[i]);	  ((    RealMatrix)relativeMatrix).getEntry(out[i],    covarianceMatrix[i]);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
192	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i],  out[i]);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i],  out[i]);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(out[i],  out[i]);	  ((    RealMatrix)relativeMatrix).getEntry(out[i],    covarianceMatrix[i]);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
193	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs  +  1;  j++)  {  int  j  =  0;  j  <  nVars  +  1;  j++)  {  [CE]  >  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nObs  +  1;  j++)  {  int  j  =  0;  j  <  nVars  +  1;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int  j  =  0;  j  <  nObs  +  1;  j++)  {  int  j  =  0;  j  <  nVars  +  1;  j++)  {	  for(int    j    =    0;    j    <    nVars    +    1;    j++)    {    int    j    =    0;    j    <    nVars    +    1;    j++)    {    	non-compiled	[CE]  >  expected	39	None	replace
194	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs  +  1;  j++)  {  int  j  =  0;  j  <  nVars  +  2;  j++)  {  [CE]  >  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nObs  +  1;  j++)  {  int  j  =  0;  j  <  nVars  +  2;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int  j  =  0;  j  <  nObs  +  1;  j++)  {  int  j  =  0;  j  <  nVars  +  2;  j++)  {	  for(int    j    =    0;    j    <    nVars    +    1;    j++)    {    int    j    =    0;    j    <    nVars    +    1;    j++)    {    	non-compiled	[CE]  >  expected	39	None	replace
195	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nVars  +  1;  j++)  {  (int  j  =  0;  j  <  nVars  +  2;  j++)  {  [CE]  ')'  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nVars  +  1;  j++)  {  (int  j  =  0;  j  <  nVars  +  2;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int  j  =  0;  j  <  nVars  +  1;  j++)  {  (int  j  =  0;  j  <  nVars  +  2;  j++)  {	  for(int    j    =    0;    j    <    nVars    +    1;    j++)    {    (int    j    =    0;    j    <    nVars    +    1;    j++)    {    	non-compiled	[CE]  ')'  expected	65	None	replace
196	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nVars  +  2;  j++)  {  (int  j  =  0;  j  <  nVars  +  2;  j++)  {  [CE]  ')'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nVars  +  2;  j++)  {  (int  j  =  0;  j  <  nVars  +  2;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int  j  =  0;  j  <  nVars  +  2;  j++)  {  (int  j  =  0;  j  <  nVars  +  2;  j++)  {	  for(int    j    =    0;    j    <    nVars    +    1;    j++)    {    (int    j    =    0;    j    <    nVars    +    1;    j++)    {    	non-compiled	[CE]  ')'  expected	65	None	replace
197	[BUG]  [BUGGY]  Double  nObs  =  correlationMatrix.getEntry(i,  0d);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  Double  nObs  =  correlationMatrix.getEntry(i,  0d);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	Double  nObs  =  correlationMatrix.getEntry(i,  0d);	  Double    nObs    =    correlationMatrix.getEntry(i,    0);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
198	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getCorrelationPValues(out[i][i],  out[i][i]);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getCorrelationPValues(out[i][i],  out[i][i]);  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getCorrelationPValues(out[i][i],  out[i][i]);	  ((    RealMatrix)relativeMatrix).getCorrelationPValues(out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
199	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getEntry(i,  0d);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  covarianceMatrix.getEntry(i,  0d);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  covarianceMatrix.getEntry(i,  0d);	  int    nObs    =    covarianceMatrix.getEntry(i,    0);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
200	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  Int  nObs  =  correlationMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  Int  nObs  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  dataMatrix.getColumnDimension();  Int  nObs  =  correlationMatrix.getColumnDimension();	          int    nObs    =    correlationMatrix.getColumnDimension();    Int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
201	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getColumnDimension();  Int  nObs  =  correlationMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  covarianceMatrix.getColumnDimension();  Int  nObs  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  covarianceMatrix.getColumnDimension();  Int  nObs  =  correlationMatrix.getColumnDimension();	          int    nObs    =    correlationMatrix.getColumnDimension();    Int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
202	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getCorrelationPValues(out,  j,  i);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getCorrelationPValues(out,  j,  i);  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getCorrelationPValues(out,  j,  i);	  ((    RealMatrix)relativeMatrix).getCorrelationPValues(out,    i);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
203	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getCorrelationPValues(out,  i  +  1,  covarianceMatrix);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getCorrelationPValues(out,  i  +  1,  covarianceMatrix);  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getCorrelationPValues(out,  i  +  1,  covarianceMatrix);	  ((    RealMatrix)relativeMatrix).getCorrelationPValues(out,    i);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
204	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nVars  +  2;  j++)  {  Integer  j  =  0;  j  <  nVars  +  2;  j++)  {  [CE]  >  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nVars  +  2;  j++)  {  Integer  j  =  0;  j  <  nVars  +  2;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nVars    +    2;    j++)    {    Integer  j  =  0;  j  <  nVars  +  2;  j++)  {	  	non-compiled	[CE]  >  expected	27	None	add
205	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nVars  +  2;  j++)  {  TDistribution  j  =  0;  j  <  nVars  +  2;  j++)  {  [CE]  >  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nVars  +  2;  j++)  {  TDistribution  j  =  0;  j  <  nVars  +  2;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nVars    +    2;    j++)    {    TDistribution  j  =  0;  j  <  nVars  +  2;  j++)  {	  	non-compiled	[CE]  >  expected	27	None	add
206	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getEntryCount()  +  i;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  covarianceMatrix.getEntryCount()  +  i;  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  covarianceMatrix.getEntryCount()  +  i;	  int    nObs    =    covarianceMatrix.getEntryCount();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
207	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getEntry(i,  nVars  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  correlationMatrix.getEntry(i,  nVars  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  correlationMatrix.getEntry(i,  nVars  +  1);	  int    nObs    =    covarianceMatrix.getEntry(i,    nVars);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
208	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getEntryCount(i);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  dataMatrix.getEntryCount(i);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  dataMatrix.getEntryCount(i);	  int    nObs    =    dataMatrix.getEntry(i);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
209	[BUG]  [BUGGY]  ((  RealMatrix)correlationMatrix).getEntry(out,  out[i][i]);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)correlationMatrix).getEntry(out,  out[i][i]);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)correlationMatrix).getEntry(out,  out[i][i]);	  ((    RealMatrix)correlationMatrix).getEntry(i,    out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
210	[BUG]  [BUGGY]  ((  RealMatrix)relationMatrix).getEntry(out,  out[i][i]);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relationMatrix).getEntry(out,  out[i][i]);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relationMatrix).getEntry(out,  out[i][i]);	  ((    RealMatrix)correlationMatrix).getEntry(i,    out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
211	[BUG]  [BUGGY]  ((  RealMatrix)relationMatrix).getEntry(out[i][i],  tDistribution);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relationMatrix).getEntry(out[i][i],  tDistribution);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relationMatrix).getEntry(out[i][i],  tDistribution);	  ((    RealMatrix)correlationMatrix).getEntry(i,    out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
212	[BUG]  [BUGGY]  ((  RealMatrix)correlationMatrix).getEntry(out[i],  nVars][i]);  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)correlationMatrix).getEntry(out[i],  nVars][i]);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)correlationMatrix).getEntry(out[i],  nVars][i]);	  ((    RealMatrix)correlationMatrix).getEntry(i,    out[i][i]);    	non-compiled	[CE]  ')'  expected	49	None	replace
213	[BUG]  [BUGGY]  double  j  =  covarianceMatrix.getEntry(i,  nVars);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  double  j  =  covarianceMatrix.getEntry(i,  nVars);  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	double  j  =  covarianceMatrix.getEntry(i,  nVars);	  double    j    =    correlationMatrix.getEntry(i,    i);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
214	[BUG]  [BUGGY]  double  j  =  this.covarianceMatrix.getEntry(i,  i);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  double  j  =  this.covarianceMatrix.getEntry(i,  i);  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	double  j  =  this.covarianceMatrix.getEntry(i,  i);	  double    j    =    correlationMatrix.getEntry(i,    i);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
215	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs;  j++)  {  Integer  j  =  0;  j  <  nVars;  j++)  {  [CE]  >  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nObs;  j++)  {  Integer  j  =  0;  j  <  nVars;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int  j  =  0;  j  <  nObs;  j++)  {  Integer  j  =  0;  j  <  nVars;  j++)  {	  for(int    j    =    0;    j    <    nObs;    j++)    {    Integer    j    =    0;    j    <    nObs;    j++)    {    	non-compiled	[CE]  >  expected	56	None	replace
216	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nObs  -  3;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	add	for(int  j  =  0;  j  <  nObs  -  3;  j++)  {	  for(int    j    =    0;    j    <    nObs    -    2;    j++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	80	7	replace
217	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs  -  3;  j++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nObs  -  3;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int  j  =  0;  j  <  nObs  -  3;  j++)  {	  for(int    j    =    0;    j    <    nObs    -    2;    j++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	80	7	replace
218	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs;  j++)  {  int  j  =  0;  j  <  nVars;  j++)  {  [CE]  >  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nObs;  j++)  {  int  j  =  0;  j  <  nVars;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int  j  =  0;  j  <  nObs;  j++)  {  int  j  =  0;  j  <  nVars;  j++)  {	  for(int    j    =    0;    j    <    nObs;    j++)    {    int    j    =    0;    j    <    nObs;    j++)    {    	non-compiled	[CE]  >  expected	3	None	replace
219	[BUG]  [BUGGY]  int  nObs  =(this.covarianceMatrix!=  null)?  this.covarianceMatrix.getEntryCount()  :  0;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =(this.covarianceMatrix!=  null)?  this.covarianceMatrix.getEntryCount()  :  0;  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =(this.covarianceMatrix!=  null)?  this.covarianceMatrix.getEntryCount()  :  0;	  int    nObs    =    this.covarianceMatrix.getEntryCount();    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
220	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nVars  +  3;  j++)  {  TDistribution  j  =  0;  j  <  nVars  +  3;  j++)  {  [CE]  >  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nVars  +  3;  j++)  {  TDistribution  j  =  0;  j  <  nVars  +  3;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nVars    +    3;    j++)    {    TDistribution  j  =  0;  j  <  nVars  +  3;  j++)  {	  	non-compiled	[CE]  >  expected	29	None	add
221	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nVars  +  3;  j++)  {  (int  j  =  0;  j  <  nVars  +  3;  j++)  {  [CE]  ')'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nVars  +  3;  j++)  {  (int  j  =  0;  j  <  nVars  +  3;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nVars    +    3;    j++)    {    (int  j  =  0;  j  <  nVars  +  3;  j++)  {	  	non-compiled	[CE]  ')'  expected	29	None	add
222	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getEntryCount()  +  i;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  dataMatrix.getEntryCount()  +  i;  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  dataMatrix.getEntryCount()  +  i;	  int    nObs    =    dataMatrix.getEntryCount();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
223	[BUG]  [BUGGY]  nObs  =  dataMatrix.getRowDimension();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  nObs  =  dataMatrix.getRowDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	nObs  =  dataMatrix.getRowDimension();	  nObs    =    covarianceMatrix.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
224	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out,  matrix[i][i],  nVars);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out,  matrix[i][i],  nVars);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(out,  matrix[i][i],  nVars);	  ((    RealMatrix)relativeMatrix).getEntry(out,    covarianceMatrix[i][i]);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
225	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out,  dataMatrix[i][i]);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out,  dataMatrix[i][i]);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(out,  dataMatrix[i][i]);	  ((    RealMatrix)relativeMatrix).getEntry(out,    covarianceMatrix[i][i]);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
226	[BUG]  [BUGGY]  double  nObs  =  correlationMatrix.getEntry(i,  0d);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  double  nObs  =  correlationMatrix.getEntry(i,  0d);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	double  nObs  =  correlationMatrix.getEntry(i,  0d);	  double    nObs    =    correlationMatrix.getEntry(i,    0);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
227	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs  -  1;  j++)  {  TDistribution  j  =  0;  j  <  nObs  -  1;  j++)  {  [CE]  >  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nObs  -  1;  j++)  {  TDistribution  j  =  0;  j  <  nObs  -  1;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nObs    -    1;    j++)    {    TDistribution  j  =  0;  j  <  nObs  -  1;  j++)  {	  	non-compiled	[CE]  >  expected	19	None	add
228	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs  -  1;  j++)  {  Integer  j  =  0;  j  <  nObs  -  1;  j++)  {  [CE]  >  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nObs  -  1;  j++)  {  Integer  j  =  0;  j  <  nObs  -  1;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nObs    -    1;    j++)    {    Integer  j  =  0;  j  <  nObs  -  1;  j++)  {	  	non-compiled	[CE]  >  expected	19	None	add
229	[BUG]  [BUGGY]  ((  RealMatrix)covarianceMatrix).getEntry(out,  out[i][i]);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)covarianceMatrix).getEntry(out,  out[i][i]);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)covarianceMatrix).getEntry(out,  out[i][i]);	  ((    RealMatrix)covarianceMatrix).getEntry(i,    out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
230	[BUG]  [BUGGY]  ((  RealMatrix)covarianceMatrix).getEntry(out,  nVars[i][i]);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)covarianceMatrix).getEntry(out,  nVars[i][i]);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)covarianceMatrix).getEntry(out,  nVars[i][i]);	  ((    RealMatrix)covarianceMatrix).getEntry(i,    out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
231	[BUG]  [BUGGY]  ((  RealMatrix)covarianceMatrix).getEntry(out[i],  nVars);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)covarianceMatrix).getEntry(out[i],  nVars);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)covarianceMatrix).getEntry(out[i],  nVars);	  ((    RealMatrix)covarianceMatrix).getEntry(i,    out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
232	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs  +  1;  j++)  {  Integer  j  =  0;  j  <  nObs  +  1;  j++)  {  [CE]  >  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nObs  +  1;  j++)  {  Integer  j  =  0;  j  <  nObs  +  1;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nObs    +    1;    j++)    {    Integer  j  =  0;  j  <  nObs  +  1;  j++)  {	  	non-compiled	[CE]  >  expected	17	None	add
233	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs  +  1;  j++)  {  TDistribution  j  =  0;  j  <  nObs  +  1;  j++)  {  [CE]  >  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nObs  +  1;  j++)  {  TDistribution  j  =  0;  j  <  nObs  +  1;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nObs    +    1;    j++)    {    TDistribution  j  =  0;  j  <  nObs  +  1;  j++)  {	  	non-compiled	[CE]  >  expected	17	None	add
234	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs  +  2;  j++)  {  Integer  j  =  0;  j  <  nObs  +  2;  j++)  {  [CE]  >  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nObs  +  2;  j++)  {  Integer  j  =  0;  j  <  nObs  +  2;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nObs    +    2;    j++)    {    Integer  j  =  0;  j  <  nObs  +  2;  j++)  {	  	non-compiled	[CE]  >  expected	67	None	add
235	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs  +  2;  j++)  {  TDistribution  j  =  0;  j  <  nObs  +  2;  j++)  {  [CE]  >  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nObs  +  2;  j++)  {  TDistribution  j  =  0;  j  <  nObs  +  2;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nObs    +    2;    j++)    {    TDistribution  j  =  0;  j  <  nObs  +  2;  j++)  {	  	non-compiled	[CE]  >  expected	67	None	add
236	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getCorrelationPValues(out[i],  j);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getCorrelationPValues(out[i],  j);  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getCorrelationPValues(out[i],  j);	  ((    RealMatrix)relativeMatrix).getCorrelationPValues(out[i]);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
237	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getCorrelationPValues(out[i],  0);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getCorrelationPValues(out[i],  0);  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getCorrelationPValues(out[i],  0);	  ((    RealMatrix)relativeMatrix).getCorrelationPValues(out[i]);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
238	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getEntryCount(i);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  correlationMatrix.getEntryCount(i);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  correlationMatrix.getEntryCount(i);	  int    nObs    =    dataMatrix.getEntry(i);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
239	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nVars;  j++)  {  (int  j  =  0;  j  <  nVars  +  1;  j++)  {  [CE]  ')'  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nVars;  j++)  {  (int  j  =  0;  j  <  nVars  +  1;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int  j  =  0;  j  <  nVars;  j++)  {  (int  j  =  0;  j  <  nVars  +  1;  j++)  {	  for(int    j    =    0;    j    <    nVars    +    1;    j++)    {    (int    j    =    0;    j    <    nVars    +    1;    j++)    {    	non-compiled	[CE]  ')'  expected	65	None	replace
240	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getEntryCount(i).getRowDimension();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  correlationMatrix.getEntryCount(i).getRowDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  correlationMatrix.getEntryCount(i).getRowDimension();	  int    nObs    =    correlationMatrix.getEntry(i).getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
241	[BUG]  [BUGGY]  out[i]  =  correlationMatrix.getEntry(i,  i);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  out[i]  =  correlationMatrix.getEntry(i,  i);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	out[i]  =  correlationMatrix.getEntry(i,  i);	  out[i]    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
242	[BUG]  [BUGGY]  out[i]  =  covarianceMatrix.getEntry(i,  i);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  out[i]  =  covarianceMatrix.getEntry(i,  i);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	out[i]  =  covarianceMatrix.getEntry(i,  i);	  out[i]    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
243	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs  +  1;  j++)  {  (int  j  =  0;  j  <  nObs  +  1;  j++)  {  [CE]  ')'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nObs  +  1;  j++)  {  (int  j  =  0;  j  <  nObs  +  1;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nObs    +    1;    j++)    {    (int  j  =  0;  j  <  nObs  +  1;  j++)  {	  	non-compiled	[CE]  ')'  expected	17	None	add
244	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs  +  1;  j++)  {  for(int  j  =  0;  j  <  nObs  +  1))  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nObs  +  1;  j++)  {  for(int  j  =  0;  j  <  nObs  +  1))  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nObs    +    1;    j++)    {    for(int  j  =  0;  j  <  nObs  +  1))  {	  	non-compiled	[CE]  ';'  expected	17	None	add
245	[BUG]  [BUGGY]  TDistribution  tDistribution  =  new  TDistributionImpl(nObs,  i  +  1,  nVars);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  TDistribution  tDistribution  =  new  TDistributionImpl(nObs,  i  +  1,  nVars);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	TDistribution  tDistribution  =  new  TDistributionImpl(nObs,  i  +  1,  nVars);	  TDistribution    tDistribution    =    new    TDistributionImpl(nObs,    i    +    1);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
246	[BUG]  [BUGGY]  double  nObs  =  correlationMatrix.getEntry(i).getDoubleDimension();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  double  nObs  =  correlationMatrix.getEntry(i).getDoubleDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	double  nObs  =  correlationMatrix.getEntry(i).getDoubleDimension();	  double    nObs    =    correlationMatrix.getEntry(i).getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
247	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getCorrelationPValues(out[i],  j][i]);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getCorrelationPValues(out[i],  j][i]);  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getCorrelationPValues(out[i],  j][i]);	  ((    RealMatrix)relativeMatrix).getCorrelationPValues(out[i][i]);    	non-compiled	[CE]  ')'  expected	51	None	replace
248	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getCorrelationPValues(out[i],  covarianceMatrix[i]]);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getCorrelationPValues(out[i],  covarianceMatrix[i]]);  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getCorrelationPValues(out[i],  covarianceMatrix[i]]);	  ((    RealMatrix)relativeMatrix).getCorrelationPValues(out[i][i]);    	non-compiled	[CE]  ')'  expected	51	None	replace
249	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  Int  nObs  =  dataMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  Int  nObs  =  dataMatrix.getColumnDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  dataMatrix.getColumnDimension();  Int  nObs  =  dataMatrix.getColumnDimension();	          int    nObs    =    correlationMatrix.getColumnDimension();    Int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
250	[BUG]  [BUGGY]  int  j  =  correlationMatrix.getEntryCount(i  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  j  =  correlationMatrix.getEntryCount(i  +  1);  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  j  =  correlationMatrix.getEntryCount(i  +  1);	  int    j    =    correlationMatrix.getEntryCount(i);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
251	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getCorrelationPValues(out[i],  out[i]);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getCorrelationPValues(out[i],  out[i]);  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getCorrelationPValues(out[i],  out[i]);	  ((    RealMatrix)relativeMatrix).getCorrelationPValues(out[i]);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
252	[BUG]  [BUGGY]  ((  RealMatrix)tDistribution).getEntry(out[i],  j][i]);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)tDistribution).getEntry(out[i],  j][i]);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)tDistribution).getEntry(out[i],  j][i]);	  ((    RealMatrix)tDistribution).getEntry(out[i][i]);    	non-compiled	[CE]  ')'  expected	50	None	replace
253	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nVars  +  3;  j++)  {  for(int  j  =  0;  j  <  nVars  +  4;  j++)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nVars  +  3;  j++)  {  for(int  j  =  0;  j  <  nVars  +  4;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nVars    +    3;    j++)    {    for(int  j  =  0;  j  <  nVars  +  4;  j++)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
254	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getEntryCount(i);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  covarianceMatrix.getEntryCount(i);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  covarianceMatrix.getEntryCount(i);	  int    nObs    =    covarianceMatrix.getEntry(i);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
255	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getRowDimension();  Int  nObs  =  dataMatrix.getRowDimension();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  dataMatrix.getRowDimension();  Int  nObs  =  dataMatrix.getRowDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  dataMatrix.getRowDimension();  Int  nObs  =  dataMatrix.getRowDimension();	          int    nObs    =    correlationMatrix.getRowDimension();    Int    nObs    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
256	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out,  correlationMatrix[i],  out[i][i]);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out,  correlationMatrix[i],  out[i][i]);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(out,  correlationMatrix[i],  out[i][i]);	  ((    RealMatrix)relativeMatrix).getEntry(out,    covarianceMatrix[i][i]);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
257	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out,  covarianceMatrix[i],  nVars][i]);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out,  covarianceMatrix[i],  nVars][i]);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(out,  covarianceMatrix[i],  nVars][i]);	  ((    RealMatrix)relativeMatrix).getEntry(out,    covarianceMatrix[i][i]);    	non-compiled	[CE]  ')'  expected	75	None	replace
258	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getEntry(i,  nVars  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  covarianceMatrix.getEntry(i,  nVars  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  covarianceMatrix.getEntry(i,  nVars  +  1);	  int    nObs    =    covarianceMatrix.getEntry(i,    nVars);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
259	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getEntry(i,  nVars  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  covarianceMatrix.getEntry(i,  nVars  -  1);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  covarianceMatrix.getEntry(i,  nVars  -  1);	  int    nObs    =    covarianceMatrix.getEntry(i,    nVars);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
260	[BUG]  [BUGGY]  Double  nObs  =  correlationMatrix.getEntry(i,  i  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  Double  nObs  =  correlationMatrix.getEntry(i,  i  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	Double  nObs  =  correlationMatrix.getEntry(i,  i  +  1);	  Double    nObs    =    correlationMatrix.getEntry(i,    i);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
261	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs  -  1;  j++)  {  for(int  j  =  0;  j  <  nObs  -  1))  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nObs  -  1;  j++)  {  for(int  j  =  0;  j  <  nObs  -  1))  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nObs    -    1;    j++)    {    for(int  j  =  0;  j  <  nObs  -  1))  {	  	non-compiled	[CE]  ';'  expected	19	None	add
262	[BUG]  [BUGGY]  int  j  =  correlationMatrix.getEntry(i,  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  j  =  correlationMatrix.getEntry(i,  1);  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  j  =  correlationMatrix.getEntry(i,  1);	  int    j    =    correlationMatrix.getEntry(i,    0);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
263	[BUG]  [BUGGY]  int  j  =  correlationMatrix.getEntry(i,  0d);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  j  =  correlationMatrix.getEntry(i,  0d);  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  j  =  correlationMatrix.getEntry(i,  0d);	  int    j    =    correlationMatrix.getEntry(i,    0);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
264	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getCorrelationPValues(out,  covarianceMatrix);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getCorrelationPValues(out,  covarianceMatrix);  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getCorrelationPValues(out,  covarianceMatrix);	  ((    RealMatrix)relativeMatrix).getCorrelationPValues(out,    i);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
265	[BUG]  [BUGGY]  ((  RealMatrix)covarianceMatrix).getEntry(out,  covarianceMatrix[i][i]);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)covarianceMatrix).getEntry(out,  covarianceMatrix[i][i]);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)covarianceMatrix).getEntry(out,  covarianceMatrix[i][i]);	  ((    RealMatrix)covarianceMatrix).getEntry(i,    out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
266	[BUG]  [BUGGY]  ((  RealMatrix)covarianceMatrix).getEntry(out,  data[i][i]);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)covarianceMatrix).getEntry(out,  data[i][i]);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)covarianceMatrix).getEntry(out,  data[i][i]);	  ((    RealMatrix)covarianceMatrix).getEntry(i,    out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
267	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObservations;  j++)  {  [CE]  cannot  find  symbol  nObservations  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nObservations;  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int  j  =  0;  j  <  nObservations;  j++)  {	  for(int    j    =    0;    j    <    nObs;    j++)    {    for(int    j    =    0;    j    <    nObs;    j++)    {    	non-compiled	[CE]  cannot  find  symbol  nObservations	1	None	replace
268	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out,  out[i][i],  covarianceMatrix);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out,  out[i][i],  covarianceMatrix);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(out,  out[i][i],  covarianceMatrix);	  ((    RealMatrix)relativeMatrix).getEntry(out,    out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
269	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out,  out[i],  covarianceMatrix);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out,  out[i],  covarianceMatrix);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(out,  out[i],  covarianceMatrix);	  ((    RealMatrix)relativeMatrix).getEntry(out,    out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
270	[BUG]  [BUGGY]  nObs  =  correlationMatrix.getEntry(i).getColumnDimension();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  nObs  =  correlationMatrix.getEntry(i).getColumnDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	nObs  =  correlationMatrix.getEntry(i).getColumnDimension();	  nObs    =    covarianceMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
271	[BUG]  [BUGGY]  ((  RealMatrix)correlationMatrix).getEntry(out,  covarianceMatrix[i][i]);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)correlationMatrix).getEntry(out,  covarianceMatrix[i][i]);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)correlationMatrix).getEntry(out,  covarianceMatrix[i][i]);	  ((    RealMatrix)correlationMatrix).getEntry(i,    out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
272	[BUG]  [BUGGY]  double  nObs  =  correlationMatrix.getEntry(i).getColumnDimension()  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  double  nObs  =  correlationMatrix.getEntry(i).getColumnDimension()  +  1;  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	double  nObs  =  correlationMatrix.getEntry(i).getColumnDimension()  +  1;	  int    nObs    =    correlationMatrix.getEntry(i).getColumnDimension()    +    1;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
273	[BUG]  [BUGGY]  int  nObs  =  datasetMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  datasetMatrix.getColumnDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  datasetMatrix.getColumnDimension();	          int    nObs    =    correlationMatrix.getRowDimension();    int    nObs    =    covarianceMatrix.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
274	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getObjDimension()  +  i;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  int  nObs  =  correlationMatrix.getObjDimension()  +  i;  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  correlationMatrix.getObjDimension()  +  i;	  int    nObs    =    correlationMatrix.getObjDimension();    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
275	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i],  i);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i],  i);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(out[i],  i);	  ((    RealMatrix)relativeMatrix).getEntry(out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
276	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i],  covarianceMatrix);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i],  covarianceMatrix);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(out[i],  covarianceMatrix);	  ((    RealMatrix)relativeMatrix).getEntry(out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
277	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nVars  +  2;  j++)  {  for(int  j  =  0;  j  <  nVars  +  2);  j++)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {      [BUGGY]  for(int  j  =  0;  j  <  nVars  +  2;  j++)  {  for(int  j  =  0;  j  <  nVars  +  2);  j++)  {  [BUGGY]      if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nVars    +    2;    j++)    {    for(int  j  =  0;  j  <  nVars  +  2);  j++)  {	  	non-compiled	[CE]  ';'  expected	27	None	add
