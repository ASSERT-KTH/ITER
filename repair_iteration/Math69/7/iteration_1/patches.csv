bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs;  j++)  {  for(int  j  =  0;  j  <  nObs;  j++)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  for(int  j  =  0;  j  <  nObs;  j++)  {  for(int  j  =  0;  j  <  nObs;  j++)  {  [BUGGY]    if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nObs;    j++)    {    for(int  j  =  0;  j  <  nObs;  j++)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
2	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs;  j++)  {  For(int  j  =  0;  j  <  nObs;  j++)  {  [CE]  '.class'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  for(int  j  =  0;  j  <  nObs;  j++)  {  For(int  j  =  0;  j  <  nObs;  j++)  {  [BUGGY]    if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nObs;    j++)    {    For(int  j  =  0;  j  <  nObs;  j++)  {	  	non-compiled	[CE]  '.class'  expected	1	None	add
3	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs;  j++)  {  int  j  =  0;  j  <  nObs;  j++)  {  [CE]  >  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  for(int  j  =  0;  j  <  nObs;  j++)  {  int  j  =  0;  j  <  nObs;  j++)  {  [BUGGY]    if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nObs;    j++)    {    int  j  =  0;  j  <  nObs;  j++)  {	  	non-compiled	[CE]  >  expected	1	None	add
4	[BUG]  [BUGGY]      int  nObs  =  correlationMatrix.getRowDimension();  int  nObs  =  correlationMatrix.getRowDimension();  [CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]      int  nObs  =  correlationMatrix.getRowDimension();  int  nObs  =  correlationMatrix.getRowDimension();  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	        int    nObs    =    correlationMatrix.getRowDimension();    int  nObs  =  correlationMatrix.getRowDimension();	  	non-compiled	[CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()	6	None	add
5	[BUG]  [BUGGY]      int  nObs  =  correlationMatrix.getRowDimension();  Int  nObs  =  correlationMatrix.getRowDimension();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]      int  nObs  =  correlationMatrix.getRowDimension();  Int  nObs  =  correlationMatrix.getRowDimension();  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	        int    nObs    =    correlationMatrix.getRowDimension();    Int  nObs  =  correlationMatrix.getRowDimension();	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
6	[BUG]  [BUGGY]      int  nObs  =  correlationMatrix.getRowDimension();  int  nObs  =  correlationMatrix.getColumnDimension();  [CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]      int  nObs  =  correlationMatrix.getRowDimension();  int  nObs  =  correlationMatrix.getColumnDimension();  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	        int    nObs    =    correlationMatrix.getRowDimension();    int  nObs  =  correlationMatrix.getColumnDimension();	  	non-compiled	[CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()	6	None	add
7	[BUG]  [BUGGY]      int  nObs  =  correlationMatrix.getRowDimension();  int  nObs  =  covarianceMatrix.getRowDimension();  [CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()  [FE]          AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]      int  nObs  =  correlationMatrix.getRowDimension();  int  nObs  =  covarianceMatrix.getRowDimension();  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	        int    nObs    =    correlationMatrix.getRowDimension();    int  nObs  =  covarianceMatrix.getRowDimension();	  	non-compiled	[CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()	6	None	add
8	[BUG]  [BUGGY]  TDistribution  tDistribution  =  new  TDistributionImpl(i,  nObs);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  TDistribution  tDistribution  =  new  TDistributionImpl(i,  nObs);  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	TDistribution  tDistribution  =  new  TDistributionImpl(i,  nObs);	      TDistribution    tDistribution    =    new    TDistributionImpl(nObs,    i);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
9	[BUG]  [BUGGY]  TDistribution  tDistribution  =  new  TDistributionImpl(nObs,  i  +  1);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  TDistribution  tDistribution  =  new  TDistributionImpl(nObs,  i  +  1);  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	TDistribution  tDistribution  =  new  TDistributionImpl(nObs,  i  +  1);	      TDistribution    tDistribution    =    new    TDistributionImpl(nObs,    i);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
10	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getEntry(i,  nVars);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  int  nObs  =  correlationMatrix.getEntry(i,  nVars);  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  correlationMatrix.getEntry(i,  nVars);	      int    nObs    =    correlationMatrix.getEntry(i);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
11	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getEntry(i);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  int  nObs  =  covarianceMatrix.getEntry(i);  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  covarianceMatrix.getEntry(i);	      int    nObs    =    correlationMatrix.getEntry(i);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
12	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getEntry(i,  i);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  int  nObs  =  covarianceMatrix.getEntry(i,  i);  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  covarianceMatrix.getEntry(i,  i);	      int    nObs    =    correlationMatrix.getEntry(i);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
13	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getEntry(i);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  int  nObs  =  dataMatrix.getEntry(i);  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  dataMatrix.getEntry(i);	      int    nObs    =    correlationMatrix.getEntry(i);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
14	[BUG]  [BUGGY]  nObs  =  correlationMatrix.getRowDimension();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  nObs  =  correlationMatrix.getRowDimension();  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	nObs  =  correlationMatrix.getRowDimension();	      nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
15	[BUG]  [BUGGY]  nObs  =  covarianceMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  nObs  =  covarianceMatrix.getColumnDimension();  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	nObs  =  covarianceMatrix.getColumnDimension();	      nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
16	[BUG]  [BUGGY]  nObs  =  covarianceMatrix.getRowDimension();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  nObs  =  covarianceMatrix.getRowDimension();  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	nObs  =  covarianceMatrix.getRowDimension();	      nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
17	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  for(int  j  =  0;  j  <  nObs  +  1;  j++)  {  [BUGGY]    if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	add	for(int  j  =  0;  j  <  nObs  +  1;  j++)  {	  for(int    j    =    0;    j    <    nObs;    j++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	7	replace
18	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs  +  1;  j++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  for(int  j  =  0;  j  <  nObs  +  1;  j++)  {  [BUGGY]    if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int  j  =  0;  j  <  nObs  +  1;  j++)  {	  for(int    j    =    0;    j    <    nObs;    j++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	7	replace
19	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  for(int  j  =  0;  j  <  nObs  -  1;  j++)  {  [BUGGY]    if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	add	for(int  j  =  0;  j  <  nObs  -  1;  j++)  {	  for(int    j    =    0;    j    <    nObs;    j++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	7	replace
20	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs  -  1;  j++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  for(int  j  =  0;  j  <  nObs  -  1;  j++)  {  [BUGGY]    if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int  j  =  0;  j  <  nObs  -  1;  j++)  {	  for(int    j    =    0;    j    <    nObs;    j++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	7	replace
21	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getEntry(i).getColumnDimension();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  int  nObs  =  covarianceMatrix.getEntry(i).getColumnDimension();  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  covarianceMatrix.getEntry(i).getColumnDimension();	      int    nObs    =    correlationMatrix.getEntry(i).getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
22	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getEntry(i).getRowDimension();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  int  nObs  =  correlationMatrix.getEntry(i).getRowDimension();  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  correlationMatrix.getEntry(i).getRowDimension();	      int    nObs    =    correlationMatrix.getEntry(i).getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
23	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getEntry(i).getColumnDimension()  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  int  nObs  =  correlationMatrix.getEntry(i).getColumnDimension()  +  1;  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  correlationMatrix.getEntry(i).getColumnDimension()  +  1;	      int    nObs    =    correlationMatrix.getEntry(i).getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
24	[BUG]  [BUGGY]  double  nObs  =  correlationMatrix.getEntry(i,  0);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  double  nObs  =  correlationMatrix.getEntry(i,  0);  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	double  nObs  =  correlationMatrix.getEntry(i,  0);	      int    nObs    =    correlationMatrix.getEntry(i,    0);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
25	[BUG]  [BUGGY]  Double  nObs  =  correlationMatrix.getEntry(i,  0);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  Double  nObs  =  correlationMatrix.getEntry(i,  0);  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	Double  nObs  =  correlationMatrix.getEntry(i,  0);	      int    nObs    =    correlationMatrix.getEntry(i,    0);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
26	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getEntry(i,  0);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  int  nObs  =  covarianceMatrix.getEntry(i,  0);  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  covarianceMatrix.getEntry(i,  0);	      int    nObs    =    correlationMatrix.getEntry(i,    0);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
27	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  for(int  j  =  0;  j  <  nVars  +  2;  j++)  {  [BUGGY]    if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	add	for(int  j  =  0;  j  <  nVars  +  2;  j++)  {	  for(int    j    =    0;    j    <    nVars    +    1;    j++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	7	replace
28	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nVars  +  2;  j++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  for(int  j  =  0;  j  <  nVars  +  2;  j++)  {  [BUGGY]    if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int  j  =  0;  j  <  nVars  +  2;  j++)  {	  for(int    j    =    0;    j    <    nVars    +    1;    j++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	7	replace
29	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  for(int  j  =  0;  j  <  nVars  +  3;  j++)  {  [BUGGY]    if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	add	for(int  j  =  0;  j  <  nVars  +  3;  j++)  {	  for(int    j    =    0;    j    <    nVars    +    1;    j++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	7	replace
30	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nVars  +  3;  j++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  for(int  j  =  0;  j  <  nVars  +  3;  j++)  {  [BUGGY]    if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int  j  =  0;  j  <  nVars  +  3;  j++)  {	  for(int    j    =    0;    j    <    nVars    +    1;    j++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	7	replace
31	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getEntryCount();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  int  nObs  =  covarianceMatrix.getEntryCount();  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  covarianceMatrix.getEntryCount();	      int    nObs    =    correlationMatrix.getEntryCount();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
32	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getEntryCount();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  int  nObs  =  dataMatrix.getEntryCount();  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  dataMatrix.getEntryCount();	      int    nObs    =    correlationMatrix.getEntryCount();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
33	[BUG]  [BUGGY]  int  nObs  =  matrix.getEntryCount();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  int  nObs  =  matrix.getEntryCount();  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  matrix.getEntryCount();	      int    nObs    =    correlationMatrix.getEntryCount();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
34	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  int  nObs  =  covarianceMatrix.getColumnDimension();  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  covarianceMatrix.getColumnDimension();	      int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
35	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getRowDimension();  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  int  nObs  =  covarianceMatrix.getRowDimension();  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  covarianceMatrix.getRowDimension();	      int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
36	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  dataMatrix.getColumnDimension();	      int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
37	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nVars  +  1;  j++)  {  for(int  j  =  0;  j  <  nVars  +  1;  j++)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  for(int  j  =  0;  j  <  nVars  +  1;  j++)  {  for(int  j  =  0;  j  <  nVars  +  1;  j++)  {  [BUGGY]    if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nVars    +    1;    j++)    {    for(int  j  =  0;  j  <  nVars  +  1;  j++)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
38	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nVars  +  1;  j++)  {  For(int  j  =  0;  j  <  nVars  +  1;  j++)  {  [CE]  '.class'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  for(int  j  =  0;  j  <  nVars  +  1;  j++)  {  For(int  j  =  0;  j  <  nVars  +  1;  j++)  {  [BUGGY]    if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nVars    +    1;    j++)    {    For(int  j  =  0;  j  <  nVars  +  1;  j++)  {	  	non-compiled	[CE]  '.class'  expected	11	None	add
39	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nVars  +  1;  j++)  {  int  j  =  0;  j  <  nVars  +  1;  j++)  {  [CE]  >  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  for(int  j  =  0;  j  <  nVars  +  1;  j++)  {  int  j  =  0;  j  <  nVars  +  1;  j++)  {  [BUGGY]    if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nVars    +    1;    j++)    {    int  j  =  0;  j  <  nVars  +  1;  j++)  {	  	non-compiled	[CE]  >  expected	11	None	add
40	[BUG]  [BUGGY]  double  nObs  =  correlationMatrix.getEntry(i,  i);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  double  nObs  =  correlationMatrix.getEntry(i,  i);  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	double  nObs  =  correlationMatrix.getEntry(i,  i);	      int    nObs    =    correlationMatrix.getEntry(i,    i);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
41	[BUG]  [BUGGY]  Double  nObs  =  correlationMatrix.getEntry(i,  i);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  Double  nObs  =  correlationMatrix.getEntry(i,  i);  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	Double  nObs  =  correlationMatrix.getEntry(i,  i);	      int    nObs    =    correlationMatrix.getEntry(i,    i);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
42	[BUG]  [BUGGY]  int  nObs  =  this.covarianceMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  int  nObs  =  this.covarianceMatrix.getColumnDimension();  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  this.covarianceMatrix.getColumnDimension();	      int    nObs    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
43	[BUG]  [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  int  nObs  =  correlationMatrix.getColumnDimension();  [CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  int  nObs  =  correlationMatrix.getColumnDimension();  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	        int    nObs    =    correlationMatrix.getColumnDimension();    int  nObs  =  correlationMatrix.getColumnDimension();	  	non-compiled	[CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()	4	None	add
44	[BUG]  [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  int  nObs  =  correlationMatrix.getRowDimension();  [CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  int  nObs  =  correlationMatrix.getRowDimension();  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	        int    nObs    =    correlationMatrix.getColumnDimension();    int  nObs  =  correlationMatrix.getRowDimension();	  	non-compiled	[CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()	4	None	add
45	[BUG]  [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  int  nObs  =  covarianceMatrix.getColumnDimension();  [CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  int  nObs  =  covarianceMatrix.getColumnDimension();  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	        int    nObs    =    correlationMatrix.getColumnDimension();    int  nObs  =  covarianceMatrix.getColumnDimension();	  	non-compiled	[CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()	4	None	add
46	[BUG]  [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  Int  nObs  =  correlationMatrix.getColumnDimension();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  Int  nObs  =  correlationMatrix.getColumnDimension();  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	        int    nObs    =    correlationMatrix.getColumnDimension();    Int  nObs  =  correlationMatrix.getColumnDimension();	  	non-compiled	[CE]  cannot  find  symbol	4	None	add
47	[BUG]  [BUGGY]  ((  RealMatrix)covarianceMatrix).getEntry(i,  out[i][i]);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  ((  RealMatrix)covarianceMatrix).getEntry(i,  out[i][i]);  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)covarianceMatrix).getEntry(i,  out[i][i]);	      ((    RealMatrix)relativeMatrix).getEntry(i,    out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
48	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i][i],  covarianceMatrix);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i][i],  covarianceMatrix);  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(out[i][i],  covarianceMatrix);	      ((    RealMatrix)relativeMatrix).getEntry(i,    out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
49	[BUG]  [BUGGY]  ((  RealMatrix)correlationMatrix).getEntry(i,  out[i][i]);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  ((  RealMatrix)correlationMatrix).getEntry(i,  out[i][i]);  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)correlationMatrix).getEntry(i,  out[i][i]);	      ((    RealMatrix)relativeMatrix).getEntry(i,    out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
50	[BUG]  [BUGGY]  ((  RealMatrix)tDistribution).getEntry(out[i][i]);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  ((  RealMatrix)tDistribution).getEntry(out[i][i]);  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)tDistribution).getEntry(out[i][i]);	      ((    RealMatrix)relativeMatrix).getEntry(i,    out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
51	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getCorrelationPValues(out[i][i]);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  ((  RealMatrix)relativeMatrix).getCorrelationPValues(out[i][i]);  [BUGGY]    if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getCorrelationPValues(out[i][i]);	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
52	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getCorrelationPValues(out,  i);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  ((  RealMatrix)relativeMatrix).getCorrelationPValues(out,  i);  [BUGGY]    if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getCorrelationPValues(out,  i);	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
53	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(i,  j);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(i,  j);  [BUGGY]    if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(i,  j);	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
54	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getCorrelationPValues(out[i]);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  ((  RealMatrix)relativeMatrix).getCorrelationPValues(out[i]);  [BUGGY]    if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getCorrelationPValues(out[i]);	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
55	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs;  j++)  {  (int  j  =  0;  j  <  nObs;  j++)  {  [CE]  ')'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  for(int  j  =  0;  j  <  nObs;  j++)  {  (int  j  =  0;  j  <  nObs;  j++)  {  [BUGGY]    if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nObs;    j++)    {    (int  j  =  0;  j  <  nObs;  j++)  {	  	non-compiled	[CE]  ')'  expected	1	None	add
56	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs;  j++)  {  Integer  j  =  0;  j  <  nObs;  j++)  {  [CE]  >  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  for(int  j  =  0;  j  <  nObs;  j++)  {  Integer  j  =  0;  j  <  nObs;  j++)  {  [BUGGY]    if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nObs;    j++)    {    Integer  j  =  0;  j  <  nObs;  j++)  {	  	non-compiled	[CE]  >  expected	1	None	add
57	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i][i]);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i][i]);  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(out[i][i]);	      ((    RealMatrix)relativeMatrix).getEntry(i,    out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
58	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i],  nVars[i][i]);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i],  nVars[i][i]);  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(out[i],  nVars[i][i]);	      ((    RealMatrix)relativeMatrix).getEntry(i,    out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
59	[BUG]  [BUGGY]  int  j  =  correlationMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  int  j  =  correlationMatrix.getColumnDimension();  [BUGGY]    if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  j  =  correlationMatrix.getColumnDimension();	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
60	[BUG]  [BUGGY]  double  j  =  correlationMatrix.getEntry(i,  i);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  double  j  =  correlationMatrix.getEntry(i,  i);  [BUGGY]    if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	double  j  =  correlationMatrix.getEntry(i,  i);	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
61	[BUG]  [BUGGY]  int  j  =  correlationMatrix.getEntry(i,  0);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  int  j  =  correlationMatrix.getEntry(i,  0);  [BUGGY]    if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  j  =  correlationMatrix.getEntry(i,  0);	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
62	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getEntry(i).getColumnDimension();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  int  nObs  =  dataMatrix.getEntry(i).getColumnDimension();  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  dataMatrix.getEntry(i).getColumnDimension();	      int    nObs    =    correlationMatrix.getEntry(i).getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
63	[BUG]  [BUGGY]  TDistribution  tDistribution  =  new  TDistributionImpl(nVars,  i);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  TDistribution  tDistribution  =  new  TDistributionImpl(nVars,  i);  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	TDistribution  tDistribution  =  new  TDistributionImpl(nVars,  i);	      TDistribution    tDistribution    =    new    TDistributionImpl(nObs,    i);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
64	[BUG]  [BUGGY]  out[i]  =  correlationMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  out[i]  =  correlationMatrix.getColumnDimension();  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	out[i]  =  correlationMatrix.getColumnDimension();	      nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
65	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nVars  +  1;  j++)  {  (int  j  =  0;  j  <  nVars  +  1;  j++)  {  [CE]  ')'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  for(int  j  =  0;  j  <  nVars  +  1;  j++)  {  (int  j  =  0;  j  <  nVars  +  1;  j++)  {  [BUGGY]    if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nVars    +    1;    j++)    {    (int  j  =  0;  j  <  nVars  +  1;  j++)  {	  	non-compiled	[CE]  ')'  expected	11	None	add
66	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nVars  +  1;  j++)  {  Integer  j  =  0;  j  <  nVars  +  1;  j++)  {  [CE]  >  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  for(int  j  =  0;  j  <  nVars  +  1;  j++)  {  Integer  j  =  0;  j  <  nVars  +  1;  j++)  {  [BUGGY]    if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int    j    =    0;    j    <    nVars    +    1;    j++)    {    Integer  j  =  0;  j  <  nVars  +  1;  j++)  {	  	non-compiled	[CE]  >  expected	11	None	add
67	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  for(int  j  =  0;  j  <  nObs  +  2;  j++)  {  [BUGGY]    if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	add	for(int  j  =  0;  j  <  nObs  +  2;  j++)  {	  for(int    j    =    0;    j    <    nObs;    j++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	7	replace
68	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs  +  2;  j++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  for(int  j  =  0;  j  <  nObs  +  2;  j++)  {  [BUGGY]    if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int  j  =  0;  j  <  nObs  +  2;  j++)  {	  for(int    j    =    0;    j    <    nObs;    j++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	7	replace
69	[BUG]  [BUGGY]  int  j  =  correlationMatrix.getRowDimension();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  int  j  =  correlationMatrix.getRowDimension();  [BUGGY]    if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  j  =  correlationMatrix.getRowDimension();	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
70	[BUG]  [BUGGY]  int  j  =  correlationMatrix.getEntryCount(i);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  int  j  =  correlationMatrix.getEntryCount(i);  [BUGGY]    if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  j  =  correlationMatrix.getEntryCount(i);	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
71	[BUG]  [BUGGY]  double  nObs  =  correlationMatrix.getEntry(i).getColumnDimension();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  double  nObs  =  correlationMatrix.getEntry(i).getColumnDimension();  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	double  nObs  =  correlationMatrix.getEntry(i).getColumnDimension();	      int    nObs    =    correlationMatrix.getEntry(i).getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
72	[BUG]  [BUGGY]  int  nObs  =  this.covarianceMatrix.getEntryCount();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  int  nObs  =  this.covarianceMatrix.getEntryCount();  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  this.covarianceMatrix.getEntryCount();	      int    nObs    =    correlationMatrix.getEntryCount();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
73	[BUG]  [BUGGY]  double  nObs  =  correlationMatrix.getEntry(i);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  double  nObs  =  correlationMatrix.getEntry(i);  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	double  nObs  =  correlationMatrix.getEntry(i);	      int    nObs    =    correlationMatrix.getEntry(i);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
74	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getEntry(i,  nVars);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  int  nObs  =  covarianceMatrix.getEntry(i,  nVars);  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  covarianceMatrix.getEntry(i,  nVars);	      int    nObs    =    correlationMatrix.getEntry(i);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
75	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out,  covarianceMatrix[i][i]);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out,  covarianceMatrix[i][i]);  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(out,  covarianceMatrix[i][i]);	      ((    RealMatrix)relativeMatrix).getEntry(i,    out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
76	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out,  out[i][i]);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out,  out[i][i]);  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(out,  out[i][i]);	      ((    RealMatrix)relativeMatrix).getEntry(i,    out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
77	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i],  covarianceMatrix[i]);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(out[i],  covarianceMatrix[i]);  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	((  RealMatrix)relativeMatrix).getEntry(out[i],  covarianceMatrix[i]);	      ((    RealMatrix)relativeMatrix).getEntry(i,    out[i][i]);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
78	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getObjDimension();  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  int  nObs  =  correlationMatrix.getObjDimension();  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	int  nObs  =  correlationMatrix.getObjDimension();	      int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
79	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  for(int  j  =  0;  j  <  nObs  -  2;  j++)  {  [BUGGY]    if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	add	for(int  j  =  0;  j  <  nObs  -  2;  j++)  {	  for(int    j    =    0;    j    <    nObs;    j++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	7	replace
80	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nObs  -  2;  j++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {    [BUGGY]  for(int  j  =  0;  j  <  nObs  -  2;  j++)  {  [BUGGY]    if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int  j  =  0;  j  <  nObs  -  2;  j++)  {	  for(int    j    =    0;    j    <    nObs;    j++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	7	replace
