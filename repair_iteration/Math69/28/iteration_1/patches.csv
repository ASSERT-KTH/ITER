bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	      for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i]);    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
2	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length  -  1;  i++)  {  regression.addData(yArray[i]);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i=0;  i  <  xArray.length  -  1;  i++)  {  regression.addData(yArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=0;  i  <  xArray.length  -  1;  i++)  {  regression.addData(yArray[i]);  }	      for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i]);    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
3	[BUG]  [BUGGY]  For(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [CE]  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  For(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	For(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	      for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    	non-compiled	[CE]  	23	None	replace
4	[BUG]  [BUGGY]  For(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  [FE]      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  For(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	For(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	      for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    	non-compiled	[CE]  	23	None	replace
5	[BUG]  [BUGGY]  double  size  =  Math.max(regression.size(),  xArray.length  -  1);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  double  size  =  Math.max(regression.size(),  xArray.length  -  1);  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double  size  =  Math.max(regression.size(),  xArray.length  -  1);	      double    size    =    Math.max(regression.size(),    xArray.length);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
6	[BUG]  [BUGGY]  double  size  =  Math.max(xArray.size(),  regression.length);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  double  size  =  Math.max(xArray.size(),  regression.length);  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double  size  =  Math.max(xArray.size(),  regression.length);	      double    size    =    Math.max(regression.size(),    xArray.length);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
7	[BUG]  [BUGGY]  double  size  =  Math.max(yArray.size(),  regression.length);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  double  size  =  Math.max(yArray.size(),  regression.length);  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double  size  =  Math.max(yArray.size(),  regression.length);	      double    size    =    Math.max(regression.size(),    xArray.length);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
8	[BUG]  [BUGGY]  double  size  =  Math.max(regression.size(),  yArray.length  -  1);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  double  size  =  Math.max(regression.size(),  yArray.length  -  1);  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double  size  =  Math.max(regression.size(),  yArray.length  -  1);	      double    size    =    Math.max(regression.size(),    yArray.length);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]      for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	add	        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  	compilable	  [FE]  AssertionFailedError  	22	12	add
10	[BUG]  [BUGGY]      for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]      for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  	compilable	  [FE]  AssertionFailedError  	22	12	add
11	[BUG]  [BUGGY]      for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  >  expected  [FE]      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]      for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  	non-compiled	[CE]  >  expected	22	None	add
12	[BUG]  [BUGGY]      for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  For(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  '.class'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]      for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  For(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    For(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  	non-compiled	[CE]  '.class'  expected	22	None	add
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]      for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	add	        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	  	compilable	  [FE]  AssertionFailedError  	22	11	add
14	[BUG]  [BUGGY]      for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]      for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	  	compilable	  [FE]  AssertionFailedError  	22	11	add
15	[BUG]  [BUGGY]      for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i]);  }  [CE]  no  suitable  method  found  for  addData(double)  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]      for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i]);  }	  	non-compiled	[CE]  no  suitable  method  found  for  addData(double)	22	None	add
16	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length  +  1;  i++)  {  for(int  i=0;  i  <  xArray.length  +  1;  i++)  {  [CE]  'else'  without  'if'  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i=0;  i  <  xArray.length  +  1;  i++)  {  for(int  i=0;  i  <  xArray.length  +  1;  i++)  {  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=0;    i    <    xArray.length    +    1;    i++)    {    for(int  i=0;  i  <  xArray.length  +  1;  i++)  {	  	non-compiled	[CE]  'else'  without  'if'	3	None	add
17	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length  +  1;  i++)  {  int  i=0;  i  <  xArray.length  +  1;  i++)  {  [CE]  >  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i=0;  i  <  xArray.length  +  1;  i++)  {  int  i=0;  i  <  xArray.length  +  1;  i++)  {  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=0;    i    <    xArray.length    +    1;    i++)    {    int  i=0;  i  <  xArray.length  +  1;  i++)  {	  	non-compiled	[CE]  >  expected	3	None	add
18	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length  +  1;  i++)  {  For(int  i=0;  i  <  xArray.length  +  1;  i++)  {  [CE]  '.class'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i=0;  i  <  xArray.length  +  1;  i++)  {  For(int  i=0;  i  <  xArray.length  +  1;  i++)  {  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=0;    i    <    xArray.length    +    1;    i++)    {    For(int  i=0;  i  <  xArray.length  +  1;  i++)  {	  	non-compiled	[CE]  '.class'  expected	3	None	add
19	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length  +  1;  i++)  {  for(int  i=0;  i  <  yArray.length  +  1;  i++)  {  [CE]  'else'  without  'if'  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i=0;  i  <  xArray.length  +  1;  i++)  {  for(int  i=0;  i  <  yArray.length  +  1;  i++)  {  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=0;    i    <    xArray.length    +    1;    i++)    {    for(int  i=0;  i  <  yArray.length  +  1;  i++)  {	  	non-compiled	[CE]  'else'  without  'if'	3	None	add
20	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]      for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	add	        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	  	compilable	  [FE]  AssertionFailedError  	25	2	add
21	[BUG]  [BUGGY]      for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]      for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	  	compilable	  [FE]  AssertionFailedError  	25	2	add
22	[BUG]  [BUGGY]      for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [CE]  >  expected  [FE]      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]      for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	  	non-compiled	[CE]  >  expected	25	None	add
23	[BUG]  [BUGGY]      for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  For(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [CE]  '.class'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]      for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  For(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    For(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	  	non-compiled	[CE]  '.class'  expected	25	None	add
24	[BUG]  [BUGGY]      for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  Integer  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]      for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  Integer  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    Integer  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	  	non-compiled	[CE]  >  expected	25	None	add
25	[BUG]  [BUGGY]      for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  YArray[i]);  }  [CE]  cannot  find  symbol  YArray  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]      for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  YArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  YArray[i]);  }	  	non-compiled	[CE]  cannot  find  symbol  YArray	25	None	add
26	[BUG]  [BUGGY]  double[]  xArray  =(yArray  ==  null)?  0  :  xArray.length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  double[]  xArray  =(yArray  ==  null)?  0  :  xArray.length;  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  xArray  =(yArray  ==  null)?  0  :  xArray.length;	      double[]    xArray    =(yArray    ==    null)?    0    :    yArray.length;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
27	[BUG]  [BUGGY]  double[]  xArray  =(yArray  ==  null)?  1  :  yArray.length;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  double[]  xArray  =(yArray  ==  null)?  1  :  yArray.length;  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  xArray  =(yArray  ==  null)?  1  :  yArray.length;	      double[]    xArray    =(yArray    ==    null)?    0    :    yArray.length;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
28	[BUG]  [BUGGY]  double[]  yArray  =(yArray  ==  null)?  0  :  yArray.length;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  double[]  yArray  =(yArray  ==  null)?  0  :  yArray.length;  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  yArray  =(yArray  ==  null)?  0  :  yArray.length;	      double[]    xArray    =(yArray    ==    null)?    0    :    yArray.length;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
29	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i=0;  i  <  yArray.length  -  1;  i++)  {  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	add	for(int  i=0;  i  <  yArray.length  -  1;  i++)  {	  for(int    i=0;    i    <    xArray.length    -    1;    i++)    {    	compilable	  [FE]  AssertionFailedError  	8	8	replace
30	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length  -  1;  i++)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i=0;  i  <  yArray.length  -  1;  i++)  {  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=0;  i  <  yArray.length  -  1;  i++)  {	  for(int    i=0;    i    <    xArray.length    -    1;    i++)    {    	compilable	  [FE]  AssertionFailedError  	8	8	replace
31	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i=0;  i  <  xArray.length  -  2;  i++)  {  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	add	for(int  i=0;  i  <  xArray.length  -  2;  i++)  {	  for(int    i=0;    i    <    xArray.length    -    1;    i++)    {    	compilable	  [FE]  AssertionFailedError  	8	8	replace
32	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length  -  2;  i++)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i=0;  i  <  xArray.length  -  2;  i++)  {  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=0;  i  <  xArray.length  -  2;  i++)  {	  for(int    i=0;    i    <    xArray.length    -    1;    i++)    {    	compilable	  [FE]  AssertionFailedError  	8	8	replace
33	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i=0;  i  <  yArray.length  +  1;  i++)  {  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	add	for(int  i=0;  i  <  yArray.length  +  1;  i++)  {	  for(int    i=0;    i    <    yArray.length;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	13	replace
34	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length  +  1;  i++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i=0;  i  <  yArray.length  +  1;  i++)  {  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=0;  i  <  yArray.length  +  1;  i++)  {	  for(int    i=0;    i    <    yArray.length;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	13	replace
35	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	add	for(int  i=1;  i  <  yArray.length;  i++)  {	  for(int    i=0;    i    <    yArray.length;    i++)    {    	compilable	  [FE]  AssertionFailedError  	2	8	replace
36	[BUG]  [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=1;  i  <  yArray.length;  i++)  {	  for(int    i=0;    i    <    yArray.length;    i++)    {    	compilable	  [FE]  AssertionFailedError  	2	8	replace
37	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i=1;  i  <  xArray.length  +  1;  i++)  {  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	add	for(int  i=1;  i  <  xArray.length  +  1;  i++)  {	  for(int    i=1;    i    <    xArray.length;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	13	replace
38	[BUG]  [BUGGY]  for(int  i=1;  i  <  xArray.length  +  1;  i++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i=1;  i  <  xArray.length  +  1;  i++)  {  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=1;  i  <  xArray.length  +  1;  i++)  {	  for(int    i=1;    i    <    xArray.length;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	13	replace
39	[BUG]  [BUGGY]      int  size  =  yArray.length;  int  size  =  yArray.length;  [CE]  variable  size  is  already  defined  in  method  correlation(double[],double[])  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]      int  size  =  yArray.length;  int  size  =  yArray.length;  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	        int    size    =    yArray.length;    int  size  =  yArray.length;	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  correlation(double[],double[])	17	None	add
40	[BUG]  [BUGGY]      int  size  =  yArray.length;  Int  size  =  yArray.length;  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]      int  size  =  yArray.length;  Int  size  =  yArray.length;  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	        int    size    =    yArray.length;    Int  size  =  yArray.length;	  	non-compiled	[CE]  cannot  find  symbol	17	None	add
41	[BUG]  [BUGGY]      int  size  =  yArray.length;  int  size  =  yArray.length);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]      int  size  =  yArray.length;  int  size  =  yArray.length);  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	        int    size    =    yArray.length;    int  size  =  yArray.length);	  	non-compiled	[CE]  ';'  expected	17	None	add
42	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length  -  1;  i++)  {  for(int  i=0;  i  <  xArray.length  -  1;  i++)  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i=0;  i  <  xArray.length  -  1;  i++)  {  for(int  i=0;  i  <  xArray.length  -  1;  i++)  {  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=0;    i    <    xArray.length    -    1;    i++)    {    for(int  i=0;  i  <  xArray.length  -  1;  i++)  {	  	non-compiled	[CE]  'else'  without  'if'	7	None	add
43	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length  -  1;  i++)  {  For(int  i=0;  i  <  xArray.length  -  1;  i++)  {  [CE]  '.class'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i=0;  i  <  xArray.length  -  1;  i++)  {  For(int  i=0;  i  <  xArray.length  -  1;  i++)  {  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=0;    i    <    xArray.length    -    1;    i++)    {    For(int  i=0;  i  <  xArray.length  -  1;  i++)  {	  	non-compiled	[CE]  '.class'  expected	7	None	add
44	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length  -  1;  i++)  {  int  i=0;  i  <  xArray.length  -  1;  i++)  {  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i=0;  i  <  xArray.length  -  1;  i++)  {  int  i=0;  i  <  xArray.length  -  1;  i++)  {  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=0;    i    <    xArray.length    -    1;    i++)    {    int  i=0;  i  <  xArray.length  -  1;  i++)  {	  	non-compiled	[CE]  >  expected	7	None	add
45	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length  -  1;  i++)  {  for(int  i=0;  i  <  yArray.length  -  1;  i++)  {  [CE]  'else'  without  'if'  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i=0;  i  <  xArray.length  -  1;  i++)  {  for(int  i=0;  i  <  yArray.length  -  1;  i++)  {  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=0;    i    <    xArray.length    -    1;    i++)    {    for(int  i=0;  i  <  yArray.length  -  1;  i++)  {	  	non-compiled	[CE]  'else'  without  'if'	7	None	add
46	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length  -  1;  i++)  {  final  int  i=0;  i  <  xArray.length  -  1;  i++)  {  [CE]  >  expected  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i=0;  i  <  xArray.length  -  1;  i++)  {  final  int  i=0;  i  <  xArray.length  -  1;  i++)  {  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=0;    i    <    xArray.length    -    1;    i++)    {    final  int  i=0;  i  <  xArray.length  -  1;  i++)  {	  	non-compiled	[CE]  >  expected	7	None	add
47	[BUG]  [BUGGY]  double[]  yArray  =  yArray.toArray(new  double[xArray.length]);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  double[]  yArray  =  yArray.toArray(new  double[xArray.length]);  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  yArray  =  yArray.toArray(new  double[xArray.length]);	      double[]    yArray    =    yArray.toArray(new    double[yArray.length]);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
48	[BUG]  [BUGGY]  double[]  yArray  =  yArray.toArray(new  double[yArray.length  +  1]);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  double[]  yArray  =  yArray.toArray(new  double[yArray.length  +  1]);  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  yArray  =  yArray.toArray(new  double[yArray.length  +  1]);	      double[]    yArray    =    yArray.toArray(new    double[yArray.length]);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
49	[BUG]  [BUGGY]  double[]  yArray  =  yArray.toArray(new  double[yArray.length  -  1]);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  double[]  yArray  =  yArray.toArray(new  double[yArray.length  -  1]);  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  yArray  =  yArray.toArray(new  double[yArray.length  -  1]);	      double[]    yArray    =    yArray.toArray(new    double[yArray.length]);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
50	[BUG]  [BUGGY]  double[]  xArray  =  yArray.toArray(new  double[xArray.length]);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  double[]  xArray  =  yArray.toArray(new  double[xArray.length]);  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  xArray  =  yArray.toArray(new  double[xArray.length]);	      double[]    yArray    =    yArray.toArray(new    double[yArray.length]);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
51	[BUG]  [BUGGY]  for(int  i=1;  i  <  xArray.length;  i++)  {  for(int  i=1;  i  <  xArray.length;  i++)  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i=1;  i  <  xArray.length;  i++)  {  for(int  i=1;  i  <  xArray.length;  i++)  {  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=1;    i    <    xArray.length;    i++)    {    for(int  i=1;  i  <  xArray.length;  i++)  {	  	non-compiled	[CE]  'else'  without  'if'	5	None	add
52	[BUG]  [BUGGY]  for(int  i=1;  i  <  xArray.length;  i++)  {  For(int  i=1;  i  <  xArray.length;  i++)  {  [CE]  '.class'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i=1;  i  <  xArray.length;  i++)  {  For(int  i=1;  i  <  xArray.length;  i++)  {  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=1;    i    <    xArray.length;    i++)    {    For(int  i=1;  i  <  xArray.length;  i++)  {	  	non-compiled	[CE]  '.class'  expected	5	None	add
53	[BUG]  [BUGGY]  for(int  i=1;  i  <  xArray.length;  i++)  {  int  i=1;  i  <  xArray.length;  i++)  {  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i=1;  i  <  xArray.length;  i++)  {  int  i=1;  i  <  xArray.length;  i++)  {  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=1;    i    <    xArray.length;    i++)    {    int  i=1;  i  <  xArray.length;  i++)  {	  	non-compiled	[CE]  >  expected	5	None	add
54	[BUG]  [BUGGY]  for(int  i=1;  i  <  xArray.length;  i++)  {  for(int  i=1;  i  <  yArray.length;  i++)  {  [CE]  'else'  without  'if'  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i=1;  i  <  xArray.length;  i++)  {  for(int  i=1;  i  <  yArray.length;  i++)  {  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=1;    i    <    xArray.length;    i++)    {    for(int  i=1;  i  <  yArray.length;  i++)  {	  	non-compiled	[CE]  'else'  without  'if'	5	None	add
55	[BUG]  [BUGGY]  int  size  =  xArray.size();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  int  size  =  xArray.size();  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  size  =  xArray.size();	      int    size    =    yArray.size();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
56	[BUG]  [BUGGY]  int  size  =  yArray.size()  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  int  size  =  yArray.size()  +  1;  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  size  =  yArray.size()  +  1;	      int    size    =    yArray.size();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
57	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i=0;  i  <  xArray.length  +  2;  i++)  {  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	add	for(int  i=0;  i  <  xArray.length  +  2;  i++)  {	  for(int    i=0;    i    <    xArray.length    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	13	replace
58	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length  +  2;  i++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i=0;  i  <  xArray.length  +  2;  i++)  {  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=0;  i  <  xArray.length  +  2;  i++)  {	  for(int    i=0;    i    <    xArray.length    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	13	replace
59	[BUG]  [BUGGY]  double[]  yArray  =(double[])xArray.clone();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  double[]  yArray  =(double[])xArray.clone();  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  yArray  =(double[])xArray.clone();	      double[]    yArray    =(double[])yArray.clone();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
60	[BUG]  [BUGGY]  double[]  xArray  =(double[])yArray.clone();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  double[]  xArray  =(double[])yArray.clone();  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  xArray  =(double[])yArray.clone();	      double[]    yArray    =(double[])yArray.clone();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
61	[BUG]  [BUGGY]  Double[]  yArray  =(double[])yArray.clone();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  Double[]  yArray  =(double[])yArray.clone();  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	Double[]  yArray  =(double[])yArray.clone();	      double[]    yArray    =(double[])yArray.clone();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
62	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=0;    i    <    yArray.length;    i++)    {    for(int  i=0;  i  <  yArray.length;  i++)  {	  	non-compiled	[CE]  'else'  without  'if'	1	None	add
63	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  For(int  i=0;  i  <  yArray.length;  i++)  {  [CE]  '.class'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  For(int  i=0;  i  <  yArray.length;  i++)  {  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=0;    i    <    yArray.length;    i++)    {    For(int  i=0;  i  <  yArray.length;  i++)  {	  	non-compiled	[CE]  '.class'  expected	1	None	add
64	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  int  i=0;  i  <  yArray.length;  i++)  {  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  int  i=0;  i  <  yArray.length;  i++)  {  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=0;    i    <    yArray.length;    i++)    {    int  i=0;  i  <  yArray.length;  i++)  {	  	non-compiled	[CE]  >  expected	1	None	add
65	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  Integer  i=0;  i  <  yArray.length;  i++)  {  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  Integer  i=0;  i  <  yArray.length;  i++)  {  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=0;    i    <    yArray.length;    i++)    {    Integer  i=0;  i  <  yArray.length;  i++)  {	  	non-compiled	[CE]  >  expected	1	None	add
66	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  final  int  i=0;  i  <  yArray.length;  i++)  {  [CE]  >  expected  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  final  int  i=0;  i  <  yArray.length;  i++)  {  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=0;    i    <    yArray.length;    i++)    {    final  int  i=0;  i  <  yArray.length;  i++)  {	  	non-compiled	[CE]  >  expected	1	None	add
67	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]      for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	add	        for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }	  	compilable	  [FE]  AssertionFailedError  	27	10	add
68	[BUG]  [BUGGY]      for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]      for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	        for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }	  	compilable	  [FE]  AssertionFailedError  	27	10	add
69	[BUG]  [BUGGY]      for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [CE]  >  expected  [FE]      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]      for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	        for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }	  	non-compiled	[CE]  >  expected	27	None	add
70	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]      for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	add	        for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }	  	compilable	  [FE]  AssertionFailedError  	27	10	add
71	[BUG]  [BUGGY]      for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]      for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	        for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }	  	compilable	  [FE]  AssertionFailedError  	27	10	add
72	[BUG]  [BUGGY]      for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  For(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [CE]  '.class'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]      for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  For(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	        for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    For(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }	  	non-compiled	[CE]  '.class'  expected	27	None	add
73	[BUG]  [BUGGY]      for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xxArray[i]);  }  [CE]  cannot  find  symbol  xxArray  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]      for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xxArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	        for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xxArray[i]);  }	  	non-compiled	[CE]  cannot  find  symbol  xxArray	27	None	add
74	[BUG]  [BUGGY]  double  size  =  xArray.size();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  double  size  =  xArray.size();  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double  size  =  xArray.size();	      double    size    =    yArray.size();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
75	[BUG]  [BUGGY]  double  size  =  yArray.length;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  double  size  =  yArray.length;  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double  size  =  yArray.length;	      double    size    =    yArray.size();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
76	[BUG]  [BUGGY]  double  size  =  yArray.size()  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  double  size  =  yArray.size()  +  1;  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double  size  =  yArray.size()  +  1;	      double    size    =    yArray.size();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
77	[BUG]  [BUGGY]  double[]  yArray  =  yArray.get(xArray.length  -  1);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  double[]  yArray  =  yArray.get(xArray.length  -  1);  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  yArray  =  yArray.get(xArray.length  -  1);	      double[]    yArray    =    yArray.get(xArray.length);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
78	[BUG]  [BUGGY]  double[]  yArray  =  yArray.get(xArray.length,  yArray.length);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  double[]  yArray  =  yArray.get(xArray.length,  yArray.length);  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  yArray  =  yArray.get(xArray.length,  yArray.length);	      double[]    yArray    =    yArray.get(xArray.length);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
79	[BUG]  [BUGGY]  double[]  yArray  =  yArray.get(xArray.length  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  double[]  yArray  =  yArray.get(xArray.length  +  1);  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  yArray  =  yArray.get(xArray.length  +  1);	      double[]    yArray    =    yArray.get(xArray.length);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
80	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]      for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	add	        for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  	compilable	  [FE]  AssertionFailedError  	20	12	add
81	[BUG]  [BUGGY]      for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]      for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	        for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  	compilable	  [FE]  AssertionFailedError  	20	12	add
82	[BUG]  [BUGGY]      for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  >  expected  [FE]      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]      for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	        for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  	non-compiled	[CE]  >  expected	20	None	add
83	[BUG]  [BUGGY]      for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  For(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  '.class'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]      for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  For(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	        for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    For(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  	non-compiled	[CE]  '.class'  expected	20	None	add
84	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]      for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	add	        for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  	compilable	  [FE]  AssertionFailedError  	20	12	add
85	[BUG]  [BUGGY]      for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]      for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	        for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  	compilable	  [FE]  AssertionFailedError  	20	12	add
86	[BUG]  [BUGGY]      for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i]);  }  [CE]  no  suitable  method  found  for  addData(double)  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]      for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	        for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i]);  }	  	non-compiled	[CE]  no  suitable  method  found  for  addData(double)	20	None	add
87	[BUG]  [BUGGY]  int  size  =  xArray.length;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  int  size  =  xArray.length;  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  size  =  xArray.length;	      int    size    =    yArray.length;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
88	[BUG]  [BUGGY]  int  size  =  yArray.length  -  1;  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  int  size  =  yArray.length  -  1;  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  size  =  yArray.length  -  1;	      int    size    =    yArray.length;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
89	[BUG]  [BUGGY]  int  size  =  yArray.length  +  1;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  int  size  =  yArray.length  +  1;  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  size  =  yArray.length  +  1;	      int    size    =    yArray.length;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
90	[BUG]  [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	      for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    	non-compiled	[CE]  >  expected	28	None	replace
91	[BUG]  [BUGGY]      for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]      for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	        for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }	  	non-compiled	[CE]  >  expected	27	None	add
92	[BUG]  [BUGGY]      for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  Integer  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [CE]  >  expected  [FE]      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]      for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  Integer  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	        for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    Integer  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }	  	non-compiled	[CE]  >  expected	27	None	add
93	[BUG]  [BUGGY]      for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  Integer  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]      for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  Integer  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	        for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    Integer  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  	non-compiled	[CE]  >  expected	20	None	add
94	[BUG]  [BUGGY]  double  size  =  Math.max(regression.size(),  yArray.length  +  1);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  double  size  =  Math.max(regression.size(),  yArray.length  +  1);  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double  size  =  Math.max(regression.size(),  yArray.length  +  1);	      double    size    =    Math.max(regression.size(),    yArray.length);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
95	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  for(int  i=0;  i  <  YArray.length;  i++)  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  for(int  i=0;  i  <  YArray.length;  i++)  {  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=0;    i    <    yArray.length;    i++)    {    for(int  i=0;  i  <  YArray.length;  i++)  {	  	non-compiled	[CE]  'else'  without  'if'	1	None	add
96	[BUG]  [BUGGY]      for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  double  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]      for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  double  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    double  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	  	non-compiled	[CE]  >  expected	25	None	add
97	[BUG]  [BUGGY]  double[]  yArray  =  yArray.toArray(new  double[yArray.length],  yArray.length);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  double[]  yArray  =  yArray.toArray(new  double[yArray.length],  yArray.length);  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  yArray  =  yArray.toArray(new  double[yArray.length],  yArray.length);	      double[]    yArray    =    yArray.toArray(new    double[yArray.length]);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
98	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length  -  1;  i++)  {  Integer  i=0;  i  <  xArray.length  -  1;  i++)  {  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i=0;  i  <  xArray.length  -  1;  i++)  {  Integer  i=0;  i  <  xArray.length  -  1;  i++)  {  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=0;    i    <    xArray.length    -    1;    i++)    {    Integer  i=0;  i  <  xArray.length  -  1;  i++)  {	  	non-compiled	[CE]  >  expected	7	None	add
99	[BUG]  [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=1;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	      for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
100	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length  +  1;  i++)  {  int  i=0;  i  <  yArray.length  +  1;  i++)  {  [CE]  >  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i=0;  i  <  xArray.length  +  1;  i++)  {  int  i=0;  i  <  yArray.length  +  1;  i++)  {  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=0;    i    <    xArray.length    +    1;    i++)    {    int  i=0;  i  <  yArray.length  +  1;  i++)  {	  	non-compiled	[CE]  >  expected	3	None	add
101	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i=1;  i  <  xArray.length  -  1;  i++)  {  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	add	for(int  i=1;  i  <  xArray.length  -  1;  i++)  {	  for(int    i=0;    i    <    xArray.length    -    1;    i++)    {    	compilable	  [FE]  AssertionFailedError  	8	8	replace
102	[BUG]  [BUGGY]  for(int  i=1;  i  <  xArray.length  -  1;  i++)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i=1;  i  <  xArray.length  -  1;  i++)  {  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=1;  i  <  xArray.length  -  1;  i++)  {	  for(int    i=0;    i    <    xArray.length    -    1;    i++)    {    	compilable	  [FE]  AssertionFailedError  	8	8	replace
103	[BUG]  [BUGGY]  for(int  i=1;  i  <  xArray.length;  i++)  {  Integer  i=1;  i  <  xArray.length;  i++)  {  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i=1;  i  <  xArray.length;  i++)  {  Integer  i=1;  i  <  xArray.length;  i++)  {  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=1;    i    <    xArray.length;    i++)    {    Integer  i=1;  i  <  xArray.length;  i++)  {	  	non-compiled	[CE]  >  expected	5	None	add
104	[BUG]  [BUGGY]  for(int  i=1;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i=1;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=1;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	      for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i]);    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
105	[BUG]  [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	      for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
106	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }	      for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
107	[BUG]  [BUGGY]      int  size  =  yArray.length;  t  =  yArray.length;  [CE]  cannot  find  symbol  t  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]      int  size  =  yArray.length;  t  =  yArray.length;  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	        int    size    =    yArray.length;    t  =  yArray.length;	  	non-compiled	[CE]  cannot  find  symbol  t	17	None	add
108	[BUG]  [BUGGY]  for(int  i  =  0,  yArray.length  =  xArray.length;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  null)  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i  =  0,  yArray.length  =  xArray.length;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  null)  {  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i  =  0,  yArray.length  =  xArray.length;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  null)  {	      	non-compiled	[CE]  ';'  expected	9	None	replace
109	[BUG]  [BUGGY]  for(int  i  =  0,  yArray.length  =  xArray.length;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  null  ||  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i  =  0,  yArray.length  =  xArray.length;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  null  ||  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i  =  0,  yArray.length  =  xArray.length;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  null  ||	      	non-compiled	[CE]  ';'  expected	9	None	replace
110	[BUG]  [BUGGY]  for(int  i  =  0,  yArray.length  =  xArray.length;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix  ==  null)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i  =  0,  yArray.length  =  xArray.length;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix  ==  null)  {  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i  =  0,  yArray.length  =  xArray.length;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix  ==  null)  {	      	non-compiled	[CE]  ';'  expected	9	None	replace
111	[BUG]  [BUGGY]  for(int  i  =  0,  yArray.length  =  xArray.length;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  null)  {  return  correlation  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i  =  0,  yArray.length  =  xArray.length;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  null)  {  return  correlation  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i  =  0,  yArray.length  =  xArray.length;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  null)  {  return  correlation	      	non-compiled	[CE]  ';'  expected	9	None	replace
112	[BUG]  [BUGGY]      for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  Integer  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]      for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  Integer  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    Integer  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  	non-compiled	[CE]  >  expected	22	None	add
113	[BUG]  [BUGGY]      for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  double  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  >  expected  [FE]      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]      for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  double  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    double  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  	non-compiled	[CE]  >  expected	22	None	add
114	[BUG]  [BUGGY]  double[]  xArray  =(yArray!=  null)?  0  :  yArray.length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  double[]  xArray  =(yArray!=  null)?  0  :  yArray.length;  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  xArray  =(yArray!=  null)?  0  :  yArray.length;	      double[]    xArray    =(yArray    ==    null)?    0    :    yArray.length;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
115	[BUG]  [BUGGY]  Double  size  =  yArray.size();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  Double  size  =  yArray.size();  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	Double  size  =  yArray.size();	      double    size    =    yArray.size();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
116	[BUG]  [BUGGY]  double  size  =  Math.max(yArray.size(),  regression.size);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  double  size  =  Math.max(yArray.size(),  regression.size);  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double  size  =  Math.max(yArray.size(),  regression.size);	      double    size    =    Math.max(regression.size(),    yArray.length);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
117	[BUG]  [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  [CE]  cannot  find  symbol  size  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=0;  i  <  size;  i++)  {	  for(int    i=0;    i    <    yArray.length;    i++)    {    	non-compiled	[CE]  cannot  find  symbol  size	2	None	replace
118	[BUG]  [BUGGY]      for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i]],  yArray[i]);  }  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]      for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i]],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i]],  yArray[i]);  }	  	non-compiled	[CE]  ')'  expected	25	None	add
119	[BUG]  [BUGGY]      for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]      for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int  i=0;  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	  	non-compiled	[CE]  incompatible  types	25	None	add
120	[BUG]  [BUGGY]      for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  j  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [CE]  cannot  find  symbol  j  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]      for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  j  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	        for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  j  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }	  	non-compiled	[CE]  cannot  find  symbol  j	27	None	add
121	[BUG]  [BUGGY]  int  nVars  =  Math.min(yArray.length,  xArray.length);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  int  nVars  =  Math.min(yArray.length,  xArray.length);  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  nVars  =  Math.min(yArray.length,  xArray.length);	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
122	[BUG]  [BUGGY]  int  j  =  Math.min(yArray.length,  xArray.length);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  int  j  =  Math.min(yArray.length,  xArray.length);  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  j  =  Math.min(yArray.length,  xArray.length);	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
123	[BUG]  [BUGGY]  int  nVars  =  getNumberOfObservations();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  int  nVars  =  getNumberOfObservations();  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  nVars  =  getNumberOfObservations();	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
124	[BUG]  [BUGGY]  int  nVars  =  Math.min(yArray.length,  yArray.length);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]  int  nVars  =  Math.min(yArray.length,  yArray.length);  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  nVars  =  Math.min(yArray.length,  yArray.length);	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
125	[BUG]  [BUGGY]      for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {    [BUGGY]      for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  	non-compiled	[CE]  incompatible  types	22	None	add
