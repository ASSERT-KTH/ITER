bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  size  =  yArray.length;  int  size  =  yArray.length);  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double  size  =  yArray.length;  int  size  =  yArray.length);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double  size  =  yArray.length;  int  size  =  yArray.length);	          int    size    =    yArray.length;    int    size    =    yArray.length);    	non-compiled	[CE]  	41	None	replace
2	[BUG]  [BUGGY]  int  size  =  yArray.length;  int  size  =  xArray.length);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  size  =  yArray.length;  int  size  =  xArray.length);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  size  =  yArray.length;  int  size  =  xArray.length);	          int    size    =    yArray.length;    int    size    =    yArray.length);    	non-compiled	[CE]  	41	None	replace
3	[BUG]  [BUGGY]  Integer  i=0;  i  <  yArray.length;  i++)  {  [CE]  >  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  Integer  i=0;  i  <  yArray.length;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	Integer  i=0;  i  <  yArray.length;  i++)  {	  for(int    i=0;    i    <    yArray.length;    i++)    {    Integer    i=0;    i    <    yArray.length;    i++)    {    	non-compiled	[CE]  >  expected	65	None	replace
4	[BUG]  [BUGGY]  For(int  i=0;  i  <  yArray.length;  i++)  {  [CE]  '.class'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  For(int  i=0;  i  <  yArray.length;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	For(int  i=0;  i  <  yArray.length;  i++)  {	  for(int    i=0;    i    <    yArray.length;    i++)    {    Integer    i=0;    i    <    yArray.length;    i++)    {    	non-compiled	[CE]  '.class'  expected	65	None	replace
5	[BUG]  [BUGGY]  For(int  i=0;  i  <  xArray.length;  i++)  {  [CE]  '.class'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  For(int  i=0;  i  <  xArray.length;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	For(int  i=0;  i  <  xArray.length;  i++)  {	  for(int    i=1;    i    <    xArray.length;    i++)    {    For(int    i=1;    i    <    xArray.length;    i++)    {    	non-compiled	[CE]  '.class'  expected	52	None	replace
6	[BUG]  [BUGGY]  double  size  =  Math.max(yArray.size(),  xArray.length);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double  size  =  Math.max(yArray.size(),  xArray.length);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double  size  =  Math.max(yArray.size(),  xArray.length);	  double    size    =    Math.max(yArray.size(),    regression.length);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
7	[BUG]  [BUGGY]  double  size  =  Math.max(revised.size(),  yArray.length);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double  size  =  Math.max(revised.size(),  yArray.length);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double  size  =  Math.max(revised.size(),  yArray.length);	  double    size    =    Math.max(yArray.size(),    regression.length);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
8	[BUG]  [BUGGY]  double  size  =  Math.max(yArray.length,  xArray.length);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double  size  =  Math.max(yArray.length,  xArray.length);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double  size  =  Math.max(yArray.length,  xArray.length);	  double    size    =    Math.max(yArray.size(),    regression.length);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
9	[BUG]  [BUGGY]  for(int  i=0;  j  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  j  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=0;  j  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }	          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int    i=0;    j    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
10	[BUG]  [BUGGY]  for(int  j=0;  j  <  xArray.length;  j++)  {  regression.addData(yArray[i],  xArray[i]);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  j=0;  j  <  xArray.length;  j++)  {  regression.addData(yArray[i],  xArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  j=0;  j  <  xArray.length;  j++)  {  regression.addData(yArray[i],  xArray[i]);  }	          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int    i=0;    j    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
11	[BUG]  [BUGGY]  for(int  i=0;  j  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  j  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=0;  j  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int    i=0;    j    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
12	[BUG]  [BUGGY]  for(int  i=0;  j  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  j  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=0;  j  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }	          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int    i=0;    j    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
13	[BUG]  [BUGGY]  Double[]  yArray  =(double[])xArray.clone();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  Double[]  yArray  =(double[])xArray.clone();  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	Double[]  yArray  =(double[])xArray.clone();	  Double[]    yArray    =(double[])yArray.clone();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
14	[BUG]  [BUGGY]  Double[]  yArray  =(Double[])yArray.clone();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  Double[]  yArray  =(Double[])yArray.clone();  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	Double[]  yArray  =(Double[])yArray.clone();	  Double[]    yArray    =(double[])yArray.clone();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
15	[BUG]  [BUGGY]  int  nVars  =  Math.min(yArray.length,  xArray.length  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  nVars  =  Math.min(yArray.length,  xArray.length  -  1);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  nVars  =  Math.min(yArray.length,  xArray.length  -  1);	  int    nVars    =    Math.min(yArray.length,    xArray.length);    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
16	[BUG]  [BUGGY]  int  nVars  =  Math.min(yArray.length,  xArray.length  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  nVars  =  Math.min(yArray.length,  xArray.length  +  1);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  nVars  =  Math.min(yArray.length,  xArray.length  +  1);	  int    nVars    =    Math.min(yArray.length,    xArray.length);    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
17	[BUG]  [BUGGY]  double  nVars  =  Math.min(yArray.length,  xArray.length);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double  nVars  =  Math.min(yArray.length,  xArray.length);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double  nVars  =  Math.min(yArray.length,  xArray.length);	  int    nVars    =    Math.min(yArray.length,    xArray.length);    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
18	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  yArray.length;  i  <  len;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  null)  {  [CE]  'else'  without  'if'  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i  =  0,  len  =  yArray.length;  i  <  len;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  null)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i  =  0,  len  =  yArray.length;  i  <  len;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  null)  {	  for(int    i    =    0,    yArray.length    =    xArray.length;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    getCovarianceMatrix(i);    if(covarianceMatrix!=    null)    {    	non-compiled	[CE]  'else'  without  'if'	108	None	replace
19	[BUG]  [BUGGY]  for(int  i  =  0,  yArray.length  =  xArray.length;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  null  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i  =  0,  yArray.length  =  xArray.length;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  null  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i  =  0,  yArray.length  =  xArray.length;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  null	  for(int    i    =    0,    yArray.length    =    xArray.length;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    getCovarianceMatrix(i);    if(covarianceMatrix!=    null)    {    	non-compiled	[CE]  ';'  expected	108	None	replace
20	[BUG]  [BUGGY]  double[]  xArray  =(yArray!=  null)?  1  :  yArray.length;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double[]  xArray  =(yArray!=  null)?  1  :  yArray.length;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  xArray  =(yArray!=  null)?  1  :  yArray.length;	  double[]    xArray    =(yArray    ==    null)?    1    :    yArray.length;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
21	[BUG]  [BUGGY]  double[]  yArray  =(yArray  ==  null)?  1  :  yArray.length;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double[]  yArray  =(yArray  ==  null)?  1  :  yArray.length;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  yArray  =(yArray  ==  null)?  1  :  yArray.length;	  double[]    xArray    =(yArray    ==    null)?    1    :    yArray.length;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
22	[BUG]  [BUGGY]  double[]  xArray  =(yArray  ==  null)?  1  :  xArray.length;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double[]  xArray  =(yArray  ==  null)?  1  :  xArray.length;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  xArray  =(yArray  ==  null)?  1  :  xArray.length;	  double[]    xArray    =(yArray    ==    null)?    1    :    yArray.length;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
23	[BUG]  [BUGGY]  Double  size  =  yArray.size()  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  Double  size  =  yArray.size()  +  1;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	Double  size  =  yArray.size()  +  1;	  Double    size    =    yArray.size();    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
24	[BUG]  [BUGGY]  Double  size  =  yArray.size()  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  Double  size  =  yArray.size()  -  1;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	Double  size  =  yArray.size()  -  1;	  Double    size    =    yArray.size();    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
25	[BUG]  [BUGGY]  Double  size  =  yArray.size()  *  2;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  Double  size  =  yArray.size()  *  2;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	Double  size  =  yArray.size()  *  2;	  Double    size    =    yArray.size();    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
26	[BUG]  [BUGGY]  double[]  xArray  =(xArray  ==  null)?  0  :  yArray.length;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double[]  xArray  =(xArray  ==  null)?  0  :  yArray.length;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  xArray  =(xArray  ==  null)?  0  :  yArray.length;	  double[]    xArray    =(yArray    ==    null)?    0    :    xArray.length;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
27	[BUG]  [BUGGY]  double[]  xArray  =(xArray!=  null)?  0  :  yArray.length;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double[]  xArray  =(xArray!=  null)?  0  :  yArray.length;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  xArray  =(xArray!=  null)?  0  :  yArray.length;	  double[]    xArray    =(yArray    ==    null)?    0    :    xArray.length;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
28	[BUG]  [BUGGY]  double[]  yArray  =(xArray  ==  null)?  0  :  yArray.length;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double[]  yArray  =(xArray  ==  null)?  0  :  yArray.length;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  yArray  =(xArray  ==  null)?  0  :  yArray.length;	  double[]    xArray    =(yArray    ==    null)?    0    :    xArray.length;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
29	[BUG]  [BUGGY]  int  size  =  xArray.length;  t  =  yArray.length;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  size  =  xArray.length;  t  =  yArray.length;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  size  =  xArray.length;  t  =  yArray.length;	          int    size    =    yArray.length;    t    =    yArray.length;    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
30	[BUG]  [BUGGY]  int  size  =  yArray.length;  xArray.length  =  yArray.length;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  size  =  yArray.length;  xArray.length  =  yArray.length;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  size  =  yArray.length;  xArray.length  =  yArray.length;	          int    size    =    yArray.length;    t    =    yArray.length;    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
31	[BUG]  [BUGGY]  int  size  =  yArray.length;  t  =  xArray.length;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  size  =  yArray.length;  t  =  xArray.length;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  size  =  yArray.length;  t  =  xArray.length;	          int    size    =    yArray.length;    t    =    yArray.length;    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
32	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  int  i=0;  i  <  xArray.length;  i++)  {  [CE]  >  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  int  i=0;  i  <  xArray.length;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  int  i=0;  i  <  xArray.length;  i++)  {	  for(int    i=1;    i    <    xArray.length;    i++)    {    int    i=1;    i    <    xArray.length;    i++)    {    	non-compiled	[CE]  >  expected	53	None	replace
33	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  int  i=1;  i  <  xArray.length;  i++)  {  [CE]  >  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  int  i=1;  i  <  xArray.length;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  int  i=1;  i  <  xArray.length;  i++)  {	  for(int    i=1;    i    <    xArray.length;    i++)    {    int    i=1;    i    <    xArray.length;    i++)    {    	non-compiled	[CE]  >  expected	53	None	replace
34	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double  i=1;  i  <  xArray.length;  i++)  {  [CE]  >  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double  i=1;  i  <  xArray.length;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  double  i=1;  i  <  xArray.length;  i++)  {	  for(int    i=1;    i    <    xArray.length;    i++)    {    int    i=1;    i    <    xArray.length;    i++)    {    	non-compiled	[CE]  >  expected	53	None	replace
35	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i]],  yArray[i]);  }  [CE]  [FE]        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i]],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i]],  yArray[i]);  }	          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i]],    yArray[i]);    }    	non-compiled	[CE]  	118	None	replace
36	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	add	                for(int        i=0;        i        <        xArray.length;        i++)        {        regression.addData(yArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  	compilable	  [FE]  AssertionFailedError  	84	12	add
37	[BUG]  [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        xArray.length;        i++)        {        regression.addData(yArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  	compilable	  [FE]  AssertionFailedError  	84	12	add
38	[BUG]  [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        xArray.length;        i++)        {        regression.addData(yArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
39	[BUG]  [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  y  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  y  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        xArray.length;        i++)        {        regression.addData(yArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  y	  	non-compiled	[CE]  ')'  expected	84	None	add
40	[BUG]  [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  [CE]  'else'  without  'if'  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        xArray.length;        i++)        {        regression.addData(yArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {	  	non-compiled	[CE]  'else'  without  'if'	84	None	add
41	[BUG]  [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        xArray.length;        i++)        {        regression.addData(yArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
42	[BUG]  [BUGGY]  double[]  yArray  =  yArray.toArray(new  double[xArray.length  +  1]);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double[]  yArray  =  yArray.toArray(new  double[xArray.length  +  1]);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  yArray  =  yArray.toArray(new  double[xArray.length  +  1]);	  double[]    yArray    =    yArray.toArray(new    double[yArray.length    +    1]);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
43	[BUG]  [BUGGY]  double[]  yArray  =  yArray.toArray(new  double[yArray.length  +  2]);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double[]  yArray  =  yArray.toArray(new  double[yArray.length  +  2]);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  yArray  =  yArray.toArray(new  double[yArray.length  +  2]);	  double[]    yArray    =    yArray.toArray(new    double[yArray.length    +    1]);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
44	[BUG]  [BUGGY]  double[]  yArray  =  yArray.toArray(new  double[yArray.length  +  3]);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double[]  yArray  =  yArray.toArray(new  double[yArray.length  +  3]);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  yArray  =  yArray.toArray(new  double[yArray.length  +  3]);	  double[]    yArray    =    yArray.toArray(new    double[yArray.length    +    1]);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
45	[BUG]  [BUGGY]  double  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [CE]  >  expected  [FE]        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	  int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    	non-compiled	[CE]  >  expected	90	None	replace
46	[BUG]  [BUGGY]  int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [CE]  >  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	  int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    	non-compiled	[CE]  >  expected	90	None	replace
47	[BUG]  [BUGGY]  long  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [CE]  >  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  long  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	long  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	  int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    	non-compiled	[CE]  >  expected	90	None	replace
48	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	add	                for(int        i=0;        i        <        xArray.length;        i++)        {        regression.addData(yArray[i],        yArray[i]);        }        for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  	compilable	  [FE]  AssertionFailedError  	80	12	add
49	[BUG]  [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        xArray.length;        i++)        {        regression.addData(yArray[i],        yArray[i]);        }        for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  	compilable	  [FE]  AssertionFailedError  	80	12	add
50	[BUG]  [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        xArray.length;        i++)        {        regression.addData(yArray[i],        yArray[i]);        }        for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[	  	non-compiled	[CE]  illegal  start  of  expression	80	None	add
51	[BUG]  [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  y  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  y  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        xArray.length;        i++)        {        regression.addData(yArray[i],        yArray[i]);        }        for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  y	  	non-compiled	[CE]  ')'  expected	80	None	add
52	[BUG]  [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  [CE]  'else'  without  'if'  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        xArray.length;        i++)        {        regression.addData(yArray[i],        yArray[i]);        }        for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {	  	non-compiled	[CE]  'else'  without  'if'	80	None	add
53	[BUG]  [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        xArray.length;        i++)        {        regression.addData(yArray[i],        yArray[i]);        }        for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],	  	non-compiled	[CE]  illegal  start  of  expression	80	None	add
54	[BUG]  [BUGGY]  For(int  i=0;  i  <  xArray.length  -  1;  i++)  {  [CE]  '.class'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  For(int  i=0;  i  <  xArray.length  -  1;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	For(int  i=0;  i  <  xArray.length  -  1;  i++)  {	  for(int    i=0;    i    <    xArray.length    -    1;    i++)    {    Integer    i=0;    i    <    xArray.length    -    1;    i++)    {    	non-compiled	[CE]  '.class'  expected	98	None	replace
55	[BUG]  [BUGGY]  For(int  i=0;  i  <  yArray.length  +  1;  i++)  {  [CE]  '.class'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  For(int  i=0;  i  <  yArray.length  +  1;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	For(int  i=0;  i  <  yArray.length  +  1;  i++)  {	  for(int    i=0;    i    <    xArray.length    +    1;    i++)    {    For(int    i=0;    i    <    xArray.length    +    1;    i++)    {    	non-compiled	[CE]  '.class'  expected	18	None	replace
56	[BUG]  [BUGGY]  double[]  xArray  =  yArray.toArray(new  double[xArray.length  +  1]);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double[]  xArray  =  yArray.toArray(new  double[xArray.length  +  1]);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  xArray  =  yArray.toArray(new  double[xArray.length  +  1]);	  double[]    xArray    =    yArray.toArray(new    double[xArray.length]);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
57	[BUG]  [BUGGY]  double[]  xArray  =  yArray.toArray(new  double[xArray.length  -  1]);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double[]  xArray  =  yArray.toArray(new  double[xArray.length  -  1]);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  xArray  =  yArray.toArray(new  double[xArray.length  -  1]);	  double[]    xArray    =    yArray.toArray(new    double[xArray.length]);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
58	[BUG]  [BUGGY]  double[]  xArray  =  yArray.toArray(new  double[xArray.length],  yArray.length);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double[]  xArray  =  yArray.toArray(new  double[xArray.length],  yArray.length);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  xArray  =  yArray.toArray(new  double[xArray.length],  yArray.length);	  double[]    xArray    =    yArray.toArray(new    double[xArray.length]);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
59	[BUG]  [BUGGY]  double[]  xArray  =  yArray.toArray(new  double[xArray.length  *  2]);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double[]  xArray  =  yArray.toArray(new  double[xArray.length  *  2]);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  xArray  =  yArray.toArray(new  double[xArray.length  *  2]);	  double[]    xArray    =    yArray.toArray(new    double[xArray.length]);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
60	[BUG]  [BUGGY]  int  nVars  =  getNumberOfObservations()  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  nVars  =  getNumberOfObservations()  +  1;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  nVars  =  getNumberOfObservations()  +  1;	  int    nVars    =    getNumberOfObservations();    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
61	[BUG]  [BUGGY]  int  nVars  =  getNumberOfObservations()  -  1;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  nVars  =  getNumberOfObservations()  -  1;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  nVars  =  getNumberOfObservations()  -  1;	  int    nVars    =    getNumberOfObservations();    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
62	[BUG]  [BUGGY]  int  nVars  =  getNumberOfElements();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  nVars  =  getNumberOfElements();  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  nVars  =  getNumberOfElements();	  int    nVars    =    getNumberOfObservations();    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
63	[BUG]  [BUGGY]  double  nVars  =  getNumberOfObservations();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double  nVars  =  getNumberOfObservations();  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double  nVars  =  getNumberOfObservations();	  int    nVars    =    getNumberOfObservations();    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
64	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length  +  2;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	add	for(int  i=0;  i  <  yArray.length  +  2;  i++)  {	  for(int    i=0;    i    <    yArray.length    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	34	13	replace
65	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length  +  2;  i++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length  +  2;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=0;  i  <  yArray.length  +  2;  i++)  {	  for(int    i=0;    i    <    yArray.length    +    1;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	34	13	replace
66	[BUG]  [BUGGY]  double[]  yArray  =  yArray.toArray(new  double[xArray.length  -  1]);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double[]  yArray  =  yArray.toArray(new  double[xArray.length  -  1]);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  yArray  =  yArray.toArray(new  double[xArray.length  -  1]);	  double[]    yArray    =    yArray.toArray(new    double[xArray.length]);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
67	[BUG]  [BUGGY]  double[]  yArray  =  xArray.toArray(new  double[yArray.length]);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double[]  yArray  =  xArray.toArray(new  double[yArray.length]);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  yArray  =  xArray.toArray(new  double[yArray.length]);	  double[]    yArray    =    yArray.toArray(new    double[xArray.length]);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
68	[BUG]  [BUGGY]  }  else  if(xArray.length  ==  yArray.length)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  }  else  if(xArray.length  ==  yArray.length)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	}  else  if(xArray.length  ==  yArray.length)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
69	[BUG]  [BUGGY]  For(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [CE]  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  For(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	For(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }	          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    	non-compiled	[CE]  	69	None	replace
70	[BUG]  [BUGGY]  double[]  yArray  =  yArray.get(xArray.length,  yArray.length  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double[]  yArray  =  yArray.get(xArray.length,  yArray.length  +  1);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  yArray  =  yArray.get(xArray.length,  yArray.length  +  1);	  double[]    yArray    =    yArray.get(xArray.length,    yArray.length);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
71	[BUG]  [BUGGY]  double[]  yArray  =  yArray.get(xArray.length,  yArray.length  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double[]  yArray  =  yArray.get(xArray.length,  yArray.length  -  1);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  yArray  =  yArray.get(xArray.length,  yArray.length  -  1);	  double[]    yArray    =    yArray.get(xArray.length,    yArray.length);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
72	[BUG]  [BUGGY]  double[]  yArray  =  yArray.get(xArray.length,  yArray.length)+  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double[]  yArray  =  yArray.get(xArray.length,  yArray.length)+  1;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  yArray  =  yArray.get(xArray.length,  yArray.length)+  1;	  double[]    yArray    =    yArray.get(xArray.length,    yArray.length);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
73	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length  -  1;  i++)  {  for(int  i=0;  i  <  yArray.length  -  1;  i++)  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length  -  1;  i++)  {  for(int  i=0;  i  <  yArray.length  -  1;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=0;    i    <    yArray.length    -    1;    i++)    {    for(int  i=0;  i  <  yArray.length  -  1;  i++)  {	  	non-compiled	[CE]  'else'  without  'if'	29	None	add
74	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length  -  1;  i++)  {  For(int  i=0;  i  <  yArray.length  -  1;  i++)  {  [CE]  '.class'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length  -  1;  i++)  {  For(int  i=0;  i  <  yArray.length  -  1;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=0;    i    <    yArray.length    -    1;    i++)    {    For(int  i=0;  i  <  yArray.length  -  1;  i++)  {	  	non-compiled	[CE]  '.class'  expected	29	None	add
75	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length  -  1;  i++)  {  int  i=0;  i  <  yArray.length  -  1;  i++)  {  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length  -  1;  i++)  {  int  i=0;  i  <  yArray.length  -  1;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=0;    i    <    yArray.length    -    1;    i++)    {    int  i=0;  i  <  yArray.length  -  1;  i++)  {	  	non-compiled	[CE]  >  expected	29	None	add
76	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length  -  1;  i++)  {  final  int  i=0;  i  <  yArray.length  -  1;  i++)  {  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length  -  1;  i++)  {  final  int  i=0;  i  <  yArray.length  -  1;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=0;    i    <    yArray.length    -    1;    i++)    {    final  int  i=0;  i  <  yArray.length  -  1;  i++)  {	  	non-compiled	[CE]  >  expected	29	None	add
77	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length  -  1;  i++)  {  Integer  i=0;  i  <  yArray.length  -  1;  i++)  {  [CE]  >  expected  [FE]            AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length  -  1;  i++)  {  Integer  i=0;  i  <  yArray.length  -  1;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=0;    i    <    yArray.length    -    1;    i++)    {    Integer  i=0;  i  <  yArray.length  -  1;  i++)  {	  	non-compiled	[CE]  >  expected	29	None	add
78	[BUG]  [BUGGY]  int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  >  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    	non-compiled	[CE]  >  expected	82	None	replace
79	[BUG]  [BUGGY]  for(int  i=0;  i  <  YArray.length;  i++)  {  [CE]  cannot  find  symbol  YArray  [FE]        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  YArray.length;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=0;  i  <  YArray.length;  i++)  {	  for(int    i=0;    i    <    yArray.length;    i++)    {    for(int    i=0;    i    <    YArray.length;    i++)    {    	non-compiled	[CE]  cannot  find  symbol  YArray	95	None	replace
80	[BUG]  [BUGGY]  double[]  yArray  =  yArray.get(xArray.length  -  2);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double[]  yArray  =  yArray.get(xArray.length  -  2);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  yArray  =  yArray.get(xArray.length  -  2);	  double[]    yArray    =    yArray.get(xArray.length    -    1);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
81	[BUG]  [BUGGY]  double[]  yArray  =  xArray.get(yArray.length  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double[]  yArray  =  xArray.get(yArray.length  -  1);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  yArray  =  xArray.get(yArray.length  -  1);	  double[]    yArray    =    yArray.get(xArray.length    -    1);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
82	[BUG]  [BUGGY]  double[]  yArray  =  yArray.get(xArray.length  -  1  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double[]  yArray  =  yArray.get(xArray.length  -  1  +  1);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  yArray  =  yArray.get(xArray.length  -  1  +  1);	  double[]    yArray    =    yArray.get(xArray.length    -    1);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
83	[BUG]  [BUGGY]  for(int  i=1;  i  <  xArray.length  +  1;  i++)  {  for(int  i=1;  i  <  xArray.length  +  1;  i++)  {  [CE]  'else'  without  'if'  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=1;  i  <  xArray.length  +  1;  i++)  {  for(int  i=1;  i  <  xArray.length  +  1;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=1;    i    <    xArray.length    +    1;    i++)    {    for(int  i=1;  i  <  xArray.length  +  1;  i++)  {	  	non-compiled	[CE]  'else'  without  'if'	37	None	add
84	[BUG]  [BUGGY]  for(int  i=1;  i  <  xArray.length  +  1;  i++)  {  int  i=1;  i  <  xArray.length  +  1;  i++)  {  [CE]  >  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=1;  i  <  xArray.length  +  1;  i++)  {  int  i=1;  i  <  xArray.length  +  1;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=1;    i    <    xArray.length    +    1;    i++)    {    int  i=1;  i  <  xArray.length  +  1;  i++)  {	  	non-compiled	[CE]  >  expected	37	None	add
85	[BUG]  [BUGGY]  for(int  i=1;  i  <  xArray.length  +  1;  i++)  {  For(int  i=1;  i  <  xArray.length  +  1;  i++)  {  [CE]  '.class'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=1;  i  <  xArray.length  +  1;  i++)  {  For(int  i=1;  i  <  xArray.length  +  1;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=1;    i    <    xArray.length    +    1;    i++)    {    For(int  i=1;  i  <  xArray.length  +  1;  i++)  {	  	non-compiled	[CE]  '.class'  expected	37	None	add
86	[BUG]  [BUGGY]  for(int  i=1;  i  <  xArray.length  +  1;  i++)  {  for(int  i=1;  i  <  yArray.length  +  1;  i++)  {  [CE]  'else'  without  'if'  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=1;  i  <  xArray.length  +  1;  i++)  {  for(int  i=1;  i  <  yArray.length  +  1;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=1;    i    <    xArray.length    +    1;    i++)    {    for(int  i=1;  i  <  yArray.length  +  1;  i++)  {	  	non-compiled	[CE]  'else'  without  'if'	37	None	add
87	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length  +  1;  i++)  {  for(int  i=0;  i  <  yArray.length  +  1;  i++)  {  [CE]  'else'  without  'if'  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length  +  1;  i++)  {  for(int  i=0;  i  <  yArray.length  +  1;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=0;    i    <    yArray.length    +    1;    i++)    {    for(int  i=0;  i  <  yArray.length  +  1;  i++)  {	  	non-compiled	[CE]  'else'  without  'if'	33	None	add
88	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length  +  1;  i++)  {  int  i=0;  i  <  yArray.length  +  1;  i++)  {  [CE]  >  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length  +  1;  i++)  {  int  i=0;  i  <  yArray.length  +  1;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=0;    i    <    yArray.length    +    1;    i++)    {    int  i=0;  i  <  yArray.length  +  1;  i++)  {	  	non-compiled	[CE]  >  expected	33	None	add
89	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length  +  1;  i++)  {  For(int  i=0;  i  <  yArray.length  +  1;  i++)  {  [CE]  '.class'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length  +  1;  i++)  {  For(int  i=0;  i  <  yArray.length  +  1;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=0;    i    <    yArray.length    +    1;    i++)    {    For(int  i=0;  i  <  yArray.length  +  1;  i++)  {	  	non-compiled	[CE]  '.class'  expected	33	None	add
90	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length  +  1;  i++)  {  for(int  i=0;  i  <  yArray[i]  +  1;  i++)  {  [CE]  'else'  without  'if'  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length  +  1;  i++)  {  for(int  i=0;  i  <  yArray[i]  +  1;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=0;    i    <    yArray.length    +    1;    i++)    {    for(int  i=0;  i  <  yArray[i]  +  1;  i++)  {	  	non-compiled	[CE]  'else'  without  'if'	33	None	add
91	[BUG]  [BUGGY]  For(int  i=0;  i  <  yArray.length  -  1;  i++)  {  [CE]  '.class'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  For(int  i=0;  i  <  yArray.length  -  1;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	For(int  i=0;  i  <  yArray.length  -  1;  i++)  {	  for(int    i=0;    i    <    xArray.length    -    1;    i++)    {    For(int    i=0;    i    <    xArray.length    -    1;    i++)    {    	non-compiled	[CE]  '.class'  expected	43	None	replace
92	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length  +  2;  i++)  {  for(int  i=0;  i  <  xArray.length  +  2;  i++)  {  [CE]  'else'  without  'if'  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length  +  2;  i++)  {  for(int  i=0;  i  <  xArray.length  +  2;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=0;    i    <    xArray.length    +    2;    i++)    {    for(int  i=0;  i  <  xArray.length  +  2;  i++)  {	  	non-compiled	[CE]  'else'  without  'if'	57	None	add
93	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length  +  2;  i++)  {  int  i=0;  i  <  xArray.length  +  2;  i++)  {  [CE]  >  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length  +  2;  i++)  {  int  i=0;  i  <  xArray.length  +  2;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=0;    i    <    xArray.length    +    2;    i++)    {    int  i=0;  i  <  xArray.length  +  2;  i++)  {	  	non-compiled	[CE]  >  expected	57	None	add
94	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length  +  2;  i++)  {  For(int  i=0;  i  <  xArray.length  +  2;  i++)  {  [CE]  '.class'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length  +  2;  i++)  {  For(int  i=0;  i  <  xArray.length  +  2;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=0;    i    <    xArray.length    +    2;    i++)    {    For(int  i=0;  i  <  xArray.length  +  2;  i++)  {	  	non-compiled	[CE]  '.class'  expected	57	None	add
95	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length  +  2;  i++)  {  for(int  i=0;  i  <  yArray.length  +  2;  i++)  {  [CE]  'else'  without  'if'  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length  +  2;  i++)  {  for(int  i=0;  i  <  yArray.length  +  2;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=0;    i    <    xArray.length    +    2;    i++)    {    for(int  i=0;  i  <  yArray.length  +  2;  i++)  {	  	non-compiled	[CE]  'else'  without  'if'	57	None	add
96	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length  +  2;  i++)  {  double  i=0;  i  <  xArray.length  +  2;  i++)  {  [CE]  >  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length  +  2;  i++)  {  double  i=0;  i  <  xArray.length  +  2;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=0;    i    <    xArray.length    +    2;    i++)    {    double  i=0;  i  <  xArray.length  +  2;  i++)  {	  	non-compiled	[CE]  >  expected	57	None	add
97	[BUG]  [BUGGY]  Double[]  xArray  =(double[])yArray.clone();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  Double[]  xArray  =(double[])yArray.clone();  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	Double[]  xArray  =(double[])yArray.clone();	  double[]    xArray    =(double[])yArray.clone();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
98	[BUG]  [BUGGY]  final  double[]  xArray  =(double[])yArray.clone();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  final  double[]  xArray  =(double[])yArray.clone();  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	final  double[]  xArray  =(double[])yArray.clone();	  double[]    xArray    =(double[])yArray.clone();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
99	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  yArray.length;  i  <  len;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix  ==  null)  {  [CE]  'else'  without  'if'  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i  =  0,  len  =  yArray.length;  i  <  len;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix  ==  null)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i  =  0,  len  =  yArray.length;  i  <  len;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix  ==  null)  {	  for(int    i    =    0,    yArray.length    =    xArray.length;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    getCovarianceMatrix(i);    if(covarianceMatrix    ==    null)    {    	non-compiled	[CE]  'else'  without  'if'	110	None	replace
100	[BUG]  [BUGGY]  for(int  i  =  0,  yArray.length  =  xArray.length;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix  ==  nu  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i  =  0,  yArray.length  =  xArray.length;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix  ==  nu  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i  =  0,  yArray.length  =  xArray.length;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix  ==  nu	  for(int    i    =    0,    yArray.length    =    xArray.length;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    getCovarianceMatrix(i);    if(covarianceMatrix    ==    null)    {    	non-compiled	[CE]  ';'  expected	110	None	replace
101	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	add	                for(int        i=0;        i        <        xArray.length;        i++)        {        regression.addData(yArray[i],        xArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }	  	compilable	  [FE]  AssertionFailedError  	70	9	add
102	[BUG]  [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        xArray.length;        i++)        {        regression.addData(yArray[i],        xArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }	  	compilable	  [FE]  AssertionFailedError  	70	9	add
103	[BUG]  [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  yArray[i]);  }  [CE]  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        xArray.length;        i++)        {        regression.addData(yArray[i],        xArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  yArray[i]);  }	  	non-compiled	[CE]  	70	None	add
104	[BUG]  [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        xArray.length;        i++)        {        regression.addData(yArray[i],        xArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }	  	non-compiled	[CE]  >  expected	70	None	add
105	[BUG]  [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        xArray.length;        i++)        {        regression.addData(yArray[i],        xArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
106	[BUG]  [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  [CE]  'else'  without  'if'  [FE]            AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        xArray.length;        i++)        {        regression.addData(yArray[i],        xArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {	  	non-compiled	[CE]  'else'  without  'if'	70	None	add
107	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length  -  2;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	add	for(int  i=0;  i  <  yArray.length  -  2;  i++)  {	  for(int    i=0;    i    <    xArray.length    -    2;    i++)    {    	compilable	  [FE]  AssertionFailedError  	32	8	replace
108	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length  -  2;  i++)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length  -  2;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=0;  i  <  yArray.length  -  2;  i++)  {	  for(int    i=0;    i    <    xArray.length    -    2;    i++)    {    	compilable	  [FE]  AssertionFailedError  	32	8	replace
109	[BUG]  [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  for(int  i=1;  i  <  yArray.length;  i++)  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  for(int  i=1;  i  <  yArray.length;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=1;    i    <    yArray.length;    i++)    {    for(int  i=1;  i  <  yArray.length;  i++)  {	  	non-compiled	[CE]  'else'  without  'if'	35	None	add
110	[BUG]  [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  For(int  i=1;  i  <  yArray.length;  i++)  {  [CE]  '.class'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  For(int  i=1;  i  <  yArray.length;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=1;    i    <    yArray.length;    i++)    {    For(int  i=1;  i  <  yArray.length;  i++)  {	  	non-compiled	[CE]  '.class'  expected	35	None	add
111	[BUG]  [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  int  i=1;  i  <  yArray.length;  i++)  {  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  int  i=1;  i  <  yArray.length;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=1;    i    <    yArray.length;    i++)    {    int  i=1;  i  <  yArray.length;  i++)  {	  	non-compiled	[CE]  >  expected	35	None	add
112	[BUG]  [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  final  int  i=1;  i  <  yArray.length;  i++)  {  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  final  int  i=1;  i  <  yArray.length;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=1;    i    <    yArray.length;    i++)    {    final  int  i=1;  i  <  yArray.length;  i++)  {	  	non-compiled	[CE]  >  expected	35	None	add
113	[BUG]  [BUGGY]  double  size  =  xArray.length;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double  size  =  xArray.length;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double  size  =  xArray.length;	  int    size    =    xArray.length;    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
114	[BUG]  [BUGGY]  int  size  =  xArray.length  -  1;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  size  =  xArray.length  -  1;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  size  =  xArray.length  -  1;	  int    size    =    xArray.length;    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
115	[BUG]  [BUGGY]  int  size  =  xArray.length  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  size  =  xArray.length  +  1;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  size  =  xArray.length  +  1;	  int    size    =    xArray.length;    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
116	[BUG]  [BUGGY]  int  i=0;  i  <  xArray.length;  i++)  {  [CE]  >  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  i=0;  i  <  xArray.length;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  i=0;  i  <  xArray.length;  i++)  {	  for(int    i=0;    i    <    xArray.length    +    1;    i++)    {    int    i=0;    i    <    xArray.length    +    1;    i++)    {    	non-compiled	[CE]  >  expected	17	None	replace
117	[BUG]  [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  [CE]  >  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  i=0;  i  <  yArray.length;  i++)  {	  for(int    i=0;    i    <    xArray.length    +    1;    i++)    {    int    i=0;    i    <    xArray.length    +    1;    i++)    {    	non-compiled	[CE]  >  expected	17	None	replace
118	[BUG]  [BUGGY]  double  size  =  Math.max(yArray.size(),  regression.length  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double  size  =  Math.max(yArray.size(),  regression.length  -  1);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double  size  =  Math.max(yArray.size(),  regression.length  -  1);	  double    size    =    Math.max(regression.size(),    yArray.length    -    1);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
119	[BUG]  [BUGGY]  double  size  =  Math.max(yArray.size(),  regression.size  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double  size  =  Math.max(yArray.size(),  regression.size  -  1);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double  size  =  Math.max(yArray.size(),  regression.size  -  1);	  double    size    =    Math.max(regression.size(),    yArray.length    -    1);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
120	[BUG]  [BUGGY]  double  size  =  Math.max(regression.size(),  yArray.length  -  2);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double  size  =  Math.max(regression.size(),  yArray.length  -  2);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double  size  =  Math.max(regression.size(),  yArray.length  -  2);	  double    size    =    Math.max(regression.size(),    yArray.length    -    1);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
121	[BUG]  [BUGGY]  int  size  =  xArray.size()  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  size  =  xArray.size()  -  1;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  size  =  xArray.size()  -  1;	  int    size    =    xArray.size();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
122	[BUG]  [BUGGY]  int  size  =  xArray.size()  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  size  =  xArray.size()  +  1;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  size  =  xArray.size()  +  1;	  int    size    =    xArray.size();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
123	[BUG]  [BUGGY]  double[]  yArray  =(yArray!=  null)?  0  :  yArray.length;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double[]  yArray  =(yArray!=  null)?  0  :  yArray.length;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  yArray  =(yArray!=  null)?  0  :  yArray.length;	  double[]    yArray    =(yArray    ==    null)?    0    :    yArray.length;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
124	[BUG]  [BUGGY]  double[]  yArray  =(yArray  ==  null)?  0  :  xArray.length;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double[]  yArray  =(yArray  ==  null)?  0  :  xArray.length;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  yArray  =(yArray  ==  null)?  0  :  xArray.length;	  double[]    yArray    =(yArray    ==    null)?    0    :    yArray.length;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
125	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  Integer  i=0;  i  <  xArray.length;  i++)  {  [CE]  >  expected  [FE]        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  Integer  i=0;  i  <  xArray.length;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  Integer  i=0;  i  <  xArray.length;  i++)  {	  for(int    i=1;    i    <    xArray.length;    i++)    {    Integer    i=1;    i    <    xArray.length;    i++)    {    	non-compiled	[CE]  >  expected	103	None	replace
126	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  Integer  i=1;  i  <  xArray.length;  i++)  {  [CE]  >  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  Integer  i=1;  i  <  xArray.length;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  Integer  i=1;  i  <  xArray.length;  i++)  {	  for(int    i=1;    i    <    xArray.length;    i++)    {    Integer    i=1;    i    <    xArray.length;    i++)    {    	non-compiled	[CE]  >  expected	103	None	replace
127	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  int  i  =  0;  i  <  yArray.length;  i++)  {  [CE]  >  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  int  i  =  0;  i  <  yArray.length;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  int  i  =  0;  i  <  yArray.length;  i++)  {	  for(int    i=0;    i    <    xArray.length    +    1;    i++)    {    int    i=0;    i    <    yArray.length    +    1;    i++)    {    	non-compiled	[CE]  >  expected	100	None	replace
128	[BUG]  [BUGGY]  double  nVars  =  Math.min(yArray.length,  yArray.length);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double  nVars  =  Math.min(yArray.length,  yArray.length);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double  nVars  =  Math.min(yArray.length,  yArray.length);	  int    nVars    =    Math.min(yArray.length,    yArray.length);    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
129	[BUG]  [BUGGY]  int  nVars  =  Math.max(yArray.length,  xArray.length);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  nVars  =  Math.max(yArray.length,  xArray.length);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  nVars  =  Math.max(yArray.length,  xArray.length);	  int    nVars    =    Math.min(yArray.length,    yArray.length);    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
130	[BUG]  [BUGGY]  for(int  i=1;  i  <  xArray.length  -  1;  i++)  {  for(int  i=1;  i  <  xArray.length  -  1;  i++)  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=1;  i  <  xArray.length  -  1;  i++)  {  for(int  i=1;  i  <  xArray.length  -  1;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=1;    i    <    xArray.length    -    1;    i++)    {    for(int  i=1;  i  <  xArray.length  -  1;  i++)  {	  	non-compiled	[CE]  'else'  without  'if'	101	None	add
131	[BUG]  [BUGGY]  for(int  i=1;  i  <  xArray.length  -  1;  i++)  {  int  i=1;  i  <  xArray.length  -  1;  i++)  {  [CE]  >  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=1;  i  <  xArray.length  -  1;  i++)  {  int  i=1;  i  <  xArray.length  -  1;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=1;    i    <    xArray.length    -    1;    i++)    {    int  i=1;  i  <  xArray.length  -  1;  i++)  {	  	non-compiled	[CE]  >  expected	101	None	add
132	[BUG]  [BUGGY]  for(int  i=1;  i  <  xArray.length  -  1;  i++)  {  For(int  i=1;  i  <  xArray.length  -  1;  i++)  {  [CE]  '.class'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=1;  i  <  xArray.length  -  1;  i++)  {  For(int  i=1;  i  <  xArray.length  -  1;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=1;    i    <    xArray.length    -    1;    i++)    {    For(int  i=1;  i  <  xArray.length  -  1;  i++)  {	  	non-compiled	[CE]  '.class'  expected	101	None	add
133	[BUG]  [BUGGY]  for(int  i=1;  i  <  xArray.length  -  1;  i++)  {  for(int  i=1;  i  <  yArray.length  -  1;  i++)  {  [CE]  'else'  without  'if'  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=1;  i  <  xArray.length  -  1;  i++)  {  for(int  i=1;  i  <  yArray.length  -  1;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=1;    i    <    xArray.length    -    1;    i++)    {    for(int  i=1;  i  <  yArray.length  -  1;  i++)  {	  	non-compiled	[CE]  'else'  without  'if'	101	None	add
134	[BUG]  [BUGGY]  for(int  i=1;  i  <  xArray.length  -  1;  i++)  {  final  int  i=1;  i  <  xArray.length  -  1;  i++)  {  [CE]  >  expected  [FE]            AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=1;  i  <  xArray.length  -  1;  i++)  {  final  int  i=1;  i  <  xArray.length  -  1;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=1;    i    <    xArray.length    -    1;    i++)    {    final  int  i=1;  i  <  xArray.length  -  1;  i++)  {	  	non-compiled	[CE]  >  expected	101	None	add
135	[BUG]  [BUGGY]  double  size  =  yArray.length  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double  size  =  yArray.length  -  1;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double  size  =  yArray.length  -  1;	  double    size    =    yArray.length;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
136	[BUG]  [BUGGY]  double  size  =  yArray.length  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double  size  =  yArray.length  +  1;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double  size  =  yArray.length  +  1;	  double    size    =    yArray.length;    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
137	[BUG]  [BUGGY]  int  size  =  yArray.length  +  2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  size  =  yArray.length  +  2;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  size  =  yArray.length  +  2;	  int    size    =    yArray.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
138	[BUG]  [BUGGY]  double  size  =  Math.max(regression.size(),  yArray.size);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double  size  =  Math.max(regression.size(),  yArray.size);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double  size  =  Math.max(regression.size(),  yArray.size);	  double    size    =    Math.max(yArray.size(),    regression.size);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
139	[BUG]  [BUGGY]  double  size  =  Math.max(yArray.size(),  yArray.length);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double  size  =  Math.max(yArray.size(),  yArray.length);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double  size  =  Math.max(yArray.size(),  yArray.length);	  double    size    =    Math.max(yArray.size(),    regression.size);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
140	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xxArray[i]);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xxArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xxArray[i]);  }	          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xxArray[i]);    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
141	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=1;  i  <  yArray.length  +  1;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	add	for(int  i=1;  i  <  yArray.length  +  1;  i++)  {	  for(int    i=1;    i    <    yArray.length;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	36	13	replace
142	[BUG]  [BUGGY]  for(int  i=1;  i  <  yArray.length  +  1;  i++)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=1;  i  <  yArray.length  +  1;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=1;  i  <  yArray.length  +  1;  i++)  {	  for(int    i=1;    i    <    yArray.length;    i++)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	36	13	replace
143	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	add	                for(int        i=0;        i        <        yArray.length;        i++)        {        regression.addData(yArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  	compilable	  [FE]  AssertionFailedError  	9	12	add
144	[BUG]  [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        yArray.length;        i++)        {        regression.addData(yArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  	compilable	  [FE]  AssertionFailedError  	9	12	add
145	[BUG]  [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        yArray.length;        i++)        {        regression.addData(yArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
146	[BUG]  [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        yArray.length;        i++)        {        regression.addData(yArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
147	[BUG]  [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  y  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  y  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        yArray.length;        i++)        {        regression.addData(yArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  y	  	non-compiled	[CE]  ')'  expected	9	None	add
148	[BUG]  [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  [CE]  'else'  without  'if'  [FE]            AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        yArray.length;        i++)        {        regression.addData(yArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {	  	non-compiled	[CE]  'else'  without  'if'	9	None	add
149	[BUG]  [BUGGY]  double  size  =  xArray.size()  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double  size  =  xArray.size()  +  1;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double  size  =  xArray.size()  +  1;	  double    size    =    xArray.size();    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
150	[BUG]  [BUGGY]  double  size  =  xArray.size()  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double  size  =  xArray.size()  -  1;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double  size  =  xArray.size()  -  1;	  double    size    =    xArray.size();    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
151	[BUG]  [BUGGY]  double  size  =  xArray.size()  /  2;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double  size  =  xArray.size()  /  2;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double  size  =  xArray.size()  /  2;	  double    size    =    xArray.size();    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
152	[BUG]  [BUGGY]  double[]  yArray  =  yArray.toArray(new  double[yArray.length  -  2]);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double[]  yArray  =  yArray.toArray(new  double[yArray.length  -  2]);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  yArray  =  yArray.toArray(new  double[yArray.length  -  2]);	  double[]    yArray    =    yArray.toArray(new    double[yArray.length    -    1]);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
153	[BUG]  [BUGGY]  double  size  =  Math.max(revised.size(),  xArray.length);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double  size  =  Math.max(revised.size(),  xArray.length);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double  size  =  Math.max(revised.size(),  xArray.length);	  double    size    =    Math.max(xArray.size(),    regression.length);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
154	[BUG]  [BUGGY]  final  int  i=0;  i  <  xArray.length  -  1;  i++)  {  [CE]  >  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  final  int  i=0;  i  <  xArray.length  -  1;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	final  int  i=0;  i  <  xArray.length  -  1;  i++)  {	  for(int    i=0;    i    <    xArray.length    -    1;    i++)    {    final    int    i=0;    i    <    xArray.length    -    1;    i++)    {    	non-compiled	[CE]  >  expected	46	None	replace
155	[BUG]  [BUGGY]  for(int  i  =  0,  yArray.length  =  xArray.length;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  null  |  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i  =  0,  yArray.length  =  xArray.length;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  null  |  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i  =  0,  yArray.length  =  xArray.length;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  null  |	  for(int    i    =    0,    yArray.length    =    xArray.length;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    getCovarianceMatrix(i);    if(covarianceMatrix!=    null    ||    	non-compiled	[CE]  ';'  expected	109	None	replace
156	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  yArray.length;  i  <  len;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  null  ||  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i  =  0,  len  =  yArray.length;  i  <  len;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  null  ||  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i  =  0,  len  =  yArray.length;  i  <  len;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  null  ||	  for(int    i    =    0,    yArray.length    =    xArray.length;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    getCovarianceMatrix(i);    if(covarianceMatrix!=    null    ||    	non-compiled	[CE]  ')'  expected	109	None	replace
157	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length  -  2;  i++)  {  for(int  i=0;  i  <  xArray.length  -  2;  i++)  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length  -  2;  i++)  {  for(int  i=0;  i  <  xArray.length  -  2;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=0;    i    <    xArray.length    -    2;    i++)    {    for(int  i=0;  i  <  xArray.length  -  2;  i++)  {	  	non-compiled	[CE]  'else'  without  'if'	31	None	add
158	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length  -  2;  i++)  {  int  i=0;  i  <  xArray.length  -  2;  i++)  {  [CE]  >  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length  -  2;  i++)  {  int  i=0;  i  <  xArray.length  -  2;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=0;    i    <    xArray.length    -    2;    i++)    {    int  i=0;  i  <  xArray.length  -  2;  i++)  {	  	non-compiled	[CE]  >  expected	31	None	add
159	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length  -  2;  i++)  {  For(int  i=0;  i  <  xArray.length  -  2;  i++)  {  [CE]  '.class'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length  -  2;  i++)  {  For(int  i=0;  i  <  xArray.length  -  2;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=0;    i    <    xArray.length    -    2;    i++)    {    For(int  i=0;  i  <  xArray.length  -  2;  i++)  {	  	non-compiled	[CE]  '.class'  expected	31	None	add
160	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length  -  2;  i++)  {  for(int  i=0;  i  <  yArray.length  -  2;  i++)  {  [CE]  'else'  without  'if'  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length  -  2;  i++)  {  for(int  i=0;  i  <  yArray.length  -  2;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=0;    i    <    xArray.length    -    2;    i++)    {    for(int  i=0;  i  <  yArray.length  -  2;  i++)  {	  	non-compiled	[CE]  'else'  without  'if'	31	None	add
161	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length  -  2;  i++)  {  final  int  i=0;  i  <  xArray.length  -  2;  i++)  {  [CE]  >  expected  [FE]            AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length  -  2;  i++)  {  final  int  i=0;  i  <  xArray.length  -  2;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=0;    i    <    xArray.length    -    2;    i++)    {    final  int  i=0;  i  <  xArray.length  -  2;  i++)  {	  	non-compiled	[CE]  >  expected	31	None	add
162	[BUG]  [BUGGY]  for(int  i  =  0,  yArray.length  =  xArray.length;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  null)  {  return  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i  =  0,  yArray.length  =  xArray.length;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  null)  {  return  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i  =  0,  yArray.length  =  xArray.length;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  null)  {  return	  for(int    i    =    0,    yArray.length    =    xArray.length;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    getCovarianceMatrix(i);    if(covarianceMatrix!=    null)    {    return    correlation    	non-compiled	[CE]  ';'  expected	111	None	replace
163	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  yArray.length;  i  <  len;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  null)  {  return  correlation  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i  =  0,  len  =  yArray.length;  i  <  len;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  null)  {  return  correlation  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i  =  0,  len  =  yArray.length;  i  <  len;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  null)  {  return  correlation	  for(int    i    =    0,    yArray.length    =    xArray.length;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    getCovarianceMatrix(i);    if(covarianceMatrix!=    null)    {    return    correlation    	non-compiled	[CE]  ';'  expected	111	None	replace
164	[BUG]  [BUGGY]  int  size  =  yArray.length  /  1;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  size  =  yArray.length  /  1;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  size  =  yArray.length  /  1;	  int    size    =    yArray.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
165	[BUG]  [BUGGY]  double  size  =  Math.max(yArray.size(),  regression.length  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double  size  =  Math.max(yArray.size(),  regression.length  +  1);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double  size  =  Math.max(yArray.size(),  regression.length  +  1);	  double    size    =    Math.max(regression.size(),    yArray.length    +    1);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
166	[BUG]  [BUGGY]  double  size  =  Math.max(yArray.size(),  regression.size  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double  size  =  Math.max(yArray.size(),  regression.size  +  1);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double  size  =  Math.max(yArray.size(),  regression.size  +  1);	  double    size    =    Math.max(regression.size(),    yArray.length    +    1);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
167	[BUG]  [BUGGY]  double  size  =  Math.max(regression.size(),  yArray.length  +  2);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double  size  =  Math.max(regression.size(),  yArray.length  +  2);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double  size  =  Math.max(regression.size(),  yArray.length  +  2);	  double    size    =    Math.max(regression.size(),    yArray.length    +    1);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
168	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  YArray[i]);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  YArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  YArray[i]);  }	          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    YArray[i]);    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
169	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length  -  1;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length  -  1;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=0;  i  <  yArray.length  -  1;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	  for(int    i=0;    i    <    xArray.length    -    1;    i++)    {    regression.addData(yArray[i]);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
170	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length  -  1;  i++)  {  regression.addData(xArray[i]);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length  -  1;  i++)  {  regression.addData(xArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=0;  i  <  yArray.length  -  1;  i++)  {  regression.addData(xArray[i]);  }	  for(int    i=0;    i    <    xArray.length    -    1;    i++)    {    regression.addData(yArray[i]);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
171	[BUG]  [BUGGY]  For(int  i=0;  i  <  yArray.length  -  1;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  For(int  i=0;  i  <  yArray.length  -  1;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	For(int  i=0;  i  <  yArray.length  -  1;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	  for(int    i=0;    i    <    xArray.length    -    1;    i++)    {    regression.addData(yArray[i]);    }    	non-compiled	[CE]  	2	None	replace
172	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	add	                for(int        i=0;        i        <        yArray.length;        i++)        {        regression.addData(xArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	  	compilable	  [FE]  AssertionFailedError  	20	3	add
173	[BUG]  [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        yArray.length;        i++)        {        regression.addData(xArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	  	compilable	  [FE]  AssertionFailedError  	20	3	add
174	[BUG]  [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        yArray.length;        i++)        {        regression.addData(xArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
175	[BUG]  [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  y  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  y  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        yArray.length;        i++)        {        regression.addData(xArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  y	  	non-compiled	[CE]  ')'  expected	20	None	add
176	[BUG]  [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray[i]);  }  [CE]  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        yArray.length;        i++)        {        regression.addData(xArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray[i]);  }	  	non-compiled	[CE]  	20	None	add
177	[BUG]  [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  [CE]  'else'  without  'if'  [FE]            AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        yArray.length;        i++)        {        regression.addData(xArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {	  	non-compiled	[CE]  'else'  without  'if'	20	None	add
178	[BUG]  [BUGGY]  int  i=0;  i  <  xArray.length  -  1;  i++)  {  [CE]  >  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  i=0;  i  <  xArray.length  -  1;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  i=0;  i  <  xArray.length  -  1;  i++)  {	  for(int    i=0;    i    <    xArray.length    -    1;    i++)    {    int    i=0;    i    <    xArray.length    -    1;    i++)    {    	non-compiled	[CE]  >  expected	44	None	replace
179	[BUG]  [BUGGY]  int  size  =  xArray.length;  Int  size  =  yArray.length;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  size  =  xArray.length;  Int  size  =  yArray.length;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  size  =  xArray.length;  Int  size  =  yArray.length;	          int    size    =    yArray.length;    Int    size    =    yArray.length;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
180	[BUG]  [BUGGY]  Int  size  =  yArray.length;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  Int  size  =  yArray.length;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	Int  size  =  yArray.length;	          int    size    =    yArray.length;    Int    size    =    yArray.length;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
181	[BUG]  [BUGGY]  For(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [CE]  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  For(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	For(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int    i=0;    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    	non-compiled	[CE]  	119	None	replace
182	[BUG]  [BUGGY]  int  j  =  Math.min(yArray.length,  yArray.length);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  j  =  Math.min(yArray.length,  yArray.length);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  j  =  Math.min(yArray.length,  yArray.length);	  int    j    =    Math.min(yArray.length,    xArray.length);    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
183	[BUG]  [BUGGY]  int  j  =  Math.min(yArray.length,  xArray.length  -  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  j  =  Math.min(yArray.length,  xArray.length  -  1);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  j  =  Math.min(yArray.length,  xArray.length  -  1);	  int    j    =    Math.min(yArray.length,    xArray.length);    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
184	[BUG]  [BUGGY]  int  j  =  Math.min(yArray.length,  xArray.length  +  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  j  =  Math.min(yArray.length,  xArray.length  +  1);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  j  =  Math.min(yArray.length,  xArray.length  +  1);	  int    j    =    Math.min(yArray.length,    xArray.length);    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
185	[BUG]  [BUGGY]  double[]  yArray  =  yArray.get(xArray.length  +  2);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double[]  yArray  =  yArray.get(xArray.length  +  2);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  yArray  =  yArray.get(xArray.length  +  2);	  double[]    yArray    =    yArray.get(xArray.length    +    1);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
186	[BUG]  [BUGGY]  double[]  yArray  =  xArray.get(yArray.length  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double[]  yArray  =  xArray.get(yArray.length  +  1);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  yArray  =  xArray.get(yArray.length  +  1);	  double[]    yArray    =    yArray.get(xArray.length    +    1);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
187	[BUG]  [BUGGY]  double[]  yArray  =  yArray.get(xArray.length  *  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double[]  yArray  =  yArray.get(xArray.length  *  1);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  yArray  =  yArray.get(xArray.length  *  1);	  double[]    yArray    =    yArray.get(xArray.length    +    1);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
188	[BUG]  [BUGGY]  final  int  i=0;  i  <  yArray.length;  i++)  {  [CE]  >  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  final  int  i=0;  i  <  yArray.length;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	final  int  i=0;  i  <  yArray.length;  i++)  {	  for(int    i=0;    i    <    yArray.length;    i++)    {    final    int    i=0;    i    <    yArray.length;    i++)    {    	non-compiled	[CE]  >  expected	66	None	replace
189	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=1;  i  <  yArray.length  -  1;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	add	for(int  i=1;  i  <  yArray.length  -  1;  i++)  {	  for(int    i=1;    i    <    xArray.length    -    1;    i++)    {    	compilable	  [FE]  AssertionFailedError  	102	8	replace
190	[BUG]  [BUGGY]  for(int  i=1;  i  <  yArray.length  -  1;  i++)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=1;  i  <  yArray.length  -  1;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=1;  i  <  yArray.length  -  1;  i++)  {	  for(int    i=1;    i    <    xArray.length    -    1;    i++)    {    	compilable	  [FE]  AssertionFailedError  	102	8	replace
191	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=1;  i  <  xArray.length  -  2;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	add	for(int  i=1;  i  <  xArray.length  -  2;  i++)  {	  for(int    i=1;    i    <    xArray.length    -    1;    i++)    {    	compilable	  [FE]  AssertionFailedError  	102	8	replace
192	[BUG]  [BUGGY]  for(int  i=1;  i  <  xArray.length  -  2;  i++)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=1;  i  <  xArray.length  -  2;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=1;  i  <  xArray.length  -  2;  i++)  {	  for(int    i=1;    i    <    xArray.length    -    1;    i++)    {    	compilable	  [FE]  AssertionFailedError  	102	8	replace
193	[BUG]  [BUGGY]  double[]  yArray  =  yArray.toArray(new  double[xArray.length],  yArray.length);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double[]  yArray  =  yArray.toArray(new  double[xArray.length],  yArray.length);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  yArray  =  yArray.toArray(new  double[xArray.length],  yArray.length);	  double[]    yArray    =    yArray.toArray(new    double[yArray.length],    yArray.length);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
194	[BUG]  [BUGGY]  double[]  yArray  =  yArray.toArray(new  double[yArray.length],  xArray.length);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double[]  yArray  =  yArray.toArray(new  double[yArray.length],  xArray.length);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  yArray  =  yArray.toArray(new  double[yArray.length],  xArray.length);	  double[]    yArray    =    yArray.toArray(new    double[yArray.length],    yArray.length);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
195	[BUG]  [BUGGY]  double[]  yArray  =  yArray.toArray(new  double[yArray.length  +  1],  yArray.length);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double[]  yArray  =  yArray.toArray(new  double[yArray.length  +  1],  yArray.length);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  yArray  =  yArray.toArray(new  double[yArray.length  +  1],  yArray.length);	  double[]    yArray    =    yArray.toArray(new    double[yArray.length],    yArray.length);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
196	[BUG]  [BUGGY]  double  size  =  Math.max(regression.size(),  xArray.length  -  2);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double  size  =  Math.max(regression.size(),  xArray.length  -  2);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double  size  =  Math.max(regression.size(),  xArray.length  -  2);	  double    size    =    Math.max(regression.size(),    xArray.length    -    1);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
197	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	add	                for(int        i=0;        i        <        yArray.length;        i++)        {        regression.addData(yArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  	compilable	  [FE]  AssertionFailedError  	13	11	add
198	[BUG]  [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        yArray.length;        i++)        {        regression.addData(yArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  	compilable	  [FE]  AssertionFailedError  	13	11	add
199	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	add	                for(int        i=0;        i        <        yArray.length;        i++)        {        regression.addData(yArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	  	compilable	  [FE]  AssertionFailedError  	13	11	add
200	[BUG]  [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        yArray.length;        i++)        {        regression.addData(yArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	  	compilable	  [FE]  AssertionFailedError  	13	11	add
201	[BUG]  [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        yArray.length;        i++)        {        regression.addData(yArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
202	[BUG]  [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  y  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  y  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        yArray.length;        i++)        {        regression.addData(yArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  y	  	non-compiled	[CE]  ')'  expected	13	None	add
203	[BUG]  [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  [CE]  'else'  without  'if'  [FE]            AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        yArray.length;        i++)        {        regression.addData(yArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {	  	non-compiled	[CE]  'else'  without  'if'	13	None	add
204	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  nObs;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	add	for(int  i=0;  i  <  nObs;  i++)  {	  for(int    i=0;    i    <    size;    i++)    {    	compilable	  [FE]  AssertionFailedError  	117	4	replace
205	[BUG]  [BUGGY]  for(int  i=0;  i  <  nObs;  i++)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  nObs;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=0;  i  <  nObs;  i++)  {	  for(int    i=0;    i    <    size;    i++)    {    	compilable	  [FE]  AssertionFailedError  	117	4	replace
206	[BUG]  [BUGGY]  for(int  i=0;  i  <  nVars;  i++)  {  [CE]  cannot  find  symbol  nVars  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  nVars;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=0;  i  <  nVars;  i++)  {	  for(int    i=0;    i    <    size;    i++)    {    	non-compiled	[CE]  cannot  find  symbol  nVars	117	None	replace
207	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	add	                for(int        i=0;        i        <        xArray.length;        i++)        {        regression.addData(yArray[i],        xArray[i]);        }        for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }	  	compilable	  [FE]  AssertionFailedError  	67	9	add
208	[BUG]  [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        xArray.length;        i++)        {        regression.addData(yArray[i],        xArray[i]);        }        for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }	  	compilable	  [FE]  AssertionFailedError  	67	9	add
209	[BUG]  [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        xArray.length;        i++)        {        regression.addData(yArray[i],        xArray[i]);        }        for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
210	[BUG]  [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  [CE]  'else'  without  'if'  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        xArray.length;        i++)        {        regression.addData(yArray[i],        xArray[i]);        }        for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {	  	non-compiled	[CE]  'else'  without  'if'	67	None	add
211	[BUG]  [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        xArray.length;        i++)        {        regression.addData(yArray[i],        xArray[i]);        }        for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
212	[BUG]  [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        yArray.length;        i++)        {        regression.addData(yArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  	non-compiled	[CE]  >  expected	9	None	add
213	[BUG]  [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  int  i=0;  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  int  i=0;  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        yArray.length;        i++)        {        regression.addData(yArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    int  i=0;  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  	non-compiled	[CE]  not  a  statement	9	None	add
214	[BUG]  [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        yArray.length;        i++)        {        regression.addData(yArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[	  	non-compiled	[CE]  >  expected	9	None	add
215	[BUG]  [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  int  i=0;  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  int  i=0;  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        yArray.length;        i++)        {        regression.addData(yArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    int  i=0;  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[	  	non-compiled	[CE]  not  a  statement	9	None	add
216	[BUG]  [BUGGY]  int  size  =  yArray.length;  xArray  =  yArray.length;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  size  =  yArray.length;  xArray  =  yArray.length;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  size  =  yArray.length;  xArray  =  yArray.length;	          int    size    =    yArray.length;    t    =    yArray.length;    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
217	[BUG]  [BUGGY]  for(int  i  =  0,  yArray.length  =  xArray.length;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  nu  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i  =  0,  yArray.length  =  xArray.length;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  nu  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i  =  0,  yArray.length  =  xArray.length;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  nu	  for(int    i    =    0,    yArray.length    =    xArray.length;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    getCovarianceMatrix(i);    if(covarianceMatrix!=    null)    {    	non-compiled	[CE]  ';'  expected	108	None	replace
218	[BUG]  [BUGGY]  for(int  i  =  0,  yArray.length  =  xArray.length;  i  <  yArray.length;  i++)  {  RealMatrix[]  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  null)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i  =  0,  yArray.length  =  xArray.length;  i  <  yArray.length;  i++)  {  RealMatrix[]  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  null)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i  =  0,  yArray.length  =  xArray.length;  i  <  yArray.length;  i++)  {  RealMatrix[]  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  null)  {	  for(int    i    =    0,    yArray.length    =    xArray.length;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    getCovarianceMatrix(i);    if(covarianceMatrix!=    null)    {    	non-compiled	[CE]  ';'  expected	108	None	replace
219	[BUG]  [BUGGY]  for(int  i  =  0,  yArray.length  =  xArray.length;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix  ==  null  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i  =  0,  yArray.length  =  xArray.length;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix  ==  null  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i  =  0,  yArray.length  =  xArray.length;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix  ==  null	  for(int    i    =    0,    yArray.length    =    xArray.length;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    getCovarianceMatrix(i);    if(covarianceMatrix    ==    null)    {    	non-compiled	[CE]  ';'  expected	110	None	replace
220	[BUG]  [BUGGY]  double[]  xArray  =(xArray  ==  null)?  0  :  xArray.length;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double[]  xArray  =(xArray  ==  null)?  0  :  xArray.length;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  xArray  =(xArray  ==  null)?  0  :  xArray.length;	  double[]    xArray    =(yArray    ==    null)?    0    :    xArray.length;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
221	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length  -  2;  i++)  {  Integer  i=0;  i  <  xArray.length  -  2;  i++)  {  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length  -  2;  i++)  {  Integer  i=0;  i  <  xArray.length  -  2;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=0;    i    <    xArray.length    -    2;    i++)    {    Integer  i=0;  i  <  xArray.length  -  2;  i++)  {	  	non-compiled	[CE]  >  expected	31	None	add
222	[BUG]  [BUGGY]  double  size  =  Math.max(revised.size(),  yArray.size);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double  size  =  Math.max(revised.size(),  yArray.size);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double  size  =  Math.max(revised.size(),  yArray.size);	  double    size    =    Math.max(yArray.size(),    regression.size);    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
223	[BUG]  [BUGGY]  for(int  i  =  0,  yArray.length  =  yArray.length;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  null)  {  return  correlation  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i  =  0,  yArray.length  =  yArray.length;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  null)  {  return  correlation  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i  =  0,  yArray.length  =  yArray.length;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  null)  {  return  correlation	  for(int    i    =    0,    yArray.length    =    xArray.length;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    getCovarianceMatrix(i);    if(covarianceMatrix!=    null)    {    return    correlation    	non-compiled	[CE]  ';'  expected	111	None	replace
224	[BUG]  [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=0;  i  <  size;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
225	[BUG]  [BUGGY]  int  nVars  =  getNumberOfScreenObservations();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  nVars  =  getNumberOfScreenObservations();  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  nVars  =  getNumberOfScreenObservations();	  int    nVars    =    getNumberOfObservations();    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
226	[BUG]  [BUGGY]  int  nVars  =  getNumberOfSize();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  nVars  =  getNumberOfSize();  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  nVars  =  getNumberOfSize();	  int    nVars    =    getNumberOfObservations();    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
227	[BUG]  [BUGGY]  double[]  xArray  =  yArray.get(xArray.length  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double[]  xArray  =  yArray.get(xArray.length  -  1);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  xArray  =  yArray.get(xArray.length  -  1);	  double[]    yArray    =    yArray.get(xArray.length    -    1);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
228	[BUG]  [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        xArray.length;        i++)        {        regression.addData(yArray[i],        yArray[i]);        }        for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  	non-compiled	[CE]  >  expected	80	None	add
229	[BUG]  [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[  [CE]  >  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        xArray.length;        i++)        {        regression.addData(yArray[i],        yArray[i]);        }        for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[	  	non-compiled	[CE]  >  expected	80	None	add
230	[BUG]  [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(y  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(y  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        xArray.length;        i++)        {        regression.addData(yArray[i],        yArray[i]);        }        for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(y	  	non-compiled	[CE]  >  expected	80	None	add
231	[BUG]  [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        xArray.length;        i++)        {        regression.addData(yArray[i],        yArray[i]);        }        for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(	  	non-compiled	[CE]  >  expected	80	None	add
232	[BUG]  [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        xArray.length;        i++)        {        regression.addData(yArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  	non-compiled	[CE]  >  expected	84	None	add
233	[BUG]  [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[  [CE]  >  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        xArray.length;        i++)        {        regression.addData(yArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[	  	non-compiled	[CE]  >  expected	84	None	add
234	[BUG]  [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(y  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(y  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        xArray.length;        i++)        {        regression.addData(yArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(y	  	non-compiled	[CE]  >  expected	84	None	add
235	[BUG]  [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        xArray.length;        i++)        {        regression.addData(yArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(	  	non-compiled	[CE]  >  expected	84	None	add
236	[BUG]  [BUGGY]  for(int  i=1;  i  <  xArray.length  -  1;  i++)  {  Integer  i=1;  i  <  xArray.length  -  1;  i++)  {  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=1;  i  <  xArray.length  -  1;  i++)  {  Integer  i=1;  i  <  xArray.length  -  1;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=1;    i    <    xArray.length    -    1;    i++)    {    Integer  i=1;  i  <  xArray.length  -  1;  i++)  {	  	non-compiled	[CE]  >  expected	101	None	add
237	[BUG]  [BUGGY]  int  nVars  =  Math.min(yArray.length,  yArray.length  +  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  nVars  =  Math.min(yArray.length,  yArray.length  +  1);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  nVars  =  Math.min(yArray.length,  yArray.length  +  1);	  int    nVars    =    Math.min(yArray.length,    yArray.length);    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
238	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length  -  1;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length  -  1;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=0;  i  <  xArray.length  -  1;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  for(int    i=0;    i    <    xArray.length    -    1;    i++)    {    regression.addData(yArray[i]);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
239	[BUG]  [BUGGY]  for(final  int  i=0;  i  <  xArray.length  -  1;  i++)  {  [CE]  cannot  assign  a  value  to  final  variable  i  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(final  int  i=0;  i  <  xArray.length  -  1;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(final  int  i=0;  i  <  xArray.length  -  1;  i++)  {	  for(int    i=0;    i    <    xArray.length    -    1;    i++)    {    final    int    i=0;    i    <    xArray.length    -    1;    i++)    {    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  i	46	None	replace
240	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length  -  1;  i++)  {  Integer  i=0;  i  <  xArray.length  -  1;  i++)  {  [CE]  >  expected  [FE]        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length  -  1;  i++)  {  Integer  i=0;  i  <  xArray.length  -  1;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=0;  i  <  yArray.length  -  1;  i++)  {  Integer  i=0;  i  <  xArray.length  -  1;  i++)  {	  for(int    i=0;    i    <    xArray.length    -    1;    i++)    {    Integer    i=0;    i    <    xArray.length    -    1;    i++)    {    	non-compiled	[CE]  >  expected	98	None	replace
241	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length  -  1;  i++)  {  Integer  i=0;  i  <  xArray.length  -  1;  i++)  {  }  [CE]  >  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length  -  1;  i++)  {  Integer  i=0;  i  <  xArray.length  -  1;  i++)  {  }  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=0;  i  <  yArray.length  -  1;  i++)  {  Integer  i=0;  i  <  xArray.length  -  1;  i++)  {  }	  for(int    i=0;    i    <    xArray.length    -    1;    i++)    {    Integer    i=0;    i    <    xArray.length    -    1;    i++)    {    	non-compiled	[CE]  >  expected	98	None	replace
242	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	add	                for(int        i=0;        i        <        xArray.length;        i++)        {        regression.addData(yArray[i],        xArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }	  	compilable	  [FE]  AssertionFailedError  	70	9	add
243	[BUG]  [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        xArray.length;        i++)        {        regression.addData(yArray[i],        xArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }	  	compilable	  [FE]  AssertionFailedError  	70	9	add
244	[BUG]  [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [CE]  >  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        xArray.length;        i++)        {        regression.addData(yArray[i],        xArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }	  	non-compiled	[CE]  >  expected	70	None	add
245	[BUG]  [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        xArray.length;        i++)        {        regression.addData(yArray[i],        xArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[	  	non-compiled	[CE]  >  expected	70	None	add
246	[BUG]  [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        yArray.length;        i++)        {        regression.addData(yArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  	non-compiled	[CE]  >  expected	13	None	add
247	[BUG]  [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[  [CE]  >  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        yArray.length;        i++)        {        regression.addData(yArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[	  	non-compiled	[CE]  >  expected	13	None	add
248	[BUG]  [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  int  i=0;  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  int  i=0;  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        yArray.length;        i++)        {        regression.addData(yArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    int  i=0;  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  	non-compiled	[CE]  not  a  statement	13	None	add
249	[BUG]  [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        yArray.length;        i++)        {        regression.addData(xArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	  	non-compiled	[CE]  >  expected	20	None	add
250	[BUG]  [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[  [CE]  >  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        yArray.length;        i++)        {        regression.addData(xArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[	  	non-compiled	[CE]  >  expected	20	None	add
251	[BUG]  [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  int  i=0;  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  int  i=0;  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        yArray.length;        i++)        {        regression.addData(xArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    int  i=0;  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	  	non-compiled	[CE]  not  a  statement	20	None	add
252	[BUG]  [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  int  i=0;  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  int  i=0;  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        yArray.length;        i++)        {        regression.addData(xArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    int  i=0;  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[	  	non-compiled	[CE]  not  a  statement	20	None	add
253	[BUG]  [BUGGY]  double  size  =  Math.max(revuition.size(),  xArray.length);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double  size  =  Math.max(revuition.size(),  xArray.length);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double  size  =  Math.max(revuition.size(),  xArray.length);	  double    size    =    Math.max(xArray.size(),    regression.length);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
254	[BUG]  [BUGGY]  for(int  i=0;  j  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  j  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=0;  j  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int    i=0;    j    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
255	[BUG]  [BUGGY]  for(int  i=0;  j  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  j  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=0;  j  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int    i=0;    j    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
256	[BUG]  [BUGGY]  for(int  j=0;  j  <  xArray.length;  j++)  {  regression.addData(yArray[j],  yArray[j]);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  j=0;  j  <  xArray.length;  j++)  {  regression.addData(yArray[j],  yArray[j]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  j=0;  j  <  xArray.length;  j++)  {  regression.addData(yArray[j],  yArray[j]);  }	          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int    i=0;    j    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
257	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length  +  2;  i++)  {  Integer  i=0;  i  <  xArray.length  +  2;  i++)  {  [CE]  >  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length  +  2;  i++)  {  Integer  i=0;  i  <  xArray.length  +  2;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=0;    i    <    xArray.length    +    2;    i++)    {    Integer  i=0;  i  <  xArray.length  +  2;  i++)  {	  	non-compiled	[CE]  >  expected	57	None	add
258	[BUG]  [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=1;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
259	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length  -  1;  i++)  {  int  i=0;  i  <  xArray.length  -  1;  i++)  {  [CE]  >  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length  -  1;  i++)  {  int  i=0;  i  <  xArray.length  -  1;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=0;  i  <  yArray.length  -  1;  i++)  {  int  i=0;  i  <  xArray.length  -  1;  i++)  {	  for(int    i=0;    i    <    xArray.length    -    1;    i++)    {    int    i=0;    i    <    xArray.length    -    1;    i++)    {    	non-compiled	[CE]  >  expected	44	None	replace
260	[BUG]  [BUGGY]  int  i=0;  i  <  yArray.length  -  1;  i++)  {  [CE]  >  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  i=0;  i  <  yArray.length  -  1;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  i=0;  i  <  yArray.length  -  1;  i++)  {	  for(int    i=0;    i    <    xArray.length    -    1;    i++)    {    int    i=0;    i    <    xArray.length    -    1;    i++)    {    	non-compiled	[CE]  >  expected	44	None	replace
261	[BUG]  [BUGGY]  For(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  For(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	For(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    For(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    	non-compiled	[CE]  	72	None	replace
262	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  Integer  i=0;  i  <  yArray.length;  i++)  {  [CE]  >  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  Integer  i=0;  i  <  yArray.length;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  Integer  i=0;  i  <  yArray.length;  i++)  {	  for(int    i=0;    i    <    yArray.length;    i++)    {    Integer    i=0;    i    <    yArray.length;    i++)    {    	non-compiled	[CE]  >  expected	65	None	replace
263	[BUG]  [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  Integer  i=0;  i  <  yArray.length;  i++)  {  [CE]  >  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  Integer  i=0;  i  <  yArray.length;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=1;  i  <  yArray.length;  i++)  {  Integer  i=0;  i  <  yArray.length;  i++)  {	  for(int    i=0;    i    <    yArray.length;    i++)    {    Integer    i=0;    i    <    yArray.length;    i++)    {    	non-compiled	[CE]  >  expected	65	None	replace
264	[BUG]  [BUGGY]  int  i=1;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [CE]  >  expected  [FE]        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  i=1;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  i=1;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	  int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    	non-compiled	[CE]  >  expected	90	None	replace
265	[BUG]  [BUGGY]  int  i=0;  yArray.length  =  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [CE]  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  i=0;  yArray.length  =  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  i=0;  yArray.length  =  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	  int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    	non-compiled	[CE]  	90	None	replace
266	[BUG]  [BUGGY]  int  i=0;  yArray.length  =  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  i=0;  yArray.length  =  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  i=0;  yArray.length  =  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    	non-compiled	[CE]  	90	None	replace
267	[BUG]  [BUGGY]  double[]  yArray  =  yArray.toArray(new  double[yArray.length  -  1],  xArray.length);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double[]  yArray  =  yArray.toArray(new  double[yArray.length  -  1],  xArray.length);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  yArray  =  yArray.toArray(new  double[yArray.length  -  1],  xArray.length);	  double[]    yArray    =    yArray.toArray(new    double[yArray.length    -    1]);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
268	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  Integer  i=0;  i  <  xArray.length;  i++)  {  }  [CE]  >  expected  [FE]        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  Integer  i=0;  i  <  xArray.length;  i++)  {  }  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  Integer  i=0;  i  <  xArray.length;  i++)  {  }	  for(int    i=1;    i    <    xArray.length;    i++)    {    Integer    i=1;    i    <    xArray.length;    i++)    {    	non-compiled	[CE]  >  expected	103	None	replace
269	[BUG]  [BUGGY]  int  size  =  xArray.length;  int  size  =  yArray.length;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  size  =  xArray.length;  int  size  =  yArray.length;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  size  =  xArray.length;  int  size  =  yArray.length;	          int    size    =    yArray.length;    int    size    =    yArray.length);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
270	[BUG]  [BUGGY]  double  size  =  yArray.length;  int  size  =  yArray.length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double  size  =  yArray.length;  int  size  =  yArray.length;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double  size  =  yArray.length;  int  size  =  yArray.length;	          int    size    =    yArray.length;    int    size    =    yArray.length);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
271	[BUG]  [BUGGY]  int  size=0;  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  size=0;  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  size=0;  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	  for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
272	[BUG]  [BUGGY]  int  size=0;  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  size=0;  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  size=0;  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
273	[BUG]  [BUGGY]  int  size  =  yArray.length  -  2;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  size  =  yArray.length  -  2;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  size  =  yArray.length  -  2;	  int    size    =    yArray.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
274	[BUG]  [BUGGY]  for(int  i=1;  i  <  size;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=1;  i  <  size;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=1;  i  <  size;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  for(int    i=0;    i    <    size;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
275	[BUG]  [BUGGY]  for(int  i=0;  i  <  nVars;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  nVars;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=0;  i  <  nVars;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  for(int    i=0;    i    <    size;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
276	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  int  i=0;  i  <  xArray.length  +  1;  i++)  {  [CE]  >  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  int  i=0;  i  <  xArray.length  +  1;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  int  i=0;  i  <  xArray.length  +  1;  i++)  {	  for(int    i=0;    i    <    xArray.length    +    1;    i++)    {    int    i=0;    i    <    xArray.length    +    1;    i++)    {    	non-compiled	[CE]  >  expected	17	None	replace
277	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  int  i=0;  i  <  xArray.length;  i++)  {  [CE]  >  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  int  i=0;  i  <  xArray.length;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  int  i=0;  i  <  xArray.length;  i++)  {	  for(int    i=0;    i    <    xArray.length    +    1;    i++)    {    int    i=0;    i    <    xArray.length    +    1;    i++)    {    	non-compiled	[CE]  >  expected	17	None	replace
278	[BUG]  [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  int  i=0;  i  <  yArray.length;  i++)  {  [CE]  >  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  int  i=0;  i  <  yArray.length;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=1;  i  <  yArray.length;  i++)  {  int  i=0;  i  <  yArray.length;  i++)  {	  for(int    i=0;    i    <    yArray.length;    i++)    {    int    i=0;    i    <    yArray.length;    i++)    {    	non-compiled	[CE]  >  expected	64	None	replace
279	[BUG]  [BUGGY]  int  size  =  yArray.length;  Int  size  =  xArray.length;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  size  =  yArray.length;  Int  size  =  xArray.length;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  size  =  yArray.length;  Int  size  =  xArray.length;	          int    size    =    yArray.length;    Int    size    =    yArray.length;    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
280	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length  -  1;  i++)  {  for(int  i=0;  i  <  yArray.length  +  1;  i++)  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length  -  1;  i++)  {  for(int  i=0;  i  <  yArray.length  +  1;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=0;    i    <    yArray.length    -    1;    i++)    {    for(int  i=0;  i  <  yArray.length  +  1;  i++)  {	  	non-compiled	[CE]  'else'  without  'if'	29	None	add
281	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length  +  1;  i++)  {  Integer  i=0;  i  <  yArray.length  +  1;  i++)  {  [CE]  >  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length  +  1;  i++)  {  Integer  i=0;  i  <  yArray.length  +  1;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=0;    i    <    yArray.length    +    1;    i++)    {    Integer  i=0;  i  <  yArray.length  +  1;  i++)  {	  	non-compiled	[CE]  >  expected	33	None	add
282	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length  +  1;  i++)  {  for(int  i=0;  i  <  YArray.length  +  1;  i++)  {  [CE]  'else'  without  'if'  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length  +  1;  i++)  {  for(int  i=0;  i  <  YArray.length  +  1;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=0;    i    <    yArray.length    +    1;    i++)    {    for(int  i=0;  i  <  YArray.length  +  1;  i++)  {	  	non-compiled	[CE]  'else'  without  'if'	33	None	add
283	[BUG]  [BUGGY]  for(int  i=1;  i  <  xArray.length  +  1;  i++)  {  int  i=1;  i  <  yArray.length  +  1;  i++)  {  [CE]  >  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=1;  i  <  xArray.length  +  1;  i++)  {  int  i=1;  i  <  yArray.length  +  1;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=1;    i    <    xArray.length    +    1;    i++)    {    int  i=1;  i  <  yArray.length  +  1;  i++)  {	  	non-compiled	[CE]  >  expected	37	None	add
284	[BUG]  [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  Integer  i=1;  i  <  yArray.length;  i++)  {  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  Integer  i=1;  i  <  yArray.length;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=1;    i    <    yArray.length;    i++)    {    Integer  i=1;  i  <  yArray.length;  i++)  {	  	non-compiled	[CE]  >  expected	35	None	add
285	[BUG]  [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        xArray.length;        i++)        {        regression.addData(yArray[i],        xArray[i]);        }        for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }	  	non-compiled	[CE]  >  expected	67	None	add
286	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	add	                for(int        i=0;        i        <        xArray.length;        i++)        {        regression.addData(yArray[i],        xArray[i]);        }        for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }	  	compilable	  [FE]  AssertionFailedError  	67	9	add
287	[BUG]  [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        xArray.length;        i++)        {        regression.addData(yArray[i],        xArray[i]);        }        for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }	  	compilable	  [FE]  AssertionFailedError  	67	9	add
288	[BUG]  [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        xArray.length;        i++)        {        regression.addData(yArray[i],        xArray[i]);        }        for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }	  	non-compiled	[CE]  >  expected	67	None	add
289	[BUG]  [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        xArray.length;        i++)        {        regression.addData(yArray[i],        xArray[i]);        }        for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[	  	non-compiled	[CE]  >  expected	67	None	add
290	[BUG]  [BUGGY]  for(final  int  i=0;  i  <  yArray.length;  i++)  {  [CE]  cannot  assign  a  value  to  final  variable  i  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(final  int  i=0;  i  <  yArray.length;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(final  int  i=0;  i  <  yArray.length;  i++)  {	  for(int    i=0;    i    <    yArray.length;    i++)    {    final    int    i=0;    i    <    yArray.length;    i++)    {    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  i	66	None	replace
291	[BUG]  [BUGGY]  double[]  yArray  =  yArray.toArray(new  double[yArray.length  *  1]);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double[]  yArray  =  yArray.toArray(new  double[yArray.length  *  1]);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  yArray  =  yArray.toArray(new  double[yArray.length  *  1]);	  double[]    yArray    =    yArray.toArray(new    double[yArray.length    +    1]);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
292	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  int  i=1;  i  <  yArray.length;  i++)  {  [CE]  >  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  int  i=1;  i  <  yArray.length;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  int  i=1;  i  <  yArray.length;  i++)  {	  for(int    i=1;    i    <    xArray.length;    i++)    {    int    i=1;    i    <    xArray.length;    i++)    {    	non-compiled	[CE]  >  expected	53	None	replace
293	[BUG]  [BUGGY]  double[]  yArray  =(yArray  ==  null)?  0  :  yArray.length  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double[]  yArray  =(yArray  ==  null)?  0  :  yArray.length  +  1;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  yArray  =(yArray  ==  null)?  0  :  yArray.length  +  1;	  double[]    yArray    =(yArray    ==    null)?    0    :    yArray.length;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
294	[BUG]  [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  >  expected  [FE]        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    Integer    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    	non-compiled	[CE]  >  expected	112	None	replace
295	[BUG]  [BUGGY]  double  size  =  Math.max(regression.size(),  yArray.length  /  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double  size  =  Math.max(regression.size(),  yArray.length  /  1);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double  size  =  Math.max(regression.size(),  yArray.length  /  1);	  double    size    =    Math.max(regression.size(),    yArray.length    +    1);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
296	[BUG]  [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        yArray.length;        i++)        {        regression.addData(xArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
297	[BUG]  [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        xArray.length;        i++)        {        regression.addData(yArray[i],        xArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
298	[BUG]  [BUGGY]  int  j  =  Math.min(yArray.length,  yArray.length  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  j  =  Math.min(yArray.length,  yArray.length  +  1);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  j  =  Math.min(yArray.length,  yArray.length  +  1);	  int    j    =    Math.min(yArray.length,    xArray.length);    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
299	[BUG]  [BUGGY]  double[]  xArray  =  yArray.get(xArray.length  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double[]  xArray  =  yArray.get(xArray.length  +  1);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  xArray  =  yArray.get(xArray.length  +  1);	  double[]    yArray    =    yArray.get(xArray.length    +    1);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
300	[BUG]  [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        xArray.length;        i++)        {        regression.addData(yArray[i],        xArray[i]);        }        for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[	  	non-compiled	[CE]  >  expected	67	None	add
301	[BUG]  [BUGGY]  Double[]  yArray  =(yArray  ==  null)?  0  :  yArray.length;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  Double[]  yArray  =(yArray  ==  null)?  0  :  yArray.length;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	Double[]  yArray  =(yArray  ==  null)?  0  :  yArray.length;	  double[]    yArray    =(yArray    ==    null)?    0    :    yArray.length;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
302	[BUG]  [BUGGY]  double  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  >  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    double    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    	non-compiled	[CE]  >  expected	113	None	replace
303	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length  -  1;  i++)  {  regression.addData(yArray[i]);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length  -  1;  i++)  {  regression.addData(yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=0;  i  <  yArray.length  -  1;  i++)  {  regression.addData(yArray[i]);  }	  for(int    i=0;    i    <    xArray.length    -    1;    i++)    {    regression.addData(yArray[i]);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
304	[BUG]  [BUGGY]  int  i=0;  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  i=0;  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  i=0;  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    for(int    i=0;    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    	non-compiled	[CE]  not  a  statement	119	None	replace
305	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=2;  i  <  yArray.length;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	add	for(int  i=2;  i  <  yArray.length;  i++)  {	  for(int    i=1;    i    <    yArray.length;    i++)    {    	compilable	  [FE]  AssertionFailedError  	36	8	replace
306	[BUG]  [BUGGY]  for(int  i=2;  i  <  yArray.length;  i++)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=2;  i  <  yArray.length;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=2;  i  <  yArray.length;  i++)  {	  for(int    i=1;    i    <    yArray.length;    i++)    {    	compilable	  [FE]  AssertionFailedError  	36	8	replace
307	[BUG]  [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [CE]  >  expected  [FE]        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }	          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    	non-compiled	[CE]  >  expected	91	None	replace
308	[BUG]  [BUGGY]  double[]  yArray  =  yArray.toArray(new  double[yArray.length  -  1]));  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double[]  yArray  =  yArray.toArray(new  double[yArray.length  -  1]));  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  yArray  =  yArray.toArray(new  double[yArray.length  -  1]));	  double[]    yArray    =    yArray.toArray(new    double[yArray.length    -    1]);    	non-compiled	[CE]  	49	None	replace
309	[BUG]  [BUGGY]  For(int  i=1;  i  <  yArray.length;  i++)  {  [CE]  '.class'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  For(int  i=1;  i  <  yArray.length;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	For(int  i=1;  i  <  yArray.length;  i++)  {	  for(int    i=1;    i    <    xArray.length;    i++)    {    For(int    i=1;    i    <    xArray.length;    i++)    {    	non-compiled	[CE]  '.class'  expected	52	None	replace
310	[BUG]  [BUGGY]  int  size  =  this.yArray.size();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  size  =  this.yArray.size();  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  size  =  this.yArray.size();	  int    size    =    xArray.size();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
311	[BUG]  [BUGGY]  for(int  j=0;  j  <  xArray.length;  j++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  j=0;  j  <  xArray.length;  j++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  j=0;  j  <  xArray.length;  j++)  {  regression.addData(yArray[i],  yArray[i]);  }	          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int    i=0;    j    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
312	[BUG]  [BUGGY]  for(int  j=0;  j  <  xArray.length;  j++)  {  regression.addData(yArray[j],  xArray[j]);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  j=0;  j  <  xArray.length;  j++)  {  regression.addData(yArray[j],  xArray[j]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  j=0;  j  <  xArray.length;  j++)  {  regression.addData(yArray[j],  xArray[j]);  }	          for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    for(int    i=0;    j    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
313	[BUG]  [BUGGY]  double  size  =  Math.max(relative.size(),  xArray.length);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double  size  =  Math.max(relative.size(),  xArray.length);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double  size  =  Math.max(relative.size(),  xArray.length);	  double    size    =    Math.max(xArray.size(),    regression.length);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
314	[BUG]  [BUGGY]  double[]  xArray  =(yArray  ==  null)?  2  :  yArray.length;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double[]  xArray  =(yArray  ==  null)?  2  :  yArray.length;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  xArray  =(yArray  ==  null)?  2  :  yArray.length;	  double[]    xArray    =(yArray    ==    null)?    1    :    yArray.length;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
315	[BUG]  [BUGGY]  int  nVars  =  Math.min(yArray.length,  yArray.length  -  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  nVars  =  Math.min(yArray.length,  yArray.length  -  1);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  nVars  =  Math.min(yArray.length,  yArray.length  -  1);	  int    nVars    =    Math.min(yArray.length,    yArray.length);    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
316	[BUG]  [BUGGY]  double[]  xArray  =(xArray!=  null)?  0  :  xArray.length;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  double[]  xArray  =(xArray!=  null)?  0  :  xArray.length;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	double[]  xArray  =(xArray!=  null)?  0  :  xArray.length;	  double[]    xArray    =(yArray    ==    null)?    0    :    xArray.length;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
317	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length  +  2;  i++)  {  for(int  i=0;  i  <  xxArray.length  +  2;  i++)  {  [CE]  'else'  without  'if'  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length  +  2;  i++)  {  for(int  i=0;  i  <  xxArray.length  +  2;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=0;    i    <    xArray.length    +    2;    i++)    {    for(int  i=0;  i  <  xxArray.length  +  2;  i++)  {	  	non-compiled	[CE]  'else'  without  'if'	57	None	add
318	[BUG]  [BUGGY]  for(int  i  =  0,  yArray.length  <  xArray.length;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix  ==  null)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i  =  0,  yArray.length  <  xArray.length;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix  ==  null)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i  =  0,  yArray.length  <  xArray.length;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix  ==  null)  {	  for(int    i    =    0,    yArray.length    =    xArray.length;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    getCovarianceMatrix(i);    if(covarianceMatrix    ==    null)    {    	non-compiled	[CE]  ';'  expected	110	None	replace
319	[BUG]  [BUGGY]  for(int  i  =  0,  yArray.length  <  xArray.length;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  null)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i  =  0,  yArray.length  <  xArray.length;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  null)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i  =  0,  yArray.length  <  xArray.length;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  null)  {	  for(int    i    =    0,    yArray.length    =    xArray.length;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    getCovarianceMatrix(i);    if(covarianceMatrix!=    null)    {    	non-compiled	[CE]  ';'  expected	108	None	replace
320	[BUG]  [BUGGY]  for(int  i  =  0,  yArray.length  =  yArray.length;  i  <  0;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  null)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i  =  0,  yArray.length  =  yArray.length;  i  <  0;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  null)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i  =  0,  yArray.length  =  yArray.length;  i  <  0;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  null)  {	  for(int    i    =    0,    yArray.length    =    xArray.length;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    getCovarianceMatrix(i);    if(covarianceMatrix!=    null)    {    	non-compiled	[CE]  ';'  expected	108	None	replace
321	[BUG]  [BUGGY]  int  i=0;  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  i=0;  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  i=0;  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int    i=0;    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    	non-compiled	[CE]  not  a  statement	125	None	replace
322	[BUG]  [BUGGY]  for(int  i=0;  i  <  numOfObservations;  i++)  {  [CE]  cannot  find  symbol  numOfObservations  [FE]        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  numOfObservations;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=0;  i  <  numOfObservations;  i++)  {	  for(int    i=0;    i    <    size;    i++)    {    	non-compiled	[CE]  cannot  find  symbol  numOfObservations	117	None	replace
323	[BUG]  [BUGGY]  int  i=1;  i  <  xArray.length;  i++)  {  [CE]  >  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  i=1;  i  <  xArray.length;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  i=1;  i  <  xArray.length;  i++)  {	  for(int    i=1;    i    <    xArray.length;    i++)    {    int    i=1;    i    <    xArray.length;    i++)    {    	non-compiled	[CE]  >  expected	53	None	replace
324	[BUG]  [BUGGY]  int  size  =  yArray.length;  yArray  =  yArray.length;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  size  =  yArray.length;  yArray  =  yArray.length;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  size  =  yArray.length;  yArray  =  yArray.length;	          int    size    =    yArray.length;    t    =    yArray.length;    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
325	[BUG]  [BUGGY]  int  size  =  yArray.length;  j  =  yArray.length;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  size  =  yArray.length;  j  =  yArray.length;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  size  =  yArray.length;  j  =  yArray.length;	          int    size    =    yArray.length;    t    =    yArray.length;    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
326	[BUG]  [BUGGY]  for(int  i  =  0,  yArray.length  <  xArray.length;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  null)  {  return  correlation  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i  =  0,  yArray.length  <  xArray.length;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  null)  {  return  correlation  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i  =  0,  yArray.length  <  xArray.length;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(i);  if(covarianceMatrix!=  null)  {  return  correlation	  for(int    i    =    0,    yArray.length    =    xArray.length;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    getCovarianceMatrix(i);    if(covarianceMatrix!=    null)    {    return    correlation    	non-compiled	[CE]  ';'  expected	111	None	replace
327	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length  -  1;  i++)  {  for(int  i=0;  i  <  yArray.length  -  1)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length  -  1;  i++)  {  for(int  i=0;  i  <  yArray.length  -  1)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int    i=0;    i    <    yArray.length    -    1;    i++)    {    for(int  i=0;  i  <  yArray.length  -  1)  {	  	non-compiled	[CE]  ';'  expected	29	None	add
328	[BUG]  [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  y  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  y  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        yArray.length;        i++)        {        regression.addData(yArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  y	  	non-compiled	[CE]  ')'  expected	9	None	add
329	[BUG]  [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        yArray.length;        i++)        {        regression.addData(yArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
330	[BUG]  [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]          for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	                for(int        i=0;        i        <        yArray.length;        i++)        {        regression.addData(yArray[i],        yArray[i]);        }        for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
331	[BUG]  [BUGGY]  for(int  i=1;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  for(int  i=1;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	for(int  i=1;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	  for(int    i=1;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
332	[BUG]  [BUGGY]  int  size  =  xArray.length  -  2;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {      [BUGGY]  int  size  =  xArray.length  -  2;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	227	227	2	replace	int  size  =  xArray.length  -  2;	  int    size    =    xArray.length;    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
