bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i]  *  covarianceMatrix[i];  }  [CE]  ']'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i]  *  covarianceMatrix[i];  }  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i]  *  covarianceMatrix[i];  }	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i]    *    covarianceMatrix[i];    }    	non-compiled	[CE]  ']'  expected	16	None	replace
2	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i]  *  covarianceMatrix[i];  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i]  *  covarianceMatrix[i];  }  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i]  *  covarianceMatrix[i];  }	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i]    *    covarianceMatrix[i];    }    	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	16	None	replace
3	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i]  *  covarianceMatrix[i];  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]                  AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i]  *  covarianceMatrix[i];  }  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i]  *  covarianceMatrix[i];  }	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i]    *    covarianceMatrix[i];    }    	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	16	None	replace
4	[BUG]  [BUGGY]  double[]  yArray  =(double[])xArray[i].compareTo(yArray[i]);  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  double[]  yArray  =(double[])xArray[i].compareTo(yArray[i]);  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =(double[])xArray[i].compareTo(yArray[i]);	      double[]    yArray    =(double[])yArray[i].compareTo(xArray[i]);    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	9	None	replace
5	[BUG]  [BUGGY]  double[]  yArray  =(double[])yArray[i].compareTo(xArray[i],  yArray[i]);  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  double[]  yArray  =(double[])yArray[i].compareTo(xArray[i],  yArray[i]);  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =(double[])yArray[i].compareTo(xArray[i],  yArray[i]);	      double[]    yArray    =(double[])yArray[i].compareTo(xArray[i]);    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	9	None	replace
6	[BUG]  [BUGGY]  double[]  xArray  =(double[])yArray[i].compareTo(xArray[i]);  [CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  double[]  xArray  =(double[])yArray[i].compareTo(xArray[i]);  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  xArray  =(double[])yArray[i].compareTo(xArray[i]);	      double[]    yArray    =(double[])yArray[i].compareTo(xArray[i]);    	non-compiled	[CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])	9	None	replace
7	[BUG]  [BUGGY]  double[]  yArray  =(double[])xArray.clone();  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  double[]  yArray  =(double[])xArray.clone();  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =(double[])xArray.clone();	      double[]    yArray    =(double[])yArray.clone();    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	12	None	replace
8	[BUG]  [BUGGY]  double[]  xArray  =(double[])yArray.clone();  [CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                  AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  double[]  xArray  =(double[])yArray.clone();  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  xArray  =(double[])yArray.clone();	      double[]    yArray    =(double[])yArray.clone();    	non-compiled	[CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])	12	None	replace
9	[BUG]  [BUGGY]  double[]  yArray  =(double[])i.clone();  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  double[]  yArray  =(double[])i.clone();  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =(double[])i.clone();	      double[]    yArray    =(double[])yArray.clone();    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	12	None	replace
10	[BUG]  [BUGGY]  regression.addData(yArray[i],  xArray[i],  yArray[i]);  [CE]  no  suitable  method  found  for  addData(double,double,double)  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(yArray[i],  xArray[i],  yArray[i]);  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],  xArray[i],  yArray[i]);	  regression.addData(xArray[i],    yArray[i],    xArray[i]);    	non-compiled	[CE]  no  suitable  method  found  for  addData(double,double,double)	5	None	replace
11	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i],  xArray[i],  yArray[i]);  [CE]  no  suitable  method  found  for  addData(double,double,double,double)  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(xArray[i],  yArray[i],  xArray[i],  yArray[i]);  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],  yArray[i],  xArray[i],  yArray[i]);	  regression.addData(xArray[i],    yArray[i],    xArray[i]);    	non-compiled	[CE]  no  suitable  method  found  for  addData(double,double,double,double)	5	None	replace
12	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i],  xArray[i],  covarianceMatrix);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(xArray[i],  yArray[i],  xArray[i],  covarianceMatrix);  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],  yArray[i],  xArray[i],  covarianceMatrix);	  regression.addData(xArray[i],    yArray[i],    xArray[i]);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	5	None	replace
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(yArray[i],  xArray[i]);  regression.addData(yArray[i],  xArray[i]);  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(yArray[i],    xArray[i]);    regression.addData(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	1	9	add
14	[BUG]  [BUGGY]  regression.addData(yArray[i],  xArray[i]);  regression.addData(yArray[i],  xArray[i]);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(yArray[i],  xArray[i]);  regression.addData(yArray[i],  xArray[i]);  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],    xArray[i]);    regression.addData(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	1	9	add
15	[BUG]  [BUGGY]  regression.addData(yArray[i],  xArray[i]);  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(yArray[i],  xArray[i]);  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],    xArray[i]);    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	1	None	add
16	[BUG]  [BUGGY]  regression.addData(yArray[i],  xArray[i]);  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(yArray[i],  xArray[i]);  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],    xArray[i]);    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	1	None	add
17	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]  =  Math.min(yArray[i],  yArray[i]);	      yArray[i]    =    Math.max(yArray[i],    xArray[i]);    	compilable	  [FE]  AssertionFailedError  	21	2	replace
18	[BUG]  [BUGGY]  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.min(yArray[i],  yArray[i]);	      yArray[i]    =    Math.max(yArray[i],    xArray[i]);    	compilable	  [FE]  AssertionFailedError  	21	2	replace
19	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]  =  Math.max(yArray[i],  yArray[i]);	      yArray[i]    =    Math.max(yArray[i],    xArray[i]);    	compilable	  [FE]  AssertionFailedError  	21	2	replace
20	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i],  yArray[i]);	      yArray[i]    =    Math.max(yArray[i],    xArray[i]);    	compilable	  [FE]  AssertionFailedError  	21	2	replace
21	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i].length);  [CE]  double  cannot  be  dereferenced  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i].length);  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i],  yArray[i].length);	      yArray[i]    =    Math.max(yArray[i],    xArray[i]);    	non-compiled	[CE]  double  cannot  be  dereferenced	21	None	replace
22	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]  +  1);  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]  =  Math.max(yArray[i],  yArray[i]  +  1);	      yArray[i]    =    Math.max(yArray[i],    xArray[i]);    	compilable	  [FE]  AssertionFailedError  	21	2	replace
23	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]  +  1);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]  +  1);  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i],  yArray[i]  +  1);	      yArray[i]    =    Math.max(yArray[i],    xArray[i]);    	compilable	  [FE]  AssertionFailedError  	21	2	replace
24	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  yArray[i]  =  size;  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  yArray[i]  =  size;  }  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  yArray[i]  =  size;  }	      	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	7	None	replace
25	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  [CE]  'else'  without  'if'  [FE]      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);	      	non-compiled	[CE]  'else'  without  'if'	7	None	replace
26	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].computeSize(xArray[i]);  [CE]  'else'  without  'if'  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].computeSize(xArray[i]);  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].computeSize(xArray[i]);	      	non-compiled	[CE]  'else'  without  'if'	7	None	replace
27	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  size)  {  return  size;  }  [CE]  'else'  without  'if'  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  size)  {  return  size;  }  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  size)  {  return  size;  }	      	non-compiled	[CE]  'else'  without  'if'	7	None	replace
28	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xArray[i].length,  0);  [CE]  double  cannot  be  dereferenced  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xArray[i].length,  0);  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i],  xArray[i].length,  0);	      yArray[i]    =    Math.max(yArray[i],    xArray[i].length);    	non-compiled	[CE]  double  cannot  be  dereferenced	25	None	replace
29	[BUG]  [BUGGY]  yArray[i]  =  Math.max(xArray[i],  yArray[i].length);  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  yArray[i]  =  Math.max(xArray[i],  yArray[i].length);  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(xArray[i],  yArray[i].length);	      yArray[i]    =    Math.max(yArray[i],    xArray[i].length);    	non-compiled	[CE]  double  cannot  be  dereferenced	25	None	replace
30	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i],  j,  yArray[i]);  [CE]  cannot  find  symbol  j  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(xArray[i],  yArray[i],  j,  yArray[i]);  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],  yArray[i],  j,  yArray[i]);	  regression.addData(xArray[i],    yArray[i],    yArray[i]);    	non-compiled	[CE]  cannot  find  symbol  j	26	None	replace
31	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i],  j);  [CE]  cannot  find  symbol  j  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(xArray[i],  yArray[i],  j);  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],  yArray[i],  j);	  regression.addData(xArray[i],    yArray[i],    size);    	non-compiled	[CE]  cannot  find  symbol  j	18	None	replace
32	[BUG]  [BUGGY]  regression.addData(yArray[i],  xArray[i],  size);  [CE]  cannot  find  symbol  size  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(yArray[i],  xArray[i],  size);  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],  xArray[i],  size);	  regression.addData(xArray[i],    yArray[i],    size);    	non-compiled	[CE]  cannot  find  symbol  size	18	None	replace
33	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i].doubleValue(),  xArray[i]);  [CE]  double  cannot  be  dereferenced  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  yArray[i]  =  Math.max(yArray[i].doubleValue(),  xArray[i]);  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i].doubleValue(),  xArray[i]);	      yArray[i]    =    Math.max(yArray[i].doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	22	None	replace
34	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i].doubleValue(),  size);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  yArray[i]  =  Math.max(yArray[i].doubleValue(),  size);  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i].doubleValue(),  size);	      yArray[i]    =    Math.max(yArray[i].doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	22	None	replace
35	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i].doubleValue()  +  1);  [CE]  double  cannot  be  dereferenced  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  yArray[i]  =  Math.max(yArray[i].doubleValue()  +  1);  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i].doubleValue()  +  1);	      yArray[i]    =    Math.max(yArray[i].doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	22	None	replace
36	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]      yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	        yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	23	13	add
37	[BUG]  [BUGGY]      yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]      yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	        yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	23	13	add
38	[BUG]  [BUGGY]      yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  int  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [CE]  ']'  expected  [FE]      NullPointerException    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]      yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  int  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	        yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    int  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;	  	non-compiled	[CE]  ']'  expected	23	None	add
39	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]      yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	        yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	23	13	add
40	[BUG]  [BUGGY]      yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]      yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	        yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	23	13	add
41	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]      yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	        yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);	  	compilable	  [FE]  NullPointerException  	23	13	add
42	[BUG]  [BUGGY]      yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]      yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	        yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);	  	compilable	  [FE]  NullPointerException  	23	13	add
43	[BUG]  [BUGGY]      yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  double[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [CE]  ']'  expected  [FE]            NullPointerException    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]      yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  double[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	        yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    double[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;	  	non-compiled	[CE]  ']'  expected	23	None	add
44	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i];  }  [CE]  ']'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i];  }  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i];  }	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i];    yArray[i]    =    covarianceMatrix[i];    }    	non-compiled	[CE]  ']'  expected	15	None	replace
45	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i];  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i];  }  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i];  }	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i];    yArray[i]    =    covarianceMatrix[i];    }    	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	15	None	replace
46	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i];  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i];  }  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i];  }	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i];    yArray[i]    =    covarianceMatrix[i];    }    	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	15	None	replace
47	[BUG]  [BUGGY]  double[]  yArray  =(double[])xArray[i];  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  double[]  yArray  =(double[])xArray[i];  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =(double[])xArray[i];	      double[]    yArray    =(double[])yArray[i];    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	11	None	replace
48	[BUG]  [BUGGY]  double[]  yArray  =(double[])yArray[i  +  1];  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  double[]  yArray  =(double[])yArray[i  +  1];  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =(double[])yArray[i  +  1];	      double[]    yArray    =(double[])yArray[i];    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	11	None	replace
49	[BUG]  [BUGGY]  double[]  xArray  =(double[])yArray[i];  [CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                  AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  double[]  xArray  =(double[])yArray[i];  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  xArray  =(double[])yArray[i];	      double[]    yArray    =(double[])yArray[i];    	non-compiled	[CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])	11	None	replace
50	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    NullPointerException    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  null;  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  null;	      yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    	compilable	  [FE]  AssertionFailedError  	24	2	replace
51	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  null;  [FE]  AssertionFailedError  [FE]    NullPointerException    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  null;  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  null;	      yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    	compilable	  [FE]  AssertionFailedError  	24	2	replace
52	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  null;  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  null;	      yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    	compilable	  [FE]  NullPointerException  	24	13	replace
53	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  null;  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  null;  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  null;	      yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    	compilable	  [FE]  NullPointerException  	24	13	replace
54	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;	      yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    	compilable	  [FE]  NullPointerException  	24	13	replace
55	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;	      yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    	compilable	  [FE]  NullPointerException  	24	13	replace
56	[BUG]  [BUGGY]  double  size  =  xArray[i].doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  double  size  =  xArray[i].doubleValue();  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double  size  =  xArray[i].doubleValue();	      double    size    =    yArray[i].doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	13	None	replace
57	[BUG]  [BUGGY]  double  size  =  yArray[i].doubleValue()  +  1;  [CE]  double  cannot  be  dereferenced  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  double  size  =  yArray[i].doubleValue()  +  1;  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double  size  =  yArray[i].doubleValue()  +  1;	      double    size    =    yArray[i].doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	13	None	replace
58	[BUG]  [BUGGY]  double  size  =  yArray[i].doubleValue()  *  xArray.length;  [CE]  double  cannot  be  dereferenced  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  double  size  =  yArray[i].doubleValue()  *  xArray.length;  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double  size  =  yArray[i].doubleValue()  *  xArray.length;	      double    size    =    yArray[i].doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	13	None	replace
59	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(yArray[i],  yArray[i]);  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(yArray[i],  yArray[i]);	  regression.addData(yArray[i],    xArray[i]);    	compilable	  [FE]  AssertionFailedError  	2	10	replace
60	[BUG]  [BUGGY]  regression.addData(yArray[i],  yArray[i]);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(yArray[i],  yArray[i]);  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],  yArray[i]);	  regression.addData(yArray[i],    xArray[i]);    	compilable	  [FE]  AssertionFailedError  	2	10	replace
61	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i]  [CE]  ']'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i]  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i]	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i];    yArray[i]    =    covarianceMatrix[i]    	non-compiled	[CE]  ']'  expected	14	None	replace
62	[BUG]  [BUGGY]  for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i]  [CE]  ']'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i]  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i]	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i];    yArray[i]    =    covarianceMatrix[i]    	non-compiled	[CE]  ']'  expected	14	None	replace
63	[BUG]  [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i]  [CE]  ']'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i]  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=1;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i]	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i];    yArray[i]    =    covarianceMatrix[i]    	non-compiled	[CE]  ']'  expected	14	None	replace
64	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]      yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	        yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	20	10	add
65	[BUG]  [BUGGY]      yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]      yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	        yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	20	10	add
66	[BUG]  [BUGGY]      yArray[i]  =  Math.max(yArray[i],  xArray[i]);  int  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  [CE]  ']'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]      yArray[i]  =  Math.max(yArray[i],  xArray[i]);  int  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	        yArray[i]    =    Math.max(yArray[i],    xArray[i]);    int  yArray[i]  =  Math.max(yArray[i],  xArray[i]);	  	non-compiled	[CE]  ']'  expected	20	None	add
67	[BUG]  [BUGGY]      yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xxArray[i]);  [CE]  cannot  find  symbol  xxArray  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]      yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xxArray[i]);  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	        yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xxArray[i]);	  	non-compiled	[CE]  cannot  find  symbol  xxArray	20	None	add
68	[BUG]  [BUGGY]      yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]));  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]      yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]));  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	        yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]));	  	non-compiled	[CE]  ';'  expected	20	None	add
69	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[  [CE]  ']'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i];    yArray[i]    =    covarianceMatrix[    	non-compiled	[CE]  ']'  expected	17	None	replace
70	[BUG]  [BUGGY]  for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[  [CE]  ']'  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i];    yArray[i]    =    covarianceMatrix[    	non-compiled	[CE]  ']'  expected	17	None	replace
71	[BUG]  [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[  [CE]  ']'  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=1;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i];    yArray[i]    =    covarianceMatrix[    	non-compiled	[CE]  ']'  expected	17	None	replace
72	[BUG]  [BUGGY]  double[]  yArray  =(double[])yArray[0].compareTo(xArray[i]);  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  double[]  yArray  =(double[])yArray[0].compareTo(xArray[i]);  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =(double[])yArray[0].compareTo(xArray[i]);	      double[]    yArray    =(double[])yArray[i].compareTo(yArray[i]);    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	10	None	replace
73	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xArray[i].doubleValue()  +  1);  [CE]  double  cannot  be  dereferenced  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xArray[i].doubleValue()  +  1);  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i],  xArray[i].doubleValue()  +  1);	      yArray[i]    =    Math.max(yArray[i],    xArray[i].doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	19	None	replace
74	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i].doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i].doubleValue());  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i],  yArray[i].doubleValue());	      yArray[i]    =    Math.max(yArray[i],    xArray[i].doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	19	None	replace
75	[BUG]  [BUGGY]  yArray[i]  =  Math.max(xArray[i],  yArray[i].doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  yArray[i]  =  Math.max(xArray[i],  yArray[i].doubleValue());  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(xArray[i],  yArray[i].doubleValue());	      yArray[i]    =    Math.max(yArray[i],    xArray[i].doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	19	None	replace
76	[BUG]  [BUGGY]  double[]  yArray  =  xArray[i].compareTo(yArray[i]);  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  double[]  yArray  =  xArray[i].compareTo(yArray[i]);  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =  xArray[i].compareTo(yArray[i]);	      double[]    yArray    =    yArray[i].compareTo(xArray[i]);    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	8	None	replace
77	[BUG]  [BUGGY]  double[]  xArray  =  yArray[i].compareTo(xArray[i]);  [CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  double[]  xArray  =  yArray[i].compareTo(xArray[i]);  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  xArray  =  yArray[i].compareTo(xArray[i]);	      double[]    yArray    =    yArray[i].compareTo(xArray[i]);    	non-compiled	[CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])	8	None	replace
78	[BUG]  [BUGGY]  double[]  yArray  =  yArray[i].compareTo(xArray[i],  yArray[i]);  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  double[]  yArray  =  yArray[i].compareTo(xArray[i],  yArray[i]);  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =  yArray[i].compareTo(xArray[i],  yArray[i]);	      double[]    yArray    =    yArray[i].compareTo(xArray[i]);    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	8	None	replace
79	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  1);  regression.addData(xArray[i],  yArray[i]  +  1);  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(xArray[i],    yArray[i]    +    1);    regression.addData(xArray[i],  yArray[i]  +  1);	  	compilable	  [FE]  AssertionFailedError  	3	10	add
80	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  1);  regression.addData(xArray[i],  yArray[i]  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  1);  regression.addData(xArray[i],  yArray[i]  +  1);  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],    yArray[i]    +    1);    regression.addData(xArray[i],  yArray[i]  +  1);	  	compilable	  [FE]  AssertionFailedError  	3	10	add
81	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  1);  for(int  i  =  0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  1);  for(int  i  =  0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],    yArray[i]    +    1);    for(int  i  =  0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	3	None	add
82	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  1);  for(int  i  =  0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  1);  for(int  i  =  0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],    yArray[i]    +    1);    for(int  i  =  0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	3	None	add
83	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(yArray[i],  xArray[i]  +  1);  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(yArray[i],  xArray[i]  +  1);	  regression.addData(xArray[i],    yArray[i]    +    1);    	compilable	  [FE]  AssertionFailedError  	4	2	replace
84	[BUG]  [BUGGY]  regression.addData(yArray[i],  xArray[i]  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(yArray[i],  xArray[i]  +  1);  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],  xArray[i]  +  1);	  regression.addData(xArray[i],    yArray[i]    +    1);    	compilable	  [FE]  AssertionFailedError  	4	2	replace
85	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(xArray[i],  yArray[i]  *  1);  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(xArray[i],  yArray[i]  *  1);	  regression.addData(xArray[i],    yArray[i]    +    1);    	compilable	  [FE]  AssertionFailedError  	4	2	replace
86	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  *  1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(xArray[i],  yArray[i]  *  1);  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],  yArray[i]  *  1);	  regression.addData(xArray[i],    yArray[i]    +    1);    	compilable	  [FE]  AssertionFailedError  	4	2	replace
87	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(xArray[i],  yArray[i]  -  1);  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(xArray[i],  yArray[i]  -  1);	  regression.addData(xArray[i],    yArray[i]    +    1);    	compilable	  [FE]  AssertionFailedError  	4	2	replace
88	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  -  1);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(xArray[i],  yArray[i]  -  1);  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],  yArray[i]  -  1);	  regression.addData(xArray[i],    yArray[i]    +    1);    	compilable	  [FE]  AssertionFailedError  	4	2	replace
89	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(yArray[i],  yArray[i  +  1]);  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(yArray[i],  yArray[i  +  1]);	  regression.addData(yArray[i],    xArray[i]);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	13	replace
90	[BUG]  [BUGGY]  regression.addData(yArray[i],  yArray[i  +  1]);  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(yArray[i],  yArray[i  +  1]);  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],  yArray[i  +  1]);	  regression.addData(yArray[i],    xArray[i]);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	13	replace
91	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xArray[i].length());  [CE]  double  cannot  be  dereferenced  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xArray[i].length());  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i],  xArray[i].length());	      yArray[i]    =    Math.max(yArray[i],    xArray[i].doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	19	None	replace
92	[BUG]  [BUGGY]      for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  Math.coefficient(yArray[i]);  if(size  >  size)  {  return  size;  }  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]      for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  Math.coefficient(yArray[i]);  if(size  >  size)  {  return  size;  }  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	        for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  Math.coefficient(yArray[i]);  if(size  >  size)  {  return  size;  }	  	non-compiled	[CE]  'else'  without  'if'	6	None	add
93	[BUG]  [BUGGY]      for(int  i=0;  i  <  yArray.length;  i++)  {  double  size[]  =  yArray[i].doubleValue();  if(size  >  size)  {  return  size;  }  [CE]  'else'  without  'if'  [FE]      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]      for(int  i=0;  i  <  yArray.length;  i++)  {  double  size[]  =  yArray[i].doubleValue();  if(size  >  size)  {  return  size;  }  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	        for(int  i=0;  i  <  yArray.length;  i++)  {  double  size[]  =  yArray[i].doubleValue();  if(size  >  size)  {  return  size;  }	  	non-compiled	[CE]  'else'  without  'if'	6	None	add
94	[BUG]  [BUGGY]      for(int  i=0;  i  <  yArray.length;  i++)  {  double  size[]  =  yArray[i].doubleValue();  if(size  >  size)  {  return  Math.coefficient(xArray[i]);  }  [CE]  'else'  without  'if'  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]      for(int  i=0;  i  <  yArray.length;  i++)  {  double  size[]  =  yArray[i].doubleValue();  if(size  >  size)  {  return  Math.coefficient(xArray[i]);  }  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	        for(int  i=0;  i  <  yArray.length;  i++)  {  double  size[]  =  yArray[i].doubleValue();  if(size  >  size)  {  return  Math.coefficient(xArray[i]);  }	  	non-compiled	[CE]  'else'  without  'if'	6	None	add
95	[BUG]  [BUGGY]      for(int  i=0;  i  <  yArray.length;  i++)  {  double  size[]  =  yArray[i].doubleValue();  if(size  >  size)  {  return  Math.max(regression.getR()  +  size);  }  [CE]  'else'  without  'if'  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]      for(int  i=0;  i  <  yArray.length;  i++)  {  double  size[]  =  yArray[i].doubleValue();  if(size  >  size)  {  return  Math.max(regression.getR()  +  size);  }  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	        for(int  i=0;  i  <  yArray.length;  i++)  {  double  size[]  =  yArray[i].doubleValue();  if(size  >  size)  {  return  Math.max(regression.getR()  +  size);  }	  	non-compiled	[CE]  'else'  without  'if'	6	None	add
96	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i]  }  [CE]  ']'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i]  }  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i]  }	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i];    yArray[i]    =    covarianceMatrix[i]    	non-compiled	[CE]  ']'  expected	14	None	replace
97	[BUG]  [BUGGY]  double  size  =  yArray[i].doubleValue().doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  double  size  =  yArray[i].doubleValue().doubleValue();  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double  size  =  yArray[i].doubleValue().doubleValue();	      double    size    =    yArray[i].doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	13	None	replace
98	[BUG]  [BUGGY]  regression.addData(yArray[i],  xArray[i]);  Regression  regression.addData(yArray[i],  xArray[i]);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(yArray[i],  xArray[i]);  Regression  regression.addData(yArray[i],  xArray[i]);  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],    xArray[i]);    Regression  regression.addData(yArray[i],  xArray[i]);	  	non-compiled	[CE]  ';'  expected	1	None	add
99	[BUG]  [BUGGY]  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  regression.addData(yArray[i],  xArray[i]);  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  regression.addData(yArray[i],  xArray[i]);  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  regression.addData(yArray[i],  xArray[i]);	  	non-compiled	[CE]  incompatible  types	1	None	add
100	[BUG]  [BUGGY]  regression.addData(yArray[i],  xArray[i]);  for(int  i  =  0,  yArray.length  =  yArray.length;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(yArray[i],  xArray[i]);  for(int  i  =  0,  yArray.length  =  yArray.length;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],    xArray[i]);    for(int  i  =  0,  yArray.length  =  yArray.length;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }	  	non-compiled	[CE]  ';'  expected	1	None	add
101	[BUG]  [BUGGY]  regression.addData(yArray[i],  xArray[i]);  for(int  i  =  0,  yArray.length  =  yArray.length;  i  <  yArray.length;  i++)  {  if(regression.addData(yArray[i],  xArray[i])  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(yArray[i],  xArray[i]);  for(int  i  =  0,  yArray.length  =  yArray.length;  i  <  yArray.length;  i++)  {  if(regression.addData(yArray[i],  xArray[i])  }  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],    xArray[i]);    for(int  i  =  0,  yArray.length  =  yArray.length;  i  <  yArray.length;  i++)  {  if(regression.addData(yArray[i],  xArray[i])  }	  	non-compiled	[CE]  ';'  expected	1	None	add
102	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i],  data[i]);  [CE]  cannot  find  symbol  data  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(xArray[i],  yArray[i],  data[i]);  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],  yArray[i],  data[i]);	  regression.addData(xArray[i],    yArray[i],    yArray[i]);    	non-compiled	[CE]  cannot  find  symbol  data	26	None	replace
103	[BUG]  [BUGGY]  double[]  yArray  =  yArray[i].compareTo(yArray[i]);  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  double[]  yArray  =  yArray[i].compareTo(yArray[i]);  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =  yArray[i].compareTo(yArray[i]);	      double[]    yArray    =    yArray[i].compareTo(xArray[i]);    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	8	None	replace
104	[BUG]  [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i]  *  covarianceMatrix[i];  }  [CE]  ']'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i]  *  covarianceMatrix[i];  }  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=1;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i]  *  covarianceMatrix[i];  }	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i]    *    covarianceMatrix[i];    }    	non-compiled	[CE]  ']'  expected	16	None	replace
105	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  matrix[i]  *  covarianceMatrix[i];  }  [CE]  ']'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  matrix[i]  *  covarianceMatrix[i];  }  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  matrix[i]  *  covarianceMatrix[i];  }	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i]    *    covarianceMatrix[i];    }    	non-compiled	[CE]  ']'  expected	16	None	replace
106	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i],  null);  [CE]  no  suitable  method  found  for  addData(double,double,<null>)  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(xArray[i],  yArray[i],  null);  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],  yArray[i],  null);	  regression.addData(xArray[i],    yArray[i],    size);    	non-compiled	[CE]  no  suitable  method  found  for  addData(double,double,<null>)	18	None	replace
107	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i],  dataArea);  [CE]  cannot  find  symbol  dataArea  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(xArray[i],  yArray[i],  dataArea);  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],  yArray[i],  dataArea);	  regression.addData(xArray[i],    yArray[i],    size);    	non-compiled	[CE]  cannot  find  symbol  dataArea	18	None	replace
108	[BUG]  [BUGGY]      yArray[i]  =  Math.max(yArray[i],  xArray[i]);  double  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  [CE]  ']'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]      yArray[i]  =  Math.max(yArray[i],  xArray[i]);  double  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	        yArray[i]    =    Math.max(yArray[i],    xArray[i]);    double  yArray[i]  =  Math.max(yArray[i],  xArray[i]);	  	non-compiled	[CE]  ']'  expected	20	None	add
109	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  2);  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(xArray[i],  yArray[i]  +  2);	  regression.addData(xArray[i],    yArray[i]    +    1);    	compilable	  [FE]  AssertionFailedError  	4	2	replace
110	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  2);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  2);  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],  yArray[i]  +  2);	  regression.addData(xArray[i],    yArray[i]    +    1);    	compilable	  [FE]  AssertionFailedError  	4	2	replace
111	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]      yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	        yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	23	13	add
112	[BUG]  [BUGGY]      yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]      yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	        yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	23	13	add
113	[BUG]  [BUGGY]      yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null);  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]      yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null);  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	        yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null);	  	non-compiled	[CE]  ';'  expected	23	None	add
114	[BUG]  [BUGGY]  for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i];  }  [CE]  ']'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i];  }  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i];  }	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i];    yArray[i]    =    covarianceMatrix[i];    }    	non-compiled	[CE]  ']'  expected	15	None	replace
115	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i].doubleValue(),  yArray[i]);  [CE]  double  cannot  be  dereferenced  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  yArray[i]  =  Math.max(yArray[i].doubleValue(),  yArray[i]);  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i].doubleValue(),  yArray[i]);	      yArray[i]    =    Math.max(yArray[i].doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	22	None	replace
116	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  ==  null)?  yArray[i]  :  null;  [CE]  incomparable  types:  double  and  <null>  [FE]    NullPointerException    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  yArray[i]  =(yArray[i]  ==  null)?  yArray[i]  :  null;  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(yArray[i]  ==  null)?  yArray[i]  :  null;	      yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    	non-compiled	[CE]  incomparable  types:  double  and  <null>	24	None	replace
117	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  yArray[i]  =(yArray[i]  >=  yArray.length)?  yArray[i]  :  null;  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]  =(yArray[i]  >=  yArray.length)?  yArray[i]  :  null;	      yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    	compilable	  [FE]  NullPointerException  	24	10	replace
118	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  >=  yArray.length)?  yArray[i]  :  null;  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  yArray[i]  =(yArray[i]  >=  yArray.length)?  yArray[i]  :  null;  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(yArray[i]  >=  yArray.length)?  yArray[i]  :  null;	      yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    	compilable	  [FE]  NullPointerException  	24	10	replace
119	[BUG]  [BUGGY]  double[]  yArray  =(double[])yArray[0];  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  double[]  yArray  =(double[])yArray[0];  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =(double[])yArray[0];	      double[]    yArray    =(double[])yArray[i];    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	11	None	replace
120	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xArray[i].length,  yArray[i].length);  [CE]  double  cannot  be  dereferenced  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xArray[i].length,  yArray[i].length);  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i],  xArray[i].length,  yArray[i].length);	      yArray[i]    =    Math.max(yArray[i],    xArray[i].length);    	non-compiled	[CE]  double  cannot  be  dereferenced	25	None	replace
121	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xArray[i],  yArray[i].length);  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xArray[i],  yArray[i].length);  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i],  xArray[i],  yArray[i].length);	      yArray[i]    =    Math.max(yArray[i],    xArray[i].length);    	non-compiled	[CE]  double  cannot  be  dereferenced	25	None	replace
122	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  1);  Regression  regression.addData(xArray[i],  yArray[i]  +  1);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  1);  Regression  regression.addData(xArray[i],  yArray[i]  +  1);  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],    yArray[i]    +    1);    Regression  regression.addData(xArray[i],  yArray[i]  +  1);	  	non-compiled	[CE]  ';'  expected	3	None	add
123	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  1);  for(int  i  =  0,  yArray.length;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  1);  for(int  i  =  0,  yArray.length;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],    yArray[i]    +    1);    for(int  i  =  0,  yArray.length;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }	  	non-compiled	[CE]  ';'  expected	3	None	add
124	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  1);  regression.addData(yArray[i],  yArray[i]  +  1);  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(xArray[i],    yArray[i]    +    1);    regression.addData(yArray[i],  yArray[i]  +  1);	  	compilable	  [FE]  AssertionFailedError  	3	11	add
125	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  1);  regression.addData(yArray[i],  yArray[i]  +  1);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  1);  regression.addData(yArray[i],  yArray[i]  +  1);  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],    yArray[i]    +    1);    regression.addData(yArray[i],  yArray[i]  +  1);	  	compilable	  [FE]  AssertionFailedError  	3	11	add
126	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  1);  Regression  regression.addData(yArray[i],  yArray[i]  +  1);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  1);  Regression  regression.addData(yArray[i],  yArray[i]  +  1);  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],    yArray[i]    +    1);    Regression  regression.addData(yArray[i],  yArray[i]  +  1);	  	non-compiled	[CE]  ';'  expected	3	None	add
127	[BUG]  [BUGGY]  regression.addData(yArray[i],  xArray[i],  yArray[i],  yArray[i]);  [CE]  no  suitable  method  found  for  addData(double,double,double,double)  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(yArray[i],  xArray[i],  yArray[i],  yArray[i]);  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],  xArray[i],  yArray[i],  yArray[i]);	  regression.addData(xArray[i],    yArray[i],    size);    	non-compiled	[CE]  no  suitable  method  found  for  addData(double,double,double,double)	18	None	replace
128	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xxArray[i].doubleValue());  [CE]  cannot  find  symbol  xxArray  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xxArray[i].doubleValue());  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i],  xxArray[i].doubleValue());	      yArray[i]    =    Math.max(yArray[i],    xArray[i].doubleValue());    	non-compiled	[CE]  cannot  find  symbol  xxArray	19	None	replace
129	[BUG]  [BUGGY]  double[]  yArray  =(double[])yArray[i].computeValue(xArray[i],  yArray[i]);  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  double[]  yArray  =(double[])yArray[i].computeValue(xArray[i],  yArray[i]);  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =(double[])yArray[i].computeValue(xArray[i],  yArray[i]);	      double[]    yArray    =(double[])yArray[i];    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	11	None	replace
130	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i].compareTo(yArray[i]);  [CE]  double  cannot  be  dereferenced  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i].compareTo(yArray[i]);  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i].compareTo(yArray[i]);	      	non-compiled	[CE]  double  cannot  be  dereferenced	7	None	replace
131	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i];  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i];	      	compilable	  [FE]  AssertionFailedError  	7	2	replace
132	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i];  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i];  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i];	      	compilable	  [FE]  AssertionFailedError  	7	2	replace
133	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i].computeValue(yArray[i]);  [CE]  double  cannot  be  dereferenced  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i].computeValue(yArray[i]);  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i].computeValue(yArray[i]);	      	non-compiled	[CE]  double  cannot  be  dereferenced	7	None	replace
134	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	1	12	add
135	[BUG]  [BUGGY]  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	1	12	add
136	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  xArray[i]);  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.min(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	1	11	add
137	[BUG]  [BUGGY]  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  xArray[i]);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  xArray[i]);  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.min(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	1	11	add
138	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  1);  for(int  i  =  0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]  +  1);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  1);  for(int  i  =  0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]  +  1);  }  [BUGGY]    }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],    yArray[i]    +    1);    for(int  i  =  0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]  +  1);  }	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	3	None	add
139	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i]  *  matrix[i];  }  [CE]  ']'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i]  *  matrix[i];  }  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i]  *  matrix[i];  }	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i]    *    covarianceMatrix[i];    }    	non-compiled	[CE]  ']'  expected	16	None	replace
140	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i].doubleValue(),  xArray[i].doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  yArray[i]  =  Math.max(yArray[i].doubleValue(),  xArray[i].doubleValue());  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i].doubleValue(),  xArray[i].doubleValue());	      yArray[i]    =    Math.max(yArray[i].doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	22	None	replace
141	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i],  yArray[i]  =  covarianceMatrix[  [CE]  ']'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i],  yArray[i]  =  covarianceMatrix[  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i],  yArray[i]  =  covarianceMatrix[	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i];    yArray[i]    =    covarianceMatrix[    	non-compiled	[CE]  ']'  expected	17	None	replace
142	[BUG]  [BUGGY]  double[]  yArray  =(double[])yArray[i].compareTo(yArray[i],  yArray[i]);  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  double[]  yArray  =(double[])yArray[i].compareTo(yArray[i],  yArray[i]);  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =(double[])yArray[i].compareTo(yArray[i],  yArray[i]);	      double[]    yArray    =(double[])yArray[i].compareTo(yArray[i]);    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	10	None	replace
143	[BUG]  [BUGGY]  double[]  yArray  =(double[])yArray[i].compareTo(yArray[i],  xArray[i]);  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]  double[]  yArray  =(double[])yArray[i].compareTo(yArray[i],  xArray[i]);  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =(double[])yArray[i].compareTo(yArray[i],  xArray[i]);	      double[]    yArray    =(double[])yArray[i].compareTo(yArray[i]);    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	10	None	replace
144	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]      yArray[i]  =  Math.max(yArray[i],  xArray[i]);  xArray[i]  =  Math.max(yArray[i],  xArray[i]);  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	        yArray[i]    =    Math.max(yArray[i],    xArray[i]);    xArray[i]  =  Math.max(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	20	10	add
145	[BUG]  [BUGGY]      yArray[i]  =  Math.max(yArray[i],  xArray[i]);  xArray[i]  =  Math.max(yArray[i],  xArray[i]);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {    [BUGGY]      yArray[i]  =  Math.max(yArray[i],  xArray[i]);  xArray[i]  =  Math.max(yArray[i],  xArray[i]);  [BUGGY]    regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	        yArray[i]    =    Math.max(yArray[i],    xArray[i]);    xArray[i]  =  Math.max(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	20	10	add
