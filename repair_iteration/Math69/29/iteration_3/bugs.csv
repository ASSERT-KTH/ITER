bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }	  regression.addData(yArray[i],    xArray[i]);    for(int    i    =    0,    yArray.length    =    yArray.length;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	100	None	replace
2	[BUG]  [BUGGY]  for(int  i  =  0,  yArray.length  =  xArray[i];  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i  =  0,  yArray.length  =  xArray[i];  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i  =  0,  yArray.length  =  xArray[i];  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }	  regression.addData(yArray[i],    xArray[i]);    for(int    i    =    0,    yArray.length    =    yArray.length;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    	non-compiled	[CE]  ';'  expected	100	None	replace
3	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	  regression.addData(yArray[i],    xArray[i]);    for(int    i    =    0,    yArray.length    =    yArray.length;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	100	None	replace
4	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	  regression.addData(yArray[i],    xArray[i]);    for(int    i    =    0,    yArray.length    =    yArray.length;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	100	None	replace
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  xArray[i]  =  Math.max(yArray[i],  xArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	xArray[i]  =  Math.max(yArray[i],  xArray[i]);	          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    xArray[i]    =    Math.max(yArray[i],    xArray[i]);    	compilable	  [FE]  AssertionFailedError  	145	2	replace
6	[BUG]  [BUGGY]  xArray[i]  =  Math.max(yArray[i],  xArray[i]);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  xArray[i]  =  Math.max(yArray[i],  xArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	xArray[i]  =  Math.max(yArray[i],  xArray[i]);	          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    xArray[i]    =    Math.max(yArray[i],    xArray[i]);    	compilable	  [FE]  AssertionFailedError  	145	2	replace
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.min(yArray[i],  xArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]  =  Math.min(yArray[i],  xArray[i]);	          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    xArray[i]    =    Math.max(yArray[i],    xArray[i]);    	compilable	  [FE]  AssertionFailedError  	145	2	replace
8	[BUG]  [BUGGY]  yArray[i]  =  Math.min(yArray[i],  xArray[i]);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.min(yArray[i],  xArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.min(yArray[i],  xArray[i]);	          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    xArray[i]    =    Math.max(yArray[i],    xArray[i]);    	compilable	  [FE]  AssertionFailedError  	145	2	replace
9	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double  size  =  Math.coefficient(yArray[i]);  if(size  >  size)  {  return  size;  }  [CE]  'else'  without  'if'  [FE]        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double  size  =  Math.coefficient(yArray[i]);  if(size  >  size)  {  return  size;  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  double  size  =  Math.coefficient(yArray[i]);  if(size  >  size)  {  return  size;  }	          for(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    Math.coefficient(yArray[i]);    if(size    >    size)    {    return    size;    }    	non-compiled	[CE]  'else'  without  'if'	92	None	replace
10	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  Math.coefficient(xArray[i]);  if(size  >  size)  {  return  size;  }  [CE]  'else'  without  'if'  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  Math.coefficient(xArray[i]);  if(size  >  size)  {  return  size;  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  Math.coefficient(xArray[i]);  if(size  >  size)  {  return  size;  }	          for(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    Math.coefficient(yArray[i]);    if(size    >    size)    {    return    size;    }    	non-compiled	[CE]  'else'  without  'if'	92	None	replace
11	[BUG]  [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  Math.coefficient(yArray[i]);  if(size  >  size)  {  return  size;  }  [CE]  >  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  Math.coefficient(yArray[i]);  if(size  >  size)  {  return  size;  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  Math.coefficient(yArray[i]);  if(size  >  size)  {  return  size;  }	          for(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    Math.coefficient(yArray[i]);    if(size    >    size)    {    return    size;    }    	non-compiled	[CE]  >  expected	92	None	replace
12	[BUG]  [BUGGY]  Regression  regression.addData(yArray[i],  xArray[i]  +  1);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  Regression  regression.addData(yArray[i],  xArray[i]  +  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	Regression  regression.addData(yArray[i],  xArray[i]  +  1);	  regression.addData(xArray[i],    yArray[i]    +    1);    Regression    regression.addData(yArray[i],    yArray[i]    +    1);    	non-compiled	[CE]  ';'  expected	126	None	replace
13	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  if(xArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	if(xArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  regression.addData(xArray[i],    yArray[i]    +    1);    Regression    regression.addData(yArray[i],    yArray[i]    +    1);    	compilable	  [FE]  IllegalArgumentException  	126	9	replace
14	[BUG]  [BUGGY]  if(xArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  if(xArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	if(xArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  regression.addData(xArray[i],    yArray[i]    +    1);    Regression    regression.addData(yArray[i],    yArray[i]    +    1);    	compilable	  [FE]  IllegalArgumentException  	126	9	replace
15	[BUG]  [BUGGY]  Regression  regression.addData(xArray[i],  yArray[i]  +  1);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  Regression  regression.addData(xArray[i],  yArray[i]  +  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	Regression  regression.addData(xArray[i],  yArray[i]  +  1);	  regression.addData(xArray[i],    yArray[i]    +    1);    Regression    regression.addData(yArray[i],    yArray[i]    +    1);    	non-compiled	[CE]  ';'  expected	126	None	replace
16	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  if(xArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	if(xArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]  +  1);  }	  regression.addData(xArray[i],    yArray[i]    +    1);    Regression    regression.addData(yArray[i],    yArray[i]    +    1);    	compilable	  [FE]  AssertionFailedError  	126	5	replace
17	[BUG]  [BUGGY]  if(xArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  if(xArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	if(xArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]  +  1);  }	  regression.addData(xArray[i],    yArray[i]    +    1);    Regression    regression.addData(yArray[i],    yArray[i]    +    1);    	compilable	  [FE]  AssertionFailedError  	126	5	replace
18	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i],  scale);  [CE]  cannot  find  symbol  scale  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i],  scale);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],  yArray[i],  scale);	  regression.addData(xArray[i],    yArray[i],    j);    	non-compiled	[CE]  cannot  find  symbol  scale	31	None	replace
19	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i],  xArray[i],  yArray[i],  covarianceMatrix);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i],  xArray[i],  yArray[i],  covarianceMatrix);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],  yArray[i],  xArray[i],  yArray[i],  covarianceMatrix);	  regression.addData(xArray[i],    yArray[i],    xArray[i],    yArray[i]);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	11	None	replace
20	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i],  xArray[i],  yArray[i],  size);  [CE]  cannot  find  symbol  size  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i],  xArray[i],  yArray[i],  size);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],  yArray[i],  xArray[i],  yArray[i],  size);	  regression.addData(xArray[i],    yArray[i],    xArray[i],    yArray[i]);    	non-compiled	[CE]  cannot  find  symbol  size	11	None	replace
21	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i].doubleValue()  /  1);  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i].doubleValue()  /  1);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i].doubleValue()  /  1);	  yArray[i]    =    Math.max(yArray[i].doubleValue()    +    1);    	non-compiled	[CE]  double  cannot  be  dereferenced	35	None	replace
22	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i].doubleValue(),  xArray[i  +  1]);  [CE]  double  cannot  be  dereferenced  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i].doubleValue(),  xArray[i  +  1]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i].doubleValue(),  xArray[i  +  1]);	  yArray[i]    =    Math.max(yArray[i].doubleValue()    +    1);    	non-compiled	[CE]  double  cannot  be  dereferenced	35	None	replace
23	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  yArray[i]  =  size;  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  yArray[i]  =  size;  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  yArray[i]  =  size;  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    yArray[i]    =    size;    }    	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	24	None	replace
24	[BUG]  [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  yArray[i]  =  size;  }  [CE]  >  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  yArray[i]  =  size;  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  yArray[i]  =  size;  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    yArray[i]    =    size;    }    	non-compiled	[CE]  >  expected	24	None	replace
25	[BUG]  [BUGGY]  int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  yArray[i]  =  size;  }  [CE]  >  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  yArray[i]  =  size;  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  yArray[i]  =  size;  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    yArray[i]    =    size;    }    	non-compiled	[CE]  >  expected	24	None	replace
26	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xArray[i].doubleValue()  *  1);  [CE]  double  cannot  be  dereferenced  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xArray[i].doubleValue()  *  1);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i],  xArray[i].doubleValue()  *  1);	  yArray[i]    =    Math.max(yArray[i],    xArray[i].doubleValue()    +    1);    	non-compiled	[CE]  double  cannot  be  dereferenced	73	None	replace
27	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xArray[i].doubleValue()  +  2);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xArray[i].doubleValue()  +  2);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i],  xArray[i].doubleValue()  +  2);	  yArray[i]    =    Math.max(yArray[i],    xArray[i].doubleValue()    +    1);    	non-compiled	[CE]  double  cannot  be  dereferenced	73	None	replace
28	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]    =    Math.max(yArray[i],    yArray[i]);    yArray[i]  =  Math.max(yArray[i],  yArray[i]);	  	compilable	  [FE]  AssertionFailedError  	19	2	add
29	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =    Math.max(yArray[i],    yArray[i]);    yArray[i]  =  Math.max(yArray[i],  yArray[i]);	  	compilable	  [FE]  AssertionFailedError  	19	2	add
30	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  int  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  [CE]  ']'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  int  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =    Math.max(yArray[i],    yArray[i]);    int  yArray[i]  =  Math.max(yArray[i],  yArray[i]);	  	non-compiled	[CE]  ']'  expected	19	None	add
31	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  yArray[i]  =  Math.max(yArray[i],  YArray[i]);  [CE]  cannot  find  symbol  YArray  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  yArray[i]  =  Math.max(yArray[i],  YArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =    Math.max(yArray[i],    yArray[i]);    yArray[i]  =  Math.max(yArray[i],  YArray[i]);	  	non-compiled	[CE]  cannot  find  symbol  YArray	19	None	add
32	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  yArray[i]  =  Math.max(xArray[i],  yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]    =    Math.max(yArray[i],    yArray[i]);    yArray[i]  =  Math.max(xArray[i],  yArray[i]);	  	compilable	  [FE]  AssertionFailedError  	19	10	add
33	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  yArray[i]  =  Math.max(xArray[i],  yArray[i]);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  yArray[i]  =  Math.max(xArray[i],  yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =    Math.max(yArray[i],    yArray[i]);    yArray[i]  =  Math.max(xArray[i],  yArray[i]);	  	compilable	  [FE]  AssertionFailedError  	19	10	add
34	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  yArray[i]  =  Math.max(yArray[i],  yArray[i]));  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  yArray[i]  =  Math.max(yArray[i],  yArray[i]));  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =    Math.max(yArray[i],    yArray[i]);    yArray[i]  =  Math.max(yArray[i],  yArray[i]));	  	non-compiled	[CE]  ';'  expected	19	None	add
35	[BUG]  [BUGGY]  for(int  i=1;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i]  *  covarianceMatrix[i];  }  [CE]  ']'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=1;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i]  *  covarianceMatrix[i];  }  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=1;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i]  *  covarianceMatrix[i];  }	  for(int    i=1;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i]    *    covarianceMatrix[i];    }    	non-compiled	[CE]  ']'  expected	104	None	replace
36	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  yArray[i];  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  yArray[i];	  yArray[i]    =(yArray[i]    <    yArray[i])?    yArray[i]    :    yArray[i];    	compilable	  [FE]  AssertionFailedError  	132	2	replace
37	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  yArray[i];  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  yArray[i];  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  yArray[i];	  yArray[i]    =(yArray[i]    <    yArray[i])?    yArray[i]    :    yArray[i];    	compilable	  [FE]  AssertionFailedError  	132	2	replace
38	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  <  xArray[i])?  yArray[i]  :  yArray[i];  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]  =(yArray[i]  <  xArray[i])?  yArray[i]  :  yArray[i];	  yArray[i]    =(yArray[i]    <    yArray[i])?    yArray[i]    :    yArray[i];    	compilable	  [FE]  AssertionFailedError  	132	2	replace
39	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  <  xArray[i])?  yArray[i]  :  yArray[i];  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  <  xArray[i])?  yArray[i]  :  yArray[i];  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(yArray[i]  <  xArray[i])?  yArray[i]  :  yArray[i];	  yArray[i]    =(yArray[i]    <    yArray[i])?    yArray[i]    :    yArray[i];    	compilable	  [FE]  AssertionFailedError  	132	2	replace
40	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]!=  yArray[i])?  yArray[i]  :  yArray[i];  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]  =(yArray[i]!=  yArray[i])?  yArray[i]  :  yArray[i];	  yArray[i]    =(yArray[i]    <    yArray[i])?    yArray[i]    :    yArray[i];    	compilable	  [FE]  AssertionFailedError  	132	2	replace
41	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]!=  yArray[i])?  yArray[i]  :  yArray[i];  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]!=  yArray[i])?  yArray[i]  :  yArray[i];  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(yArray[i]!=  yArray[i])?  yArray[i]  :  yArray[i];	  yArray[i]    =(yArray[i]    <    yArray[i])?    yArray[i]    :    yArray[i];    	compilable	  [FE]  AssertionFailedError  	132	2	replace
42	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  >=  yArray[i])?  yArray[i]  :  yArray[i];  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]  =(yArray[i]  >=  yArray[i])?  yArray[i]  :  yArray[i];	  yArray[i]    =(yArray[i]    <    yArray[i])?    yArray[i]    :    yArray[i];    	compilable	  [FE]  AssertionFailedError  	132	2	replace
43	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  >=  yArray[i])?  yArray[i]  :  yArray[i];  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  >=  yArray[i])?  yArray[i]  :  yArray[i];  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(yArray[i]  >=  yArray[i])?  yArray[i]  :  yArray[i];	  yArray[i]    =(yArray[i]    <    yArray[i])?    yArray[i]    :    yArray[i];    	compilable	  [FE]  AssertionFailedError  	132	2	replace
44	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }	  regression.addData(yArray[i],    xArray[i]);    for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	15	None	replace
45	[BUG]  [BUGGY]  double[]  yArray  =(double[])xArray[i  +  1];  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  yArray  =(double[])xArray[i  +  1];  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =(double[])xArray[i  +  1];	  double[]    yArray    =(double[])yArray[i    +    1];    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	48	None	replace
46	[BUG]  [BUGGY]  double[]  yArray  =(double[])yArray[i  +  2];  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  yArray  =(double[])yArray[i  +  2];  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =(double[])yArray[i  +  2];	  double[]    yArray    =(double[])yArray[i    +    1];    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	48	None	replace
47	[BUG]  [BUGGY]  double[]  xArray  =(double[])yArray[i  +  1];  [CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  xArray  =(double[])yArray[i  +  1];  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  xArray  =(double[])yArray[i  +  1];	  double[]    yArray    =(double[])yArray[i    +    1];    	non-compiled	[CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])	48	None	replace
48	[BUG]  [BUGGY]  double[]  yArray  =(double[])xArray[i].compareTo(yArray[i],  yArray[i]);  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  yArray  =(double[])xArray[i].compareTo(yArray[i],  yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =(double[])xArray[i].compareTo(yArray[i],  yArray[i]);	  double[]    yArray    =(double[])yArray[i].compareTo(yArray[i],    xArray[i]);    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	143	None	replace
49	[BUG]  [BUGGY]  double[]  xArray  =(double[])yArray[i].compareTo(xArray[i],  yArray[i]);  [CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  xArray  =(double[])yArray[i].compareTo(xArray[i],  yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  xArray  =(double[])yArray[i].compareTo(xArray[i],  yArray[i]);	  double[]    yArray    =(double[])yArray[i].compareTo(yArray[i],    xArray[i]);    	non-compiled	[CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])	143	None	replace
50	[BUG]  [BUGGY]  Double[]  yArray  =(double[])xArray[i].compareTo(yArray[i],  yArray[i]);  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  Double[]  yArray  =(double[])xArray[i].compareTo(yArray[i],  yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	Double[]  yArray  =(double[])xArray[i].compareTo(yArray[i],  yArray[i]);	  double[]    yArray    =(double[])yArray[i].compareTo(yArray[i],    xArray[i]);    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	143	None	replace
51	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  xArray[i]  *  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(yArray[i],  xArray[i]  *  1);	  regression.addData(xArray[i],    yArray[i]    *    1);    	compilable	  [FE]  AssertionFailedError  	86	2	replace
52	[BUG]  [BUGGY]  regression.addData(yArray[i],  xArray[i]  *  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  xArray[i]  *  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],  xArray[i]  *  1);	  regression.addData(xArray[i],    yArray[i]    *    1);    	compilable	  [FE]  AssertionFailedError  	86	2	replace
53	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  *  2);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(xArray[i],  yArray[i]  *  2);	  regression.addData(xArray[i],    yArray[i]    *    1);    	compilable	  [FE]  AssertionFailedError  	86	2	replace
54	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  *  2);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  *  2);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],  yArray[i]  *  2);	  regression.addData(xArray[i],    yArray[i]    *    1);    	compilable	  [FE]  AssertionFailedError  	86	2	replace
55	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  /  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(xArray[i],  yArray[i]  /  1);	  regression.addData(xArray[i],    yArray[i]    *    1);    	compilable	  [FE]  AssertionFailedError  	86	2	replace
56	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  /  1);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  /  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],  yArray[i]  /  1);	  regression.addData(xArray[i],    yArray[i]    *    1);    	compilable	  [FE]  AssertionFailedError  	86	2	replace
57	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  *  3);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(xArray[i],  yArray[i]  *  3);	  regression.addData(xArray[i],    yArray[i]    *    1);    	compilable	  [FE]  AssertionFailedError  	86	2	replace
58	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  *  3);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  *  3);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],  yArray[i]  *  3);	  regression.addData(xArray[i],    yArray[i]    *    1);    	compilable	  [FE]  AssertionFailedError  	86	2	replace
59	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;	          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]    =(xArray[i]    <    yArray.length)?    yArray[i]    :    null;    	compilable	  [FE]  NullPointerException  	112	11	replace
60	[BUG]  [BUGGY]  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;	          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]    =(xArray[i]    <    yArray.length)?    yArray[i]    :    null;    	compilable	  [FE]  NullPointerException  	112	11	replace
61	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  xArray[i]  =(yArray[i]  <  yArray.length)?  xArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	xArray[i]  =(yArray[i]  <  yArray.length)?  xArray[i]  :  null;	          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]    =(xArray[i]    <    yArray.length)?    yArray[i]    :    null;    	compilable	  [FE]  NullPointerException  	112	13	replace
62	[BUG]  [BUGGY]  xArray[i]  =(yArray[i]  <  yArray.length)?  xArray[i]  :  null;  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  xArray[i]  =(yArray[i]  <  yArray.length)?  xArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	xArray[i]  =(yArray[i]  <  yArray.length)?  xArray[i]  :  null;	          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]    =(xArray[i]    <    yArray.length)?    yArray[i]    :    null;    	compilable	  [FE]  NullPointerException  	112	13	replace
63	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  xArray[i]  +  1);  regression.addData(yArray[i],  xArray[i]  +  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(yArray[i],    xArray[i]    +    1);    regression.addData(yArray[i],  xArray[i]  +  1);	  	compilable	  [FE]  AssertionFailedError  	83	12	add
64	[BUG]  [BUGGY]  regression.addData(yArray[i],  xArray[i]  +  1);  regression.addData(yArray[i],  xArray[i]  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  xArray[i]  +  1);  regression.addData(yArray[i],  xArray[i]  +  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],    xArray[i]    +    1);    regression.addData(yArray[i],  xArray[i]  +  1);	  	compilable	  [FE]  AssertionFailedError  	83	12	add
65	[BUG]  [BUGGY]  regression.addData(yArray[i],  xArray[i]  +  1);  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]  +  1);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  xArray[i]  +  1);  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]  +  1);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],    xArray[i]    +    1);    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]  +  1);  }	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	83	None	add
66	[BUG]  [BUGGY]  regression.addData(yArray[i],  xArray[i]  +  1);  for(int  i  =  0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]  +  1);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  xArray[i]  +  1);  for(int  i  =  0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]  +  1);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],    xArray[i]    +    1);    for(int  i  =  0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]  +  1);  }	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	83	None	add
67	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  xArray[i]  +  1);  yArray[i]  =  Math.max(yArray[i],  xArray[i]  +  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(yArray[i],    xArray[i]    +    1);    yArray[i]  =  Math.max(yArray[i],  xArray[i]  +  1);	  	compilable	  [FE]  AssertionFailedError  	83	12	add
68	[BUG]  [BUGGY]  regression.addData(yArray[i],  xArray[i]  +  1);  yArray[i]  =  Math.max(yArray[i],  xArray[i]  +  1);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  xArray[i]  +  1);  yArray[i]  =  Math.max(yArray[i],  xArray[i]  +  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],    xArray[i]    +    1);    yArray[i]  =  Math.max(yArray[i],  xArray[i]  +  1);	  	compilable	  [FE]  AssertionFailedError  	83	12	add
69	[BUG]  [BUGGY]  for(int  i=1;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[  [CE]  ']'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=1;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=1;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[	  for(int    i=0;    i    <    xArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i];    yArray[i]    =    covarianceMatrix[    	non-compiled	[CE]  ']'  expected	69	None	replace
70	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  yArray[i];  yArray[i]  =  covarianceMatrix[  [CE]  ']'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  yArray[i];  yArray[i]  =  covarianceMatrix[  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  yArray[i];  yArray[i]  =  covarianceMatrix[	  for(int    i=0;    i    <    xArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i];    yArray[i]    =    covarianceMatrix[    	non-compiled	[CE]  ']'  expected	69	None	replace
71	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  size)  {  return  size;  }  [CE]  'else'  without  'if'  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  size)  {  return  size;  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  size)  {  return  size;  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size    ==    size)    {    return    size;    }    	non-compiled	[CE]  'else'  without  'if'	27	None	replace
72	[BUG]  [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  size)  {  return  size;  }  [CE]  >  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  size)  {  return  size;  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  size)  {  return  size;  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size    ==    size)    {    return    size;    }    	non-compiled	[CE]  >  expected	27	None	replace
73	[BUG]  [BUGGY]  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  size)  {  return  size;  }  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  size)  {  return  size;  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  size)  {  return  size;  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size    ==    size)    {    return    size;    }    	non-compiled	[CE]  double  cannot  be  dereferenced	27	None	replace
74	[BUG]  [BUGGY]  double[]  xArray  =(double[])yArray[i]  +  1;  [CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  xArray  =(double[])yArray[i]  +  1;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  xArray  =(double[])yArray[i]  +  1;	  double[]    xArray    =(double[])yArray[i];    	non-compiled	[CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])	49	None	replace
75	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  *  1);  regression.addData(xArray[i],  yArray[i]  *  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(xArray[i],    yArray[i]    *    1);    regression.addData(xArray[i],  yArray[i]  *  1);	  	compilable	  [FE]  AssertionFailedError  	85	3	add
76	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  *  1);  regression.addData(xArray[i],  yArray[i]  *  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  *  1);  regression.addData(xArray[i],  yArray[i]  *  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],    yArray[i]    *    1);    regression.addData(xArray[i],  yArray[i]  *  1);	  	compilable	  [FE]  AssertionFailedError  	85	3	add
77	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  *  1);  for(int  i  =  0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  *  1);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  *  1);  for(int  i  =  0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  *  1);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],    yArray[i]    *    1);    for(int  i  =  0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  *  1);  }	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	85	None	add
78	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  *  1);  for(int  i  =  0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  *  1);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  *  1);  for(int  i  =  0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  *  1);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],    yArray[i]    *    1);    for(int  i  =  0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  *  1);  }	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	85	None	add
79	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  *  1);  for(int  i  =  0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]  *  1);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  *  1);  for(int  i  =  0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]  *  1);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],    yArray[i]    *    1);    for(int  i  =  0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]  *  1);  }	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	85	None	add
80	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  *  1);  for(int  i  =  0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  *  1);  [CE]  'else'  without  'if'  [FE]            AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  *  1);  for(int  i  =  0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  *  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],    yArray[i]    *    1);    for(int  i  =  0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  *  1);	  	non-compiled	[CE]  'else'  without  'if'	85	None	add
81	[BUG]  [BUGGY]  double  size  =  xArray[i].doubleValue()  *  yArray.length;  [CE]  double  cannot  be  dereferenced  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double  size  =  xArray[i].doubleValue()  *  yArray.length;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double  size  =  xArray[i].doubleValue()  *  yArray.length;	  double    size    =    yArray[i].doubleValue()    *    xArray.length;    	non-compiled	[CE]  double  cannot  be  dereferenced	58	None	replace
82	[BUG]  [BUGGY]  double  size  =  yArray[i].doubleValue()  *  xArray.length  +  1;  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double  size  =  yArray[i].doubleValue()  *  xArray.length  +  1;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double  size  =  yArray[i].doubleValue()  *  xArray.length  +  1;	  double    size    =    yArray[i].doubleValue()    *    xArray.length;    	non-compiled	[CE]  double  cannot  be  dereferenced	58	None	replace
83	[BUG]  [BUGGY]  double  size  =  yArray[i].doubleValue()  /  xArray.length;  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double  size  =  yArray[i].doubleValue()  /  xArray.length;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double  size  =  yArray[i].doubleValue()  /  xArray.length;	  double    size    =    yArray[i].doubleValue()    *    xArray.length;    	non-compiled	[CE]  double  cannot  be  dereferenced	58	None	replace
84	[BUG]  [BUGGY]  regression.addData(yArray[i],  xArray[i],  null);  [CE]  no  suitable  method  found  for  addData(double,double,<null>)  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  xArray[i],  null);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],  xArray[i],  null);	  regression.addData(xArray[i],    yArray[i],    null);    	non-compiled	[CE]  no  suitable  method  found  for  addData(double,double,<null>)	106	None	replace
85	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i],  this);  [CE]  no  suitable  method  found  for  addData(double,double,PearsonsCorrelation)  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i],  this);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],  yArray[i],  this);	  regression.addData(xArray[i],    yArray[i],    null);    	non-compiled	[CE]  no  suitable  method  found  for  addData(double,double,PearsonsCorrelation)	106	None	replace
86	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i],  null,  j);  [CE]  cannot  find  symbol  j  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i],  null,  j);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],  yArray[i],  null,  j);	  regression.addData(xArray[i],    yArray[i],    null);    	non-compiled	[CE]  cannot  find  symbol  j	106	None	replace
87	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i],  null,  nObs);  [CE]  no  suitable  method  found  for  addData(double,double,<null>,int)  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i],  null,  nObs);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],  yArray[i],  null,  nObs);	  regression.addData(xArray[i],    yArray[i],    null);    	non-compiled	[CE]  no  suitable  method  found  for  addData(double,double,<null>,int)	106	None	replace
88	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i  +  1]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(xArray[i],  yArray[i  +  1]);	  regression.addData(yArray[i],    yArray[i    +    1]);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	90	13	replace
89	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i  +  1]);  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i  +  1]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],  yArray[i  +  1]);	  regression.addData(yArray[i],    yArray[i    +    1]);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	90	13	replace
90	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  xArray[i  +  1]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(yArray[i],  xArray[i  +  1]);	  regression.addData(yArray[i],    yArray[i    +    1]);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	90	13	replace
91	[BUG]  [BUGGY]  regression.addData(yArray[i],  xArray[i  +  1]);  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  xArray[i  +  1]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],  xArray[i  +  1]);	  regression.addData(yArray[i],    yArray[i    +    1]);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	90	13	replace
92	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  yArray[i  +  3]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(yArray[i],  yArray[i  +  3]);	  regression.addData(yArray[i],    yArray[i    +    1]);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	90	13	replace
93	[BUG]  [BUGGY]  regression.addData(yArray[i],  yArray[i  +  3]);  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  yArray[i  +  3]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],  yArray[i  +  3]);	  regression.addData(yArray[i],    yArray[i    +    1]);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	90	13	replace
94	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[  [CE]  ']'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[	  for(int    i=1;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i];    yArray[i]    =    covarianceMatrix[    	non-compiled	[CE]  ']'  expected	71	None	replace
95	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  yArray[i];  yArray[i]  =  covarianceMatrix[i];  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  yArray[i];  yArray[i]  =  covarianceMatrix[i];  }  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  yArray[i];  yArray[i]  =  covarianceMatrix[i];  }	  for(int    i=0;    i    <    xArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i];    yArray[i]    =    covarianceMatrix[i];    }    	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	44	None	replace
96	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  yArray[i];  }  [CE]  ']'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  yArray[i];  }  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  yArray[i];  }	  for(int    i=0;    i    <    xArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i];    yArray[i]    =    covarianceMatrix[i];    }    	non-compiled	[CE]  ']'  expected	44	None	replace
97	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i],  size[i]);  [CE]  cannot  find  symbol  size  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i],  size[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],  yArray[i],  size[i]);	  regression.addData(xArray[i],    yArray[i],    data[i]);    	non-compiled	[CE]  cannot  find  symbol  size	102	None	replace
98	[BUG]  [BUGGY]  yArray[i]  =  Math.min(yArray[i],  xArray[i].doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.min(yArray[i],  xArray[i].doubleValue());  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.min(yArray[i],  xArray[i].doubleValue());	  yArray[i]    =    Math.max(xArray[i],    yArray[i].doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	75	None	replace
99	[BUG]  [BUGGY]  xArray[i]  =  Math.max(yArray[i],  xArray[i].doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  xArray[i]  =  Math.max(yArray[i],  xArray[i].doubleValue());  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	xArray[i]  =  Math.max(yArray[i],  xArray[i].doubleValue());	  yArray[i]    =    Math.max(xArray[i],    yArray[i].doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	75	None	replace
100	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  if(xArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	if(xArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  regression.addData(yArray[i],    xArray[i]);    regression.addData(yArray[i],    xArray[i]);    	compilable	  [FE]  IllegalArgumentException  	14	9	replace
101	[BUG]  [BUGGY]  if(xArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  if(xArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	if(xArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  regression.addData(yArray[i],    xArray[i]);    regression.addData(yArray[i],    xArray[i]);    	compilable	  [FE]  IllegalArgumentException  	14	9	replace
102	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  <  xArray[i])?  yArray[i]  :  yArray[i].computeValue(yArray[i]);  [CE]  double  cannot  be  dereferenced  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  <  xArray[i])?  yArray[i]  :  yArray[i].computeValue(yArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(yArray[i]  <  xArray[i])?  yArray[i]  :  yArray[i].computeValue(yArray[i]);	  yArray[i]    =(yArray[i]    <    yArray[i])?    yArray[i]    :    yArray[i].computeValue(yArray[i]);    	non-compiled	[CE]  double  cannot  be  dereferenced	133	None	replace
103	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  <  yArray[i])?  xArray[i]  :  yArray[i].computeValue(yArray[i]);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  <  yArray[i])?  xArray[i]  :  yArray[i].computeValue(yArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(yArray[i]  <  yArray[i])?  xArray[i]  :  yArray[i].computeValue(yArray[i]);	  yArray[i]    =(yArray[i]    <    yArray[i])?    yArray[i]    :    yArray[i].computeValue(yArray[i]);    	non-compiled	[CE]  double  cannot  be  dereferenced	133	None	replace
104	[BUG]  [BUGGY]  yArray[i]  =(xArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i].computeValue(xArray[i]);  [CE]  double  cannot  be  dereferenced  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(xArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i].computeValue(xArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(xArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i].computeValue(xArray[i]);	  yArray[i]    =(yArray[i]    <    yArray[i])?    yArray[i]    :    yArray[i].computeValue(yArray[i]);    	non-compiled	[CE]  double  cannot  be  dereferenced	133	None	replace
105	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i].computeValue(xArray[i]);  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i].computeValue(xArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i].computeValue(xArray[i]);	  yArray[i]    =(yArray[i]    <    yArray[i])?    yArray[i]    :    yArray[i].computeValue(yArray[i]);    	non-compiled	[CE]  double  cannot  be  dereferenced	133	None	replace
106	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	                yArray[i]        =        Math.max(yArray[i],        xArray[i]);        yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	64	10	add
107	[BUG]  [BUGGY]          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	                yArray[i]        =        Math.max(yArray[i],        xArray[i]);        yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	64	10	add
108	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	                yArray[i]        =        Math.max(yArray[i],        xArray[i]);        yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.min(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	64	8	add
109	[BUG]  [BUGGY]          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	                yArray[i]        =        Math.max(yArray[i],        xArray[i]);        yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.min(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	64	8	add
110	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(xArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	                yArray[i]        =        Math.max(yArray[i],        xArray[i]);        yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(xArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	64	8	add
111	[BUG]  [BUGGY]          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(xArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(xArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	                yArray[i]        =        Math.max(yArray[i],        xArray[i]);        yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(xArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	64	8	add
112	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);	          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    new    Double(yArray[i]);    	compilable	  [FE]  AssertionFailedError  	42	2	replace
113	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);  [FE]  AssertionFailedError  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);	          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    new    Double(yArray[i]);    	compilable	  [FE]  AssertionFailedError  	42	2	replace
114	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  new  Double(yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  new  Double(yArray[i]);	          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    new    Double(yArray[i]);    	compilable	  [FE]  AssertionFailedError  	42	2	replace
115	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  new  Double(yArray[i]);  [FE]  AssertionFailedError  [FE]      NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  new  Double(yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  new  Double(yArray[i]);	          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    new    Double(yArray[i]);    	compilable	  [FE]  AssertionFailedError  	42	2	replace
116	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  new  Double(yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  new  Double(yArray[i]);	          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    new    Double(yArray[i]);    	compilable	  [FE]  AssertionFailedError  	42	2	replace
117	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  new  Double(yArray[i]);  [FE]  AssertionFailedError  [FE]        NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  new  Double(yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  new  Double(yArray[i]);	          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    new    Double(yArray[i]);    	compilable	  [FE]  AssertionFailedError  	42	2	replace
118	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);	          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    new    Double(yArray[i]);    	compilable	  [FE]  AssertionFailedError  	42	2	replace
119	[BUG]  [BUGGY]  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);  [FE]  AssertionFailedError  [FE]          NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);	          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    new    Double(yArray[i]);    	compilable	  [FE]  AssertionFailedError  	42	2	replace
120	[BUG]  [BUGGY]  yArray[i]  =  Math.max(xArray[i],  yArray[i].length,  yArray[i].length);  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(xArray[i],  yArray[i].length,  yArray[i].length);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(xArray[i],  yArray[i].length,  yArray[i].length);	  yArray[i]    =    Math.max(yArray[i],    xArray[i].length,    yArray[i].length);    	non-compiled	[CE]  double  cannot  be  dereferenced	120	None	replace
121	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xArray[i].length,  yArray[i].length  +  1);  [CE]  double  cannot  be  dereferenced  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xArray[i].length,  yArray[i].length  +  1);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i],  xArray[i].length,  yArray[i].length  +  1);	  yArray[i]    =    Math.max(yArray[i],    xArray[i].length,    yArray[i].length);    	non-compiled	[CE]  double  cannot  be  dereferenced	120	None	replace
122	[BUG]  [BUGGY]  yArray[i]  =  Math.min(yArray[i],  xArray[i].length,  yArray[i].length);  [CE]  double  cannot  be  dereferenced  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.min(yArray[i],  xArray[i].length,  yArray[i].length);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.min(yArray[i],  xArray[i].length,  yArray[i].length);	  yArray[i]    =    Math.max(yArray[i],    xArray[i].length,    yArray[i].length);    	non-compiled	[CE]  double  cannot  be  dereferenced	120	None	replace
123	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]  +  1);  yArray[i]  =  Math.max(yArray[i],  yArray[i]  +  1);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]    =    Math.max(yArray[i],    yArray[i]    +    1);    yArray[i]  =  Math.max(yArray[i],  yArray[i]  +  1);	  	compilable	  [FE]  AssertionFailedError  	22	2	add
124	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]  +  1);  yArray[i]  =  Math.max(yArray[i],  yArray[i]  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]  +  1);  yArray[i]  =  Math.max(yArray[i],  yArray[i]  +  1);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =    Math.max(yArray[i],    yArray[i]    +    1);    yArray[i]  =  Math.max(yArray[i],  yArray[i]  +  1);	  	compilable	  [FE]  AssertionFailedError  	22	2	add
125	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]  +  1);  int  yArray[i]  =  Math.max(yArray[i],  yArray[i]  +  1);  [CE]  ']'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]  +  1);  int  yArray[i]  =  Math.max(yArray[i],  yArray[i]  +  1);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =    Math.max(yArray[i],    yArray[i]    +    1);    int  yArray[i]  =  Math.max(yArray[i],  yArray[i]  +  1);	  	non-compiled	[CE]  ']'  expected	22	None	add
126	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]  +  1);  yArray[i]  =  Math.max(yArray[i],  yArray[i]  +  1));  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]  +  1);  yArray[i]  =  Math.max(yArray[i],  yArray[i]  +  1));  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =    Math.max(yArray[i],    yArray[i]    +    1);    yArray[i]  =  Math.max(yArray[i],  yArray[i]  +  1));	  	non-compiled	[CE]  ';'  expected	22	None	add
127	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]  +  1);  for(int  i]  =  Math.max(yArray[i],  yArray[i]  +  1);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]  +  1);  for(int  i]  =  Math.max(yArray[i],  yArray[i]  +  1);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =    Math.max(yArray[i],    yArray[i]    +    1);    for(int  i]  =  Math.max(yArray[i],  yArray[i]  +  1);	  	non-compiled	[CE]  ';'  expected	22	None	add
128	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]    =(yArray[i]    <    xArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	54	13	add
129	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =(yArray[i]    <    xArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	54	13	add
130	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;  yArray[i]  =(xArray[i]  <  xArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]    =(yArray[i]    <    xArray.length)?    yArray[i]    :    null;    yArray[i]  =(xArray[i]  <  xArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	54	13	add
131	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;  yArray[i]  =(xArray[i]  <  xArray.length)?  yArray[i]  :  null;  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;  yArray[i]  =(xArray[i]  <  xArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =(yArray[i]    <    xArray.length)?    yArray[i]    :    null;    yArray[i]  =(xArray[i]  <  xArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	54	13	add
132	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]    =(yArray[i]    <    xArray.length)?    yArray[i]    :    null;    xArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	54	13	add
133	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =(yArray[i]    <    xArray.length)?    yArray[i]    :    null;    xArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	54	13	add
134	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;  int  yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;  [CE]  ']'  expected  [FE]          NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;  int  yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =(yArray[i]    <    xArray.length)?    yArray[i]    :    null;    int  yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;	  	non-compiled	[CE]  ']'  expected	54	None	add
135	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;  double[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;  [CE]  ']'  expected  [FE]            NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;  double[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =(yArray[i]    <    xArray.length)?    yArray[i]    :    null;    double[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;	  	non-compiled	[CE]  ']'  expected	54	None	add
136	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  yArray[i]);  regression.addData(yArray[i],  yArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(yArray[i],    yArray[i]);    regression.addData(yArray[i],  yArray[i]);	  	compilable	  [FE]  AssertionFailedError  	59	12	add
137	[BUG]  [BUGGY]  regression.addData(yArray[i],  yArray[i]);  regression.addData(yArray[i],  yArray[i]);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  yArray[i]);  regression.addData(yArray[i],  yArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],    yArray[i]);    regression.addData(yArray[i],  yArray[i]);	  	compilable	  [FE]  AssertionFailedError  	59	12	add
138	[BUG]  [BUGGY]  regression.addData(yArray[i],  yArray[i]);  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  yArray[i]);  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],    yArray[i]);    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	59	None	add
139	[BUG]  [BUGGY]  regression.addData(yArray[i],  yArray[i]);  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  yArray[i]);  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],    yArray[i]);    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	59	None	add
140	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],    yArray[i]    +    1);    regression.addData(yArray[i],  yArray[i]  +  1);  regression.addData(xArray[i],  yArray[i]  +  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(xArray[i],        yArray[i]        +        1);        regression.addData(yArray[i],    yArray[i]    +    1);    regression.addData(xArray[i],  yArray[i]  +  1);	  	compilable	  [FE]  AssertionFailedError  	124	12	add
141	[BUG]  [BUGGY]  regression.addData(xArray[i],    yArray[i]    +    1);    regression.addData(yArray[i],  yArray[i]  +  1);  regression.addData(xArray[i],  yArray[i]  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],    yArray[i]    +    1);    regression.addData(yArray[i],  yArray[i]  +  1);  regression.addData(xArray[i],  yArray[i]  +  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],        yArray[i]        +        1);        regression.addData(yArray[i],    yArray[i]    +    1);    regression.addData(xArray[i],  yArray[i]  +  1);	  	compilable	  [FE]  AssertionFailedError  	124	12	add
142	[BUG]  [BUGGY]  regression.addData(xArray[i],    yArray[i]    +    1);    regression.addData(yArray[i],  yArray[i]  +  1);  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],    yArray[i]    +    1);    regression.addData(yArray[i],  yArray[i]  +  1);  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],        yArray[i]        +        1);        regression.addData(yArray[i],    yArray[i]    +    1);    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	124	None	add
143	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],    yArray[i]    +    1);    regression.addData(yArray[i],  yArray[i]  +  1);  regression.addData(xArray[i],  yArray[i]  +  1);  regression.addData(yArray[i],  yArray[i]  +  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(xArray[i],        yArray[i]        +        1);        regression.addData(yArray[i],    yArray[i]    +    1);    regression.addData(xArray[i],  yArray[i]  +  1);  regression.addData(yArray[i],  yArray[i]  +  1);	  	compilable	  [FE]  AssertionFailedError  	124	12	add
144	[BUG]  [BUGGY]  regression.addData(xArray[i],    yArray[i]    +    1);    regression.addData(yArray[i],  yArray[i]  +  1);  regression.addData(xArray[i],  yArray[i]  +  1);  regression.addData(yArray[i],  yArray[i]  +  1);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],    yArray[i]    +    1);    regression.addData(yArray[i],  yArray[i]  +  1);  regression.addData(xArray[i],  yArray[i]  +  1);  regression.addData(yArray[i],  yArray[i]  +  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],        yArray[i]        +        1);        regression.addData(yArray[i],    yArray[i]    +    1);    regression.addData(xArray[i],  yArray[i]  +  1);  regression.addData(yArray[i],  yArray[i]  +  1);	  	compilable	  [FE]  AssertionFailedError  	124	12	add
145	[BUG]  [BUGGY]  regression.addData(xArray[i],    yArray[i]    +    1);    regression.addData(yArray[i],  yArray[i]  +  1);  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],    yArray[i]    +    1);    regression.addData(yArray[i],  yArray[i]  +  1);  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],        yArray[i]        +        1);        regression.addData(yArray[i],    yArray[i]    +    1);    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	124	None	add
146	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  if(xArray[i]  <  yArray[i])  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	if(xArray[i]  <  yArray[i])  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  regression.addData(xArray[i],    yArray[i]    +    1);    regression.addData(yArray[i],    yArray[i]    +    1);    	compilable	  [FE]  IllegalArgumentException  	125	13	replace
147	[BUG]  [BUGGY]  if(xArray[i]  <  yArray[i])  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  if(xArray[i]  <  yArray[i])  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	if(xArray[i]  <  yArray[i])  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  regression.addData(xArray[i],    yArray[i]    +    1);    regression.addData(yArray[i],    yArray[i]    +    1);    	compilable	  [FE]  IllegalArgumentException  	125	13	replace
148	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  }	  regression.addData(yArray[i],    xArray[i]);    yArray[i]    =    Math.min(yArray[i],    xArray[i]);    	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	137	None	replace
149	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  xArray[i]);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  xArray[i]);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  xArray[i]);  }	  regression.addData(yArray[i],    xArray[i]);    yArray[i]    =    Math.min(yArray[i],    xArray[i]);    	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	137	None	replace
150	[BUG]  [BUGGY]  for(int  i=1;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[  [CE]  ']'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=1;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=1;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[	  for(int    i=0;    i    <    outMatrix.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i];    yArray[i]    =    covarianceMatrix[    	non-compiled	[CE]  ']'  expected	70	None	replace
151	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatri  [CE]  ']'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatri  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatri	  for(int    i=0;    i    <    outMatrix.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i];    yArray[i]    =    covarianceMatrix[    	non-compiled	[CE]  ']'  expected	70	None	replace
152	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]    =    Math.min(yArray[i],    yArray[i]);    yArray[i]  =  Math.min(yArray[i],  yArray[i]);	  	compilable	  [FE]  AssertionFailedError  	17	2	add
153	[BUG]  [BUGGY]  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =    Math.min(yArray[i],    yArray[i]);    yArray[i]  =  Math.min(yArray[i],  yArray[i]);	  	compilable	  [FE]  AssertionFailedError  	17	2	add
154	[BUG]  [BUGGY]  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  int  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  [CE]  ']'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  int  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =    Math.min(yArray[i],    yArray[i]);    int  yArray[i]  =  Math.min(yArray[i],  yArray[i]);	  	non-compiled	[CE]  ']'  expected	17	None	add
155	[BUG]  [BUGGY]  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  double[i]  =  Math.min(yArray[i],  yArray[i]);  [CE]  ']'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  double[i]  =  Math.min(yArray[i],  yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =    Math.min(yArray[i],    yArray[i]);    double[i]  =  Math.min(yArray[i],  yArray[i]);	  	non-compiled	[CE]  ']'  expected	17	None	add
156	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  yArray[i]  =  Math.min(xArray[i],  yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]    =    Math.min(yArray[i],    yArray[i]);    yArray[i]  =  Math.min(xArray[i],  yArray[i]);	  	compilable	  [FE]  AssertionFailedError  	17	10	add
157	[BUG]  [BUGGY]  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  yArray[i]  =  Math.min(xArray[i],  yArray[i]);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  yArray[i]  =  Math.min(xArray[i],  yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =    Math.min(yArray[i],    yArray[i]);    yArray[i]  =  Math.min(xArray[i],  yArray[i]);	  	compilable	  [FE]  AssertionFailedError  	17	10	add
158	[BUG]  [BUGGY]  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  yArray[i]  =  Math.min(yArray[i],  yArray[i]));  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  yArray[i]  =  Math.min(yArray[i],  yArray[i]));  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =    Math.min(yArray[i],    yArray[i]);    yArray[i]  =  Math.min(yArray[i],  yArray[i]));	  	non-compiled	[CE]  ';'  expected	17	None	add
159	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray.length)?  xArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]  =(yArray[i]  ==  yArray.length)?  xArray[i]  :  null;	  yArray[i]    =(yArray[i]    >=    yArray.length)?    yArray[i]    :    null;    	compilable	  [FE]  NullPointerException  	118	13	replace
160	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray.length)?  xArray[i]  :  null;  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray.length)?  xArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(yArray[i]  ==  yArray.length)?  xArray[i]  :  null;	  yArray[i]    =(yArray[i]    >=    yArray.length)?    yArray[i]    :    null;    	compilable	  [FE]  NullPointerException  	118	13	replace
161	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  ==  xArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]  =(yArray[i]  ==  xArray.length)?  yArray[i]  :  null;	  yArray[i]    =(yArray[i]    >=    yArray.length)?    yArray[i]    :    null;    	compilable	  [FE]  NullPointerException  	118	13	replace
162	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  ==  xArray.length)?  yArray[i]  :  null;  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  ==  xArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(yArray[i]  ==  xArray.length)?  yArray[i]  :  null;	  yArray[i]    =(yArray[i]    >=    yArray.length)?    yArray[i]    :    null;    	compilable	  [FE]  NullPointerException  	118	13	replace
163	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i],  size,  yArray[i]);  [CE]  cannot  find  symbol  size  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i],  size,  yArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],  yArray[i],  size,  yArray[i]);	  regression.addData(xArray[i],    yArray[i],    j,    yArray[i]);    	non-compiled	[CE]  cannot  find  symbol  size	30	None	replace
164	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i],  scale,  yArray[i]);  [CE]  cannot  find  symbol  scale  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i],  scale,  yArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],  yArray[i],  scale,  yArray[i]);	  regression.addData(xArray[i],    yArray[i],    j,    yArray[i]);    	non-compiled	[CE]  cannot  find  symbol  scale	30	None	replace
165	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]    =(yArray[i]    ==    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	52	13	add
166	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  null;  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =(yArray[i]    ==    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	52	13	add
167	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]!=  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]    =(yArray[i]    ==    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]!=  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	52	13	add
168	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]!=  yArray.length)?  yArray[i]  :  null;  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]!=  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =(yArray[i]    ==    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]!=  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	52	13	add
169	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  >=  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]    =(yArray[i]    ==    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  >=  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	52	13	add
170	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  >=  yArray.length)?  yArray[i]  :  null;  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  >=  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =(yArray[i]    ==    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  >=  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	52	13	add
171	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  >>  yArray.length)?  yArray[i]  :  null;  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]          NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  >>  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =(yArray[i]    ==    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  >>  yArray.length)?  yArray[i]  :  null;	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	52	None	add
172	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]    =(yArray[i]    ==    yArray.length)?    yArray[i]    :    null;    xArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	52	13	add
173	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  null;  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =(yArray[i]    ==    yArray.length)?    yArray[i]    :    null;    xArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	52	13	add
174	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i].doubleValue(),  xArray[i],  yArray[i]);  [CE]  double  cannot  be  dereferenced  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i].doubleValue(),  xArray[i],  yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i].doubleValue(),  xArray[i],  yArray[i]);	  yArray[i]    =    Math.max(yArray[i].doubleValue(),    xArray[i]);    	non-compiled	[CE]  double  cannot  be  dereferenced	33	None	replace
175	[BUG]  [BUGGY]  yArray[i]  =  Math.max(xArray[i].doubleValue(),  yArray[i]);  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(xArray[i].doubleValue(),  yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(xArray[i].doubleValue(),  yArray[i]);	  yArray[i]    =    Math.max(yArray[i].doubleValue(),    xArray[i]);    	non-compiled	[CE]  double  cannot  be  dereferenced	33	None	replace
176	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i].doubleValue(),  xArray[i],  0);  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i].doubleValue(),  xArray[i],  0);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i].doubleValue(),  xArray[i],  0);	  yArray[i]    =    Math.max(yArray[i].doubleValue(),    xArray[i]);    	non-compiled	[CE]  double  cannot  be  dereferenced	33	None	replace
177	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  xArray[i]  +  2);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(yArray[i],  xArray[i]  +  2);	  regression.addData(xArray[i],    yArray[i]    +    2);    	compilable	  [FE]  AssertionFailedError  	110	2	replace
178	[BUG]  [BUGGY]  regression.addData(yArray[i],  xArray[i]  +  2);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  xArray[i]  +  2);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],  xArray[i]  +  2);	  regression.addData(xArray[i],    yArray[i]    +    2);    	compilable	  [FE]  AssertionFailedError  	110	2	replace
179	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    new    Double(yArray[i]);    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);	  	compilable	  [FE]  NullPointerException  	41	13	add
180	[BUG]  [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    new    Double(yArray[i]);    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);	  	compilable	  [FE]  NullPointerException  	41	13	add
181	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    new    Double(yArray[i]);    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);	  	compilable	  [FE]  NullPointerException  	41	13	add
182	[BUG]  [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    new    Double(yArray[i]);    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);	  	compilable	  [FE]  NullPointerException  	41	13	add
183	[BUG]  [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i  [CE]  ']'  expected  [FE]        NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    new    Double(yArray[i]);    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i	  	non-compiled	[CE]  ']'  expected	41	None	add
184	[BUG]  [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]  [CE]  ')'  expected  [FE]          NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    new    Double(yArray[i]);    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]	  	non-compiled	[CE]  ')'  expected	41	None	add
185	[BUG]  [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[  [CE]  ']'  expected  [FE]            NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    new    Double(yArray[i]);    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[	  	non-compiled	[CE]  ']'  expected	41	None	add
186	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xArray[i].length()  -  1);  [CE]  double  cannot  be  dereferenced  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xArray[i].length()  -  1);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i],  xArray[i].length()  -  1);	  yArray[i]    =    Math.max(yArray[i],    xArray[i].length());    	non-compiled	[CE]  double  cannot  be  dereferenced	91	None	replace
187	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i].length());  [CE]  double  cannot  be  dereferenced  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i].length());  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i],  yArray[i].length());	  yArray[i]    =    Math.max(yArray[i],    xArray[i].length());    	non-compiled	[CE]  double  cannot  be  dereferenced	91	None	replace
188	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xArray[i].length()  +  1);  [CE]  double  cannot  be  dereferenced  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xArray[i].length()  +  1);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i],  xArray[i].length()  +  1);	  yArray[i]    =    Math.max(yArray[i],    xArray[i].length());    	non-compiled	[CE]  double  cannot  be  dereferenced	91	None	replace
189	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  -  1);  regression.addData(xArray[i],  yArray[i]  -  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(xArray[i],    yArray[i]    -    1);    regression.addData(xArray[i],  yArray[i]  -  1);	  	compilable	  [FE]  AssertionFailedError  	87	9	add
190	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  -  1);  regression.addData(xArray[i],  yArray[i]  -  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  -  1);  regression.addData(xArray[i],  yArray[i]  -  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],    yArray[i]    -    1);    regression.addData(xArray[i],  yArray[i]  -  1);	  	compilable	  [FE]  AssertionFailedError  	87	9	add
191	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  -  1);  for(int  i  =  0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  -  1);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  -  1);  for(int  i  =  0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  -  1);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],    yArray[i]    -    1);    for(int  i  =  0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  -  1);  }	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	87	None	add
192	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  -  1);  for(int  i  =  0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  -  1);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  -  1);  for(int  i  =  0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  -  1);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],    yArray[i]    -    1);    for(int  i  =  0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  -  1);  }	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	87	None	add
193	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  -  1);  for(int  i  =  yArray.length;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  -  1);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  -  1);  for(int  i  =  yArray.length;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  -  1);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],    yArray[i]    -    1);    for(int  i  =  yArray.length;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  -  1);  }	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	87	None	add
194	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  -  1);  for(int  i  =  0;  i  <  yArray[i]  -  1;  i++)  {  regression.addData(xArray[i],  yArray[i]  -  1);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]            AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  -  1);  for(int  i  =  0;  i  <  yArray[i]  -  1;  i++)  {  regression.addData(xArray[i],  yArray[i]  -  1);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],    yArray[i]    -    1);    for(int  i  =  0;  i  <  yArray[i]  -  1;  i++)  {  regression.addData(xArray[i],  yArray[i]  -  1);  }	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	87	None	add
195	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]  *  1);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]  =  Math.max(yArray[i],  yArray[i]  *  1);	  yArray[i]    =    Math.max(yArray[i],    yArray[i]    +    1);    	compilable	  [FE]  AssertionFailedError  	23	2	replace
196	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]  *  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]  *  1);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i],  yArray[i]  *  1);	  yArray[i]    =    Math.max(yArray[i],    yArray[i]    +    1);    	compilable	  [FE]  AssertionFailedError  	23	2	replace
197	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xArray[i]  +  1);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]  =  Math.max(yArray[i],  xArray[i]  +  1);	  yArray[i]    =    Math.max(yArray[i],    yArray[i]    +    1);    	compilable	  [FE]  AssertionFailedError  	23	2	replace
198	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xArray[i]  +  1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xArray[i]  +  1);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i],  xArray[i]  +  1);	  yArray[i]    =    Math.max(yArray[i],    yArray[i]    +    1);    	compilable	  [FE]  AssertionFailedError  	23	2	replace
199	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.min(yArray[i],  yArray[i]  +  1);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]  =  Math.min(yArray[i],  yArray[i]  +  1);	  yArray[i]    =    Math.max(yArray[i],    yArray[i]    +    1);    	compilable	  [FE]  AssertionFailedError  	23	2	replace
200	[BUG]  [BUGGY]  yArray[i]  =  Math.min(yArray[i],  yArray[i]  +  1);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.min(yArray[i],  yArray[i]  +  1);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.min(yArray[i],  yArray[i]  +  1);	  yArray[i]    =    Math.max(yArray[i],    yArray[i]    +    1);    	compilable	  [FE]  AssertionFailedError  	23	2	replace
201	[BUG]  [BUGGY]  For(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i]  *  covarianceMatrix[i];  }  [CE]  '.class'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  For(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i]  *  covarianceMatrix[i];  }  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	For(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i]  *  covarianceMatrix[i];  }	  for(int    i=0;    i    <    xArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i]    *    covarianceMatrix[i];    }    	non-compiled	[CE]  '.class'  expected	1	None	replace
202	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],    xArray[i]);    regression.addData(yArray[i],  xArray[i]);  regression.addData(yArray[i],  xArray[i]);  regression.addData(yArray[i],  xArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(yArray[i],        xArray[i]);        regression.addData(yArray[i],    xArray[i]);    regression.addData(yArray[i],  xArray[i]);  regression.addData(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	13	10	add
203	[BUG]  [BUGGY]  regression.addData(yArray[i],    xArray[i]);    regression.addData(yArray[i],  xArray[i]);  regression.addData(yArray[i],  xArray[i]);  regression.addData(yArray[i],  xArray[i]);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],    xArray[i]);    regression.addData(yArray[i],  xArray[i]);  regression.addData(yArray[i],  xArray[i]);  regression.addData(yArray[i],  xArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],        xArray[i]);        regression.addData(yArray[i],    xArray[i]);    regression.addData(yArray[i],  xArray[i]);  regression.addData(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	13	10	add
204	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],    xArray[i]);    regression.addData(yArray[i],  xArray[i]);  regression.addData(yArray[i],  xArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(yArray[i],        xArray[i]);        regression.addData(yArray[i],    xArray[i]);    regression.addData(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	13	9	add
205	[BUG]  [BUGGY]  regression.addData(yArray[i],    xArray[i]);    regression.addData(yArray[i],  xArray[i]);  regression.addData(yArray[i],  xArray[i]);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],    xArray[i]);    regression.addData(yArray[i],  xArray[i]);  regression.addData(yArray[i],  xArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],        xArray[i]);        regression.addData(yArray[i],    xArray[i]);    regression.addData(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	13	9	add
206	[BUG]  [BUGGY]  regression.addData(yArray[i],    xArray[i]);    regression.addData(yArray[i],  xArray[i]);  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],    xArray[i]);    regression.addData(yArray[i],  xArray[i]);  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],        xArray[i]);        regression.addData(yArray[i],    xArray[i]);    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	13	None	add
207	[BUG]  [BUGGY]  regression.addData(yArray[i],    xArray[i]);    regression.addData(yArray[i],  xArray[i]);  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],    xArray[i]);    regression.addData(yArray[i],  xArray[i]);  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],        xArray[i]);        regression.addData(yArray[i],    xArray[i]);    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	13	None	add
208	[BUG]  [BUGGY]  regression.addData(yArray[i],  yArray[i],  xArray[i]);  [CE]  no  suitable  method  found  for  addData(double,double,double)  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  yArray[i],  xArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],  yArray[i],  xArray[i]);	  regression.addData(yArray[i],    xArray[i],    size);    	non-compiled	[CE]  no  suitable  method  found  for  addData(double,double,double)	32	None	replace
209	[BUG]  [BUGGY]  regression.addData(yArray[i],  xArray[i],  j);  [CE]  cannot  find  symbol  j  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  xArray[i],  j);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],  xArray[i],  j);	  regression.addData(yArray[i],    xArray[i],    size);    	non-compiled	[CE]  cannot  find  symbol  j	32	None	replace
210	[BUG]  [BUGGY]  regression.addArray(yArray[i],  xArray[i]);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addArray(yArray[i],  xArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addArray(yArray[i],  xArray[i]);	  regression.addData(yArray[i],    yArray[i]);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
211	[BUG]  [BUGGY]  regression.addArray(xArray[i],  yArray[i]);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addArray(xArray[i],  yArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addArray(xArray[i],  yArray[i]);	  regression.addData(yArray[i],    yArray[i]);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
212	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i].doubleValue()  +  1);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i].doubleValue()  +  1);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i],  yArray[i].doubleValue()  +  1);	  yArray[i]    =    Math.max(yArray[i],    yArray[i].doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	74	None	replace
213	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double  size[]  =  yArray[i].doubleValue();  if(size  >  size)  {  return  Math.max(regression.getR()  +  size);  }  [CE]  'else'  without  'if'  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double  size[]  =  yArray[i].doubleValue();  if(size  >  size)  {  return  Math.max(regression.getR()  +  size);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  double  size[]  =  yArray[i].doubleValue();  if(size  >  size)  {  return  Math.max(regression.getR()  +  size);  }	          for(int    i=0;    i    <    yArray.length;    i++)    {    double    size[]    =    yArray[i].doubleValue();    if(size    >    size)    {    return    Math.max(regression.getR()    +    size);    }    	non-compiled	[CE]  'else'  without  'if'	95	None	replace
214	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  yArray[]  =  yArray[i].doubleValue();  if(size  >  size)  {  return  Math.max(regression.getR()  +  size);  }  [CE]  'else'  without  'if'  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  yArray[]  =  yArray[i].doubleValue();  if(size  >  size)  {  return  Math.max(regression.getR()  +  size);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  yArray[]  =  yArray[i].doubleValue();  if(size  >  size)  {  return  Math.max(regression.getR()  +  size);  }	          for(int    i=0;    i    <    yArray.length;    i++)    {    double    size[]    =    yArray[i].doubleValue();    if(size    >    size)    {    return    Math.max(regression.getR()    +    size);    }    	non-compiled	[CE]  'else'  without  'if'	95	None	replace
215	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size[]  =  xArray[i].doubleValue();  if(size  >  size)  {  return  Math.max(regression.getR()  +  size);  }  [CE]  'else'  without  'if'  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size[]  =  xArray[i].doubleValue();  if(size  >  size)  {  return  Math.max(regression.getR()  +  size);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double  size[]  =  xArray[i].doubleValue();  if(size  >  size)  {  return  Math.max(regression.getR()  +  size);  }	          for(int    i=0;    i    <    yArray.length;    i++)    {    double    size[]    =    yArray[i].doubleValue();    if(size    >    size)    {    return    Math.max(regression.getR()    +    size);    }    	non-compiled	[CE]  'else'  without  'if'	95	None	replace
216	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],    yArray[i]    +    1);    regression.addData(xArray[i],  yArray[i]  +  1);  regression.addData(xArray[i],  yArray[i]  +  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(xArray[i],        yArray[i]        +        1);        regression.addData(xArray[i],    yArray[i]    +    1);    regression.addData(xArray[i],  yArray[i]  +  1);	  	compilable	  [FE]  AssertionFailedError  	79	10	add
217	[BUG]  [BUGGY]  regression.addData(xArray[i],    yArray[i]    +    1);    regression.addData(xArray[i],  yArray[i]  +  1);  regression.addData(xArray[i],  yArray[i]  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],    yArray[i]    +    1);    regression.addData(xArray[i],  yArray[i]  +  1);  regression.addData(xArray[i],  yArray[i]  +  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],        yArray[i]        +        1);        regression.addData(xArray[i],    yArray[i]    +    1);    regression.addData(xArray[i],  yArray[i]  +  1);	  	compilable	  [FE]  AssertionFailedError  	79	10	add
218	[BUG]  [BUGGY]  regression.addData(xArray[i],    yArray[i]    +    1);    regression.addData(xArray[i],  yArray[i]  +  1);  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],    yArray[i]    +    1);    regression.addData(xArray[i],  yArray[i]  +  1);  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],        yArray[i]        +        1);        regression.addData(xArray[i],    yArray[i]    +    1);    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	79	None	add
219	[BUG]  [BUGGY]  regression.addData(xArray[i],    yArray[i]    +    1);    regression.addData(xArray[i],  yArray[i]  +  1);  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],    yArray[i]    +    1);    regression.addData(xArray[i],  yArray[i]  +  1);  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],        yArray[i]        +        1);        regression.addData(xArray[i],    yArray[i]    +    1);    for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	79	None	add
220	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],    yArray[i]    +    1);    regression.addData(xArray[i],  yArray[i]  +  1);  regression.addData(xArray[i],  yArray[i]  +  1);  regression.addData(xArray[i],  yArray[i]  +  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(xArray[i],        yArray[i]        +        1);        regression.addData(xArray[i],    yArray[i]    +    1);    regression.addData(xArray[i],  yArray[i]  +  1);  regression.addData(xArray[i],  yArray[i]  +  1);	  	compilable	  [FE]  AssertionFailedError  	79	10	add
221	[BUG]  [BUGGY]  regression.addData(xArray[i],    yArray[i]    +    1);    regression.addData(xArray[i],  yArray[i]  +  1);  regression.addData(xArray[i],  yArray[i]  +  1);  regression.addData(xArray[i],  yArray[i]  +  1);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],    yArray[i]    +    1);    regression.addData(xArray[i],  yArray[i]  +  1);  regression.addData(xArray[i],  yArray[i]  +  1);  regression.addData(xArray[i],  yArray[i]  +  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],        yArray[i]        +        1);        regression.addData(xArray[i],    yArray[i]    +    1);    regression.addData(xArray[i],  yArray[i]  +  1);  regression.addData(xArray[i],  yArray[i]  +  1);	  	compilable	  [FE]  AssertionFailedError  	79	10	add
222	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  [CE]  'else'  without  'if'  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    	non-compiled	[CE]  'else'  without  'if'	25	None	replace
223	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	25	None	replace
224	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  [CE]  'else'  without  'if'  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    	non-compiled	[CE]  'else'  without  'if'	25	None	replace
225	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  }	  regression.addData(yArray[i],    xArray[i]);    yArray[i]    =    Math.max(yArray[i],    xArray[i]);    	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	135	None	replace
226	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray[i])?  xArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]  =(yArray[i]  ==  yArray[i])?  xArray[i]  :  null;	  yArray[i]    =(yArray[i]    ==    yArray[i])?    yArray[i]    :    null;    	compilable	  [FE]  AssertionFailedError  	51	2	replace
227	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray[i])?  xArray[i]  :  null;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray[i])?  xArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(yArray[i]  ==  yArray[i])?  xArray[i]  :  null;	  yArray[i]    =(yArray[i]    ==    yArray[i])?    yArray[i]    :    null;    	compilable	  [FE]  AssertionFailedError  	51	2	replace
228	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  ==  xArray[i])?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]  =(yArray[i]  ==  xArray[i])?  yArray[i]  :  null;	  yArray[i]    =(yArray[i]    ==    yArray[i])?    yArray[i]    :    null;    	compilable	  [FE]  NullPointerException  	51	13	replace
229	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  ==  xArray[i])?  yArray[i]  :  null;  [FE]  NullPointerException  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  ==  xArray[i])?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(yArray[i]  ==  xArray[i])?  yArray[i]  :  null;	  yArray[i]    =(yArray[i]    ==    yArray[i])?    yArray[i]    :    null;    	compilable	  [FE]  NullPointerException  	51	13	replace
230	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray[i])?  0  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]  =(yArray[i]  ==  yArray[i])?  0  :  null;	  yArray[i]    =(yArray[i]    ==    yArray[i])?    yArray[i]    :    null;    	compilable	  [FE]  AssertionFailedError  	51	2	replace
231	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray[i])?  0  :  null;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray[i])?  0  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(yArray[i]  ==  yArray[i])?  0  :  null;	  yArray[i]    =(yArray[i]    ==    yArray[i])?    yArray[i]    :    null;    	compilable	  [FE]  AssertionFailedError  	51	2	replace
232	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i];  yArray[i]  =  yArray[i];  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i];  yArray[i]  =  yArray[i];  }  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i];  yArray[i]  =  yArray[i];  }	  for(int    i=0;    i    <    xArray.length;    i++)    {    RealMatrix    covarianceMatrix[]    =    covarianceMatrix[i];    yArray[i]    =    covarianceMatrix[i];    }    	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	45	None	replace
233	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  xArray[i];  yArray[i]  =  covarianceMatrix[i];  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  xArray[i];  yArray[i]  =  covarianceMatrix[i];  }  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  xArray[i];  yArray[i]  =  covarianceMatrix[i];  }	  for(int    i=0;    i    <    xArray.length;    i++)    {    RealMatrix    covarianceMatrix[]    =    covarianceMatrix[i];    yArray[i]    =    covarianceMatrix[i];    }    	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	45	None	replace
234	[BUG]  [BUGGY]  double[]  yArray  =  xArray[i].compareTo(yArray[i])+  1;  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  yArray  =  xArray[i].compareTo(yArray[i])+  1;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =  xArray[i].compareTo(yArray[i])+  1;	  double[]    yArray    =    xArray[i].compareTo(yArray[i]);    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	76	None	replace
235	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  if(regression.addData(yArray[i],  xArray[i])  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  if(regression.addData(yArray[i],  xArray[i])  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  if(regression.addData(yArray[i],  xArray[i])  }	  regression.addData(yArray[i],    xArray[i]);    for(int    i    =    0,    yArray.length    =    yArray.length;    i    <    yArray.length;    i++)    {    if(regression.addData(yArray[i],    xArray[i])    }    	non-compiled	[CE]  ')'  expected	101	None	replace
236	[BUG]  [BUGGY]  if(xArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]);  for(int  i  =  0,  yArray.length  =  yArray[i].length;  i  <  yArray.length;  i++)  {  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  if(xArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]);  for(int  i  =  0,  yArray.length  =  yArray[i].length;  i  <  yArray.length;  i++)  {  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	if(xArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]);  for(int  i  =  0,  yArray.length  =  yArray[i].length;  i  <  yArray.length;  i++)  {  }	  regression.addData(yArray[i],    xArray[i]);    for(int    i    =    0,    yArray.length    =    yArray.length;    i    <    yArray.length;    i++)    {    if(regression.addData(yArray[i],    xArray[i])    }    	non-compiled	[CE]  ';'  expected	101	None	replace
237	[BUG]  [BUGGY]  if(xArray[i].equals(yArray[i]))  {  regression.addData(xArray[i],  yArray[i]);  for(int  i  =  0,  yArray.length  =  yArray[i].length;  i  <  yArray.length;  i++)  {  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  if(xArray[i].equals(yArray[i]))  {  regression.addData(xArray[i],  yArray[i]);  for(int  i  =  0,  yArray.length  =  yArray[i].length;  i  <  yArray.length;  i++)  {  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	if(xArray[i].equals(yArray[i]))  {  regression.addData(xArray[i],  yArray[i]);  for(int  i  =  0,  yArray.length  =  yArray[i].length;  i  <  yArray.length;  i++)  {  }	  regression.addData(yArray[i],    xArray[i]);    for(int    i    =    0,    yArray.length    =    yArray.length;    i    <    yArray.length;    i++)    {    if(regression.addData(yArray[i],    xArray[i])    }    	non-compiled	[CE]  ';'  expected	101	None	replace
238	[BUG]  [BUGGY]  if(xArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]);  for(int  i  =  0,  yArray.length  =  yArray[i];  i  <  yArray.length;  i++)  {  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  if(xArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]);  for(int  i  =  0,  yArray.length  =  yArray[i];  i  <  yArray.length;  i++)  {  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	if(xArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]);  for(int  i  =  0,  yArray.length  =  yArray[i];  i  <  yArray.length;  i++)  {  }	  regression.addData(yArray[i],    xArray[i]);    for(int    i    =    0,    yArray.length    =    yArray.length;    i    <    yArray.length;    i++)    {    if(regression.addData(yArray[i],    xArray[i])    }    	non-compiled	[CE]  ';'  expected	101	None	replace
239	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i  =  0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i  =  0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }	  regression.addData(xArray[i],    yArray[i]    +    1);    for(int    i    =    0;    i    <    xArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]    +    1);    }    	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	81	None	replace
240	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i  =  0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i  =  0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }	  regression.addData(xArray[i],    yArray[i]    +    1);    for(int    i    =    0;    i    <    xArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]    +    1);    }    	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	81	None	replace
241	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]  +  1);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i  =  0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]  +  1);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i  =  0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]  +  1);  }	  regression.addData(xArray[i],    yArray[i]    +    1);    for(int    i    =    0;    i    <    xArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]    +    1);    }    	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	81	None	replace
242	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xArray[i],  yArray[i].length,  0);  [CE]  double  cannot  be  dereferenced  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xArray[i],  yArray[i].length,  0);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i],  xArray[i],  yArray[i].length,  0);	  yArray[i]    =    Math.max(yArray[i],    xArray[i],    yArray[i].length);    	non-compiled	[CE]  double  cannot  be  dereferenced	121	None	replace
243	[BUG]  [BUGGY]  yArray[i]  =  Math.max(xArray[i],  yArray[i],  yArray[i].length);  [CE]  double  cannot  be  dereferenced  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(xArray[i],  yArray[i],  yArray[i].length);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(xArray[i],  yArray[i],  yArray[i].length);	  yArray[i]    =    Math.max(yArray[i],    xArray[i],    yArray[i].length);    	non-compiled	[CE]  double  cannot  be  dereferenced	121	None	replace
244	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xArray[i],  yArray[i].length  +  1);  [CE]  double  cannot  be  dereferenced  [FE]                          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xArray[i],  yArray[i].length  +  1);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i],  xArray[i],  yArray[i].length  +  1);	  yArray[i]    =    Math.max(yArray[i],    xArray[i],    yArray[i].length);    	non-compiled	[CE]  double  cannot  be  dereferenced	121	None	replace
245	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i].doubleValue(),  dataArea,  size);  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i].doubleValue(),  dataArea,  size);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i].doubleValue(),  dataArea,  size);	  yArray[i]    =    Math.max(yArray[i].doubleValue(),    size);    	non-compiled	[CE]  double  cannot  be  dereferenced	34	None	replace
246	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i].doubleValue(),  xArray.length);  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i].doubleValue(),  xArray.length);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i].doubleValue(),  xArray.length);	  yArray[i]    =    Math.max(yArray[i].doubleValue(),    size);    	non-compiled	[CE]  double  cannot  be  dereferenced	34	None	replace
247	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i].doubleValue(),  size,  xArray[i]);  [CE]  double  cannot  be  dereferenced  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i].doubleValue(),  size,  xArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i].doubleValue(),  size,  xArray[i]);	  yArray[i]    =    Math.max(yArray[i].doubleValue(),    size);    	non-compiled	[CE]  double  cannot  be  dereferenced	34	None	replace
248	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    xArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  xArray[i]  =  Math.max(yArray[i],  xArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	                yArray[i]        =        Math.max(yArray[i],        xArray[i]);        xArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  xArray[i]  =  Math.max(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	144	10	add
249	[BUG]  [BUGGY]          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    xArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  xArray[i]  =  Math.max(yArray[i],  xArray[i]);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    xArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  xArray[i]  =  Math.max(yArray[i],  xArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	                yArray[i]        =        Math.max(yArray[i],        xArray[i]);        xArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  xArray[i]  =  Math.max(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	144	10	add
250	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    xArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  xArray[i]);  xArray[i]  =  Math.max(yArray[i],  xArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	                yArray[i]        =        Math.max(yArray[i],        xArray[i]);        xArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.min(yArray[i],  xArray[i]);  xArray[i]  =  Math.max(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	144	10	add
251	[BUG]  [BUGGY]          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    xArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  xArray[i]);  xArray[i]  =  Math.max(yArray[i],  xArray[i]);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    xArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  xArray[i]);  xArray[i]  =  Math.max(yArray[i],  xArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	                yArray[i]        =        Math.max(yArray[i],        xArray[i]);        xArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.min(yArray[i],  xArray[i]);  xArray[i]  =  Math.max(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	144	10	add
252	[BUG]  [BUGGY]          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    xArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  xArray[i]  =  Math.max(yArray[i],  xArray[i]  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    xArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  xArray[i]  =  Math.max(yArray[i],  xArray[i]  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	                yArray[i]        =        Math.max(yArray[i],        xArray[i]);        xArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  xArray[i]  =  Math.max(yArray[i],  xArray[i]	  	non-compiled	[CE]  ')'  expected	144	None	add
253	[BUG]  [BUGGY]  double  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  [CE]  ']'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double  yArray[i]  =  Math.max(yArray[i],  xArray[i]);	          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    double    yArray[i]    =    Math.max(yArray[i],    xArray[i]);    	non-compiled	[CE]  ']'  expected	108	None	replace
254	[BUG]  [BUGGY]  double  yArray[i]  =  Math.min(yArray[i],  xArray[i]);  [CE]  ']'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double  yArray[i]  =  Math.min(yArray[i],  xArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double  yArray[i]  =  Math.min(yArray[i],  xArray[i]);	          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    double    yArray[i]    =    Math.max(yArray[i],    xArray[i]);    	non-compiled	[CE]  ']'  expected	108	None	replace
255	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  <  xArray[i])?  yArray[i]  :  yArray[i].compareTo(yArray[i]);  [CE]  double  cannot  be  dereferenced  [FE]        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  <  xArray[i])?  yArray[i]  :  yArray[i].compareTo(yArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(yArray[i]  <  xArray[i])?  yArray[i]  :  yArray[i].compareTo(yArray[i]);	  yArray[i]    =(yArray[i]    <    yArray[i])?    yArray[i]    :    yArray[i].compareTo(yArray[i]);    	non-compiled	[CE]  double  cannot  be  dereferenced	130	None	replace
256	[BUG]  [BUGGY]  yArray[i]  =(xArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i].compareTo(yArray[i]);  [CE]  double  cannot  be  dereferenced  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(xArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i].compareTo(yArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(xArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i].compareTo(yArray[i]);	  yArray[i]    =(yArray[i]    <    yArray[i])?    yArray[i]    :    yArray[i].compareTo(yArray[i]);    	non-compiled	[CE]  double  cannot  be  dereferenced	130	None	replace
257	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  <  yArray[i])?  xArray[i]  :  yArray[i].compareTo(yArray[i]);  [CE]  double  cannot  be  dereferenced  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  <  yArray[i])?  xArray[i]  :  yArray[i].compareTo(yArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(yArray[i]  <  yArray[i])?  xArray[i]  :  yArray[i].compareTo(yArray[i]);	  yArray[i]    =(yArray[i]    <    yArray[i])?    yArray[i]    :    yArray[i].compareTo(yArray[i]);    	non-compiled	[CE]  double  cannot  be  dereferenced	130	None	replace
258	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  xArray[i].compareTo(yArray[i]);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  xArray[i].compareTo(yArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  xArray[i].compareTo(yArray[i]);	  yArray[i]    =(yArray[i]    <    yArray[i])?    yArray[i]    :    yArray[i].compareTo(yArray[i]);    	non-compiled	[CE]  double  cannot  be  dereferenced	130	None	replace
259	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  ==  null)?  xArray[i]  :  null;  [CE]  incomparable  types:  double  and  <null>  [FE]        NullPointerException      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  ==  null)?  xArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(yArray[i]  ==  null)?  xArray[i]  :  null;	  yArray[i]    =(yArray[i]    ==    null)?    yArray[i]    :    null;    	non-compiled	[CE]  incomparable  types:  double  and  <null>	116	None	replace
260	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  ==  null)?  yArray[i]  :  xArray[i];  [CE]  incomparable  types:  double  and  <null>  [FE]          NullPointerException      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  ==  null)?  yArray[i]  :  xArray[i];  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(yArray[i]  ==  null)?  yArray[i]  :  xArray[i];	  yArray[i]    =(yArray[i]    ==    null)?    yArray[i]    :    null;    	non-compiled	[CE]  incomparable  types:  double  and  <null>	116	None	replace
261	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  ==  null)?  yArray[i]  :  new  double[xArray[i];  [CE]  ']'  expected  [FE]            NullPointerException      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  ==  null)?  yArray[i]  :  new  double[xArray[i];  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(yArray[i]  ==  null)?  yArray[i]  :  new  double[xArray[i];	  yArray[i]    =(yArray[i]    ==    null)?    yArray[i]    :    null;    	non-compiled	[CE]  ']'  expected	116	None	replace
262	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  yArray[i]  +  1;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i  =  0;  i  <  yArray[i]  +  1;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i  =  0;  i  <  yArray[i]  +  1;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }	  regression.addData(xArray[i],    yArray[i]    +    1);    for(int    i    =    0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]    +    1);    }    	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	82	None	replace
263	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i]  }  [CE]  ']'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i]  }  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i]  }	  for(int    i=0;    i    <    outMatrix.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i];    yArray[i]    =    covarianceMatrix[i]    	non-compiled	[CE]  ']'  expected	62	None	replace
264	[BUG]  [BUGGY]  for(int  i=1;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i]  [CE]  ']'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=1;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i]  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=1;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i]	  for(int    i=0;    i    <    outMatrix.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i];    yArray[i]    =    covarianceMatrix[i]    	non-compiled	[CE]  ']'  expected	62	None	replace
265	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.min(yArray[i],  xArray[i]);  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  xArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(yArray[i],        xArray[i]);        yArray[i]    =    Math.min(yArray[i],    xArray[i]);    regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	136	11	add
266	[BUG]  [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.min(yArray[i],  xArray[i]);  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  xArray[i]);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.min(yArray[i],  xArray[i]);  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  xArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],        xArray[i]);        yArray[i]    =    Math.min(yArray[i],    xArray[i]);    regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	136	11	add
267	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.min(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  xArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(yArray[i],        xArray[i]);        yArray[i]    =    Math.min(yArray[i],    xArray[i]);    yArray[i]  =  Math.min(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	136	11	add
268	[BUG]  [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.min(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  xArray[i]);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.min(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  xArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],        xArray[i]);        yArray[i]    =    Math.min(yArray[i],    xArray[i]);    yArray[i]  =  Math.min(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	136	11	add
269	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.min(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  xArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(yArray[i],        xArray[i]);        yArray[i]    =    Math.min(yArray[i],    xArray[i]);    yArray[i]  =  Math.min(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	136	11	add
270	[BUG]  [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.min(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  xArray[i]);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.min(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  xArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],        xArray[i]);        yArray[i]    =    Math.min(yArray[i],    xArray[i]);    yArray[i]  =  Math.min(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	136	11	add
271	[BUG]  [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.min(yArray[i],  xArray[i]);  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  xArray[i]);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.min(yArray[i],  xArray[i]);  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  xArray[i]);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],        xArray[i]);        yArray[i]    =    Math.min(yArray[i],    xArray[i]);    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  xArray[i]);  }	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	136	None	add
272	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double  size[]  =  yArray[i].doubleValue();  if(size  >  size)  {  return  size;  }  [CE]  'else'  without  'if'  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double  size[]  =  yArray[i].doubleValue();  if(size  >  size)  {  return  size;  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  double  size[]  =  yArray[i].doubleValue();  if(size  >  size)  {  return  size;  }	          for(int    i=0;    i    <    yArray.length;    i++)    {    double    size[]    =    yArray[i].doubleValue();    if(size    >    size)    {    return    size;    }    	non-compiled	[CE]  'else'  without  'if'	93	None	replace
273	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  yArray[]  =  yArray[i].doubleValue();  if(size  >  size)  {  return  size;  }  [CE]  'else'  without  'if'  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  yArray[]  =  yArray[i].doubleValue();  if(size  >  size)  {  return  size;  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  yArray[]  =  yArray[i].doubleValue();  if(size  >  size)  {  return  size;  }	          for(int    i=0;    i    <    yArray.length;    i++)    {    double    size[]    =    yArray[i].doubleValue();    if(size    >    size)    {    return    size;    }    	non-compiled	[CE]  'else'  without  'if'	93	None	replace
274	[BUG]  [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  double  size[]  =  yArray[i].doubleValue();  if(size  >  size)  {  return  size;  }  [CE]  >  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  double  size[]  =  yArray[i].doubleValue();  if(size  >  size)  {  return  size;  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	int  i=0;  i  <  yArray.length;  i++)  {  double  size[]  =  yArray[i].doubleValue();  if(size  >  size)  {  return  size;  }	          for(int    i=0;    i    <    yArray.length;    i++)    {    double    size[]    =    yArray[i].doubleValue();    if(size    >    size)    {    return    size;    }    	non-compiled	[CE]  >  expected	93	None	replace
275	[BUG]  [BUGGY]  Regression  regression.addData(yArray[i],  xArray[i]);  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  Regression  regression.addData(yArray[i],  xArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	Regression  regression.addData(yArray[i],  xArray[i]);	  regression.addData(yArray[i],    xArray[i]);    Regression    regression.addData(yArray[i],    xArray[i]);    	non-compiled	[CE]  ';'  expected	98	None	replace
276	[BUG]  [BUGGY]  Regression  regression.addData(xArray[i],  yArray[i]);  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  Regression  regression.addData(xArray[i],  yArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	Regression  regression.addData(xArray[i],  yArray[i]);	  regression.addData(yArray[i],    xArray[i]);    Regression    regression.addData(yArray[i],    xArray[i]);    	non-compiled	[CE]  ';'  expected	98	None	replace
277	[BUG]  [BUGGY]  Double[]  yArray  =  yArray[i].compareTo(xArray[i]);  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  Double[]  yArray  =  yArray[i].compareTo(xArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	Double[]  yArray  =  yArray[i].compareTo(xArray[i]);	  double[]    yArray    =    yArray[i].compareTo(yArray[i]);    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	103	None	replace
278	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i].length,  0);  [CE]  double  cannot  be  dereferenced  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i].length,  0);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i],  yArray[i].length,  0);	  yArray[i]    =    Math.max(yArray[i],    yArray[i].length);    	non-compiled	[CE]  double  cannot  be  dereferenced	21	None	replace
279	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i].length  +  1);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i].length  +  1);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i],  yArray[i].length  +  1);	  yArray[i]    =    Math.max(yArray[i],    yArray[i].length);    	non-compiled	[CE]  double  cannot  be  dereferenced	21	None	replace
280	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i],  xArray[i],  matrix);  [CE]  cannot  find  symbol  matrix  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i],  xArray[i],  matrix);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],  yArray[i],  xArray[i],  matrix);	  regression.addData(xArray[i],    yArray[i],    xArray[i],    covarianceMatrix);    	non-compiled	[CE]  cannot  find  symbol  matrix	12	None	replace
281	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i],  xArray[i],  size);  [CE]  cannot  find  symbol  size  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i],  xArray[i],  size);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],  yArray[i],  xArray[i],  size);	  regression.addData(xArray[i],    yArray[i],    xArray[i],    covarianceMatrix);    	non-compiled	[CE]  cannot  find  symbol  size	12	None	replace
282	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i],  xArray[i],  outMatrix);  [CE]  cannot  find  symbol  outMatrix  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i],  xArray[i],  outMatrix);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],  yArray[i],  xArray[i],  outMatrix);	  regression.addData(xArray[i],    yArray[i],    xArray[i],    covarianceMatrix);    	non-compiled	[CE]  cannot  find  symbol  outMatrix	12	None	replace
283	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i]  *  matrix[i];  }  [CE]  ']'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i]  *  matrix[i];  }  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i]  *  matrix[i];  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i]    *    matrix[i];    }    	non-compiled	[CE]  ']'  expected	139	None	replace
284	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix[]  covarianceMatrix[i]  =  covarianceMatrix[i]  *  matrix[i];  }  [CE]  ']'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix[]  covarianceMatrix[i]  =  covarianceMatrix[i]  *  matrix[i];  }  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix[]  covarianceMatrix[i]  =  covarianceMatrix[i]  *  matrix[i];  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i]    *    matrix[i];    }    	non-compiled	[CE]  ']'  expected	139	None	replace
285	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  matrix[i]  =  covarianceMatrix[i]  *  matrix[i];  }  [CE]  ']'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  matrix[i]  =  covarianceMatrix[i]  *  matrix[i];  }  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  matrix[i]  =  covarianceMatrix[i]  *  matrix[i];  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i]    *    matrix[i];    }    	non-compiled	[CE]  ']'  expected	139	None	replace
286	[BUG]  [BUGGY]  yArray[i]  =  Math.min(yArray[i],  xArray[i].length);  [CE]  double  cannot  be  dereferenced  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.min(yArray[i],  xArray[i].length);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.min(yArray[i],  xArray[i].length);	  yArray[i]    =    Math.max(xArray[i],    yArray[i].length);    	non-compiled	[CE]  double  cannot  be  dereferenced	29	None	replace
287	[BUG]  [BUGGY]  yArray[i]  =  Math.max(xArray[i],  yArray[i].length,  0);  [CE]  double  cannot  be  dereferenced  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(xArray[i],  yArray[i].length,  0);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(xArray[i],  yArray[i].length,  0);	  yArray[i]    =    Math.max(xArray[i],    yArray[i].length);    	non-compiled	[CE]  double  cannot  be  dereferenced	29	None	replace
288	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	36	13	add
289	[BUG]  [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	36	13	add
290	[BUG]  [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  double[]  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [CE]  ']'  expected  [FE]      NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  double[]  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    double[]  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;	  	non-compiled	[CE]  ']'  expected	36	None	add
291	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	36	13	add
292	[BUG]  [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	36	13	add
293	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  xArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    xArray[i]  =(yArray[i]  <  yArray.length)?  xArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	36	13	add
294	[BUG]  [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  xArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  xArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    xArray[i]  =(yArray[i]  <  yArray.length)?  xArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	36	13	add
295	[BUG]  [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  int  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [CE]  ']'  expected  [FE]            NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  int  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    int  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;	  	non-compiled	[CE]  ']'  expected	36	None	add
296	[BUG]  [BUGGY]  int  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [CE]  ']'  expected  [FE]          NullPointerException      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  int  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	int  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;	          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    int    yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    	non-compiled	[CE]  ']'  expected	38	None	replace
297	[BUG]  [BUGGY]  double  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [CE]  ']'  expected  [FE]            NullPointerException      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;	          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    int    yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    	non-compiled	[CE]  ']'  expected	38	None	replace
298	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xArray[i])+  1;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]  =  Math.max(yArray[i],  xArray[i])+  1;	          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]    =    Math.max(yArray[i],    xArray[i]));    	compilable	  [FE]  AssertionFailedError  	68	2	replace
299	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xArray[i])+  1;  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xArray[i])+  1;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i],  xArray[i])+  1;	          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]    =    Math.max(yArray[i],    xArray[i]));    	compilable	  [FE]  AssertionFailedError  	68	2	replace
300	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double  size[]  =  yArray[i].doubleValue();  if(size  >  size)  {  return  Math.coefficient(xArray[i]);  }  [CE]  'else'  without  'if'  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double  size[]  =  yArray[i].doubleValue();  if(size  >  size)  {  return  Math.coefficient(xArray[i]);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  double  size[]  =  yArray[i].doubleValue();  if(size  >  size)  {  return  Math.coefficient(xArray[i]);  }	          for(int    i=0;    i    <    yArray.length;    i++)    {    double    size[]    =    yArray[i].doubleValue();    if(size    >    size)    {    return    Math.coefficient(xArray[i]);    }    	non-compiled	[CE]  'else'  without  'if'	94	None	replace
301	[BUG]  [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  double  size[]  =  yArray[i].doubleValue();  if(size  >  size)  {  return  Math.coefficient(xArray[i]);  }  [CE]  'else'  without  'if'  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  double  size[]  =  yArray[i].doubleValue();  if(size  >  size)  {  return  Math.coefficient(xArray[i]);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=1;  i  <  yArray.length;  i++)  {  double  size[]  =  yArray[i].doubleValue();  if(size  >  size)  {  return  Math.coefficient(xArray[i]);  }	          for(int    i=0;    i    <    yArray.length;    i++)    {    double    size[]    =    yArray[i].doubleValue();    if(size    >    size)    {    return    Math.coefficient(xArray[i]);    }    	non-compiled	[CE]  'else'  without  'if'	94	None	replace
302	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size[]  =  xArray[i].doubleValue();  if(size  >  size)  {  return  Math.coefficient(yArray[i]);  }  [CE]  'else'  without  'if'  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size[]  =  xArray[i].doubleValue();  if(size  >  size)  {  return  Math.coefficient(yArray[i]);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double  size[]  =  xArray[i].doubleValue();  if(size  >  size)  {  return  Math.coefficient(yArray[i]);  }	          for(int    i=0;    i    <    yArray.length;    i++)    {    double    size[]    =    yArray[i].doubleValue();    if(size    >    size)    {    return    Math.coefficient(xArray[i]);    }    	non-compiled	[CE]  'else'  without  'if'	94	None	replace
303	[BUG]  [BUGGY]  for(int  i=1;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i]  *  covarianceMatrix[i];  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=1;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i]  *  covarianceMatrix[i];  }  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=1;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i]  *  covarianceMatrix[i];  }	  for(int    i=0;    i    <    xArray.length;    i++)    {    RealMatrix    covarianceMatrix[]    =    covarianceMatrix[i]    *    covarianceMatrix[i];    }    	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	3	None	replace
304	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  realMatrix[]  =  covarianceMatrix[i]  *  covarianceMatrix[i];  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  realMatrix[]  =  covarianceMatrix[i]  *  covarianceMatrix[i];  }  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  realMatrix[]  =  covarianceMatrix[i]  *  covarianceMatrix[i];  }	  for(int    i=0;    i    <    xArray.length;    i++)    {    RealMatrix    covarianceMatrix[]    =    covarianceMatrix[i]    *    covarianceMatrix[i];    }    	non-compiled	[CE]  not  a  statement	3	None	replace
305	[BUG]  [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i]  *  covarianceMatrix[i];  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i]  *  covarianceMatrix[i];  }  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=1;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i]  *  covarianceMatrix[i];  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[]    =    covarianceMatrix[i]    *    covarianceMatrix[i];    }    	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	2	None	replace
306	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i]  *  xArray[i];  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i]  *  xArray[i];  }  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i]  *  xArray[i];  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[]    =    covarianceMatrix[i]    *    covarianceMatrix[i];    }    	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	2	None	replace
307	[BUG]  [BUGGY]  double[]  xArray  =  xArray[i].compareTo(yArray[i]);  [CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  xArray  =  xArray[i].compareTo(yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  xArray  =  xArray[i].compareTo(yArray[i]);	  double[]    xArray    =    yArray[i].compareTo(xArray[i]);    	non-compiled	[CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])	77	None	replace
308	[BUG]  [BUGGY]  double[]  xArray  =  yArray[i].compareTo(xArray[i])+  1;  [CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  xArray  =  yArray[i].compareTo(xArray[i])+  1;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  xArray  =  yArray[i].compareTo(xArray[i])+  1;	  double[]    xArray    =    yArray[i].compareTo(xArray[i]);    	non-compiled	[CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])	77	None	replace
309	[BUG]  [BUGGY]  double[]  xArray  =  yArray[i].compareTo(xArray[i],  xArray[i]);  [CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  xArray  =  yArray[i].compareTo(xArray[i],  xArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  xArray  =  yArray[i].compareTo(xArray[i],  xArray[i]);	  double[]    xArray    =    yArray[i].compareTo(xArray[i]);    	non-compiled	[CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])	77	None	replace
310	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i]  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i]  }  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i]  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i];    yArray[i]    =    covarianceMatrix[i]    }    	non-compiled	[CE]  ';'  expected	96	None	replace
311	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i]  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i]  }  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i]  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i];    yArray[i]    =    covarianceMatrix[i]    }    	non-compiled	[CE]  ';'  expected	96	None	replace
312	[BUG]  [BUGGY]  double  size  =  xArray[i].doubleValue().doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double  size  =  xArray[i].doubleValue().doubleValue();  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double  size  =  xArray[i].doubleValue().doubleValue();	  double    size    =    yArray[i].doubleValue().doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	97	None	replace
313	[BUG]  [BUGGY]  double  size  =  yArray[i].doubleValue()  *  xArray.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double  size  =  yArray[i].doubleValue()  *  xArray.doubleValue();  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double  size  =  yArray[i].doubleValue()  *  xArray.doubleValue();	  double    size    =    yArray[i].doubleValue().doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	97	None	replace
314	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(yArray[i],        xArray[i]);        yArray[i]    =    Math.max(yArray[i],    xArray[i]);    regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	134	12	add
315	[BUG]  [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],        xArray[i]);        yArray[i]    =    Math.max(yArray[i],    xArray[i]);    regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	134	12	add
316	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(yArray[i],        xArray[i]);        yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	134	12	add
317	[BUG]  [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],        xArray[i]);        yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	134	12	add
318	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(yArray[i],        xArray[i]);        yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	134	12	add
319	[BUG]  [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],        xArray[i]);        yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	134	12	add
320	[BUG]  [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],        xArray[i]);        yArray[i]    =    Math.max(yArray[i],    xArray[i]);    for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  }	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	134	None	add
321	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  matrix[i]  *  covarianceMatrix[i];  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  matrix[i]  *  covarianceMatrix[i];  }  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  matrix[i]  *  covarianceMatrix[i];  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    matrix[i]    *    covarianceMatrix[i];    }    	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	105	None	replace
322	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  matrix[i]  *  covarianceMatrix[i];  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  matrix[i]  *  covarianceMatrix[i];  }  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  matrix[i]  *  covarianceMatrix[i];  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    matrix[i]    *    covarianceMatrix[i];    }    	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	105	None	replace
323	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  matrix[i]  *  covarianceMatrix[i];  }  [CE]  ']'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  matrix[i]  *  covarianceMatrix[i];  }  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  matrix[i]  *  covarianceMatrix[i];  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    matrix[i]    *    covarianceMatrix[i];    }    	non-compiled	[CE]  ']'  expected	105	None	replace
324	[BUG]  [BUGGY]  for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  matrix[i]  *  covarianceMatrix[i];  }  [CE]  ']'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  matrix[i]  *  covarianceMatrix[i];  }  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  matrix[i]  *  covarianceMatrix[i];  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    matrix[i]    *    covarianceMatrix[i];    }    	non-compiled	[CE]  ']'  expected	105	None	replace
325	[BUG]  [BUGGY]  double[]  yArray  =(double[])yArray[0].compareTo(xArray[i],  yArray[i]);  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  yArray  =(double[])yArray[0].compareTo(xArray[i],  yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =(double[])yArray[0].compareTo(xArray[i],  yArray[i]);	  double[]    yArray    =(double[])yArray[i].compareTo(yArray[i],    yArray[i]);    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	142	None	replace
326	[BUG]  [BUGGY]  Double[]  xArray  =(double[])yArray.clone();  [CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  Double[]  xArray  =(double[])yArray.clone();  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	Double[]  xArray  =(double[])yArray.clone();	  double[]    xArray    =(double[])yArray.clone();    	non-compiled	[CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])	8	None	replace
327	[BUG]  [BUGGY]  double[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [CE]  ']'  expected  [FE]                NullPointerException      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;	          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    double[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    	non-compiled	[CE]  ']'  expected	43	None	replace
328	[BUG]  [BUGGY]  double[]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [CE]  not  a  statement  [FE]                  NullPointerException      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;	          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    double[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    	non-compiled	[CE]  not  a  statement	43	None	replace
329	[BUG]  [BUGGY]  double[]  xArray  =(double[])yArray[i].compareTo(xArray[i],  xArray[i]);  [CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  xArray  =(double[])yArray[i].compareTo(xArray[i],  xArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  xArray  =(double[])yArray[i].compareTo(xArray[i],  xArray[i]);	  double[]    xArray    =(double[])yArray[i].compareTo(xArray[i]);    	non-compiled	[CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])	6	None	replace
330	[BUG]  [BUGGY]  double[]  xArray  =(double[])yArray[i].compareTo(xArray[i]  +  1);  [CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  xArray  =(double[])yArray[i].compareTo(xArray[i]  +  1);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  xArray  =(double[])yArray[i].compareTo(xArray[i]  +  1);	  double[]    xArray    =(double[])yArray[i].compareTo(xArray[i]);    	non-compiled	[CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])	6	None	replace
331	[BUG]  [BUGGY]  for(int  i=1;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i]  [CE]  ']'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=1;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i]  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=1;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i]	  for(int    i=1;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i];    yArray[i]    =    covarianceMatrix[i]    	non-compiled	[CE]  ']'  expected	63	None	replace
332	[BUG]  [BUGGY]  yArray[i]  =  Math.min(yArray[i].doubleValue(),  xArray[i]);  [CE]  double  cannot  be  dereferenced  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.min(yArray[i].doubleValue(),  xArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.min(yArray[i].doubleValue(),  xArray[i]);	  yArray[i]    =    Math.max(yArray[i].doubleValue(),    yArray[i]);    	non-compiled	[CE]  double  cannot  be  dereferenced	115	None	replace
333	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i],  yArray[i]  =  covarianceMatrix[  [CE]  ']'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i],  yArray[i]  =  covarianceMatrix[  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i],  yArray[i]  =  covarianceMatrix[	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i],    yArray[i]    =    covarianceMatrix[    	non-compiled	[CE]  ']'  expected	141	None	replace
334	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i],  yArray[i]  =  [CE]  ']'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i],  yArray[i]  =  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i],  yArray[i]  =	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i],    yArray[i]    =    covarianceMatrix[    	non-compiled	[CE]  ']'  expected	141	None	replace
335	[BUG]  [BUGGY]  for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i],  yArray[i]  =  covarianceMatrix[  [CE]  ']'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i],  yArray[i]  =  covarianceMatrix[  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i],  yArray[i]  =  covarianceMatrix[	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i],    yArray[i]    =    covarianceMatrix[    	non-compiled	[CE]  ']'  expected	141	None	replace
336	[BUG]  [BUGGY]  Regression  regression.addData(xArray[i],  yArray[i]  +  2);  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  Regression  regression.addData(xArray[i],  yArray[i]  +  2);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	Regression  regression.addData(xArray[i],  yArray[i]  +  2);	  regression.addData(xArray[i],    yArray[i]    +    1);    Regression    regression.addData(xArray[i],    yArray[i]    +    1);    	non-compiled	[CE]  ';'  expected	122	None	replace
337	[BUG]  [BUGGY]  double[]  yArray  =(double[])xArray[i]  +  1;  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  yArray  =(double[])xArray[i]  +  1;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =(double[])xArray[i]  +  1;	  double[]    yArray    =(double[])xArray[i];    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	47	None	replace
338	[BUG]  [BUGGY]  double[]  yArray  =  xArray[i].compareTo(yArray[i],  yArray[i]);  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  yArray  =  xArray[i].compareTo(yArray[i],  yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =  xArray[i].compareTo(yArray[i],  yArray[i]);	  double[]    yArray    =    yArray[i].compareTo(xArray[i],    yArray[i]);    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	78	None	replace
339	[BUG]  [BUGGY]  double[]  yArray  =  yArray[i].compareTo(xArray[i],  yArray[i])+  1;  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  yArray  =  yArray[i].compareTo(xArray[i],  yArray[i])+  1;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =  yArray[i].compareTo(xArray[i],  yArray[i])+  1;	  double[]    yArray    =    yArray[i].compareTo(xArray[i],    yArray[i]);    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	78	None	replace
340	[BUG]  [BUGGY]  double[]  xArray  =  yArray[i].compareTo(xArray[i],  yArray[i]);  [CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  xArray  =  yArray[i].compareTo(xArray[i],  yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  xArray  =  yArray[i].compareTo(xArray[i],  yArray[i]);	  double[]    yArray    =    yArray[i].compareTo(xArray[i],    yArray[i]);    	non-compiled	[CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])	78	None	replace
341	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  xArray[i]  -  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(yArray[i],  xArray[i]  -  1);	  regression.addData(xArray[i],    yArray[i]    -    1);    	compilable	  [FE]  AssertionFailedError  	88	2	replace
342	[BUG]  [BUGGY]  regression.addData(yArray[i],  xArray[i]  -  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  xArray[i]  -  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],  xArray[i]  -  1);	  regression.addData(xArray[i],    yArray[i]    -    1);    	compilable	  [FE]  AssertionFailedError  	88	2	replace
343	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  yArray[i]  +  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(yArray[i],  yArray[i]  +  1);	  regression.addData(yArray[i],    xArray[i]    +    1);    	compilable	  [FE]  AssertionFailedError  	84	10	replace
344	[BUG]  [BUGGY]  regression.addData(yArray[i],  yArray[i]  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  yArray[i]  +  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],  yArray[i]  +  1);	  regression.addData(yArray[i],    xArray[i]    +    1);    	compilable	  [FE]  AssertionFailedError  	84	10	replace
345	[BUG]  [BUGGY]  double[]  yArray  =(double[])rev.clone();  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  yArray  =(double[])rev.clone();  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =(double[])rev.clone();	  double[]    yArray    =(double[])xArray.clone();    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	7	None	replace
346	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  2);  regression.addData(xArray[i],  yArray[i]  +  2);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(xArray[i],    yArray[i]    +    2);    regression.addData(xArray[i],  yArray[i]  +  2);	  	compilable	  [FE]  AssertionFailedError  	109	10	add
347	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  2);  regression.addData(xArray[i],  yArray[i]  +  2);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  2);  regression.addData(xArray[i],  yArray[i]  +  2);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],    yArray[i]    +    2);    regression.addData(xArray[i],  yArray[i]  +  2);	  	compilable	  [FE]  AssertionFailedError  	109	10	add
348	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  2);  for(int  i  =  0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  2);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  2);  for(int  i  =  0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  2);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],    yArray[i]    +    2);    for(int  i  =  0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  2);  }	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	109	None	add
349	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  2);  for(int  i  =  0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  2);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  2);  for(int  i  =  0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  2);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],    yArray[i]    +    2);    for(int  i  =  0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  2);  }	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	109	None	add
350	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  2);  for(int  i  =  0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  2);  for(int  i  =  0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],    yArray[i]    +    2);    for(int  i  =  0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	109	None	add
351	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  2);  for(int  i  =  0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]            AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  2);  for(int  i  =  0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],    yArray[i]    +    2);    for(int  i  =  0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	109	None	add
352	[BUG]  [BUGGY]  regression.addData(yArray[i],  xArray[i],  yArray[i],  size);  [CE]  cannot  find  symbol  size  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  xArray[i],  yArray[i],  size);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],  xArray[i],  yArray[i],  size);	  regression.addData(yArray[i],    xArray[i],    yArray[i]);    	non-compiled	[CE]  cannot  find  symbol  size	10	None	replace
353	[BUG]  [BUGGY]  regression.addData(yArray[i],  xArray[i],  yArray[i],  scale,  yArray[i]);  [CE]  cannot  find  symbol  scale  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  xArray[i],  yArray[i],  scale,  yArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],  xArray[i],  yArray[i],  scale,  yArray[i]);	  regression.addData(yArray[i],    xArray[i],    yArray[i]);    	non-compiled	[CE]  cannot  find  symbol  scale	10	None	replace
354	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  [CE]  'else'  without  'if'  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {	  regression.addData(yArray[i],    xArray[i]);    for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
355	[BUG]  [BUGGY]  double[]  yArray  =(double[])xArray[0];  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  yArray  =(double[])xArray[0];  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =(double[])xArray[0];	  double[]    yArray    =(double[])yArray[0];    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	119	None	replace
356	[BUG]  [BUGGY]  double[]  yArray  =(double[])yArray[1];  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  yArray  =(double[])yArray[1];  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =(double[])yArray[1];	  double[]    yArray    =(double[])yArray[0];    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	119	None	replace
357	[BUG]  [BUGGY]  yArray[i]  =  Math.max(xArray[i].doubleValue(),  yArray[i].doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(xArray[i].doubleValue(),  yArray[i].doubleValue());  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(xArray[i].doubleValue(),  yArray[i].doubleValue());	  yArray[i]    =    Math.max(yArray[i].doubleValue(),    xArray[i].doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	140	None	replace
358	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i].doubleValue(),  xArray[i].doubleValue()  +  1);  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i].doubleValue(),  xArray[i].doubleValue()  +  1);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i].doubleValue(),  xArray[i].doubleValue()  +  1);	  yArray[i]    =    Math.max(yArray[i].doubleValue(),    xArray[i].doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	140	None	replace
359	[BUG]  [BUGGY]  double  size  =  yArray[i].doubleValue()  *  1;  [CE]  double  cannot  be  dereferenced  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double  size  =  yArray[i].doubleValue()  *  1;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double  size  =  yArray[i].doubleValue()  *  1;	  double    size    =    yArray[i].doubleValue()    +    1;    	non-compiled	[CE]  double  cannot  be  dereferenced	57	None	replace
360	[BUG]  [BUGGY]  double  size  =  xArray[i].doubleValue()  +  1;  [CE]  double  cannot  be  dereferenced  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double  size  =  xArray[i].doubleValue()  +  1;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double  size  =  xArray[i].doubleValue()  +  1;	  double    size    =    yArray[i].doubleValue()    +    1;    	non-compiled	[CE]  double  cannot  be  dereferenced	57	None	replace
361	[BUG]  [BUGGY]  double[]  yArray  =(double[])xArray[0].compareTo(yArray[i]);  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  yArray  =(double[])xArray[0].compareTo(yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =(double[])xArray[0].compareTo(yArray[i]);	  double[]    yArray    =(double[])yArray[0].compareTo(xArray[i]);    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	72	None	replace
362	[BUG]  [BUGGY]  double[]  xArray  =(double[])yArray[0].compareTo(xArray[i]);  [CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  xArray  =(double[])yArray[0].compareTo(xArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  xArray  =(double[])yArray[0].compareTo(xArray[i]);	  double[]    yArray    =(double[])yArray[0].compareTo(xArray[i]);    	non-compiled	[CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])	72	None	replace
363	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].computeSize(xArray[i]);  [CE]  'else'  without  'if'  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].computeSize(xArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].computeSize(xArray[i]);	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].computeSize(xArray[i]);    	non-compiled	[CE]  'else'  without  'if'	26	None	replace
364	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].computeSize(xArray[i]);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].computeSize(xArray[i]);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].computeSize(xArray[i]);  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].computeSize(xArray[i]);    	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	26	None	replace
365	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].computeSize(xArray[i]);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].computeSize(xArray[i]);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].computeSize(xArray[i]);  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].computeSize(xArray[i]);    	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	26	None	replace
366	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i];  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i];  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]    =(yArray[i]    <    yArray[i])?    yArray[i]    :    yArray[i];    yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i];	  	compilable	  [FE]  AssertionFailedError  	131	2	add
367	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i];  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i];  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i];  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i];  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =(yArray[i]    <    yArray[i])?    yArray[i]    :    yArray[i];    yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i];	  	compilable	  [FE]  AssertionFailedError  	131	2	add
368	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i];  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i]);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i];  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =(yArray[i]    <    yArray[i])?    yArray[i]    :    yArray[i];    yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i]);	  	non-compiled	[CE]  ';'  expected	131	None	add
369	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i];  int  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i];  [CE]  ']'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i];  int  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i];  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =(yArray[i]    <    yArray[i])?    yArray[i]    :    yArray[i];    int  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i];	  	non-compiled	[CE]  ']'  expected	131	None	add
370	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i];  double[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i];  [CE]  ']'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i];  double[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i];  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =(yArray[i]    <    yArray[i])?    yArray[i]    :    yArray[i];    double[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i];	  	non-compiled	[CE]  ']'  expected	131	None	add
371	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i];  yArray[i]  =(xArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i];  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]    =(yArray[i]    <    yArray[i])?    yArray[i]    :    yArray[i];    yArray[i]  =(xArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i];	  	compilable	  [FE]  AssertionFailedError  	131	2	add
372	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i];  yArray[i]  =(xArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i];  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i];  yArray[i]  =(xArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i];  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =(yArray[i]    <    yArray[i])?    yArray[i]    :    yArray[i];    yArray[i]  =(xArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i];	  	compilable	  [FE]  AssertionFailedError  	131	2	add
373	[BUG]  [BUGGY]  yArray[i]  =  regression.addData(xArray[i],  yArray[i]);  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  regression.addData(xArray[i],  yArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  regression.addData(xArray[i],  yArray[i]);	  regression.addData(yArray[i],    xArray[i]);    yArray[i]    =    regression.addData(yArray[i],    xArray[i]);    	non-compiled	[CE]  incompatible  types	99	None	replace
374	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray[i];  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  xArray[i];  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray[i];  i++)  {  regression.addData(yArray[i],  xArray[i]);  }	  regression.addData(yArray[i],    xArray[i]);    yArray[i]    =    regression.addData(yArray[i],    xArray[i]);    	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	99	None	replace
375	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i],  yArray[i],  yArray[i]);  [CE]  no  suitable  method  found  for  addData(double,double,double,double)  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i],  yArray[i],  yArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],  yArray[i],  yArray[i],  yArray[i]);	  regression.addData(yArray[i],    xArray[i],    yArray[i],    yArray[i]);    	non-compiled	[CE]  no  suitable  method  found  for  addData(double,double,double,double)	127	None	replace
376	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i],  yArray[i],  xArray[i]);  [CE]  no  suitable  method  found  for  addData(double,double,double,double)  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i],  yArray[i],  xArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],  yArray[i],  yArray[i],  xArray[i]);	  regression.addData(yArray[i],    xArray[i],    yArray[i],    yArray[i]);    	non-compiled	[CE]  no  suitable  method  found  for  addData(double,double,double,double)	127	None	replace
377	[BUG]  [BUGGY]  double[]  yArray  =(double[])xArray[i].computeValue(yArray[i],  yArray[i]);  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  yArray  =(double[])xArray[i].computeValue(yArray[i],  yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =(double[])xArray[i].computeValue(yArray[i],  yArray[i]);	  double[]    yArray    =(double[])yArray[i].computeValue(xArray[i],    yArray[i]);    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	129	None	replace
378	[BUG]  [BUGGY]  double[]  yArray  =(double[])yArray[i].computeValue(xArray[i],  xArray[i]);  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  yArray  =(double[])yArray[i].computeValue(xArray[i],  xArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =(double[])yArray[i].computeValue(xArray[i],  xArray[i]);	  double[]    yArray    =(double[])yArray[i].computeValue(xArray[i],    yArray[i]);    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	129	None	replace
379	[BUG]  [BUGGY]  double[]  xArray  =(double[])yArray[i].computeValue(xArray[i],  yArray[i]);  [CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  xArray  =(double[])yArray[i].computeValue(xArray[i],  yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  xArray  =(double[])yArray[i].computeValue(xArray[i],  yArray[i]);	  double[]    yArray    =(double[])yArray[i].computeValue(xArray[i],    yArray[i]);    	non-compiled	[CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])	129	None	replace
380	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xxArray[i]);  [CE]  cannot  find  symbol  xxArray  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xxArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i],  xxArray[i]);	          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]    =    Math.max(yArray[i],    xxArray[i]);    	non-compiled	[CE]  cannot  find  symbol  xxArray	67	None	replace
381	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  >=  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  >=  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]    =(yArray[i]    >=    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  >=  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	117	10	add
382	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  >=  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  >=  yArray.length)?  yArray[i]  :  null;  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  >=  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  >=  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =(yArray[i]    >=    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  >=  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	117	10	add
383	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  >=  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  >>  yArray.length)?  yArray[i]  :  null;  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]      NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  >=  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  >>  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =(yArray[i]    >=    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  >>  yArray.length)?  yArray[i]  :  null;	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	117	None	add
384	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  >=  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]!=  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]    =(yArray[i]    >=    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]!=  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	117	10	add
385	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  >=  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]!=  yArray.length)?  yArray[i]  :  null;  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  >=  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]!=  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =(yArray[i]    >=    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]!=  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	117	10	add
386	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  >=  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]    =(yArray[i]    >=    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	117	13	add
387	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  >=  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  null;  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  >=  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =(yArray[i]    >=    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	117	13	add
388	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  >=  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  [Delete]  yArray.length)?  yArray[i]  :  null;  [CE]  ')'  expected  [FE]            NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  >=  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  [Delete]  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =(yArray[i]    >=    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  [Delete]  yArray.length)?  yArray[i]  :  null;	  	non-compiled	[CE]  ')'  expected	117	None	add
389	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]    =(yArray[i]    ==    yArray[i])?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  null;	  	compilable	  [FE]  AssertionFailedError  	50	2	add
390	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  null;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =(yArray[i]    ==    yArray[i])?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  null;	  	compilable	  [FE]  AssertionFailedError  	50	2	add
391	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  null;  yArray[i]  =(yArray[i]!=  yArray[i])?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]    =(yArray[i]    ==    yArray[i])?    yArray[i]    :    null;    yArray[i]  =(yArray[i]!=  yArray[i])?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	50	13	add
392	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  null;  yArray[i]  =(yArray[i]!=  yArray[i])?  yArray[i]  :  null;  [FE]  NullPointerException  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  null;  yArray[i]  =(yArray[i]!=  yArray[i])?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =(yArray[i]    ==    yArray[i])?    yArray[i]    :    null;    yArray[i]  =(yArray[i]!=  yArray[i])?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	50	13	add
393	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  >=  yArray[i])?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]    =(yArray[i]    ==    yArray[i])?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  >=  yArray[i])?  yArray[i]  :  null;	  	compilable	  [FE]  AssertionFailedError  	50	2	add
394	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  >=  yArray[i])?  yArray[i]  :  null;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  >=  yArray[i])?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =(yArray[i]    ==    yArray[i])?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  >=  yArray[i])?  yArray[i]  :  null;	  	compilable	  [FE]  AssertionFailedError  	50	2	add
395	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  null;  yArray[i]  =(xArray[i]  ==  yArray[i])?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]    =(yArray[i]    ==    yArray[i])?    yArray[i]    :    null;    yArray[i]  =(xArray[i]  ==  yArray[i])?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	50	13	add
396	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  null;  yArray[i]  =(xArray[i]  ==  yArray[i])?  yArray[i]  :  null;  [FE]  NullPointerException  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  null;  yArray[i]  =(xArray[i]  ==  yArray[i])?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =(yArray[i]    ==    yArray[i])?    yArray[i]    :    null;    yArray[i]  =(xArray[i]  ==  yArray[i])?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	50	13	add
397	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]    =(yArray[i]    ==    yArray[i])?    yArray[i]    :    null;    xArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  null;	  	compilable	  [FE]  AssertionFailedError  	50	10	add
398	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  null;  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =(yArray[i]    ==    yArray[i])?    yArray[i]    :    null;    xArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  null;	  	compilable	  [FE]  AssertionFailedError  	50	10	add
399	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;	          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    xArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    	compilable	  [FE]  NullPointerException  	40	13	replace
400	[BUG]  [BUGGY]  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;	          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    xArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    	compilable	  [FE]  NullPointerException  	40	13	replace
401	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  >=  xArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]  =(yArray[i]  >=  xArray.length)?  yArray[i]  :  null;	  yArray[i]    =(yArray[i]    <    xArray.length)?    yArray[i]    :    null;    	compilable	  [FE]  NullPointerException  	55	10	replace
402	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  >=  xArray.length)?  yArray[i]  :  null;  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  >=  xArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(yArray[i]  >=  xArray.length)?  yArray[i]  :  null;	  yArray[i]    =(yArray[i]    <    xArray.length)?    yArray[i]    :    null;    	compilable	  [FE]  NullPointerException  	55	10	replace
403	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  yArray[i];  yArray[i]  =  covarianceMatrix[i]  [CE]  ']'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  yArray[i];  yArray[i]  =  covarianceMatrix[i]  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  yArray[i];  yArray[i]  =  covarianceMatrix[i]	  for(int    i=0;    i    <    xArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i];    yArray[i]    =    covarianceMatrix[i]    	non-compiled	[CE]  ']'  expected	61	None	replace
404	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]  +  1);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i  =  0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]  +  1);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i  =  0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]  +  1);  }	  regression.addData(xArray[i],    yArray[i]    +    1);    for(int    i    =    0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]    +    1);    }    	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	138	None	replace
405	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]  +  1);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i  =  0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]  +  1);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i  =  0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]  +  1);  }	  regression.addData(xArray[i],    yArray[i]    +    1);    for(int    i    =    0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]    +    1);    }    	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	138	None	replace
406	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[]    =    covarianceMatrix[i];    yArray[i]    =    covarianceMatrix[i];    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
407	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i]  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i]  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i]	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[]    =    covarianceMatrix[i];    yArray[i]    =    covarianceMatrix[i];    }    	non-compiled	[CE]  ';'  expected	46	None	replace
408	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xArray[i].length,  1);  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xArray[i].length,  1);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i],  xArray[i].length,  1);	  yArray[i]    =    Math.max(yArray[i],    xArray[i].length,    0);    	non-compiled	[CE]  double  cannot  be  dereferenced	28	None	replace
409	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xArray[i].length,  2);  [CE]  double  cannot  be  dereferenced  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xArray[i].length,  2);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i],  xArray[i].length,  2);	  yArray[i]    =    Math.max(yArray[i],    xArray[i].length,    0);    	non-compiled	[CE]  double  cannot  be  dereferenced	28	None	replace
410	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i].length,  1);  [CE]  double  cannot  be  dereferenced  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i].length,  1);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i],  yArray[i].length,  1);	  yArray[i]    =    Math.max(yArray[i],    xArray[i].length,    0);    	non-compiled	[CE]  double  cannot  be  dereferenced	28	None	replace
411	[BUG]  [BUGGY]  double[]  yArray  =(double[])yArray[i].compareTo(xArray[i],  yArray[0]);  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  yArray  =(double[])yArray[i].compareTo(xArray[i],  yArray[0]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =(double[])yArray[i].compareTo(xArray[i],  yArray[0]);	  double[]    yArray    =(double[])yArray[i].compareTo(xArray[i],    yArray[i]);    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	5	None	replace
412	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  yArray[i  +  1]);  regression.addData(yArray[i],  yArray[i  +  1]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(yArray[i],    yArray[i    +    1]);    regression.addData(yArray[i],  yArray[i  +  1]);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	89	13	add
413	[BUG]  [BUGGY]  regression.addData(yArray[i],  yArray[i  +  1]);  regression.addData(yArray[i],  yArray[i  +  1]);  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  yArray[i  +  1]);  regression.addData(yArray[i],  yArray[i  +  1]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],    yArray[i    +    1]);    regression.addData(yArray[i],  yArray[i  +  1]);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	89	13	add
414	[BUG]  [BUGGY]  regression.addData(yArray[i],  yArray[i  +  1]);  for(int  i  =  0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i  +  1]);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  yArray[i  +  1]);  for(int  i  =  0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i  +  1]);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],    yArray[i    +    1]);    for(int  i  =  0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i  +  1]);  }	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	89	None	add
415	[BUG]  [BUGGY]  regression.addData(yArray[i],  yArray[i  +  1]);  for(int  i  =  0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i  +  1]);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  yArray[i  +  1]);  for(int  i  =  0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i  +  1]);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],    yArray[i    +    1]);    for(int  i  =  0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i  +  1]);  }	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	89	None	add
416	[BUG]  [BUGGY]  regression.addData(yArray[i],  yArray[i  +  1]);  for(int  i  =  0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i  +  1]);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  yArray[i  +  1]);  for(int  i  =  0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i  +  1]);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],    yArray[i    +    1]);    for(int  i  =  0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i  +  1]);  }	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	89	None	add
417	[BUG]  [BUGGY]  regression.addData(yArray[i],  yArray[i  +  1]);  for(int  i  =  0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i  +  1]);  [CE]  'else'  without  'if'  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  yArray[i  +  1]);  for(int  i  =  0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i  +  1]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],    yArray[i    +    1]);    for(int  i  =  0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i  +  1]);	  	non-compiled	[CE]  'else'  without  'if'	89	None	add
418	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        yArray[i]    =(xArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	111	13	add
419	[BUG]  [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        yArray[i]    =(xArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	111	13	add
420	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        yArray[i]    =(xArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	111	13	add
421	[BUG]  [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        yArray[i]    =(xArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	111	13	add
422	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  xArray[i]  :  null;  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        yArray[i]    =(xArray[i]    <    yArray.length)?    yArray[i]    :    null;    xArray[i]  =(yArray[i]  <  yArray.length)?  xArray[i]  :  null;  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	111	13	add
423	[BUG]  [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  xArray[i]  :  null;  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  xArray[i]  :  null;  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        yArray[i]    =(xArray[i]    <    yArray.length)?    yArray[i]    :    null;    xArray[i]  =(yArray[i]  <  yArray.length)?  xArray[i]  :  null;  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	111	13	add
424	[BUG]  [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  int  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  [CE]  ']'  expected  [FE]          NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  int  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        yArray[i]    =(xArray[i]    <    yArray.length)?    yArray[i]    :    null;    int  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;	  	non-compiled	[CE]  ']'  expected	111	None	add
425	[BUG]  [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i  [CE]  ']'  expected  [FE]            NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        yArray[i]    =(xArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i	  	non-compiled	[CE]  ']'  expected	111	None	add
426	[BUG]  [BUGGY]  double[]  yArray  =(double[])xArray[i].compareTo(yArray[i]  +  1);  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  yArray  =(double[])xArray[i].compareTo(yArray[i]  +  1);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =(double[])xArray[i].compareTo(yArray[i]  +  1);	  double[]    yArray    =(double[])xArray[i].compareTo(yArray[i]);    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	4	None	replace
427	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  if(yArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	if(yArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  regression.addData(xArray[i],    yArray[i]    +    1);    regression.addData(xArray[i],    yArray[i]    +    1);    	compilable	  [FE]  IllegalArgumentException  	80	13	replace
428	[BUG]  [BUGGY]  if(yArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  if(yArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	if(yArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  regression.addData(xArray[i],    yArray[i]    +    1);    regression.addData(xArray[i],    yArray[i]    +    1);    	compilable	  [FE]  IllegalArgumentException  	80	13	replace
429	[BUG]  [BUGGY]  int  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  [CE]  ']'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  int  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	int  yArray[i]  =  Math.max(yArray[i],  xArray[i]);	          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    int    yArray[i]    =    Math.max(yArray[i],    xArray[i]);    	non-compiled	[CE]  ']'  expected	66	None	replace
430	[BUG]  [BUGGY]  for(int  i  =  0,  yArray.length;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i  =  0,  yArray.length;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i  =  0,  yArray.length;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }	  regression.addData(xArray[i],    yArray[i]    +    1);    for(int    i    =    0,    yArray.length;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]    +    1);    }    	non-compiled	[CE]  ';'  expected	123	None	replace
431	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        xArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	39	13	add
432	[BUG]  [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        xArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	39	13	add
433	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  xArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        xArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  xArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	39	13	add
434	[BUG]  [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  xArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  xArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        xArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  xArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	39	13	add
435	[BUG]  [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  double[]  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [CE]  ']'  expected  [FE]        NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  double[]  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        xArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    double[]  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;	  	non-compiled	[CE]  ']'  expected	39	None	add
436	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  xArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        xArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    xArray[i]  =(yArray[i]  <  yArray.length)?  xArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	39	13	add
437	[BUG]  [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  xArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  xArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        xArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    xArray[i]  =(yArray[i]  <  yArray.length)?  xArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	39	13	add
438	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        xArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	39	13	add
439	[BUG]  [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        xArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	39	13	add
440	[BUG]  [BUGGY]  double  size  =  xArray[i].doubleValue()  *  yArray[i].doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double  size  =  xArray[i].doubleValue()  *  yArray[i].doubleValue();  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double  size  =  xArray[i].doubleValue()  *  yArray[i].doubleValue();	  double    size    =    xArray[i].doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	56	None	replace
441	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  if(xArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  else  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	if(xArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  else  {  regression.addData(xArray[i],  yArray[i]  +  1);  }	  regression.addData(xArray[i],    yArray[i]    +    1);    Regression    regression.addData(yArray[i],    yArray[i]    +    1);    	compilable	  [FE]  AssertionFailedError  	126	2	replace
442	[BUG]  [BUGGY]  if(xArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  else  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  if(xArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  else  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	if(xArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  else  {  regression.addData(xArray[i],  yArray[i]  +  1);  }	  regression.addData(xArray[i],    yArray[i]    +    1);    Regression    regression.addData(yArray[i],    yArray[i]    +    1);    	compilable	  [FE]  AssertionFailedError  	126	2	replace
443	[BUG]  [BUGGY]  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  for(int  i]  =  Math.min(yArray[i],  yArray[i]);  i]  =  Math.min(yArray[i],  yArray[i]);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  for(int  i]  =  Math.min(yArray[i],  yArray[i]);  i]  =  Math.min(yArray[i],  yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =    Math.min(yArray[i],    yArray[i]);    for(int  i]  =  Math.min(yArray[i],  yArray[i]);  i]  =  Math.min(yArray[i],  yArray[i]);	  	non-compiled	[CE]  ';'  expected	17	None	add
444	[BUG]  [BUGGY]  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  for(int  i]  =  Math.min(yArray[i],  yArray[i]);  i++)  {  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  for(int  i]  =  Math.min(yArray[i],  yArray[i]);  i++)  {  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  }  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =    Math.min(yArray[i],    yArray[i]);    for(int  i]  =  Math.min(yArray[i],  yArray[i]);  i++)  {  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  }	  	non-compiled	[CE]  ';'  expected	17	None	add
445	[BUG]  [BUGGY]  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  for(int  i]  =  Math.min(yArray[i],  yArray[i]);  i  >  0;)  {  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  for(int  i]  =  Math.min(yArray[i],  yArray[i]);  i  >  0;)  {  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  }  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =    Math.min(yArray[i],    yArray[i]);    for(int  i]  =  Math.min(yArray[i],  yArray[i]);  i  >  0;)  {  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  }	  	non-compiled	[CE]  ';'  expected	17	None	add
446	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  ==  null)?  yArray[i]  :  new  double[xArray[i]);  [CE]  ']'  expected  [FE]        NullPointerException      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  ==  null)?  yArray[i]  :  new  double[xArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(yArray[i]  ==  null)?  yArray[i]  :  new  double[xArray[i]);	  yArray[i]    =(yArray[i]    ==    null)?    yArray[i]    :    null;    	non-compiled	[CE]  ']'  expected	116	None	replace
447	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  =  yArray[i].doubleValue();  if(size  >  size)  {  return  size;  }  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  =  yArray[i].doubleValue();  if(size  >  size)  {  return  size;  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  =  yArray[i].doubleValue();  if(size  >  size)  {  return  size;  }	          for(int    i=0;    i    <    yArray.length;    i++)    {    double    size[]    =    yArray[i].doubleValue();    if(size    >    size)    {    return    size;    }    	non-compiled	[CE]  not  a  statement	93	None	replace
448	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size[]  =  xArray[i].doubleValue();  if(size  >  size)  {  return  size;  }  [CE]  'else'  without  'if'  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size[]  =  xArray[i].doubleValue();  if(size  >  size)  {  return  size;  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double  size[]  =  xArray[i].doubleValue();  if(size  >  size)  {  return  size;  }	          for(int    i=0;    i    <    yArray.length;    i++)    {    double    size[]    =    yArray[i].doubleValue();    if(size    >    size)    {    return    size;    }    	non-compiled	[CE]  'else'  without  'if'	93	None	replace
449	[BUG]  [BUGGY]  double[]  yArray  =(double[])yArray[i].computeValue(xArray[0],  yArray[0]);  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  yArray  =(double[])yArray[i].computeValue(xArray[0],  yArray[0]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =(double[])yArray[i].computeValue(xArray[0],  yArray[0]);	  double[]    yArray    =(double[])yArray[i].computeValue(xArray[i],    yArray[i]);    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	129	None	replace
450	[BUG]  [BUGGY]  double[]  yArray  =(double[])yArray[i].computeValue(xArray[0],  yArray[1]);  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  yArray  =(double[])yArray[i].computeValue(xArray[0],  yArray[1]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =(double[])yArray[i].computeValue(xArray[0],  yArray[1]);	  double[]    yArray    =(double[])yArray[i].computeValue(xArray[i],    yArray[i]);    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	129	None	replace
451	[BUG]  [BUGGY]  regression.addData(xArray[i],    yArray[i]    +    1);    regression.addData(yArray[i],  yArray[i]  +  1);  for(int  i  =  0,  yArray.length;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],    yArray[i]    +    1);    regression.addData(yArray[i],  yArray[i]  +  1);  for(int  i  =  0,  yArray.length;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],        yArray[i]        +        1);        regression.addData(yArray[i],    yArray[i]    +    1);    for(int  i  =  0,  yArray.length;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }	  	non-compiled	[CE]  ';'  expected	124	None	add
452	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]  +  1);  double  yArray[i]  =  Math.max(yArray[i],  yArray[i]  +  1);  [CE]  ']'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]  +  1);  double  yArray[i]  =  Math.max(yArray[i],  yArray[i]  +  1);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =    Math.max(yArray[i],    yArray[i]    +    1);    double  yArray[i]  =  Math.max(yArray[i],  yArray[i]  +  1);	  	non-compiled	[CE]  ']'  expected	22	None	add
453	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]  +  1);  yArray[i]  =  Math.max(yArray[i],  YArray[i]  +  1);  [CE]  cannot  find  symbol  YArray  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]  +  1);  yArray[i]  =  Math.max(yArray[i],  YArray[i]  +  1);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =    Math.max(yArray[i],    yArray[i]    +    1);    yArray[i]  =  Math.max(yArray[i],  YArray[i]  +  1);	  	non-compiled	[CE]  cannot  find  symbol  YArray	22	None	add
454	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  [CE]  'else'  without  'if'  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {	  for(int    i=0;    i    <    xArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i];    yArray[i]    =    covarianceMatrix[    	non-compiled	[CE]  'else'  without  'if'	69	None	replace
455	[BUG]  [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  double  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  [CE]  ']'  expected  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  double  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        yArray[i]    =(xArray[i]    <    yArray.length)?    yArray[i]    :    null;    double  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;	  	non-compiled	[CE]  ']'  expected	111	None	add
456	[BUG]  [BUGGY]  double[]  yArray  =  yArray[i].compareTo(yArray[i],  xArray[i]);  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  yArray  =  yArray[i].compareTo(yArray[i],  xArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =  yArray[i].compareTo(yArray[i],  xArray[i]);	  double[]    yArray    =    yArray[i].compareTo(yArray[i]);    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	103	None	replace
457	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  xArray  =  yArray[i].doubleValue();  if(size  >  xArray.length)  {  return  Math.coefficient(xArray[i]);  }  [CE]  'else'  without  'if'  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  xArray  =  yArray[i].doubleValue();  if(size  >  xArray.length)  {  return  Math.coefficient(xArray[i]);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  xArray  =  yArray[i].doubleValue();  if(size  >  xArray.length)  {  return  Math.coefficient(xArray[i]);  }	          for(int    i=0;    i    <    yArray.length;    i++)    {    double    size[]    =    yArray[i].doubleValue();    if(size    >    size)    {    return    Math.coefficient(xArray[i]);    }    	non-compiled	[CE]  'else'  without  'if'	94	None	replace
458	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  regression.addData(yArray[i],    xArray[i]);    for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	16	None	replace
459	[BUG]  [BUGGY]  double  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  [CE]  ']'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double  yArray[i]  =  Math.max(yArray[i],  yArray[i]);	          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    double    yArray[i]    =    Math.max(yArray[i],    xArray[i]);    	non-compiled	[CE]  ']'  expected	108	None	replace
460	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  for(int  i]  =  Math.max(yArray[i],  yArray[i]);  i]  =  Math.max(yArray[i],  yArray[i]);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  for(int  i]  =  Math.max(yArray[i],  yArray[i]);  i]  =  Math.max(yArray[i],  yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =    Math.max(yArray[i],    yArray[i]);    for(int  i]  =  Math.max(yArray[i],  yArray[i]);  i]  =  Math.max(yArray[i],  yArray[i]);	  	non-compiled	[CE]  ';'  expected	19	None	add
461	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  for(int  i]  =  Math.max(yArray[i],  yArray[i]);  i)  {  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  for(int  i]  =  Math.max(yArray[i],  yArray[i]);  i)  {  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  }  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =    Math.max(yArray[i],    yArray[i]);    for(int  i]  =  Math.max(yArray[i],  yArray[i]);  i)  {  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  }	  	non-compiled	[CE]  ';'  expected	19	None	add
462	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  for(int  i]  =  Math.max(yArray[i],  yArray[i]);  i++)  {  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  for(int  i]  =  Math.max(yArray[i],  yArray[i]);  i++)  {  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  }  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =    Math.max(yArray[i],    yArray[i]);    for(int  i]  =  Math.max(yArray[i],  yArray[i]);  i++)  {  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  }	  	non-compiled	[CE]  ';'  expected	19	None	add
463	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i].compareTo(xArray[i]);  [CE]  double  cannot  be  dereferenced  [FE]        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i].compareTo(xArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i].compareTo(xArray[i]);	  yArray[i]    =(yArray[i]    <    yArray[i])?    yArray[i]    :    yArray[i].compareTo(yArray[i]);    	non-compiled	[CE]  double  cannot  be  dereferenced	130	None	replace
464	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(xArray[i]  ==  yArray[i])?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]  =(xArray[i]  ==  yArray[i])?  yArray[i]  :  null;	  yArray[i]    =(yArray[i]    ==    yArray[i])?    yArray[i]    :    null;    	compilable	  [FE]  NullPointerException  	51	13	replace
465	[BUG]  [BUGGY]  yArray[i]  =(xArray[i]  ==  yArray[i])?  yArray[i]  :  null;  [FE]  NullPointerException  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(xArray[i]  ==  yArray[i])?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(xArray[i]  ==  yArray[i])?  yArray[i]  :  null;	  yArray[i]    =(yArray[i]    ==    yArray[i])?    yArray[i]    :    null;    	compilable	  [FE]  NullPointerException  	51	13	replace
466	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  >=  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]  =(yArray[i]  >=  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);	          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    new    Double(yArray[i]);    	compilable	  [FE]  AssertionFailedError  	42	2	replace
467	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  >=  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);  [FE]  AssertionFailedError  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  >=  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(yArray[i]  >=  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);	          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    new    Double(yArray[i]);    	compilable	  [FE]  AssertionFailedError  	42	2	replace
468	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  ==  null)?  yArray[i]  :  new  Double(yArray[i]);  [CE]  incomparable  types:  double  and  <null>  [FE]      NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  ==  null)?  yArray[i]  :  new  Double(yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(yArray[i]  ==  null)?  yArray[i]  :  new  Double(yArray[i]);	          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    new    Double(yArray[i]);    	non-compiled	[CE]  incomparable  types:  double  and  <null>	42	None	replace
469	[BUG]  [BUGGY]  regression.addData(yArray[i],  yArray[i]);  Regression  regression.addData(yArray[i],  yArray[i]);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  yArray[i]);  Regression  regression.addData(yArray[i],  yArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],    yArray[i]);    Regression  regression.addData(yArray[i],  yArray[i]);	  	non-compiled	[CE]  ';'  expected	59	None	add
470	[BUG]  [BUGGY]  regression.addData(yArray[i],  yArray[i]);  yArray[i]  =  regression.addData(yArray[i],  yArray[i]);  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  yArray[i]);  yArray[i]  =  regression.addData(yArray[i],  yArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],    yArray[i]);    yArray[i]  =  regression.addData(yArray[i],  yArray[i]);	  	non-compiled	[CE]  incompatible  types	59	None	add
471	[BUG]  [BUGGY]  regression.addData(yArray[i],  yArray[i]);  for(int  i  =  0,  yArray.length  =  0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  yArray[i]);  for(int  i  =  0,  yArray.length  =  0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],    yArray[i]);    for(int  i  =  0,  yArray.length  =  0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  	non-compiled	[CE]  ';'  expected	59	None	add
472	[BUG]  [BUGGY]  regression.addData(yArray[i],  yArray[i]);  yArray[i]  =  regression.addData(xArray[i],  yArray[i]);  [CE]  incompatible  types  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  yArray[i]);  yArray[i]  =  regression.addData(xArray[i],  yArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],    yArray[i]);    yArray[i]  =  regression.addData(xArray[i],  yArray[i]);	  	non-compiled	[CE]  incompatible  types	59	None	add
473	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i],  yArray[i]);  yArray[i]  =  size;  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i],  yArray[i]);  yArray[i]  =  size;  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i],  yArray[i]);  yArray[i]  =  size;  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    yArray[i]    =    size;    }    	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	24	None	replace
474	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.min(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(yArray[i],        xArray[i]);        yArray[i]    =    Math.min(yArray[i],    xArray[i]);    yArray[i]  =  Math.min(yArray[i],  yArray[i]);	  	compilable	  [FE]  AssertionFailedError  	136	11	add
475	[BUG]  [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.min(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.min(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],        xArray[i]);        yArray[i]    =    Math.min(yArray[i],    xArray[i]);    yArray[i]  =  Math.min(yArray[i],  yArray[i]);	  	compilable	  [FE]  AssertionFailedError  	136	11	add
476	[BUG]  [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.min(yArray[i],  xArray[i]);  Regression  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  xArray[i]);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.min(yArray[i],  xArray[i]);  Regression  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  xArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],        xArray[i]);        yArray[i]    =    Math.min(yArray[i],    xArray[i]);    Regression  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  xArray[i]);	  	non-compiled	[CE]  ';'  expected	136	None	add
477	[BUG]  [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.min(yArray[i],  xArray[i]);  Regression  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.min(yArray[i],  xArray[i]);  Regression  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],        xArray[i]);        yArray[i]    =    Math.min(yArray[i],    xArray[i]);    Regression  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  yArray[i]);	  	non-compiled	[CE]  ';'  expected	136	None	add
478	[BUG]  [BUGGY]  yArray[i]  =  regression.addData(yArray[i],  xArray[i]);  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  regression.addData(yArray[i],  xArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  regression.addData(yArray[i],  xArray[i]);	  regression.addData(yArray[i],    xArray[i]);    yArray[i]    =    regression.addData(yArray[i],    xArray[i]);    	non-compiled	[CE]  incompatible  types	99	None	replace
479	[BUG]  [BUGGY]  for(int  i  =  0,  yArray[i]  =  0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [CE]  ']'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i  =  0,  yArray[i]  =  0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i  =  0,  yArray[i]  =  0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	  regression.addData(yArray[i],    xArray[i]);    yArray[i]    =    regression.addData(yArray[i],    xArray[i]);    	non-compiled	[CE]  ']'  expected	99	None	replace
480	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i]  *  covarianceMatrix[i].outMatrix;  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i]  *  covarianceMatrix[i].outMatrix;  }  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i]  *  covarianceMatrix[i].outMatrix;  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[]    =    covarianceMatrix[i]    *    covarianceMatrix[i];    }    	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	2	None	replace
481	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i]  *  matrix[i];  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i]  *  matrix[i];  }  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i]  *  matrix[i];  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[]    =    covarianceMatrix[i]    *    covarianceMatrix[i];    }    	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	2	None	replace
482	[BUG]  [BUGGY]  double  size  =  yArray[i].doubleValue()  *  yArray.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double  size  =  yArray[i].doubleValue()  *  yArray.doubleValue();  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double  size  =  yArray[i].doubleValue()  *  yArray.doubleValue();	  double    size    =    yArray[i].doubleValue().doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	97	None	replace
483	[BUG]  [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i]  *  covarianceMatrix[i];  }  [CE]  >  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i]  *  covarianceMatrix[i];  }  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i]  *  covarianceMatrix[i];  }	  for(int    i=1;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i]    *    covarianceMatrix[i];    }    	non-compiled	[CE]  >  expected	104	None	replace
484	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  *  1);  Regression  regression.addData(xArray[i],  yArray[i]  *  1);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  *  1);  Regression  regression.addData(xArray[i],  yArray[i]  *  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],    yArray[i]    *    1);    Regression  regression.addData(xArray[i],  yArray[i]  *  1);	  	non-compiled	[CE]  ';'  expected	85	None	add
485	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  *  1);  for(int  i  =  0,  yArray.length;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  *  1);  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  *  1);  for(int  i  =  0,  yArray.length;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  *  1);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],    yArray[i]    *    1);    for(int  i  =  0,  yArray.length;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  *  1);  }	  	non-compiled	[CE]  ';'  expected	85	None	add
486	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  *  1);  regression.addData(yArray[i],  yArray[i]  *  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(xArray[i],    yArray[i]    *    1);    regression.addData(yArray[i],  yArray[i]  *  1);	  	compilable	  [FE]  AssertionFailedError  	85	12	add
487	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  *  1);  regression.addData(yArray[i],  yArray[i]  *  1);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  *  1);  regression.addData(yArray[i],  yArray[i]  *  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],    yArray[i]    *    1);    regression.addData(yArray[i],  yArray[i]  *  1);	  	compilable	  [FE]  AssertionFailedError  	85	12	add
488	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  *  1);  Regression  regression.addData(yArray[i],  yArray[i]  *  1);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  *  1);  Regression  regression.addData(yArray[i],  yArray[i]  *  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],    yArray[i]    *    1);    Regression  regression.addData(yArray[i],  yArray[i]  *  1);	  	non-compiled	[CE]  ';'  expected	85	None	add
489	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  [CE]  ']'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =	  for(int    i=1;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i];    yArray[i]    =    covarianceMatrix[    	non-compiled	[CE]  ']'  expected	71	None	replace
490	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i],  xArray[i],  scale);  [CE]  cannot  find  symbol  scale  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i],  xArray[i],  scale);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],  yArray[i],  xArray[i],  scale);	  regression.addData(xArray[i],    yArray[i],    xArray[i],    covarianceMatrix);    	non-compiled	[CE]  cannot  find  symbol  scale	12	None	replace
491	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        xArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	39	13	add
492	[BUG]  [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        xArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	39	13	add
493	[BUG]  [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  double  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [CE]  ']'  expected  [FE]      NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  double  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        xArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    double  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;	  	non-compiled	[CE]  ']'  expected	39	None	add
494	[BUG]  [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  int  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [CE]  ']'  expected  [FE]        NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  int  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        xArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    int  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;	  	non-compiled	[CE]  ']'  expected	39	None	add
495	[BUG]  [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i  [CE]  ']'  expected  [FE]          NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        xArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  xArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i	  	non-compiled	[CE]  ']'  expected	39	None	add
496	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i],  null,  yArray[i]);  [CE]  no  suitable  method  found  for  addData(double,double,<null>,double)  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i],  null,  yArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],  yArray[i],  null,  yArray[i]);	  regression.addData(xArray[i],    yArray[i],    null);    	non-compiled	[CE]  no  suitable  method  found  for  addData(double,double,<null>,double)	106	None	replace
497	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i],  dataArea,  null);  [CE]  cannot  find  symbol  dataArea  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i],  dataArea,  null);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],  yArray[i],  dataArea,  null);	  regression.addData(xArray[i],    yArray[i],    null);    	non-compiled	[CE]  cannot  find  symbol  dataArea	106	None	replace
498	[BUG]  [BUGGY]  double[]  xArray  =(double[])yArray[i].compareTo(xArray[0]);  [CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  xArray  =(double[])yArray[i].compareTo(xArray[0]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  xArray  =(double[])yArray[i].compareTo(xArray[0]);	  double[]    xArray    =(double[])yArray[i].compareTo(xArray[i]);    	non-compiled	[CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])	6	None	replace
499	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i])+  1);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i])+  1);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i],  yArray[i])+  1);	          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]    =    Math.max(yArray[i],    xArray[i]));    	non-compiled	[CE]  ';'  expected	68	None	replace
500	[BUG]  [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].computeSize(xArray[i]);  [CE]  'else'  without  'if'  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].computeSize(xArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=1;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].computeSize(xArray[i]);	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].computeSize(xArray[i]);    	non-compiled	[CE]  'else'  without  'if'	26	None	replace
501	[BUG]  [BUGGY]  double[]  yArray  =(double[])yArray[i].compareTo(xArray[0],  yArray[i]);  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  yArray  =(double[])yArray[i].compareTo(xArray[0],  yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =(double[])yArray[i].compareTo(xArray[0],  yArray[i]);	  double[]    yArray    =(double[])yArray[i].compareTo(yArray[i],    yArray[i]);    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	142	None	replace
502	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i],  xArray[i],  yArray[i],  yArray[i]);  [CE]  no  suitable  method  found  for  addData(double,double,double,double,double)  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i],  xArray[i],  yArray[i],  yArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],  yArray[i],  xArray[i],  yArray[i],  yArray[i]);	  regression.addData(yArray[i],    xArray[i],    yArray[i],    yArray[i]);    	non-compiled	[CE]  no  suitable  method  found  for  addData(double,double,double,double,double)	127	None	replace
503	[BUG]  [BUGGY]  regression.addData(yArray[i],  xArray[i],  yArray[i],  data[i]);  [CE]  cannot  find  symbol  data  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  xArray[i],  yArray[i],  data[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],  xArray[i],  yArray[i],  data[i]);	  regression.addData(yArray[i],    xArray[i],    yArray[i],    yArray[i]);    	non-compiled	[CE]  cannot  find  symbol  data	127	None	replace
504	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i],  yArray[i]  =  matrix[  [CE]  ']'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i],  yArray[i]  =  matrix[  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i],  yArray[i]  =  matrix[	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i],    yArray[i]    =    covarianceMatrix[    	non-compiled	[CE]  ']'  expected	141	None	replace
505	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i].length,  xArray[i].length);  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i].length,  xArray[i].length);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i],  yArray[i].length,  xArray[i].length);	  yArray[i]    =    Math.max(yArray[i],    xArray[i].length,    yArray[i].length);    	non-compiled	[CE]  double  cannot  be  dereferenced	120	None	replace
506	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  -  2);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(xArray[i],  yArray[i]  -  2);	  regression.addData(xArray[i],    yArray[i]    +    2);    	compilable	  [FE]  AssertionFailedError  	110	2	replace
507	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  -  2);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  -  2);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],  yArray[i]  -  2);	  regression.addData(xArray[i],    yArray[i]    +    2);    	compilable	  [FE]  AssertionFailedError  	110	2	replace
508	[BUG]  [BUGGY]  double[]  yArray  =  yArray[i].compareTo(xArray[i])+  1;  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  yArray  =  yArray[i].compareTo(xArray[i])+  1;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =  yArray[i].compareTo(xArray[i])+  1;	  double[]    yArray    =    xArray[i].compareTo(yArray[i]);    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	76	None	replace
509	[BUG]  [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  double  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [CE]  ']'  expected  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  double  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    double  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;	  	non-compiled	[CE]  ']'  expected	36	None	add
510	[BUG]  [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i  [CE]  ']'  expected  [FE]      NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i	  	non-compiled	[CE]  ']'  expected	36	None	add
511	[BUG]  [BUGGY]  regression.addData(yArray[i],    xArray[i]);    regression.addData(yArray[i],  xArray[i]);  for(int  i  =  0,  yArray.length;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],    xArray[i]);    regression.addData(yArray[i],  xArray[i]);  for(int  i  =  0,  yArray.length;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],        xArray[i]);        regression.addData(yArray[i],    xArray[i]);    for(int  i  =  0,  yArray.length;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }	  	non-compiled	[CE]  ';'  expected	13	None	add
512	[BUG]  [BUGGY]  for(int  i  =  0,  yArray.length;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i  =  0,  yArray.length;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i  =  0,  yArray.length;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }	  regression.addData(xArray[i],    yArray[i]    +    1);    for(int    i    =    0,    yArray.length;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]    +    1);    }    	non-compiled	[CE]  ';'  expected	123	None	replace
513	[BUG]  [BUGGY]  regression.addLine(yArray[i],  yArray[i  +  1]);  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addLine(yArray[i],  yArray[i  +  1]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addLine(yArray[i],  yArray[i  +  1]);	  regression.addData(yArray[i],    yArray[i    +    1]);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
514	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(yArray[i],        xArray[i]);        yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  yArray[i]);	  	compilable	  [FE]  AssertionFailedError  	134	12	add
515	[BUG]  [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],        xArray[i]);        yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  yArray[i]);	  	compilable	  [FE]  AssertionFailedError  	134	12	add
516	[BUG]  [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  Regression  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  Regression  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],        xArray[i]);        yArray[i]    =    Math.max(yArray[i],    xArray[i]);    Regression  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);	  	non-compiled	[CE]  ';'  expected	134	None	add
517	[BUG]  [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  Regression  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  Regression  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],        xArray[i]);        yArray[i]    =    Math.max(yArray[i],    xArray[i]);    Regression  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  yArray[i]);	  	non-compiled	[CE]  ';'  expected	134	None	add
518	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i].compute(xArray[i]);  [CE]  double  cannot  be  dereferenced  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i].compute(xArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i].compute(xArray[i]);	  yArray[i]    =(yArray[i]    <    yArray[i])?    yArray[i]    :    yArray[i].computeValue(yArray[i]);    	non-compiled	[CE]  double  cannot  be  dereferenced	133	None	replace
519	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  xArray[i].computeValue(yArray[i]);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  xArray[i].computeValue(yArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  xArray[i].computeValue(yArray[i]);	  yArray[i]    =(yArray[i]    <    yArray[i])?    yArray[i]    :    yArray[i].computeValue(yArray[i]);    	non-compiled	[CE]  double  cannot  be  dereferenced	133	None	replace
520	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i].doubleValue(),  xArray[i],  yArray[i].doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i].doubleValue(),  xArray[i],  yArray[i].doubleValue());  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i].doubleValue(),  xArray[i],  yArray[i].doubleValue());	  yArray[i]    =    Math.max(yArray[i].doubleValue(),    xArray[i].doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	140	None	replace
521	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i]  *  CovarianceMatrix[i];  }  [CE]  ']'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i]  *  CovarianceMatrix[i];  }  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i]  *  CovarianceMatrix[i];  }	  for(int    i=0;    i    <    xArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i]    *    covarianceMatrix[i];    }    	non-compiled	[CE]  ']'  expected	1	None	replace
522	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  realMatrix[i]  =  covarianceMatrix[i]  *  covarianceMatrix[i];  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  realMatrix[i]  =  covarianceMatrix[i]  *  covarianceMatrix[i];  }  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  realMatrix[i]  =  covarianceMatrix[i]  *  covarianceMatrix[i];  }	  for(int    i=0;    i    <    xArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i]    *    covarianceMatrix[i];    }    	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	1	None	replace
523	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  matrix[i]  =  matrix[i]  *  covarianceMatrix[i];  }  [CE]  ']'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  matrix[i]  =  matrix[i]  *  covarianceMatrix[i];  }  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  matrix[i]  =  matrix[i]  *  covarianceMatrix[i];  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    matrix[i]    *    covarianceMatrix[i];    }    	non-compiled	[CE]  ']'  expected	105	None	replace
524	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i]  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i]  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i]	  for(int    i=0;    i    <    xArray.length;    i++)    {    RealMatrix    covarianceMatrix[]    =    covarianceMatrix[i];    yArray[i]    =    covarianceMatrix[i];    }    	non-compiled	[CE]  ';'  expected	45	None	replace
525	[BUG]  [BUGGY]  double[]  yArray  =  yArray[i].compareTo(xArray[0],  yArray[i]);  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  yArray  =  yArray[i].compareTo(xArray[0],  yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =  yArray[i].compareTo(xArray[0],  yArray[i]);	  double[]    yArray    =    yArray[i].compareTo(xArray[i],    yArray[i]);    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	78	None	replace
526	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  -  1);  Regression  regression.addData(xArray[i],  yArray[i]  -  1);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  -  1);  Regression  regression.addData(xArray[i],  yArray[i]  -  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],    yArray[i]    -    1);    Regression  regression.addData(xArray[i],  yArray[i]  -  1);	  	non-compiled	[CE]  ';'  expected	87	None	add
527	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  -  1);  for(int  i  =  0,  yArray.length;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  -  1);  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  -  1);  for(int  i  =  0,  yArray.length;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  -  1);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],    yArray[i]    -    1);    for(int  i  =  0,  yArray.length;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  -  1);  }	  	non-compiled	[CE]  ';'  expected	87	None	add
528	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  -  1);  regression.addData(yArray[i],  yArray[i]  -  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(xArray[i],    yArray[i]    -    1);    regression.addData(yArray[i],  yArray[i]  -  1);	  	compilable	  [FE]  AssertionFailedError  	87	12	add
529	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  -  1);  regression.addData(yArray[i],  yArray[i]  -  1);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  -  1);  regression.addData(yArray[i],  yArray[i]  -  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],    yArray[i]    -    1);    regression.addData(yArray[i],  yArray[i]  -  1);	  	compilable	  [FE]  AssertionFailedError  	87	12	add
530	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  -  1);  Regression  regression.addData(yArray[i],  yArray[i]  -  1);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  -  1);  Regression  regression.addData(yArray[i],  yArray[i]  -  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],    yArray[i]    -    1);    Regression  regression.addData(yArray[i],  yArray[i]  -  1);	  	non-compiled	[CE]  ';'  expected	87	None	add
531	[BUG]  [BUGGY]  regression.addData(yArray[i],  yArray[i  +  1]);  Regression  regression.addData(yArray[i],  yArray[i  +  1]);  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  yArray[i  +  1]);  Regression  regression.addData(yArray[i],  yArray[i  +  1]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],    yArray[i    +    1]);    Regression  regression.addData(yArray[i],  yArray[i  +  1]);	  	non-compiled	[CE]  ';'  expected	89	None	add
532	[BUG]  [BUGGY]  regression.addData(yArray[i],  yArray[i  +  1]);  for(int  i  =  0,  yArray.length  =  xArray.length;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i  +  1]);  }  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  yArray[i  +  1]);  for(int  i  =  0,  yArray.length  =  xArray.length;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i  +  1]);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],    yArray[i    +    1]);    for(int  i  =  0,  yArray.length  =  xArray.length;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i  +  1]);  }	  	non-compiled	[CE]  ';'  expected	89	None	add
533	[BUG]  [BUGGY]  regression.addData(yArray[i],  yArray[i  +  1]);  for(int  i  =  0;  i  <  yArray.length;  i++)  {  if(regression.addData(yArray[i],  yArray[i  +  1])  }  [CE]  ')'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  yArray[i  +  1]);  for(int  i  =  0;  i  <  yArray.length;  i++)  {  if(regression.addData(yArray[i],  yArray[i  +  1])  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],    yArray[i    +    1]);    for(int  i  =  0;  i  <  yArray.length;  i++)  {  if(regression.addData(yArray[i],  yArray[i  +  1])  }	  	non-compiled	[CE]  ')'  expected	89	None	add
534	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  null;  int  yArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  null;  [CE]  ']'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  null;  int  yArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =(yArray[i]    ==    yArray[i])?    yArray[i]    :    null;    int  yArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  null;	  	non-compiled	[CE]  ']'  expected	50	None	add
535	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i];  double  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i];  [CE]  ']'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i];  double  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i];  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =(yArray[i]    <    yArray[i])?    yArray[i]    :    yArray[i];    double  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i];	  	non-compiled	[CE]  ']'  expected	131	None	add
536	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix[]  covarianceMatrix[i]  =  matrix[i]  *  outMatrix;  }  [CE]  ']'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix[]  covarianceMatrix[i]  =  matrix[i]  *  outMatrix;  }  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix[]  covarianceMatrix[i]  =  matrix[i]  *  outMatrix;  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i]    *    matrix[i];    }    	non-compiled	[CE]  ']'  expected	139	None	replace
537	[BUG]  [BUGGY]  yArray[i]  =  Math.min(yArray[i],  yArray[i].doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.min(yArray[i],  yArray[i].doubleValue());  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.min(yArray[i],  yArray[i].doubleValue());	  yArray[i]    =    Math.max(yArray[i],    yArray[i].doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	74	None	replace
538	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  xArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	                yArray[i]        =        Math.max(yArray[i],        xArray[i]);        yArray[i]    =    Math.max(yArray[i],    xArray[i]);    xArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	64	10	add
539	[BUG]  [BUGGY]          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  xArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  xArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	                yArray[i]        =        Math.max(yArray[i],        xArray[i]);        yArray[i]    =    Math.max(yArray[i],    xArray[i]);    xArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	64	10	add
540	[BUG]  [BUGGY]          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xxArray[i]);  [CE]  cannot  find  symbol  xxArray  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xxArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	                yArray[i]        =        Math.max(yArray[i],        xArray[i]);        yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xxArray[i]);	  	non-compiled	[CE]  cannot  find  symbol  xxArray	64	None	add
541	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xArray[i].doubleValue()  /  1);  [CE]  double  cannot  be  dereferenced  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xArray[i].doubleValue()  /  1);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i],  xArray[i].doubleValue()  /  1);	  yArray[i]    =    Math.max(yArray[i],    xArray[i].doubleValue()    +    1);    	non-compiled	[CE]  double  cannot  be  dereferenced	73	None	replace
542	[BUG]  [BUGGY]  regression.addData(yArray[i],  xArray[i],  yArray[i],  scale);  [CE]  cannot  find  symbol  scale  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  xArray[i],  yArray[i],  scale);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],  xArray[i],  yArray[i],  scale);	  regression.addData(yArray[i],    xArray[i],    yArray[i]);    	non-compiled	[CE]  cannot  find  symbol  scale	10	None	replace
543	[BUG]  [BUGGY]  regression.addData(yArray[i],  xArray[i],  yArray[i],  dataMatrix);  [CE]  cannot  find  symbol  dataMatrix  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  xArray[i],  yArray[i],  dataMatrix);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],  xArray[i],  yArray[i],  dataMatrix);	  regression.addData(yArray[i],    xArray[i],    yArray[i]);    	non-compiled	[CE]  cannot  find  symbol  dataMatrix	10	None	replace
544	[BUG]  [BUGGY]  for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i]  }  [CE]  ']'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i]  }  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i]  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i];    yArray[i]    =    covarianceMatrix[i]    }    	non-compiled	[CE]  ']'  expected	96	None	replace
545	[BUG]  [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i]  }  [CE]  ']'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i]  }  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=1;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[i]  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i];    yArray[i]    =    covarianceMatrix[i]    }    	non-compiled	[CE]  ']'  expected	96	None	replace
546	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null);  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =(yArray[i]    <    xArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null);	  	non-compiled	[CE]  ';'  expected	54	None	add
547	[BUG]  [BUGGY]  regression.addData(yArray[i],  xArray[i]  +  1);  Regression  regression.addData(yArray[i],  xArray[i]  +  1);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  xArray[i]  +  1);  Regression  regression.addData(yArray[i],  xArray[i]  +  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],    xArray[i]    +    1);    Regression  regression.addData(yArray[i],  xArray[i]  +  1);	  	non-compiled	[CE]  ';'  expected	83	None	add
548	[BUG]  [BUGGY]  regression.addData(yArray[i],  xArray[i]  +  1);  for(int  i  =  0,  yArray.length;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]  +  1);  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  xArray[i]  +  1);  for(int  i  =  0,  yArray.length;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]  +  1);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],    xArray[i]    +    1);    for(int  i  =  0,  yArray.length;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]  +  1);  }	  	non-compiled	[CE]  ';'  expected	83	None	add
549	[BUG]  [BUGGY]  regression.addData(yArray[i],  xArray[i]  +  1);  for(int  i  =  0,  yArray.length;  i  <  yArray.length;  i++)  {  if(regression.addData(yArray[i],  xArray[i]  +  1);  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  xArray[i]  +  1);  for(int  i  =  0,  yArray.length;  i  <  yArray.length;  i++)  {  if(regression.addData(yArray[i],  xArray[i]  +  1);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],    xArray[i]    +    1);    for(int  i  =  0,  yArray.length;  i  <  yArray.length;  i++)  {  if(regression.addData(yArray[i],  xArray[i]  +  1);  }	  	non-compiled	[CE]  ';'  expected	83	None	add
550	[BUG]  [BUGGY]  double[]  yArray  =(double[])yArray[i  *  1];  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  yArray  =(double[])yArray[i  *  1];  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =(double[])yArray[i  *  1];	  double[]    yArray    =(double[])yArray[i    +    1];    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	48	None	replace
551	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  >  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]  =(yArray[i]  >  yArray.length)?  yArray[i]  :  null;	  yArray[i]    =(yArray[i]    >=    yArray.length)?    yArray[i]    :    null;    	compilable	  [FE]  NullPointerException  	118	10	replace
552	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  >  yArray.length)?  yArray[i]  :  null;  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  >  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(yArray[i]  >  yArray.length)?  yArray[i]  :  null;	  yArray[i]    =(yArray[i]    >=    yArray.length)?    yArray[i]    :    null;    	compilable	  [FE]  NullPointerException  	118	10	replace
553	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  null;  int  yArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  null;  [CE]  ']'  expected  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  null;  int  yArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =(yArray[i]    ==    yArray.length)?    yArray[i]    :    null;    int  yArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  null;	  	non-compiled	[CE]  ']'  expected	52	None	add
554	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  }	  regression.addData(yArray[i],    xArray[i]);    yArray[i]    =    Math.min(yArray[i],    xArray[i]);    	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	137	None	replace
555	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  }	  regression.addData(yArray[i],    xArray[i]);    yArray[i]    =    Math.min(yArray[i],    xArray[i]);    	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	137	None	replace
556	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  2);  Regression  regression.addData(xArray[i],  yArray[i]  +  2);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  2);  Regression  regression.addData(xArray[i],  yArray[i]  +  2);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],    yArray[i]    +    2);    Regression  regression.addData(xArray[i],  yArray[i]  +  2);	  	non-compiled	[CE]  ';'  expected	109	None	add
557	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  2);  regression.addData(yArray[i],  yArray[i]  +  2);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(xArray[i],    yArray[i]    +    2);    regression.addData(yArray[i],  yArray[i]  +  2);	  	compilable	  [FE]  AssertionFailedError  	109	11	add
558	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  2);  regression.addData(yArray[i],  yArray[i]  +  2);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  2);  regression.addData(yArray[i],  yArray[i]  +  2);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],    yArray[i]    +    2);    regression.addData(yArray[i],  yArray[i]  +  2);	  	compilable	  [FE]  AssertionFailedError  	109	11	add
559	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  2);  Regression  regression.addData(yArray[i],  yArray[i]  +  2);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  2);  Regression  regression.addData(yArray[i],  yArray[i]  +  2);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],    yArray[i]    +    2);    Regression  regression.addData(yArray[i],  yArray[i]  +  2);	  	non-compiled	[CE]  ';'  expected	109	None	add
560	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  2);  regression.addData(xArray[i],  yArray[i]  +  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(xArray[i],    yArray[i]    +    2);    regression.addData(xArray[i],  yArray[i]  +  1);	  	compilable	  [FE]  AssertionFailedError  	109	10	add
561	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  2);  regression.addData(xArray[i],  yArray[i]  +  1);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  2);  regression.addData(xArray[i],  yArray[i]  +  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],    yArray[i]    +    2);    regression.addData(xArray[i],  yArray[i]  +  1);	  	compilable	  [FE]  AssertionFailedError  	109	10	add
562	[BUG]  [BUGGY]  for(int  i  =  0,  yArray.length  =  yArray.length;  i  <  yArray.length;  i++)  {  if(regression.addData(xArray[i],  yArray[i])  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i  =  0,  yArray.length  =  yArray.length;  i  <  yArray.length;  i++)  {  if(regression.addData(xArray[i],  yArray[i])  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i  =  0,  yArray.length  =  yArray.length;  i  <  yArray.length;  i++)  {  if(regression.addData(xArray[i],  yArray[i])  }	  regression.addData(yArray[i],    xArray[i]);    for(int    i    =    0,    yArray.length    =    yArray.length;    i    <    yArray.length;    i++)    {    if(regression.addData(yArray[i],    xArray[i])    }    	non-compiled	[CE]  ';'  expected	101	None	replace
563	[BUG]  [BUGGY]  for(int  i  =  0,  yArray.length  =  yArray.length;  i  <  yArray.length;  i++)  {  if(regression.addData(yArray[i],  xArray[i])  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i  =  0,  yArray.length  =  yArray.length;  i  <  yArray.length;  i++)  {  if(regression.addData(yArray[i],  xArray[i])  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i  =  0,  yArray.length  =  yArray.length;  i  <  yArray.length;  i++)  {  if(regression.addData(yArray[i],  xArray[i])  }	  regression.addData(yArray[i],    xArray[i]);    for(int    i    =    0,    yArray.length    =    yArray.length;    i    <    yArray.length;    i++)    {    if(regression.addData(yArray[i],    xArray[i])    }    	non-compiled	[CE]  ';'  expected	101	None	replace
564	[BUG]  [BUGGY]  for(int  i  =  0,  yArray.length  =  yArray[i].length;  i  <  yArray.length;  i++)  {  if(regression.addData(xArray[i],  yArray[i])  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i  =  0,  yArray.length  =  yArray[i].length;  i  <  yArray.length;  i++)  {  if(regression.addData(xArray[i],  yArray[i])  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i  =  0,  yArray.length  =  yArray[i].length;  i  <  yArray.length;  i++)  {  if(regression.addData(xArray[i],  yArray[i])  }	  regression.addData(yArray[i],    xArray[i]);    for(int    i    =    0,    yArray.length    =    yArray.length;    i    <    yArray.length;    i++)    {    if(regression.addData(yArray[i],    xArray[i])    }    	non-compiled	[CE]  ';'  expected	101	None	replace
565	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    xArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  xArray[i]  =  Math.max(yArray[i],  yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	                yArray[i]        =        Math.max(yArray[i],        xArray[i]);        xArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  xArray[i]  =  Math.max(yArray[i],  yArray[i]);	  	compilable	  [FE]  AssertionFailedError  	144	10	add
566	[BUG]  [BUGGY]          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    xArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  xArray[i]  =  Math.max(yArray[i],  yArray[i]);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    xArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  xArray[i]  =  Math.max(yArray[i],  yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	                yArray[i]        =        Math.max(yArray[i],        xArray[i]);        xArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  xArray[i]  =  Math.max(yArray[i],  yArray[i]);	  	compilable	  [FE]  AssertionFailedError  	144	10	add
567	[BUG]  [BUGGY]          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    xArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  xArray[i]  =  Math.max(yArray[i],  xxArray[i]);  [CE]  cannot  find  symbol  xxArray  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    xArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  xArray[i]  =  Math.max(yArray[i],  xxArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	                yArray[i]        =        Math.max(yArray[i],        xArray[i]);        xArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  xArray[i]  =  Math.max(yArray[i],  xxArray[i]);	  	non-compiled	[CE]  cannot  find  symbol  xxArray	144	None	add
568	[BUG]  [BUGGY]  double  size  =  xArray[i].doubleValue()  +  yArray[i].doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double  size  =  xArray[i].doubleValue()  +  yArray[i].doubleValue();  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double  size  =  xArray[i].doubleValue()  +  yArray[i].doubleValue();	  double    size    =    xArray[i].doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	56	None	replace
569	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  if(yArray[i]!=  0)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  else  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	if(yArray[i]!=  0)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  else  {  regression.addData(xArray[i],  yArray[i]  +  1);  }	  regression.addData(xArray[i],    yArray[i]    +    1);    regression.addData(xArray[i],    yArray[i]    +    1);    	compilable	  [FE]  AssertionFailedError  	80	2	replace
570	[BUG]  [BUGGY]  if(yArray[i]!=  0)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  else  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  if(yArray[i]!=  0)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  else  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	if(yArray[i]!=  0)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  else  {  regression.addData(xArray[i],  yArray[i]  +  1);  }	  regression.addData(xArray[i],    yArray[i]    +    1);    regression.addData(xArray[i],    yArray[i]    +    1);    	compilable	  [FE]  AssertionFailedError  	80	2	replace
571	[BUG]  [BUGGY]  yArray[i]  =  Math.min(yArray[i],  yArray[i].length);  [CE]  double  cannot  be  dereferenced  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.min(yArray[i],  yArray[i].length);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.min(yArray[i],  yArray[i].length);	  yArray[i]    =    Math.min(yArray[i],    yArray[i]);    	non-compiled	[CE]  double  cannot  be  dereferenced	18	None	replace
572	[BUG]  [BUGGY]  for(int  i  =  0,  yArray.length  =  yArray.length;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i  =  0,  yArray.length  =  yArray.length;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i  =  0,  yArray.length  =  yArray.length;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }	  regression.addData(yArray[i],    xArray[i]);    for(int    i    =    0,    yArray.length    =    yArray.length;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    	non-compiled	[CE]  ';'  expected	100	None	replace
573	[BUG]  [BUGGY]  for(int  i  =  0,  yArray.length  =  yArray[i].length;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i  =  0,  yArray.length  =  yArray[i].length;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i  =  0,  yArray.length  =  yArray[i].length;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }	  regression.addData(yArray[i],    xArray[i]);    for(int    i    =    0,    yArray.length    =    yArray.length;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    	non-compiled	[CE]  ';'  expected	100	None	replace
574	[BUG]  [BUGGY]  for(int  i  =  0,  yArray.length  =  yArray.length;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i  =  0,  yArray.length  =  yArray.length;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i  =  0,  yArray.length  =  yArray.length;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	  regression.addData(yArray[i],    xArray[i]);    for(int    i    =    0,    yArray.length    =    yArray.length;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    	non-compiled	[CE]  ';'  expected	100	None	replace
575	[BUG]  [BUGGY]  regression.addEntry(yArray[i],  yArray[i]);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addEntry(yArray[i],  yArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addEntry(yArray[i],  yArray[i]);	  regression.addData(yArray[i],    yArray[i]);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
576	[BUG]  [BUGGY]  regression.addElement(yArray[i],  yArray[i]);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addElement(yArray[i],  yArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addElement(yArray[i],  yArray[i]);	  regression.addData(yArray[i],    yArray[i]);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
577	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  if(yArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	if(yArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  regression.addData(yArray[i],    xArray[i]);    regression.addData(yArray[i],    xArray[i]);    	compilable	  [FE]  IllegalArgumentException  	14	13	replace
578	[BUG]  [BUGGY]  if(yArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  if(yArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	if(yArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  regression.addData(yArray[i],    xArray[i]);    regression.addData(yArray[i],    xArray[i]);    	compilable	  [FE]  IllegalArgumentException  	14	13	replace
579	[BUG]  [BUGGY]  double[]  yArray  =(double[])xArray[i].doubleValue();  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  yArray  =(double[])xArray[i].doubleValue();  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =(double[])xArray[i].doubleValue();	  double[]    yArray    =(double[])xArray[i];    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	47	None	replace
580	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i].doubleValue(),  0);  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i].doubleValue(),  0);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i].doubleValue(),  0);	  yArray[i]    =    Math.max(yArray[i].doubleValue(),    size);    	non-compiled	[CE]  double  cannot  be  dereferenced	34	None	replace
581	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i].doubleValue(),  size  -  1);  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i].doubleValue(),  size  -  1);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i].doubleValue(),  size  -  1);	  yArray[i]    =    Math.max(yArray[i].doubleValue(),    size);    	non-compiled	[CE]  double  cannot  be  dereferenced	34	None	replace
582	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  }	  regression.addData(yArray[i],    xArray[i]);    yArray[i]    =    Math.max(yArray[i],    xArray[i]);    	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	135	None	replace
583	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  }	  regression.addData(yArray[i],    xArray[i]);    yArray[i]    =    Math.max(yArray[i],    xArray[i]);    	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	135	None	replace
584	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  xxArray  =(double[])yArray.clone();  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	double[]  xxArray  =(double[])yArray.clone();	  double[]    xArray    =(double[])yArray.clone();    	compilable	  [FE]  AssertionFailedError  	8	2	replace
585	[BUG]  [BUGGY]  double[]  xxArray  =(double[])yArray.clone();  [FE]  AssertionFailedError  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  xxArray  =(double[])yArray.clone();  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  xxArray  =(double[])yArray.clone();	  double[]    xArray    =(double[])yArray.clone();    	compilable	  [FE]  AssertionFailedError  	8	2	replace
586	[BUG]  [BUGGY]  double[]  yArray  =(double[])yArray[0].compareTo(xArray[i],  yArray[0]);  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  yArray  =(double[])yArray[0].compareTo(xArray[i],  yArray[0]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =(double[])yArray[0].compareTo(xArray[i],  yArray[0]);	  double[]    yArray    =(double[])yArray[i].compareTo(xArray[i],    yArray[i]);    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	5	None	replace
587	[BUG]  [BUGGY]  Regression  regression  =  regression.addData(yArray[i],  xArray[i]  +  1);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  Regression  regression  =  regression.addData(yArray[i],  xArray[i]  +  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	Regression  regression  =  regression.addData(yArray[i],  xArray[i]  +  1);	  regression.addData(xArray[i],    yArray[i]    +    1);    Regression    regression.addData(yArray[i],    yArray[i]    +    1);    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
588	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  xArray[i]  =(yArray[i]  >=  yArray.length)?  xArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	xArray[i]  =(yArray[i]  >=  yArray.length)?  xArray[i]  :  null;	          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    xArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    	compilable	  [FE]  NullPointerException  	40	10	replace
589	[BUG]  [BUGGY]  xArray[i]  =(yArray[i]  >=  yArray.length)?  xArray[i]  :  null;  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  xArray[i]  =(yArray[i]  >=  yArray.length)?  xArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	xArray[i]  =(yArray[i]  >=  yArray.length)?  xArray[i]  :  null;	          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    xArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    	compilable	  [FE]  NullPointerException  	40	10	replace
590	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	25	None	replace
591	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i].doubleValue(),  xArray[i  +  1);  [CE]  ']'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i].doubleValue(),  xArray[i  +  1);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i].doubleValue(),  xArray[i  +  1);	  yArray[i]    =    Math.max(yArray[i].doubleValue()    +    1);    	non-compiled	[CE]  ']'  expected	35	None	replace
592	[BUG]  [BUGGY]  regression.addData(yArray[i],  yArray[i],  xArray[i].length);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  yArray[i],  xArray[i].length);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],  yArray[i],  xArray[i].length);	  regression.addData(yArray[i],    xArray[i],    size);    	non-compiled	[CE]  double  cannot  be  dereferenced	32	None	replace
593	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  {  yArray[i])?  yArray[i]  :  null;  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray[i])?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  {  yArray[i])?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =(yArray[i]    ==    yArray[i])?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  {  yArray[i])?  yArray[i]  :  null;	  	non-compiled	[CE]  ')'  expected	50	None	add
594	[BUG]  [BUGGY]  double[]  yArray  =  yArray[i].compareTo(yArray[i],  yArray[i]);  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  yArray  =  yArray[i].compareTo(yArray[i],  yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =  yArray[i].compareTo(yArray[i],  yArray[i]);	  double[]    yArray    =    yArray[i].compareTo(yArray[i]);    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	103	None	replace
595	[BUG]  [BUGGY]  double[]  yArray  =  yArray[i].compareTo(yArray[i])+  1;  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  yArray  =  yArray[i].compareTo(yArray[i])+  1;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =  yArray[i].compareTo(yArray[i])+  1;	  double[]    yArray    =    yArray[i].compareTo(yArray[i]);    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	103	None	replace
596	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  /  2);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(xArray[i],  yArray[i]  /  2);	  regression.addData(xArray[i],    yArray[i]    +    2);    	compilable	  [FE]  AssertionFailedError  	110	2	replace
597	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  /  2);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  /  2);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],  yArray[i]  /  2);	  regression.addData(xArray[i],    yArray[i]    +    2);    	compilable	  [FE]  AssertionFailedError  	110	2	replace
598	[BUG]  [BUGGY]  yArray[i]  =  Math.max(xArray[i],  yArray[i].length());  [CE]  double  cannot  be  dereferenced  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(xArray[i],  yArray[i].length());  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(xArray[i],  yArray[i].length());	  yArray[i]    =    Math.max(yArray[i],    xArray[i].length());    	non-compiled	[CE]  double  cannot  be  dereferenced	91	None	replace
599	[BUG]  [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[  [CE]  >  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix[i]  =  covarianceMatrix[i];  yArray[i]  =  covarianceMatrix[	  for(int    i=0;    i    <    outMatrix.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i];    yArray[i]    =    covarianceMatrix[    	non-compiled	[CE]  >  expected	70	None	replace
600	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  xArray[i]  /  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(yArray[i],  xArray[i]  /  1);	  regression.addData(xArray[i],    yArray[i]    -    1);    	compilable	  [FE]  AssertionFailedError  	88	2	replace
601	[BUG]  [BUGGY]  regression.addData(yArray[i],  xArray[i]  /  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  xArray[i]  /  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],  xArray[i]  /  1);	  regression.addData(xArray[i],    yArray[i]    -    1);    	compilable	  [FE]  AssertionFailedError  	88	2	replace
602	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    xArray[i]  =  Math.max(yArray[i],  xArray[i]);  xArray[i]  =  Math.max(yArray[i],  xArray[i]);  xArray[i]  =  Math.max(yArray[i],  xArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	                yArray[i]        =        Math.max(yArray[i],        xArray[i]);        xArray[i]    =    Math.max(yArray[i],    xArray[i]);    xArray[i]  =  Math.max(yArray[i],  xArray[i]);  xArray[i]  =  Math.max(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	144	10	add
603	[BUG]  [BUGGY]          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    xArray[i]  =  Math.max(yArray[i],  xArray[i]);  xArray[i]  =  Math.max(yArray[i],  xArray[i]);  xArray[i]  =  Math.max(yArray[i],  xArray[i]);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    xArray[i]  =  Math.max(yArray[i],  xArray[i]);  xArray[i]  =  Math.max(yArray[i],  xArray[i]);  xArray[i]  =  Math.max(yArray[i],  xArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	                yArray[i]        =        Math.max(yArray[i],        xArray[i]);        xArray[i]    =    Math.max(yArray[i],    xArray[i]);    xArray[i]  =  Math.max(yArray[i],  xArray[i]);  xArray[i]  =  Math.max(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	144	10	add
604	[BUG]  [BUGGY]          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    xArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xxArray[i]);  xArray[i]  =  Math.max(yArray[i],  xArray[i]);  [CE]  cannot  find  symbol  xxArray  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    xArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xxArray[i]);  xArray[i]  =  Math.max(yArray[i],  xArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	                yArray[i]        =        Math.max(yArray[i],        xArray[i]);        xArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xxArray[i]);  xArray[i]  =  Math.max(yArray[i],  xArray[i]);	  	non-compiled	[CE]  cannot  find  symbol  xxArray	144	None	add
605	[BUG]  [BUGGY]  regression.addData(yArray[i],  yArray[i]);  for(int  i  =  0,  yArray.length;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  yArray[i]);  for(int  i  =  0,  yArray.length;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],    yArray[i]);    for(int  i  =  0,  yArray.length;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  	non-compiled	[CE]  ';'  expected	59	None	add
606	[BUG]  [BUGGY]  regression.addData(yArray[i],  yArray[i]);  for(int  i  =  0,  yArray.length;  i  <  yArray.length;  i++)  {  yArray[i]  =  new  Double(yArray[i].doubleValue());  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  yArray[i]);  for(int  i  =  0,  yArray.length;  i  <  yArray.length;  i++)  {  yArray[i]  =  new  Double(yArray[i].doubleValue());  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],    yArray[i]);    for(int  i  =  0,  yArray.length;  i  <  yArray.length;  i++)  {  yArray[i]  =  new  Double(yArray[i].doubleValue());  }	  	non-compiled	[CE]  ';'  expected	59	None	add
607	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  xArray[i]  =  Math.max(yArray[i],  yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	xArray[i]  =  Math.max(yArray[i],  yArray[i]);	          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    xArray[i]    =    Math.max(yArray[i],    xArray[i]);    	compilable	  [FE]  AssertionFailedError  	145	2	replace
608	[BUG]  [BUGGY]  xArray[i]  =  Math.max(yArray[i],  yArray[i]);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  xArray[i]  =  Math.max(yArray[i],  yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	xArray[i]  =  Math.max(yArray[i],  yArray[i]);	          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    xArray[i]    =    Math.max(yArray[i],    xArray[i]);    	compilable	  [FE]  AssertionFailedError  	145	2	replace
609	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  yArray[i  *  1]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(yArray[i],  yArray[i  *  1]);	  regression.addData(yArray[i],    yArray[i    +    1]);    	compilable	  [FE]  AssertionFailedError  	90	10	replace
610	[BUG]  [BUGGY]  regression.addData(yArray[i],  yArray[i  *  1]);  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  yArray[i  *  1]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],  yArray[i  *  1]);	  regression.addData(yArray[i],    yArray[i    +    1]);    	compilable	  [FE]  AssertionFailedError  	90	10	replace
611	[BUG]  [BUGGY]  regression.addData(yArray[i],  xArray[i],  yArray[i],  covarianceMatrix);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  xArray[i],  yArray[i],  covarianceMatrix);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],  xArray[i],  yArray[i],  covarianceMatrix);	  regression.addData(yArray[i],    xArray[i],    yArray[i]);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	10	None	replace
612	[BUG]  [BUGGY]  double[]  yArray  =(double[])yArray[i].computeValue(xArray[i],  yArray[i]  +  1);  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  yArray  =(double[])yArray[i].computeValue(xArray[i],  yArray[i]  +  1);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =(double[])yArray[i].computeValue(xArray[i],  yArray[i]  +  1);	  double[]    yArray    =(double[])yArray[i].computeValue(xArray[i],    yArray[i]);    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	129	None	replace
613	[BUG]  [BUGGY]  double[]  yArray  =(double[])yArray[i].computeValue(xArray[i],  yArray[i]  *  size);  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  yArray  =(double[])yArray[i].computeValue(xArray[i],  yArray[i]  *  size);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =(double[])yArray[i].computeValue(xArray[i],  yArray[i]  *  size);	  double[]    yArray    =(double[])yArray[i].computeValue(xArray[i],    yArray[i]);    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	129	None	replace
614	[BUG]  [BUGGY]  int  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  [CE]  ']'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  int  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	int  yArray[i]  =  Math.max(yArray[i],  yArray[i]);	          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    int    yArray[i]    =    Math.max(yArray[i],    xArray[i]);    	non-compiled	[CE]  ']'  expected	66	None	replace
615	[BUG]  [BUGGY]  if(xArray[i].equals(yArray[i]))  {  regression.addData(xArray[i],  yArray[i]);  for(int  i  =  0,  yArray.length  =  yArray.length;  i  <  yArray.length;  i++)  {  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  if(xArray[i].equals(yArray[i]))  {  regression.addData(xArray[i],  yArray[i]);  for(int  i  =  0,  yArray.length  =  yArray.length;  i  <  yArray.length;  i++)  {  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	if(xArray[i].equals(yArray[i]))  {  regression.addData(xArray[i],  yArray[i]);  for(int  i  =  0,  yArray.length  =  yArray.length;  i  <  yArray.length;  i++)  {  }	  regression.addData(yArray[i],    xArray[i]);    for(int    i    =    0,    yArray.length    =    yArray.length;    i    <    yArray.length;    i++)    {    if(regression.addData(yArray[i],    xArray[i])    }    	non-compiled	[CE]  ';'  expected	101	None	replace
616	[BUG]  [BUGGY]  if(yArray[i].equals(xArray[i]))  {  regression.addData(xArray[i],  yArray[i]);  for(int  i  =  0,  yArray.length  =  yArray.length;  i  <  yArray.length;  i++)  {  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  if(yArray[i].equals(xArray[i]))  {  regression.addData(xArray[i],  yArray[i]);  for(int  i  =  0,  yArray.length  =  yArray.length;  i  <  yArray.length;  i++)  {  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	if(yArray[i].equals(xArray[i]))  {  regression.addData(xArray[i],  yArray[i]);  for(int  i  =  0,  yArray.length  =  yArray.length;  i  <  yArray.length;  i++)  {  }	  regression.addData(yArray[i],    xArray[i]);    for(int    i    =    0,    yArray.length    =    yArray.length;    i    <    yArray.length;    i++)    {    if(regression.addData(yArray[i],    xArray[i])    }    	non-compiled	[CE]  ';'  expected	101	None	replace
617	[BUG]  [BUGGY]  xArray[i]  =  Math.max(yArray[i],  xArray[i].length);  [CE]  double  cannot  be  dereferenced  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  xArray[i]  =  Math.max(yArray[i],  xArray[i].length);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	xArray[i]  =  Math.max(yArray[i],  xArray[i].length);	  yArray[i]    =    Math.max(xArray[i],    yArray[i].length);    	non-compiled	[CE]  double  cannot  be  dereferenced	29	None	replace
618	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i];  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i]  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i];  yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i]  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =(yArray[i]    <    yArray[i])?    yArray[i]    :    yArray[i];    yArray[i]  =(yArray[i]  <  yArray[i])?  yArray[i]  :  yArray[i]	  	non-compiled	[CE]  ';'  expected	131	None	add
619	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  yArray[]  =  yArray[i].doubleValue();  if(size  >  size)  {  return  size;  }  [CE]  'else'  without  'if'  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  yArray[]  =  yArray[i].doubleValue();  if(size  >  size)  {  return  size;  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  yArray[]  =  yArray[i].doubleValue();  if(size  >  size)  {  return  size;  }	          for(int    i=0;    i    <    yArray.length;    i++)    {    double    size[]    =    yArray[i].doubleValue();    if(size    >    size)    {    return    size;    }    	non-compiled	[CE]  'else'  without  'if'	93	None	replace
620	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);  xArray[i]  =(yArray[i]  <  yArray.length)?  xArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    new    Double(yArray[i]);    xArray[i]  =(yArray[i]  <  yArray.length)?  xArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);	  	compilable	  [FE]  NullPointerException  	41	13	add
621	[BUG]  [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);  xArray[i]  =(yArray[i]  <  yArray.length)?  xArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);  xArray[i]  =(yArray[i]  <  yArray.length)?  xArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    new    Double(yArray[i]);    xArray[i]  =(yArray[i]  <  yArray.length)?  xArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);	  	compilable	  [FE]  NullPointerException  	41	13	add
622	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i])-  1;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]  =  Math.max(yArray[i],  yArray[i])-  1;	          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]    =    Math.max(yArray[i],    xArray[i]));    	compilable	  [FE]  AssertionFailedError  	68	2	replace
623	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i])-  1;  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i])-  1;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i],  yArray[i])-  1;	          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]    =    Math.max(yArray[i],    xArray[i]));    	compilable	  [FE]  AssertionFailedError  	68	2	replace
624	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]));  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]));  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i],  yArray[i]));	          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]    =    Math.max(yArray[i],    xArray[i]));    	non-compiled	[CE]  ';'  expected	68	None	replace
625	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  double[i]  =  Math.max(yArray[i],  yArray[i]);  [CE]  ']'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  double[i]  =  Math.max(yArray[i],  yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =    Math.max(yArray[i],    yArray[i]);    double[i]  =  Math.max(yArray[i],  yArray[i]);	  	non-compiled	[CE]  ']'  expected	19	None	add
626	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix[]  covarianceMatrix[i]  =  matrix[i]  *  yArray[i];  }  [CE]  ']'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix[]  covarianceMatrix[i]  =  matrix[i]  *  yArray[i];  }  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix[]  covarianceMatrix[i]  =  matrix[i]  *  yArray[i];  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    covarianceMatrix[i]    *    matrix[i];    }    	non-compiled	[CE]  ']'  expected	139	None	replace
627	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xxArray[i].length,  yArray[i].length);  [CE]  cannot  find  symbol  xxArray  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xxArray[i].length,  yArray[i].length);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i],  xxArray[i].length,  yArray[i].length);	  yArray[i]    =    Math.max(yArray[i],    xArray[i].length,    yArray[i].length);    	non-compiled	[CE]  cannot  find  symbol  xxArray	120	None	replace
628	[BUG]  [BUGGY]  regression.addData(yArray[i],  xArray[i]  +  1);  yArray[i]  =  regression.addData(yArray[i],  xArray[i]  +  1);  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  xArray[i]  +  1);  yArray[i]  =  regression.addData(yArray[i],  xArray[i]  +  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],    xArray[i]    +    1);    yArray[i]  =  regression.addData(yArray[i],  xArray[i]  +  1);	  	non-compiled	[CE]  incompatible  types	83	None	add
629	[BUG]  [BUGGY]  regression.addData(yArray[i],  xArray[i]  +  1);  for(int  i  =  0;  i  <  yArray.length;  i++)  {  yArray[i]  =  yArray[i].doubleValue();  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  xArray[i]  +  1);  for(int  i  =  0;  i  <  yArray.length;  i++)  {  yArray[i]  =  yArray[i].doubleValue();  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],    xArray[i]    +    1);    for(int  i  =  0;  i  <  yArray.length;  i++)  {  yArray[i]  =  yArray[i].doubleValue();  }	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	83	None	add
630	[BUG]  [BUGGY]  regression.addData(yArray[i],  xArray[i]  +  1);  for(int  i  =  0;  i  <  xArray.length;  i++)  {  yArray[i]  =  yArray[i].doubleValue();  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  xArray[i]  +  1);  for(int  i  =  0;  i  <  xArray.length;  i++)  {  yArray[i]  =  yArray[i].doubleValue();  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],    xArray[i]    +    1);    for(int  i  =  0;  i  <  xArray.length;  i++)  {  yArray[i]  =  yArray[i].doubleValue();  }	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	83	None	add
631	[BUG]  [BUGGY]  regression.addData(yArray[i],  xArray[i],  null,  yArray[i]);  [CE]  no  suitable  method  found  for  addData(double,double,<null>,double)  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  xArray[i],  null,  yArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],  xArray[i],  null,  yArray[i]);	  regression.addData(xArray[i],    yArray[i],    null);    	non-compiled	[CE]  no  suitable  method  found  for  addData(double,double,<null>,double)	106	None	replace
632	[BUG]  [BUGGY]  int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  size)  {  return  size;  }  [CE]  >  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  size)  {  return  size;  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  size)  {  return  size;  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size    ==    size)    {    return    size;    }    	non-compiled	[CE]  >  expected	27	None	replace
633	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  -  1);  for(int  i  =  0;  i  <  yArray.length;  i++)  {  if(regression.addData(xArray[i],  yArray[i]  -  1);  }  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  -  1);  for(int  i  =  0;  i  <  yArray.length;  i++)  {  if(regression.addData(xArray[i],  yArray[i]  -  1);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],    yArray[i]    -    1);    for(int  i  =  0;  i  <  yArray.length;  i++)  {  if(regression.addData(xArray[i],  yArray[i]  -  1);  }	  	non-compiled	[CE]  ')'  expected	87	None	add
634	[BUG]  [BUGGY]  if(yArray[i]!=  null)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [CE]  incomparable  types:  double  and  <null>  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  if(yArray[i]!=  null)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	if(yArray[i]!=  null)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }	  regression.addData(xArray[i],    yArray[i]    +    1);    for(int    i    =    0,    yArray.length;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]    +    1);    }    	non-compiled	[CE]  incomparable  types:  double  and  <null>	123	None	replace
635	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  if(yArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	if(yArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]  +  1);  }	  regression.addData(xArray[i],    yArray[i]    +    1);    for(int    i    =    0,    yArray.length;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]    +    1);    }    	compilable	  [FE]  AssertionFailedError  	123	2	replace
636	[BUG]  [BUGGY]  if(yArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  if(yArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	if(yArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]  +  1);  }	  regression.addData(xArray[i],    yArray[i]    +    1);    for(int    i    =    0,    yArray.length;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]    +    1);    }    	compilable	  [FE]  AssertionFailedError  	123	2	replace
637	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  xArray[i]  *  2);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(yArray[i],  xArray[i]  *  2);	  regression.addData(xArray[i],    yArray[i]    *    1);    	compilable	  [FE]  AssertionFailedError  	86	2	replace
638	[BUG]  [BUGGY]  regression.addData(yArray[i],  xArray[i]  *  2);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  xArray[i]  *  2);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],  xArray[i]  *  2);	  regression.addData(xArray[i],    yArray[i]    *    1);    	compilable	  [FE]  AssertionFailedError  	86	2	replace
639	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix[]  covarianceMatrix[i]  =  matrix[i]  *  covarianceMatrix[i];  }  [CE]  ']'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix[]  covarianceMatrix[i]  =  matrix[i]  *  covarianceMatrix[i];  }  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix[]  covarianceMatrix[i]  =  matrix[i]  *  covarianceMatrix[i];  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix[i]    =    matrix[i]    *    covarianceMatrix[i];    }    	non-compiled	[CE]  ']'  expected	105	None	replace
640	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        yArray[i]    =(xArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	111	13	add
641	[BUG]  [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        yArray[i]    =(xArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;  yArray[i]  =(xArray[i]  <  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	111	13	add
642	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  yArray[i];  if(covarianceMatrix[i]  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  yArray[i];  if(covarianceMatrix[i]  }  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  yArray[i];  if(covarianceMatrix[i]  }	  for(int    i=0;    i    <    xArray.length;    i++)    {    RealMatrix    covarianceMatrix[]    =    covarianceMatrix[i];    yArray[i]    =    covarianceMatrix[i];    }    	non-compiled	[CE]  ')'  expected	45	None	replace
643	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  yArray[i]  *  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(yArray[i],  yArray[i]  *  1);	  regression.addData(yArray[i],    xArray[i]    +    1);    	compilable	  [FE]  AssertionFailedError  	84	10	replace
644	[BUG]  [BUGGY]  regression.addData(yArray[i],  yArray[i]  *  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  yArray[i]  *  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],  yArray[i]  *  1);	  regression.addData(yArray[i],    xArray[i]    +    1);    	compilable	  [FE]  AssertionFailedError  	84	10	replace
645	[BUG]  [BUGGY]  regression.addData(yArray[i],  xArray[i],  yArray[i],  yArray[i],  covarianceMatrix);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  xArray[i],  yArray[i],  yArray[i],  covarianceMatrix);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],  xArray[i],  yArray[i],  yArray[i],  covarianceMatrix);	  regression.addData(yArray[i],    xArray[i],    yArray[i],    yArray[i]);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	127	None	replace
646	[BUG]  [BUGGY]  regression.addData(yArray[i],  xArray[i],  yArray[i],  yArray[i],  yArray[i]);  [CE]  no  suitable  method  found  for  addData(double,double,double,double,double)  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  xArray[i],  yArray[i],  yArray[i],  yArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],  xArray[i],  yArray[i],  yArray[i],  yArray[i]);	  regression.addData(yArray[i],    xArray[i],    yArray[i],    yArray[i]);    	non-compiled	[CE]  no  suitable  method  found  for  addData(double,double,double,double,double)	127	None	replace
647	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  if(yArray[i]  ==  yArray[i])  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	if(yArray[i]  ==  yArray[i])  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  regression.addData(xArray[i],    yArray[i]    +    1);    regression.addData(yArray[i],    yArray[i]    +    1);    	compilable	  [FE]  AssertionFailedError  	125	2	replace
648	[BUG]  [BUGGY]  if(yArray[i]  ==  yArray[i])  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  if(yArray[i]  ==  yArray[i])  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	if(yArray[i]  ==  yArray[i])  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  regression.addData(xArray[i],    yArray[i]    +    1);    regression.addData(yArray[i],    yArray[i]    +    1);    	compilable	  [FE]  AssertionFailedError  	125	2	replace
649	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	yArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);	          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    new    Double(yArray[i]);    	compilable	  [FE]  AssertionFailedError  	42	2	replace
650	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);  [FE]  AssertionFailedError  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(yArray[i]  ==  yArray.length)?  yArray[i]  :  new  Double(yArray[i]);	          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    new    Double(yArray[i]);    	compilable	  [FE]  AssertionFailedError  	42	2	replace
651	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null);  [CE]  ';'  expected  [FE]          NullPointerException      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null);	          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null);    	non-compiled	[CE]  ';'  expected	113	None	replace
652	[BUG]  [BUGGY]  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  int  i]  =  Math.min(yArray[i],  yArray[i]);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  int  i]  =  Math.min(yArray[i],  yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =    Math.min(yArray[i],    yArray[i]);    int  i]  =  Math.min(yArray[i],  yArray[i]);	  	non-compiled	[CE]  ';'  expected	17	None	add
653	[BUG]  [BUGGY]  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  yArray[i]  =  Math.min(yArray[i],  YArray[i]);  [CE]  cannot  find  symbol  YArray  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  yArray[i]  =  Math.min(yArray[i],  YArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =    Math.min(yArray[i],    yArray[i]);    yArray[i]  =  Math.min(yArray[i],  YArray[i]);	  	non-compiled	[CE]  cannot  find  symbol  YArray	17	None	add
654	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  yArray[]  =  yArray[i].doubleValue();  if(size  >  size)  {  return  Math.max(regression.getR()  +  size);  }  [CE]  'else'  without  'if'  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  yArray[]  =  yArray[i].doubleValue();  if(size  >  size)  {  return  Math.max(regression.getR()  +  size);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  yArray[]  =  yArray[i].doubleValue();  if(size  >  size)  {  return  Math.max(regression.getR()  +  size);  }	          for(int    i=0;    i    <    yArray.length;    i++)    {    double    size[]    =    yArray[i].doubleValue();    if(size    >    size)    {    return    Math.max(regression.getR()    +    size);    }    	non-compiled	[CE]  'else'  without  'if'	95	None	replace
655	[BUG]  [BUGGY]  double[]  yArray  =(double[])yArray[i].doubleValue();  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  yArray  =(double[])yArray[i].doubleValue();  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =(double[])yArray[i].doubleValue();	  double[]    yArray    =(double[])xArray[i];    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	47	None	replace
656	[BUG]  [BUGGY]          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xxArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  [CE]  cannot  find  symbol  xxArray  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xxArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	                yArray[i]        =        Math.max(yArray[i],        xArray[i]);        yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xxArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);	  	non-compiled	[CE]  cannot  find  symbol  xxArray	64	None	add
657	[BUG]  [BUGGY]  double[]  yArray  =(double[])yArray[0].computeValue(xArray[i],  yArray[i]);  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  yArray  =(double[])yArray[0].computeValue(xArray[i],  yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =(double[])yArray[0].computeValue(xArray[i],  yArray[i]);	  double[]    yArray    =(double[])yArray[0];    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	119	None	replace
658	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]  +  1);  int  i]  =  Math.max(yArray[i],  yArray[i]  +  1);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i]  +  1);  int  i]  =  Math.max(yArray[i],  yArray[i]  +  1);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]    =    Math.max(yArray[i],    yArray[i]    +    1);    int  i]  =  Math.max(yArray[i],  yArray[i]  +  1);	  	non-compiled	[CE]  ';'  expected	22	None	add
659	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i],  yArray[i].toString());  [CE]  double  cannot  be  dereferenced  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i],  yArray[i].toString());  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],  yArray[i],  yArray[i].toString());	  regression.addData(xArray[i],    yArray[i],    j);    	non-compiled	[CE]  double  cannot  be  dereferenced	31	None	replace
660	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i].doubleValue(),  ixArray[i]);  [CE]  double  cannot  be  dereferenced  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i].doubleValue(),  ixArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i].doubleValue(),  ixArray[i]);	  yArray[i]    =    Math.max(yArray[i].doubleValue(),    yArray[i]);    	non-compiled	[CE]  double  cannot  be  dereferenced	115	None	replace
661	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.min(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  yArray[i]  =  Math.min(yArray[i],  xArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(yArray[i],        xArray[i]);        yArray[i]    =    Math.min(yArray[i],    xArray[i]);    yArray[i]  =  Math.min(yArray[i],  yArray[i]);  yArray[i]  =  Math.min(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	136	11	add
662	[BUG]  [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.min(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  yArray[i]  =  Math.min(yArray[i],  xArray[i]);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.min(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  yArray[i]  =  Math.min(yArray[i],  xArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],        xArray[i]);        yArray[i]    =    Math.min(yArray[i],    xArray[i]);    yArray[i]  =  Math.min(yArray[i],  yArray[i]);  yArray[i]  =  Math.min(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	136	11	add
663	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.min(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(yArray[i],        xArray[i]);        yArray[i]    =    Math.min(yArray[i],    xArray[i]);    yArray[i]  =  Math.min(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  yArray[i]);	  	compilable	  [FE]  AssertionFailedError  	136	11	add
664	[BUG]  [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.min(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.min(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],        xArray[i]);        yArray[i]    =    Math.min(yArray[i],    xArray[i]);    yArray[i]  =  Math.min(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  yArray[i]);	  	compilable	  [FE]  AssertionFailedError  	136	11	add
665	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  yArray[]  =  yArray[i].doubleValue();  if(size  >  size)  {  return  Math.coefficient(yArray[i]);  }  [CE]  'else'  without  'if'  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  yArray[]  =  yArray[i].doubleValue();  if(size  >  size)  {  return  Math.coefficient(yArray[i]);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  yArray[]  =  yArray[i].doubleValue();  if(size  >  size)  {  return  Math.coefficient(yArray[i]);  }	          for(int    i=0;    i    <    yArray.length;    i++)    {    double    size[]    =    yArray[i].doubleValue();    if(size    >    size)    {    return    Math.coefficient(xArray[i]);    }    	non-compiled	[CE]  'else'  without  'if'	94	None	replace
666	[BUG]  [BUGGY]  if(yArray[i]!=  null)  {  regression.addData(xArray[i],  yArray[i]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  incomparable  types:  double  and  <null>  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  if(yArray[i]!=  null)  {  regression.addData(xArray[i],  yArray[i]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	if(yArray[i]!=  null)  {  regression.addData(xArray[i],  yArray[i]);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  regression.addData(yArray[i],    xArray[i]);    for(int    i    =    0,    yArray.length    =    yArray.length;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    	non-compiled	[CE]  incomparable  types:  double  and  <null>	100	None	replace
667	[BUG]  [BUGGY]  if(yArray[i]!=  null)  {  regression.addData(xArray[i],  yArray[i]);  }  [CE]  incomparable  types:  double  and  <null>  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  if(yArray[i]!=  null)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	if(yArray[i]!=  null)  {  regression.addData(xArray[i],  yArray[i]);  }	  regression.addData(yArray[i],    xArray[i]);    for(int    i    =    0,    yArray.length    =    yArray.length;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    	non-compiled	[CE]  incomparable  types:  double  and  <null>	100	None	replace
668	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xArray[i],  yArray[i].length,  yArray[i].length);  [CE]  double  cannot  be  dereferenced  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  xArray[i],  yArray[i].length,  yArray[i].length);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i],  xArray[i],  yArray[i].length,  yArray[i].length);	  yArray[i]    =    Math.max(yArray[i],    xArray[i],    yArray[i].length);    	non-compiled	[CE]  double  cannot  be  dereferenced	121	None	replace
669	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i],  xArray[i].length);  [CE]  double  cannot  be  dereferenced  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i],  yArray[i],  xArray[i].length);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i],  yArray[i],  xArray[i].length);	  yArray[i]    =    Math.max(yArray[i],    xArray[i],    yArray[i].length);    	non-compiled	[CE]  double  cannot  be  dereferenced	121	None	replace
670	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(yArray[i],        xArray[i]);        yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  yArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	134	12	add
671	[BUG]  [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],        xArray[i]);        yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  yArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);	  	compilable	  [FE]  AssertionFailedError  	134	12	add
672	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(yArray[i],        xArray[i]);        yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  yArray[i]);	  	compilable	  [FE]  AssertionFailedError  	134	12	add
673	[BUG]  [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  yArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],        xArray[i]);        yArray[i]    =    Math.max(yArray[i],    xArray[i]);    yArray[i]  =  Math.max(yArray[i],  xArray[i]);  yArray[i]  =  Math.max(yArray[i],  yArray[i]);	  	compilable	  [FE]  AssertionFailedError  	134	12	add
674	[BUG]  [BUGGY]  regression.addData(yArray[i],  xArray[i],  yArray);  [CE]  no  suitable  method  found  for  addData(double,double,double[])  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  xArray[i],  yArray);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],  xArray[i],  yArray);	  regression.addData(xArray[i],    yArray[i],    dataArea);    	non-compiled	[CE]  no  suitable  method  found  for  addData(double,double,double[])	107	None	replace
675	[BUG]  [BUGGY]  regression.addData(xArray[i],    yArray[i]    +    1);    regression.addData(xArray[i],  yArray[i]  +  1);  for(int  i  =  0,  yArray.length;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],    yArray[i]    +    1);    regression.addData(xArray[i],  yArray[i]  +  1);  for(int  i  =  0,  yArray.length;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],        yArray[i]        +        1);        regression.addData(xArray[i],    yArray[i]    +    1);    for(int  i  =  0,  yArray.length;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]  +  1);  }	  	non-compiled	[CE]  ';'  expected	79	None	add
676	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],    yArray[i]    +    1);    regression.addData(yArray[i],  yArray[i]  +  1);  regression.addData(yArray[i],  xArray[i]  +  1);  regression.addData(yArray[i],  yArray[i]  +  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(xArray[i],        yArray[i]        +        1);        regression.addData(yArray[i],    yArray[i]    +    1);    regression.addData(yArray[i],  xArray[i]  +  1);  regression.addData(yArray[i],  yArray[i]  +  1);	  	compilable	  [FE]  AssertionFailedError  	124	11	add
677	[BUG]  [BUGGY]  regression.addData(xArray[i],    yArray[i]    +    1);    regression.addData(yArray[i],  yArray[i]  +  1);  regression.addData(yArray[i],  xArray[i]  +  1);  regression.addData(yArray[i],  yArray[i]  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],    yArray[i]    +    1);    regression.addData(yArray[i],  yArray[i]  +  1);  regression.addData(yArray[i],  xArray[i]  +  1);  regression.addData(yArray[i],  yArray[i]  +  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],        yArray[i]        +        1);        regression.addData(yArray[i],    yArray[i]    +    1);    regression.addData(yArray[i],  xArray[i]  +  1);  regression.addData(yArray[i],  yArray[i]  +  1);	  	compilable	  [FE]  AssertionFailedError  	124	11	add
678	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i],  xArray[i],  yArray[i],  matrix);  [CE]  cannot  find  symbol  matrix  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i],  xArray[i],  yArray[i],  matrix);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],  yArray[i],  xArray[i],  yArray[i],  matrix);	  regression.addData(xArray[i],    yArray[i],    xArray[i],    covarianceMatrix);    	non-compiled	[CE]  cannot  find  symbol  matrix	12	None	replace
679	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  if(yArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]);  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	if(yArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]);  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  }	  regression.addData(yArray[i],    xArray[i]);    yArray[i]    =    Math.min(yArray[i],    xArray[i]);    	compilable	  [FE]  AssertionFailedError  	137	2	replace
680	[BUG]  [BUGGY]  if(yArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]);  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  if(yArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]);  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	if(yArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]);  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  }	  regression.addData(yArray[i],    xArray[i]);    yArray[i]    =    Math.min(yArray[i],    xArray[i]);    	compilable	  [FE]  AssertionFailedError  	137	2	replace
681	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  if(yArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]);  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	if(yArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]);  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  regression.addData(yArray[i],    xArray[i]);    yArray[i]    =    Math.min(yArray[i],    xArray[i]);    	compilable	  [FE]  IllegalArgumentException  	137	13	replace
682	[BUG]  [BUGGY]  if(yArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]);  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  if(yArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]);  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	if(yArray[i]!=  yArray[i])  {  regression.addData(xArray[i],  yArray[i]);  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  regression.addData(yArray[i],    xArray[i]);    yArray[i]    =    Math.min(yArray[i],    xArray[i]);    	compilable	  [FE]  IllegalArgumentException  	137	13	replace
683	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  yArray[i]);	  regression.addData(yArray[i],    xArray[i]);    yArray[i]    =    Math.min(yArray[i],    xArray[i]);    	compilable	  [FE]  AssertionFailedError  	137	2	replace
684	[BUG]  [BUGGY]  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  yArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],  xArray[i]);  yArray[i]  =  Math.min(yArray[i],  yArray[i]);	  regression.addData(yArray[i],    xArray[i]);    yArray[i]    =    Math.min(yArray[i],    xArray[i]);    	compilable	  [FE]  AssertionFailedError  	137	2	replace
685	[BUG]  [BUGGY]  double[]  yArray  =(double[])yArray[0].compareTo(yArray[i]);  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  yArray  =(double[])yArray[0].compareTo(yArray[i]);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =(double[])yArray[0].compareTo(yArray[i]);	  double[]    yArray    =(double[])yArray[0].compareTo(xArray[i]);    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	72	None	replace
686	[BUG]  [BUGGY]  double[]  yArray  =  yArray[i].compareTo(xArray[i],  yArray[i])/  2.0;  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  double[]  yArray  =  yArray[i].compareTo(xArray[i],  yArray[i])/  2.0;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	double[]  yArray  =  yArray[i].compareTo(xArray[i],  yArray[i])/  2.0;	  double[]    yArray    =    yArray[i].compareTo(xArray[i],    yArray[i]);    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	78	None	replace
687	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  yArray[i]  *  covarianceMatrix[i];  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  yArray[i]  *  covarianceMatrix[i];  }  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix[]  =  yArray[i]  *  covarianceMatrix[i];  }	  for(int    i=0;    i    <    xArray.length;    i++)    {    RealMatrix    covarianceMatrix[]    =    covarianceMatrix[i]    *    covarianceMatrix[i];    }    	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	3	None	replace
688	[BUG]  [BUGGY]  yArray[i]  =(yArray[i]!=  null)?  yArray[i]  :  null;  [CE]  incomparable  types:  double  and  <null>  [FE]        NullPointerException      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =(yArray[i]!=  null)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =(yArray[i]!=  null)?  yArray[i]  :  null;	  yArray[i]    =(yArray[i]    ==    null)?    yArray[i]    :    null;    	non-compiled	[CE]  incomparable  types:  double  and  <null>	116	None	replace
689	[BUG]  [BUGGY]  regression.addData(yArray[i],  xArray[i],  yArray[i],  xArray[i]);  [CE]  no  suitable  method  found  for  addData(double,double,double,double)  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  xArray[i],  yArray[i],  xArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],  xArray[i],  yArray[i],  xArray[i]);	  regression.addData(xArray[i],    yArray[i],    xArray[i],    yArray[i]);    	non-compiled	[CE]  no  suitable  method  found  for  addData(double,double,double,double)	11	None	replace
690	[BUG]  [BUGGY]  yArray[i]  =  Math.max(yArray[i].doubleValue(),  xArray[i],  size);  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  yArray[i]  =  Math.max(yArray[i].doubleValue(),  xArray[i],  size);  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	yArray[i]  =  Math.max(yArray[i].doubleValue(),  xArray[i],  size);	  yArray[i]    =    Math.max(yArray[i].doubleValue(),    size);    	non-compiled	[CE]  double  cannot  be  dereferenced	34	None	replace
691	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	36	13	add
692	[BUG]  [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]          yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;  [BUGGY]      regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	                yArray[i]        =(yArray[i]        <        yArray.length)?        yArray[i]        :        null;        yArray[i]    =(yArray[i]    <    yArray.length)?    yArray[i]    :    null;    yArray[i]  =(yArray[i]  <  xArray.length)?  yArray[i]  :  null;  yArray[i]  =(yArray[i]  <  yArray.length)?  yArray[i]  :  null;	  	compilable	  [FE]  NullPointerException  	36	13	add
693	[BUG]  [BUGGY]  Regression  regression  =  regression.addData(xArray[i],  yArray[i]  +  1);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  Regression  regression  =  regression.addData(xArray[i],  yArray[i]  +  1);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	Regression  regression  =  regression.addData(xArray[i],  yArray[i]  +  1);	  regression.addData(xArray[i],    yArray[i]    +    1);    Regression    regression.addData(xArray[i],    yArray[i]    +    1);    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
694	[BUG]  [BUGGY]  regression.addData(yArray[i],  yArray[i  +  1]);  for(int  i  =  0;  i  <  yArray.length;  i++)  {  yArray[i]  =  yArray[i  +  1];  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  yArray[i  +  1]);  for(int  i  =  0;  i  <  yArray.length;  i++)  {  yArray[i]  =  yArray[i  +  1];  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],    yArray[i    +    1]);    for(int  i  =  0;  i  <  yArray.length;  i++)  {  yArray[i]  =  yArray[i  +  1];  }	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	89	None	add
695	[BUG]  [BUGGY]  regression.addData(yArray[i],  yArray[i  +  1]);  yArray[i  +  1]  =  Math.max(yArray[i  +  1]);  [CE]  no  suitable  method  found  for  max(double)  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  yArray[i  +  1]);  yArray[i  +  1]  =  Math.max(yArray[i  +  1]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],    yArray[i    +    1]);    yArray[i  +  1]  =  Math.max(yArray[i  +  1]);	  	non-compiled	[CE]  no  suitable  method  found  for  max(double)	89	None	add
696	[BUG]  [BUGGY]  regression.addData(yArray[i],  yArray[i  +  1]);  for(int  i  =  0;  i  <  yArray.length;  i++)  {  yArray[i  +  1]  =  yArray[i  +  1];  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(yArray[i],  yArray[i  +  1]);  for(int  i  =  0;  i  <  yArray.length;  i++)  {  yArray[i  +  1]  =  yArray[i  +  1];  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(yArray[i],    yArray[i    +    1]);    for(int  i  =  0;  i  <  yArray.length;  i++)  {  yArray[i  +  1]  =  yArray[i  +  1];  }	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	89	None	add
697	[BUG]  [BUGGY]  xArray[i]  =  regression.addData(yArray[i],  yArray[i]);  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  xArray[i]  =  regression.addData(yArray[i],  yArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	xArray[i]  =  regression.addData(yArray[i],  yArray[i]);	  regression.addData(yArray[i],    xArray[i]);    yArray[i]    =    regression.addData(yArray[i],    xArray[i]);    	non-compiled	[CE]  incompatible  types	99	None	replace
698	[BUG]  [BUGGY]  Regression  regression  =  regression.addData(yArray[i],  xArray[i]);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  Regression  regression  =  regression.addData(yArray[i],  xArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	Regression  regression  =  regression.addData(yArray[i],  xArray[i]);	  regression.addData(yArray[i],    xArray[i]);    Regression    regression.addData(yArray[i],    xArray[i]);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
699	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  if(yArray[i]!=  yArray[i])  {  regression.addData(yArray[i],  xArray[i]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	add	if(yArray[i]!=  yArray[i])  {  regression.addData(yArray[i],  xArray[i]);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  regression.addData(yArray[i],    xArray[i]);    Regression    regression.addData(yArray[i],    xArray[i]);    	compilable	  [FE]  IllegalArgumentException  	98	13	replace
700	[BUG]  [BUGGY]  if(yArray[i]!=  yArray[i])  {  regression.addData(yArray[i],  xArray[i]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  if(yArray[i]!=  yArray[i])  {  regression.addData(yArray[i],  xArray[i]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	if(yArray[i]!=  yArray[i])  {  regression.addData(yArray[i],  xArray[i]);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  regression.addData(yArray[i],    xArray[i]);    Regression    regression.addData(yArray[i],    xArray[i]);    	compilable	  [FE]  IllegalArgumentException  	98	13	replace
701	[BUG]  [BUGGY]  Regression  regression  =  regression.addData(xArray[i],  yArray[i]);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  Regression  regression  =  regression.addData(xArray[i],  yArray[i]);  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	Regression  regression  =  regression.addData(xArray[i],  yArray[i]);	  regression.addData(yArray[i],    xArray[i]);    Regression    regression.addData(yArray[i],    xArray[i]);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
702	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  2);  for(int  i  =  0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]  +  2);  }  [CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {      [BUGGY]  regression.addData(xArray[i],  yArray[i]  +  2);  for(int  i  =  0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]  +  2);  }  [BUGGY]      }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	228	228	2	replace	regression.addData(xArray[i],    yArray[i]    +    2);    for(int  i  =  0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]  +  2);  }	  	non-compiled	[CE]  variable  i  is  already  defined  in  method  correlation(double[],double[])	109	None	add
