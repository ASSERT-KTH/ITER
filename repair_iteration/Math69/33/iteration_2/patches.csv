bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nCols  >  0  ||  nRows  <  0)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	add	if  (nCols  >  0  ||  nRows  <  0)  {	  if    (nRows    >    0    ||    nCols    <    0)    {    	compilable	  [FE]  MathRuntimeException$4  	55	11	replace
2	[BUG]  [BUGGY]  if  (nCols  >  0  ||  nRows  <  0)  {  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nCols  >  0  ||  nRows  <  0)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if  (nCols  >  0  ||  nRows  <  0)  {	  if    (nRows    >    0    ||    nCols    <    0)    {    	compilable	  [FE]  MathRuntimeException$4  	55	11	replace
3	[BUG]  [BUGGY]  if  (nRows  ==  0  ||  nCols  <  0)  {  if  (nRows  ==  0  ||  nCols  <  0)  {  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionFailedError    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  ==  0  ||  nCols  <  0)  {  if  (nRows  ==  0  ||  nCols  <  0)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if    (nRows    ==    0    ||    nCols    <    0)    {    if  (nRows  ==  0  ||  nCols  <  0)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	50	None	add
4	[BUG]  [BUGGY]  if  (nRows  ==  0  ||  nCols  <  0)  {  If  (nRows  ==  0  ||  nCols  <  0)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  ==  0  ||  nCols  <  0)  {  If  (nRows  ==  0  ||  nCols  <  0)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if    (nRows    ==    0    ||    nCols    <    0)    {    If  (nRows  ==  0  ||  nCols  <  0)  {	  	non-compiled	[CE]  ';'  expected	50	None	add
5	[BUG]  [BUGGY]  if  (nRows  ==  0  ||  nCols  <  0)  {  if  (nRows!=  0  ||  nCols  <  0)  {  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionFailedError    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  ==  0  ||  nCols  <  0)  {  if  (nRows!=  0  ||  nCols  <  0)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if    (nRows    ==    0    ||    nCols    <    0)    {    if  (nRows!=  0  ||  nCols  <  0)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	50	None	add
6	[BUG]  [BUGGY]  int  nRows  =  matrix.getColumnDimension(columnDimension);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nRows  =  matrix.getColumnDimension(columnDimension);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nRows  =  matrix.getColumnDimension(columnDimension);	  int    nRows    =    matrix.getRowDimension(columnDimension);    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
7	[BUG]  [BUGGY]  int  nRows  =  matrix.getRowDimension(columnDimension,  nVars);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nRows  =  matrix.getRowDimension(columnDimension,  nVars);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nRows  =  matrix.getRowDimension(columnDimension,  nVars);	  int    nRows    =    matrix.getRowDimension(columnDimension);    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
8	[BUG]  [BUGGY]  nRows  =  matrix.getRowDimension();  nRows  =  matrix.getColumnDimension();  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionFailedError    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  nRows  =  matrix.getRowDimension();  nRows  =  matrix.getColumnDimension();  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	nRows  =  matrix.getRowDimension();  nRows  =  matrix.getColumnDimension();	          nRows    =    matrix.getRowDimension();    nRows    =    matrix.getRowDimension();    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
9	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  >  0  ||  nCols  <  3)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	add	if  (nRows  >  0  ||  nCols  <  3)  {	  if    (nRows    >    0    ||    nCols    <    2)    {    	compilable	  [FE]  MathRuntimeException$4  	70	11	replace
10	[BUG]  [BUGGY]  if  (nRows  >  0  ||  nCols  <  3)  {  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  >  0  ||  nCols  <  3)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if  (nRows  >  0  ||  nCols  <  3)  {	  if    (nRows    >    0    ||    nCols    <    2)    {    	compilable	  [FE]  MathRuntimeException$4  	70	11	replace
11	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]      MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  >  0  ||  nCols  <  4)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	add	if  (nRows  >  0  ||  nCols  <  4)  {	  if    (nRows    >    0    ||    nCols    <    2)    {    	compilable	  [FE]  MathRuntimeException$4  	70	11	replace
12	[BUG]  [BUGGY]  if  (nRows  >  0  ||  nCols  <  4)  {  [FE]  MathRuntimeException$4  [FE]      MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  >  0  ||  nCols  <  4)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if  (nRows  >  0  ||  nCols  <  4)  {	  if    (nRows    >    0    ||    nCols    <    2)    {    	compilable	  [FE]  MathRuntimeException$4  	70	11	replace
13	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    AssertionFailedError    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  ==  0  ||  nCols  >  0)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	add	if  (nRows  ==  0  ||  nCols  >  0)  {	  if    (nRows    ==    0    ||    nCols    <    0)    {    	compilable	  [FE]  MathRuntimeException$4  	51	11	replace
14	[BUG]  [BUGGY]  if  (nRows  ==  0  ||  nCols  >  0)  {  [FE]  MathRuntimeException$4  [FE]    AssertionFailedError    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  ==  0  ||  nCols  >  0)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if  (nRows  ==  0  ||  nCols  >  0)  {	  if    (nRows    ==    0    ||    nCols    <    0)    {    	compilable	  [FE]  MathRuntimeException$4  	51	11	replace
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nCols  ==  0  ||  nRows  <  0)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	add	if  (nCols  ==  0  ||  nRows  <  0)  {	  if    (nRows    ==    0    ||    nCols    <    0)    {    	compilable	  [FE]  AssertionFailedError  	51	4	replace
16	[BUG]  [BUGGY]  if  (nCols  ==  0  ||  nRows  <  0)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nCols  ==  0  ||  nRows  <  0)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if  (nCols  ==  0  ||  nRows  <  0)  {	  if    (nRows    ==    0    ||    nCols    <    0)    {    	compilable	  [FE]  AssertionFailedError  	51	4	replace
17	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nCols  <  0  ||  nCols  >  1)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	add	if  (nCols  <  0  ||  nCols  >  1)  {	  if    (nCols    <    0    ||    nRows    >    1)    {    	compilable	  [FE]  AssertionFailedError  	42	13	replace
18	[BUG]  [BUGGY]  if  (nCols  <  0  ||  nCols  >  1)  {  [FE]  AssertionFailedError  [FE]    MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nCols  <  0  ||  nCols  >  1)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if  (nCols  <  0  ||  nCols  >  1)  {	  if    (nCols    <    0    ||    nRows    >    1)    {    	compilable	  [FE]  AssertionFailedError  	42	13	replace
19	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]      MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nCols  <  0  ||  nCols  >  0)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	add	if  (nCols  <  0  ||  nCols  >  0)  {	  if    (nCols    <    0    ||    nRows    >    1)    {    	compilable	  [FE]  MathRuntimeException$4  	42	11	replace
20	[BUG]  [BUGGY]  if  (nCols  <  0  ||  nCols  >  0)  {  [FE]  MathRuntimeException$4  [FE]      MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nCols  <  0  ||  nCols  >  0)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if  (nCols  <  0  ||  nCols  >  0)  {	  if    (nCols    <    0    ||    nRows    >    1)    {    	compilable	  [FE]  MathRuntimeException$4  	42	11	replace
21	[BUG]  [BUGGY]  int  nCols  =  matrix.getRowDimension()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nCols  =  matrix.getRowDimension()  +  1;  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nCols  =  matrix.getRowDimension()  +  1;	  int    nCols    =    matrix.getColumnDimension()    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
22	[BUG]  [BUGGY]  if(nCols  <  0  ||  nRows  >  0)  {  if(nCols  <  0  ||  nRows  >  0)  {  [CE]  reached  end  of  file  while  parsing  [FE]    MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if(nCols  <  0  ||  nRows  >  0)  {  if(nCols  <  0  ||  nRows  >  0)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if(nCols    <    0    ||    nRows    >    0)    {    if(nCols  <  0  ||  nRows  >  0)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	36	None	add
23	[BUG]  [BUGGY]  if(nCols  <  0  ||  nRows  >  0)  {  If(nCols  <  0  ||  nRows  >  0)  {  [CE]  ';'  expected  [FE]      MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if(nCols  <  0  ||  nRows  >  0)  {  If(nCols  <  0  ||  nRows  >  0)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if(nCols    <    0    ||    nRows    >    0)    {    If(nCols  <  0  ||  nRows  >  0)  {	  	non-compiled	[CE]  ';'  expected	36	None	add
24	[BUG]  [BUGGY]  if(nCols  <  0  ||  nRows  >  0)  {  if(nRows  <  0  ||  nRows  >  0)  {  [CE]  reached  end  of  file  while  parsing  [FE]        MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if(nCols  <  0  ||  nRows  >  0)  {  if(nRows  <  0  ||  nRows  >  0)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if(nCols    <    0    ||    nRows    >    0)    {    if(nRows  <  0  ||  nRows  >  0)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	36	None	add
25	[BUG]  [BUGGY]  Integer  nVars  =  matrix.getVarDimension();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  Integer  nVars  =  matrix.getVarDimension();  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	Integer  nVars  =  matrix.getVarDimension();	  int    nVars    =    outMatrix.getVarDimension();    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
26	[BUG]  [BUGGY]  float  nVars  =  matrix.getVarDimension();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  float  nVars  =  matrix.getVarDimension();  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	float  nVars  =  matrix.getVarDimension();	  int    nVars    =    outMatrix.getVarDimension();    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
27	[BUG]  [BUGGY]  int  nCols  =  matrix.getRowDimension()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nCols  =  matrix.getRowDimension()  -  1;  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nCols  =  matrix.getRowDimension()  -  1;	  int    nCols    =    matrix.getColumnDimension()    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
28	[BUG]  [BUGGY]  if  (nCols  <  0  ||  nRows  >  1)  {  if  (nCols  <  0  ||  nRows  >  1)  {  [CE]  reached  end  of  file  while  parsing  [FE]    MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nCols  <  0  ||  nRows  >  1)  {  if  (nCols  <  0  ||  nRows  >  1)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if    (nCols    <    0    ||    nRows    >    1)    {    if  (nCols  <  0  ||  nRows  >  1)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	41	None	add
29	[BUG]  [BUGGY]  if  (nCols  <  0  ||  nRows  >  1)  {  If  (nCols  <  0  ||  nRows  >  1)  {  [CE]  ';'  expected  [FE]      MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nCols  <  0  ||  nRows  >  1)  {  If  (nCols  <  0  ||  nRows  >  1)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if    (nCols    <    0    ||    nRows    >    1)    {    If  (nCols  <  0  ||  nRows  >  1)  {	  	non-compiled	[CE]  ';'  expected	41	None	add
30	[BUG]  [BUGGY]  if  (nCols  <  0  ||  nRows  >  1)  {  if  (nRows  <  0  ||  nRows  >  1)  {  [CE]  reached  end  of  file  while  parsing  [FE]        MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nCols  <  0  ||  nRows  >  1)  {  if  (nRows  <  0  ||  nRows  >  1)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if    (nCols    <    0    ||    nRows    >    1)    {    if  (nRows  <  0  ||  nRows  >  1)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	41	None	add
31	[BUG]  [BUGGY]  int  nRows  =  matrix.getColumnDimension()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nRows  =  matrix.getColumnDimension()  +  1;  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nRows  =  matrix.getColumnDimension()  +  1;	  int    nRows    =    matrix.getRowDimension()    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
32	[BUG]  [BUGGY]  int  nRows  =  matrix.getRowDimension(rows,  nVars);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nRows  =  matrix.getRowDimension(rows,  nVars);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nRows  =  matrix.getRowDimension(rows,  nVars);	  int    nRows    =    matrix.getRowDimension(rows);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
33	[BUG]  [BUGGY]  int  nRows  =  matrix.getRowDimension(rows,  0);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nRows  =  matrix.getRowDimension(rows,  0);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nRows  =  matrix.getRowDimension(rows,  0);	  int    nRows    =    matrix.getRowDimension(rows);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
34	[BUG]  [BUGGY]  Integer  nRows  =  matrix.getRowDimension()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  Integer  nRows  =  matrix.getRowDimension()  +  1;  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	Integer  nRows  =  matrix.getRowDimension()  +  1;	  Integer    nRows    =    matrix.getRowDimension();    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
35	[BUG]  [BUGGY]  Integer  nRows  =  matrix.getColumnDimension();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  Integer  nRows  =  matrix.getColumnDimension();  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	Integer  nRows  =  matrix.getColumnDimension();	  Integer    nRows    =    matrix.getRowDimension();    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
36	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  <  0  ||  nCols  >  3)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	add	if  (nRows  <  0  ||  nCols  >  3)  {	  if    (nRows    <    0    ||    nCols    <    3)    {    	compilable	  [FE]  AssertionFailedError  	13	13	replace
37	[BUG]  [BUGGY]  if  (nRows  <  0  ||  nCols  >  3)  {  [FE]  AssertionFailedError  [FE]    MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  <  0  ||  nCols  >  3)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if  (nRows  <  0  ||  nCols  >  3)  {	  if    (nRows    <    0    ||    nCols    <    3)    {    	compilable	  [FE]  AssertionFailedError  	13	13	replace
38	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nCols  <  0  ||  nRows  >  3)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	add	if  (nCols  <  0  ||  nRows  >  3)  {	  if    (nRows    <    0    ||    nCols    <    3)    {    	compilable	  [FE]  AssertionFailedError  	13	13	replace
39	[BUG]  [BUGGY]  if  (nCols  <  0  ||  nRows  >  3)  {  [FE]  AssertionFailedError  [FE]      MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nCols  <  0  ||  nRows  >  3)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if  (nCols  <  0  ||  nRows  >  3)  {	  if    (nRows    <    0    ||    nCols    <    3)    {    	compilable	  [FE]  AssertionFailedError  	13	13	replace
40	[BUG]  [BUGGY]  Integer  nVars  =  matrix.getVarianceDimension();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  Integer  nVars  =  matrix.getVarianceDimension();  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	Integer  nVars  =  matrix.getVarianceDimension();	  int    nVars    =    matrix.getVarianceDimension()    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
41	[BUG]  [BUGGY]  if  (nRows  >  0  ||  nCols  >  0)  {  if  (nRows  >  0  ||  nCols  >  0)  {  [CE]  reached  end  of  file  while  parsing  [FE]    MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  >  0  ||  nCols  >  0)  {  if  (nRows  >  0  ||  nCols  >  0)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if    (nRows    >    0    ||    nCols    >    0)    {    if  (nRows  >  0  ||  nCols  >  0)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	52	None	add
42	[BUG]  [BUGGY]  if  (nRows  >  0  ||  nCols  >  0)  {  If  (nRows  >  0  ||  nCols  >  0)  {  [CE]  ';'  expected  [FE]      MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  >  0  ||  nCols  >  0)  {  If  (nRows  >  0  ||  nCols  >  0)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if    (nRows    >    0    ||    nCols    >    0)    {    If  (nRows  >  0  ||  nCols  >  0)  {	  	non-compiled	[CE]  ';'  expected	52	None	add
43	[BUG]  [BUGGY]  if  (nRows  >  0  ||  nCols  >  0)  {  if  (nRows  >  0  ||  nCOLs  >  0)  {  [CE]  reached  end  of  file  while  parsing  [FE]        MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  >  0  ||  nCols  >  0)  {  if  (nRows  >  0  ||  nCOLs  >  0)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if    (nRows    >    0    ||    nCols    >    0)    {    if  (nRows  >  0  ||  nCOLs  >  0)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	52	None	add
44	[BUG]  [BUGGY]  If  (nRows  <  0  ||  nCols  >  0)  {  [CE]  ';'  expected  [FE]          MathRuntimeException$4      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  If  (nRows  <  0  ||  nCols  >  0)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	If  (nRows  <  0  ||  nCols  >  0)  {	  if    (nRows    <    0    ||    nCols    >    0)    {    If    (nRows    <    0    ||    nCols    >    0)    {    	non-compiled	[CE]  ';'  expected	18	None	replace
45	[BUG]  [BUGGY]  if(nRows  >  0  ||  nCols  >  0)  {  If  (nRows  <  0  ||  nCols  >  0)  {  [CE]  ';'  expected  [FE]            MathRuntimeException$4      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if(nRows  >  0  ||  nCols  >  0)  {  If  (nRows  <  0  ||  nCols  >  0)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if(nRows  >  0  ||  nCols  >  0)  {  If  (nRows  <  0  ||  nCols  >  0)  {	  if    (nRows    <    0    ||    nCols    >    0)    {    If    (nRows    <    0    ||    nCols    >    0)    {    	non-compiled	[CE]  ';'  expected	18	None	replace
46	[BUG]  [BUGGY]  if(nRows  <  0  ||  nCols  >  1)  {  If  (nRows  <  0  ||  nCols  >  1)  {  [CE]  ';'  expected  [FE]              MathRuntimeException$4      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if(nRows  <  0  ||  nCols  >  1)  {  If  (nRows  <  0  ||  nCols  >  1)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if(nRows  <  0  ||  nCols  >  1)  {  If  (nRows  <  0  ||  nCols  >  1)  {	  if    (nRows    <    0    ||    nCols    >    0)    {    If    (nRows    <    0    ||    nCols    >    0)    {    	non-compiled	[CE]  ';'  expected	18	None	replace
47	[BUG]  [BUGGY]  if  (nRows  >  0  ||  nCols  <  1)  {  if  (nRows  >  0  ||  nCols  <  1)  {  [CE]  reached  end  of  file  while  parsing  [FE]    MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  >  0  ||  nCols  <  1)  {  if  (nRows  >  0  ||  nCols  <  1)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if    (nRows    >    0    ||    nCols    <    1)    {    if  (nRows  >  0  ||  nCols  <  1)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	59	None	add
48	[BUG]  [BUGGY]  if  (nRows  >  0  ||  nCols  <  1)  {  If  (nRows  >  0  ||  nCols  <  1)  {  [CE]  ';'  expected  [FE]      MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  >  0  ||  nCols  <  1)  {  If  (nRows  >  0  ||  nCols  <  1)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if    (nRows    >    0    ||    nCols    <    1)    {    If  (nRows  >  0  ||  nCols  <  1)  {	  	non-compiled	[CE]  ';'  expected	59	None	add
49	[BUG]  [BUGGY]  if  (nRows  >  0  ||  nCols  <  1)  {  if  (nRows  >  0  ||  nCOLs  <  1)  {  [CE]  reached  end  of  file  while  parsing  [FE]        MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  >  0  ||  nCols  <  1)  {  if  (nRows  >  0  ||  nCOLs  <  1)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if    (nRows    >    0    ||    nCols    <    1)    {    if  (nRows  >  0  ||  nCOLs  <  1)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	59	None	add
50	[BUG]  [BUGGY]  nRows  =  matrix.getRowDimension()  /  nCols;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  nRows  =  matrix.getRowDimension()  /  nCols;  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	nRows  =  matrix.getRowDimension()  /  nCols;	  nRows    =    matrix.getRowDimension()    *    nCols;    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
51	[BUG]  [BUGGY]  nRows  =  matrix.getRowDimension()  *  nCols  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  nRows  =  matrix.getRowDimension()  *  nCols  +  1;  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	nRows  =  matrix.getRowDimension()  *  nCols  +  1;	  nRows    =    matrix.getRowDimension()    *    nCols;    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
52	[BUG]  [BUGGY]  nRows  =  matrix.getColumnDimension()  *  nCols;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  nRows  =  matrix.getColumnDimension()  *  nCols;  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	nRows  =  matrix.getColumnDimension()  *  nCols;	  nRows    =    matrix.getRowDimension()    *    nCols;    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
53	[BUG]  [BUGGY]  nRows  =  matrix.getRowDimension()  -  nCols;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  nRows  =  matrix.getRowDimension()  -  nCols;  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	nRows  =  matrix.getRowDimension()  -  nCols;	  nRows    =    matrix.getRowDimension()    *    nCols;    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
54	[BUG]  [BUGGY]  nRows  =  matrix.getRowDimension();  int  rows  =  matrix.getColumnDimension();  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  nRows  =  matrix.getRowDimension();  int  rows  =  matrix.getColumnDimension();  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	nRows  =  matrix.getRowDimension();  int  rows  =  matrix.getColumnDimension();	          int    rows    =    matrix.getRowDimension();    int    rows    =    matrix.getColumnDimension();    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
55	[BUG]  [BUGGY]  int  nVars  =  matrix.getSufficientDataDimension()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nVars  =  matrix.getSufficientDataDimension()  +  1;  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nVars  =  matrix.getSufficientDataDimension()  +  1;	  int    nVars    =    matrix.getSufficientDataDimension();    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
56	[BUG]  [BUGGY]  int  nVars  =  matrix.getNumberOfObservations();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nVars  =  matrix.getNumberOfObservations();  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nVars  =  matrix.getNumberOfObservations();	  int    nVars    =    matrix.getSufficientDataDimension();    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
57	[BUG]  [BUGGY]  int  nVars  =  matrix.getSufficientDataDimension()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nVars  =  matrix.getSufficientDataDimension()  -  1;  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nVars  =  matrix.getSufficientDataDimension()  -  1;	  int    nVars    =    matrix.getSufficientDataDimension();    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
58	[BUG]  [BUGGY]  if  (nRows  <  0  ||  nCols  >  1)  {  if  (nRows  <  0  ||  nCols  >  1)  {  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionFailedError    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  <  0  ||  nCols  >  1)  {  if  (nRows  <  0  ||  nCols  >  1)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if    (nRows    <    0    ||    nCols    >    1)    {    if  (nRows  <  0  ||  nCols  >  1)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	34	None	add
59	[BUG]  [BUGGY]  if  (nRows  <  0  ||  nCols  >  1)  {  if  (nRows  <  0  ||  nCOLs  >  1)  {  [CE]  reached  end  of  file  while  parsing  [FE]      AssertionFailedError    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  <  0  ||  nCols  >  1)  {  if  (nRows  <  0  ||  nCOLs  >  1)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if    (nRows    <    0    ||    nCols    >    1)    {    if  (nRows  <  0  ||  nCOLs  >  1)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	34	None	add
60	[BUG]  [BUGGY]  if  (nRows  <  0  ||  nCols  <  3)  {  if  (nRows  <  0  ||  nCols  <  3)  {  [CE]  reached  end  of  file  while  parsing  [FE]    MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  <  0  ||  nCols  <  3)  {  if  (nRows  <  0  ||  nCols  <  3)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if    (nRows    <    0    ||    nCols    <    3)    {    if  (nRows  <  0  ||  nCols  <  3)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	12	None	add
61	[BUG]  [BUGGY]  if  (nRows  <  0  ||  nCols  <  3)  {  If  (nRows  <  0  ||  nCols  <  3)  {  [CE]  ';'  expected  [FE]      MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  <  0  ||  nCols  <  3)  {  If  (nRows  <  0  ||  nCols  <  3)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if    (nRows    <    0    ||    nCols    <    3)    {    If  (nRows  <  0  ||  nCols  <  3)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
62	[BUG]  [BUGGY]  if  (nRows  <  0  ||  nCols  >  2)  {  If  (nRows  <  0  ||  nCols  <  2)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  <  0  ||  nCols  >  2)  {  If  (nRows  <  0  ||  nCols  <  2)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if  (nRows  <  0  ||  nCols  >  2)  {  If  (nRows  <  0  ||  nCols  <  2)  {	  if    (nRows    <    0    ||    nCols    <    2)    {    If    (nRows    <    0    ||    nCols    <    2)    {    	non-compiled	[CE]  ';'  expected	6	None	replace
63	[BUG]  [BUGGY]  if(nRows  <  0  ||  nCols  <  1)  {  If  (nRows  <  0  ||  nCols  <  2)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if(nRows  <  0  ||  nCols  <  1)  {  If  (nRows  <  0  ||  nCols  <  2)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if(nRows  <  0  ||  nCols  <  1)  {  If  (nRows  <  0  ||  nCols  <  2)  {	  if    (nRows    <    0    ||    nCols    <    2)    {    If    (nRows    <    0    ||    nCols    <    2)    {    	non-compiled	[CE]  ';'  expected	6	None	replace
64	[BUG]  [BUGGY]  if(nRows  <  0  ||  nCols  <  2)  {  If  (nRows  <  0  ||  nCols  >  2)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if(nRows  <  0  ||  nCols  <  2)  {  If  (nRows  <  0  ||  nCols  >  2)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if(nRows  <  0  ||  nCols  <  2)  {  If  (nRows  <  0  ||  nCols  >  2)  {	  if    (nRows    <    0    ||    nCols    <    2)    {    If    (nRows    <    0    ||    nCols    <    2)    {    	non-compiled	[CE]  ';'  expected	6	None	replace
65	[BUG]  [BUGGY]  int  nRows  =  matrix.getColumnDimension()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nRows  =  matrix.getColumnDimension()  -  1;  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nRows  =  matrix.getColumnDimension()  -  1;	  int    nRows    =    matrix.getRowDimension()    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
66	[BUG]  [BUGGY]  int  rows  =  matrix.getColumnDimension()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  rows  =  matrix.getColumnDimension()  -  1;  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  rows  =  matrix.getColumnDimension()  -  1;	  int    rows    =    matrix.getRowDimension()    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
67	[BUG]  [BUGGY]  nRows  =  matrix.getColumnDimension()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  nRows  =  matrix.getColumnDimension()  +  1;  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	nRows  =  matrix.getColumnDimension()  +  1;	  nRows    =    matrix.getRowDimension()    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
68	[BUG]  [BUGGY]  int  nRows  =  matrix.getRowDimension(nCols  +  2);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nRows  =  matrix.getRowDimension(nCols  +  2);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nRows  =  matrix.getRowDimension(nCols  +  2);	  int    nRows    =    matrix.getRowDimension(nCols    +    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
69	[BUG]  [BUGGY]  int  nRows  =  matrix.getColumnDimension(nCols  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nRows  =  matrix.getColumnDimension(nCols  +  1);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nRows  =  matrix.getColumnDimension(nCols  +  1);	  int    nRows    =    matrix.getRowDimension(nCols    +    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
70	[BUG]  [BUGGY]  int  nRows  =  matrix.getRowDimension(nCols  *  1);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nRows  =  matrix.getRowDimension(nCols  *  1);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nRows  =  matrix.getRowDimension(nCols  *  1);	  int    nRows    =    matrix.getRowDimension(nCols    +    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
71	[BUG]  [BUGGY]  if(nRows  <  0  ||  nCols  >  0)  {  If  (nRows  <  0  ||  nCols  <  0)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if(nRows  <  0  ||  nCols  >  0)  {  If  (nRows  <  0  ||  nCols  <  0)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if(nRows  <  0  ||  nCols  >  0)  {  If  (nRows  <  0  ||  nCols  <  0)  {	  if    (nRows    <    0    ||    nCols    <    0)    {    If    (nRows    <    0    ||    nCols    <    0)    {    	non-compiled	[CE]  ';'  expected	3	None	replace
72	[BUG]  [BUGGY]  if(nRows  >  0  ||  nCols  <  0)  {  If  (nRows  <  0  ||  nCols  <  0)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if(nRows  >  0  ||  nCols  <  0)  {  If  (nRows  <  0  ||  nCols  <  0)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if(nRows  >  0  ||  nCols  <  0)  {  If  (nRows  <  0  ||  nCols  <  0)  {	  if    (nRows    <    0    ||    nCols    <    0)    {    If    (nRows    <    0    ||    nCols    <    0)    {    	non-compiled	[CE]  ';'  expected	3	None	replace
73	[BUG]  [BUGGY]  int  rows  =  matrix.getRealDimension();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  rows  =  matrix.getRealDimension();  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  rows  =  matrix.getRealDimension();	          int    rows    =    matrix.getRowDimension();    int    rows    =    matrix.getRealDimension();    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
74	[BUG]  [BUGGY]  int  nRows  =  matrix.getRowDimension(r,  nCols,  nVars);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nRows  =  matrix.getRowDimension(r,  nCols,  nVars);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nRows  =  matrix.getRowDimension(r,  nCols,  nVars);	  int    nRows    =    matrix.getRowDimension(r,    nCols);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
75	[BUG]  [BUGGY]  int  nRows  =  matrix.getRowDimension(matrix,  nCols);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nRows  =  matrix.getRowDimension(matrix,  nCols);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nRows  =  matrix.getRowDimension(matrix,  nCols);	  int    nRows    =    matrix.getRowDimension(r,    nCols);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
76	[BUG]  [BUGGY]  int  nRows  =  matrix.getColumnDimension(r,  nCols);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nRows  =  matrix.getColumnDimension(r,  nCols);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nRows  =  matrix.getColumnDimension(r,  nCols);	  int    nRows    =    matrix.getRowDimension(r,    nCols);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
77	[BUG]  [BUGGY]  int  nRows  =  matrix.getRowDimension(r,  nVars);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nRows  =  matrix.getRowDimension(r,  nVars);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nRows  =  matrix.getRowDimension(r,  nVars);	  int    nRows    =    matrix.getRowDimension(r,    nCols);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
78	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    AssertionFailedError    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  >  0  ||  nCols  >  1)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	add	if  (nRows  >  0  ||  nCols  >  1)  {	  if    (nRows    <    0    ||    nCols    >    1)    {    	compilable	  [FE]  MathRuntimeException$4  	35	11	replace
79	[BUG]  [BUGGY]  if  (nRows  >  0  ||  nCols  >  1)  {  [FE]  MathRuntimeException$4  [FE]    AssertionFailedError    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  >  0  ||  nCols  >  1)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if  (nRows  >  0  ||  nCols  >  1)  {	  if    (nRows    <    0    ||    nCols    >    1)    {    	compilable	  [FE]  MathRuntimeException$4  	35	11	replace
80	[BUG]  [BUGGY]  Int  rows  =  matrix.getRowDimension();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  Int  rows  =  matrix.getRowDimension();  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	Int  rows  =  matrix.getRowDimension();	          int    rows    =    matrix.getRowDimension();    Int    rows    =    matrix.getRowDimension();    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
81	[BUG]  [BUGGY]  if  (nRows  >  0  ||  nCols  <  2)  {  if  (nRows  >  0  ||  nCols  <  2)  {  [CE]  reached  end  of  file  while  parsing  [FE]    MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  >  0  ||  nCols  <  2)  {  if  (nRows  >  0  ||  nCols  <  2)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if    (nRows    >    0    ||    nCols    <    2)    {    if  (nRows  >  0  ||  nCols  <  2)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	69	None	add
82	[BUG]  [BUGGY]  if  (nRows  >  0  ||  nCols  <  2)  {  If  (nRows  >  0  ||  nCols  <  2)  {  [CE]  ';'  expected  [FE]      MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  >  0  ||  nCols  <  2)  {  If  (nRows  >  0  ||  nCols  <  2)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if    (nRows    >    0    ||    nCols    <    2)    {    If  (nRows  >  0  ||  nCols  <  2)  {	  	non-compiled	[CE]  ';'  expected	69	None	add
83	[BUG]  [BUGGY]  if  (nRows  >  0  ||  nCols  <  2)  {  if  (nRows  >  0  ||  nCOLs  <  2)  {  [CE]  reached  end  of  file  while  parsing  [FE]        MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  >  0  ||  nCols  <  2)  {  if  (nRows  >  0  ||  nCOLs  <  2)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if    (nRows    >    0    ||    nCols    <    2)    {    if  (nRows  >  0  ||  nCOLs  <  2)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	69	None	add
84	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]          nRows    =    matrix.getRowDimension();    nRows  =  matrix.getRowDimension();  nRows  =  matrix.getRowDimension();  nRows  =  matrix.getRowDimension();  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	add	                nRows        =        matrix.getRowDimension();        nRows    =    matrix.getRowDimension();    nRows  =  matrix.getRowDimension();  nRows  =  matrix.getRowDimension();	  	compilable	  [FE]  AssertionFailedError  	24	2	add
85	[BUG]  [BUGGY]          nRows    =    matrix.getRowDimension();    nRows  =  matrix.getRowDimension();  nRows  =  matrix.getRowDimension();  nRows  =  matrix.getRowDimension();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]          nRows    =    matrix.getRowDimension();    nRows  =  matrix.getRowDimension();  nRows  =  matrix.getRowDimension();  nRows  =  matrix.getRowDimension();  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	                nRows        =        matrix.getRowDimension();        nRows    =    matrix.getRowDimension();    nRows  =  matrix.getRowDimension();  nRows  =  matrix.getRowDimension();	  	compilable	  [FE]  AssertionFailedError  	24	2	add
86	[BUG]  [BUGGY]          nRows    =    matrix.getRowDimension();    nRows  =  matrix.getRowDimension();  int  nRows  =  matrix.getRowDimension();  nRows  =  matrix.getRowDimension();  [CE]  variable  nRows  is  already  defined  in  method  checkSufficientData(RealMatrix)  [FE]      AssertionFailedError    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]          nRows    =    matrix.getRowDimension();    nRows  =  matrix.getRowDimension();  int  nRows  =  matrix.getRowDimension();  nRows  =  matrix.getRowDimension();  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	                nRows        =        matrix.getRowDimension();        nRows    =    matrix.getRowDimension();    int  nRows  =  matrix.getRowDimension();  nRows  =  matrix.getRowDimension();	  	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  checkSufficientData(RealMatrix)	24	None	add
87	[BUG]  [BUGGY]          nRows    =    matrix.getRowDimension();    nRows  =  matrix.getRowDimension();  Integer  nRows  =  matrix.getRowDimension();  nRows  =  matrix.getRowDimension();  [CE]  variable  nRows  is  already  defined  in  method  checkSufficientData(RealMatrix)  [FE]        AssertionFailedError    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]          nRows    =    matrix.getRowDimension();    nRows  =  matrix.getRowDimension();  Integer  nRows  =  matrix.getRowDimension();  nRows  =  matrix.getRowDimension();  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	                nRows        =        matrix.getRowDimension();        nRows    =    matrix.getRowDimension();    Integer  nRows  =  matrix.getRowDimension();  nRows  =  matrix.getRowDimension();	  	non-compiled	[CE]  variable  nRows  is  already  defined  in  method  checkSufficientData(RealMatrix)	24	None	add
88	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]          nRows    =    matrix.getRowDimension();    nRows  =  matrix.getRowDimension();  nRows  =  matrix.getRowDimension();  nCols  =  matrix.getRowDimension();  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	add	                nRows        =        matrix.getRowDimension();        nRows    =    matrix.getRowDimension();    nRows  =  matrix.getRowDimension();  nCols  =  matrix.getRowDimension();	  	compilable	  [FE]  AssertionFailedError  	24	4	add
89	[BUG]  [BUGGY]          nRows    =    matrix.getRowDimension();    nRows  =  matrix.getRowDimension();  nRows  =  matrix.getRowDimension();  nCols  =  matrix.getRowDimension();  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]          nRows    =    matrix.getRowDimension();    nRows  =  matrix.getRowDimension();  nRows  =  matrix.getRowDimension();  nCols  =  matrix.getRowDimension();  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	                nRows        =        matrix.getRowDimension();        nRows    =    matrix.getRowDimension();    nRows  =  matrix.getRowDimension();  nCols  =  matrix.getRowDimension();	  	compilable	  [FE]  AssertionFailedError  	24	4	add
90	[BUG]  [BUGGY]  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension()  +  1;  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension()  +  1;	  int    nRows    =    matrix.getRowDimension();    int    nCols    =    matrix.getColumnDimension();    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
91	[BUG]  [BUGGY]  if(nRows  <  0  ||  nCols  >  1)  {  If  (nRows  <  0  ||  nCols  <  1)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if(nRows  <  0  ||  nCols  >  1)  {  If  (nRows  <  0  ||  nCols  <  1)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if(nRows  <  0  ||  nCols  >  1)  {  If  (nRows  <  0  ||  nCols  <  1)  {	  if    (nRows    <    0    ||    nCols    <    1)    {    If    (nRows    <    0    ||    nCols    <    1)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
92	[BUG]  [BUGGY]  if(nRows  <  0  ||  nCols  <  1)  {  If  (nRows  >  0  ||  nCols  <  1)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if(nRows  <  0  ||  nCols  <  1)  {  If  (nRows  >  0  ||  nCols  <  1)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if(nRows  <  0  ||  nCols  <  1)  {  If  (nRows  >  0  ||  nCols  <  1)  {	  if    (nRows    <    0    ||    nCols    <    1)    {    If    (nRows    <    0    ||    nCols    <    1)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
93	[BUG]  [BUGGY]  if(nRows  <  0  ||  nCols  <  1)  {  If  (nRows  <  0  ||  nCols  >  1)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if(nRows  <  0  ||  nCols  <  1)  {  If  (nRows  <  0  ||  nCols  >  1)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if(nRows  <  0  ||  nCols  <  1)  {  If  (nRows  <  0  ||  nCols  >  1)  {	  if    (nRows    <    0    ||    nCols    <    1)    {    If    (nRows    <    0    ||    nCols    <    1)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
94	[BUG]  [BUGGY]  int  rows  =  matrix.getColumnDimension()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  rows  =  matrix.getColumnDimension()  +  1;  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  rows  =  matrix.getColumnDimension()  +  1;	  int    rows    =    matrix.getRowDimension()    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
95	[BUG]  [BUGGY]  if  (nRows  >  0  ||  nCols  <  0)  {  if  (nRows  >  0  ||  nCols  <  0)  {  [CE]  reached  end  of  file  while  parsing  [FE]    MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  >  0  ||  nCols  <  0)  {  if  (nRows  >  0  ||  nCols  <  0)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if    (nRows    >    0    ||    nCols    <    0)    {    if  (nRows  >  0  ||  nCols  <  0)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	54	None	add
96	[BUG]  [BUGGY]  if  (nRows  >  0  ||  nCols  <  0)  {  If  (nRows  >  0  ||  nCols  <  0)  {  [CE]  ';'  expected  [FE]      MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  >  0  ||  nCols  <  0)  {  If  (nRows  >  0  ||  nCols  <  0)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if    (nRows    >    0    ||    nCols    <    0)    {    If  (nRows  >  0  ||  nCols  <  0)  {	  	non-compiled	[CE]  ';'  expected	54	None	add
97	[BUG]  [BUGGY]  if  (nRows  >  0  ||  nCols  <  0)  {  if  (nRows  >  0  ||  nCOLs  <  0)  {  [CE]  reached  end  of  file  while  parsing  [FE]        MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  >  0  ||  nCols  <  0)  {  if  (nRows  >  0  ||  nCOLs  <  0)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if    (nRows    >    0    ||    nCols    <    0)    {    if  (nRows  >  0  ||  nCOLs  <  0)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	54	None	add
98	[BUG]  [BUGGY]  int  rows  =  matrix.getRelativeDimension();  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  rows  =  matrix.getRelativeDimension();  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  rows  =  matrix.getRelativeDimension();	          int    rows    =    matrix.getRowDimension();    int    rows    =    matrix.getRelativeDimension();    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
99	[BUG]  [BUGGY]  if  (nRows  <  0  ||  nCols  >  2)  {  if  (nRows  <  0  ||  nCols  >  2)  {  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionFailedError    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  <  0  ||  nCols  >  2)  {  if  (nRows  <  0  ||  nCols  >  2)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if    (nRows    <    0    ||    nCols    >    2)    {    if  (nRows  <  0  ||  nCols  >  2)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	10	None	add
100	[BUG]  [BUGGY]  if  (nRows  <  0  ||  nCols  >  2)  {  If  (nRows  <  0  ||  nCols  >  2)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  <  0  ||  nCols  >  2)  {  If  (nRows  <  0  ||  nCols  >  2)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if    (nRows    <    0    ||    nCols    >    2)    {    If  (nRows  <  0  ||  nCols  >  2)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
101	[BUG]  [BUGGY]  if  (nRows  <  0  ||  nCols  >  2)  {  if  (nRows  <  0  ||  nCOLs  >  2)  {  [CE]  reached  end  of  file  while  parsing  [FE]        AssertionFailedError    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  <  0  ||  nCols  >  2)  {  if  (nRows  <  0  ||  nCOLs  >  2)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if    (nRows    <    0    ||    nCols    >    2)    {    if  (nRows  <  0  ||  nCOLs  >  2)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	10	None	add
102	[BUG]  [BUGGY]  if  (nRows  <  0  ||  nCOLs  >  2)  {  [CE]  cannot  find  symbol  nCOLs  [FE]            AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  <  0  ||  nCOLs  >  2)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if  (nRows  <  0  ||  nCOLs  >  2)  {	  if    (nRows    <    0    ||    nCols    <    2)    {    if    (nRows    <    0    ||    nCOLs    <    2)    {    	non-compiled	[CE]  cannot  find  symbol  nCOLs	7	None	replace
103	[BUG]  [BUGGY]  int  nRows  =  matrix.getRowDimension(nCols,  1);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nRows  =  matrix.getRowDimension(nCols,  1);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nRows  =  matrix.getRowDimension(nCols,  1);	  int    nRows    =    matrix.getRowDimension(nCols,    0);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
104	[BUG]  [BUGGY]  int  nRows  =  matrix.getRowDimension(nCols,  2);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nRows  =  matrix.getRowDimension(nCols,  2);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nRows  =  matrix.getRowDimension(nCols,  2);	  int    nRows    =    matrix.getRowDimension(nCols,    0);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
105	[BUG]  [BUGGY]  int  nRows  =  matrix.getRowDimension(nCols,  3);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nRows  =  matrix.getRowDimension(nCols,  3);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nRows  =  matrix.getRowDimension(nCols,  3);	  int    nRows    =    matrix.getRowDimension(nCols,    0);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
106	[BUG]  [BUGGY]  int  nVars  =  matrix.getRowDimension();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nVars  =  matrix.getRowDimension();  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nVars  =  matrix.getRowDimension();	  int    nVars    =    outMatrix.getVarianceDimension();    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
107	[BUG]  [BUGGY]  nRows  =  matrix.getRowDimension(nCols  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  nRows  =  matrix.getRowDimension(nCols  +  1);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	nRows  =  matrix.getRowDimension(nCols  +  1);	  nRows    =    matrix.getRowDimension(nCols);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
108	[BUG]  [BUGGY]  nRows  =  matrix.getRowDimension(nCols,  nVars);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  nRows  =  matrix.getRowDimension(nCols,  nVars);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	nRows  =  matrix.getRowDimension(nCols,  nVars);	  nRows    =    matrix.getRowDimension(nCols);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
109	[BUG]  [BUGGY]  nRows  =  matrix.getRowDimension(nRows,  nCols);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  nRows  =  matrix.getRowDimension(nRows,  nCols);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	nRows  =  matrix.getRowDimension(nRows,  nCols);	  nRows    =    matrix.getRowDimension(nCols);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
110	[BUG]  [BUGGY]  int  nRows  =  matrix.getRowDimension(nRows);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nRows  =  matrix.getRowDimension(nRows);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nRows  =  matrix.getRowDimension(nRows);	  int    nRows    =    matrix.getColumnDimension(nCols);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
111	[BUG]  [BUGGY]  int  rows  =  matrix.getRowDimension()  /  nCols;  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  rows  =  matrix.getRowDimension()  /  nCols;  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  rows  =  matrix.getRowDimension()  /  nCols;	  int    rows    =    matrix.getRowDimension()    +    nCols;    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
112	[BUG]  [BUGGY]  int  rows  =  matrix.getRowDimension()  +  nCols  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  rows  =  matrix.getRowDimension()  +  nCols  +  1;  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  rows  =  matrix.getRowDimension()  +  nCols  +  1;	  int    rows    =    matrix.getRowDimension()    +    nCols;    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
113	[BUG]  [BUGGY]  int  rows  =  matrix.getColumnDimension()  +  nCols;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  rows  =  matrix.getColumnDimension()  +  nCols;  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  rows  =  matrix.getColumnDimension()  +  nCols;	  int    rows    =    matrix.getRowDimension()    +    nCols;    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
114	[BUG]  [BUGGY]  int  nRows  =  matrix.getRowDimension(nCols,  nObs);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nRows  =  matrix.getRowDimension(nCols,  nObs);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nRows  =  matrix.getRowDimension(nCols,  nObs);	  int    nRows    =    matrix.getRowDimension(nCols,    nVars);    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
115	[BUG]  [BUGGY]  int  nRows  =  matrix.getRowDimension(nObs,  nVars);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nRows  =  matrix.getRowDimension(nObs,  nVars);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nRows  =  matrix.getRowDimension(nObs,  nVars);	  int    nRows    =    matrix.getRowDimension(nCols,    nVars);    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
116	[BUG]  [BUGGY]  int  nRows  =  matrix.getRowDimension(nCols,  nVars,  nObs);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nRows  =  matrix.getRowDimension(nCols,  nVars,  nObs);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nRows  =  matrix.getRowDimension(nCols,  nVars,  nObs);	  int    nRows    =    matrix.getRowDimension(nCols,    nVars);    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
117	[BUG]  [BUGGY]  int  nRows  =  matrix.getRowDimension();  Integer  nRows  =  matrix.getRowDimension();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nRows  =  matrix.getRowDimension();  Integer  nRows  =  matrix.getRowDimension();  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nRows  =  matrix.getRowDimension();  Integer  nRows  =  matrix.getRowDimension();	          nRows    =    matrix.getRowDimension();    Integer    nRows    =    matrix.getRowDimension();    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
118	[BUG]  [BUGGY]  int  nRows  =  matrix.getRowDimension(renderingContext,  nCols,  nVars);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nRows  =  matrix.getRowDimension(renderingContext,  nCols,  nVars);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nRows  =  matrix.getRowDimension(renderingContext,  nCols,  nVars);	  int    nRows    =    matrix.getRowDimension(renderingContext,    nCols);    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
119	[BUG]  [BUGGY]  int  nRows  =  matrix.getRowDimension(renderingContext,  dataMatrix);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nRows  =  matrix.getRowDimension(renderingContext,  dataMatrix);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nRows  =  matrix.getRowDimension(renderingContext,  dataMatrix);	  int    nRows    =    matrix.getRowDimension(renderingContext,    nCols);    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
120	[BUG]  [BUGGY]  int  nRows  =  matrix.getRowDimension(renderingContext,  dataArea);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nRows  =  matrix.getRowDimension(renderingContext,  dataArea);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nRows  =  matrix.getRowDimension(renderingContext,  dataArea);	  int    nRows    =    matrix.getRowDimension(renderingContext,    nCols);    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
121	[BUG]  [BUGGY]  Integer  rows  =  matrix.getRowDimension();  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  Integer  rows  =  matrix.getRowDimension();  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	Integer  rows  =  matrix.getRowDimension();	          int    rows    =    matrix.getRowDimension();    int    rows    =    matrix.getRowDimension();    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
122	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]          nRows    =    matrix.getRowDimension();    nRows  =  matrix.getRowDimension();  nRows  =  matrix.getRowDimension();  nRows  =  matrix.getColumnDimension();  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	add	                nRows        =        matrix.getRowDimension();        nRows    =    matrix.getRowDimension();    nRows  =  matrix.getRowDimension();  nRows  =  matrix.getColumnDimension();	  	compilable	  [FE]  AssertionFailedError  	24	2	add
123	[BUG]  [BUGGY]          nRows    =    matrix.getRowDimension();    nRows  =  matrix.getRowDimension();  nRows  =  matrix.getRowDimension();  nRows  =  matrix.getColumnDimension();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]          nRows    =    matrix.getRowDimension();    nRows  =  matrix.getRowDimension();  nRows  =  matrix.getRowDimension();  nRows  =  matrix.getColumnDimension();  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	                nRows        =        matrix.getRowDimension();        nRows    =    matrix.getRowDimension();    nRows  =  matrix.getRowDimension();  nRows  =  matrix.getColumnDimension();	  	compilable	  [FE]  AssertionFailedError  	24	2	add
124	[BUG]  [BUGGY]  int  nCols  =  matrix.getColumnDimension(inputMatrix);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nCols  =  matrix.getColumnDimension(inputMatrix);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nCols  =  matrix.getColumnDimension(inputMatrix);	  int    nCols    =    matrix.getRowDimension();    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
125	[BUG]  [BUGGY]  Integer  nCols  =  matrix.getColumnDimension();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  Integer  nCols  =  matrix.getColumnDimension();  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	Integer  nCols  =  matrix.getColumnDimension();	  int    nCols    =    matrix.getRowDimension();    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
126	[BUG]  [BUGGY]  nRows  =  matrix.getRowDimension(nRows);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  nRows  =  matrix.getRowDimension(nRows);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	nRows  =  matrix.getRowDimension(nRows);	  nRows    =    matrix.getRowDimension(nCols);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
127	[BUG]  [BUGGY]  nRows  =  matrix.getColumnDimension();  nRows  =  matrix.getRowDimension();  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionFailedError    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  nRows  =  matrix.getColumnDimension();  nRows  =  matrix.getRowDimension();  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	nRows  =  matrix.getColumnDimension();  nRows  =  matrix.getRowDimension();	          nRows    =    matrix.getRowDimension();    nRows    =    matrix.getRowDimension();    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
128	[BUG]  [BUGGY]  if  (nRows  <  0  ||  nCols  <  3)  {  if  (nRows  <  0  ||  nCOLs  <  3)  {  [CE]  reached  end  of  file  while  parsing  [FE]    MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  <  0  ||  nCols  <  3)  {  if  (nRows  <  0  ||  nCOLs  <  3)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if    (nRows    <    0    ||    nCols    <    3)    {    if  (nRows  <  0  ||  nCOLs  <  3)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	12	None	add
129	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nCols  >  0  ||  nRows  >  1)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	add	if  (nCols  >  0  ||  nRows  >  1)  {	  if    (nCols    <    0    ||    nRows    >    1)    {    	compilable	  [FE]  MathRuntimeException$4  	42	11	replace
130	[BUG]  [BUGGY]  if  (nCols  >  0  ||  nRows  >  1)  {  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nCols  >  0  ||  nRows  >  1)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if  (nCols  >  0  ||  nRows  >  1)  {	  if    (nCols    <    0    ||    nRows    >    1)    {    	compilable	  [FE]  MathRuntimeException$4  	42	11	replace
131	[BUG]  [BUGGY]  int  rows  =  matrix.getColumnDimension();  Int  rows  =  matrix.getRowDimension();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  rows  =  matrix.getColumnDimension();  Int  rows  =  matrix.getRowDimension();  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  rows  =  matrix.getColumnDimension();  Int  rows  =  matrix.getRowDimension();	          int    rows    =    matrix.getRowDimension();    Int    rows    =    matrix.getRowDimension();    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
132	[BUG]  [BUGGY]  int  nRows  =  matrix.getColumnDimension(nCols,  0);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nRows  =  matrix.getColumnDimension(nCols,  0);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nRows  =  matrix.getColumnDimension(nCols,  0);	  int    nRows    =    matrix.getRowDimension(nCols,    0);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
133	[BUG]  [BUGGY]  if(matrix!=  null)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if(matrix!=  null)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();  }  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if(matrix!=  null)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();  }	  int    nRows    =    matrix.getRowDimension();    int    nCols    =    matrix.getColumnDimension();    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
134	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if(nCols  >  0  ||  nRows  >  0)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	add	if(nCols  >  0  ||  nRows  >  0)  {	  if(nCols    <    0    ||    nRows    >    0)    {    	compilable	  [FE]  MathRuntimeException$4  	37	11	replace
135	[BUG]  [BUGGY]  if(nCols  >  0  ||  nRows  >  0)  {  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if(nCols  >  0  ||  nRows  >  0)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if(nCols  >  0  ||  nRows  >  0)  {	  if(nCols    <    0    ||    nRows    >    0)    {    	compilable	  [FE]  MathRuntimeException$4  	37	11	replace
136	[BUG]  [BUGGY]  int  nRows  =  matrix.getColumnDimension(nCols,  nVars);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nRows  =  matrix.getColumnDimension(nCols,  nVars);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nRows  =  matrix.getColumnDimension(nCols,  nVars);	  int    nRows    =    matrix.getRowDimension(nCols,    nVars);    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
137	[BUG]  [BUGGY]  int  nVars  =  covarianceMatrix.getVarianceDimension();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nVars  =  covarianceMatrix.getVarianceDimension();  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nVars  =  covarianceMatrix.getVarianceDimension();	  int    nVars    =    outMatrix.getVarianceDimension();    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
138	[BUG]  [BUGGY]  int  nVars  =  matrix.outMatrix.getVarDimension()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nVars  =  matrix.outMatrix.getVarDimension()  +  1;  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nVars  =  matrix.outMatrix.getVarDimension()  +  1;	  int    nVars    =    matrix.outMatrix.getVarDimension();    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
139	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]        MathRuntimeException$4      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if(nRows  >  0)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	add	if(nRows  >  0)  {	  if    (nRows    <    0    ||    nCols    >    0)    {    if    (nRows    <    0    ||    nCols    >    0)    {    	compilable	  [FE]  MathRuntimeException$4  	17	11	replace
140	[BUG]  [BUGGY]  if(nRows  >  0)  {  [FE]  MathRuntimeException$4  [FE]        MathRuntimeException$4      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if(nRows  >  0)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if(nRows  >  0)  {	  if    (nRows    <    0    ||    nCols    >    0)    {    if    (nRows    <    0    ||    nCols    >    0)    {    	compilable	  [FE]  MathRuntimeException$4  	17	11	replace
141	[BUG]  [BUGGY]  if(nCols  <  0  ||  nRows  >  0)  {  if(nRows  <  0  ||  nCols  >  0)  {  [CE]  reached  end  of  file  while  parsing  [FE]    MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if(nCols  <  0  ||  nRows  >  0)  {  if(nRows  <  0  ||  nCols  >  0)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if(nCols    <    0    ||    nRows    >    0)    {    if(nRows  <  0  ||  nCols  >  0)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	36	None	add
142	[BUG]  [BUGGY]  if  (nRows  ==  0  ||  nCols  <  0)  {  if  (nRows  ==  0  ||  nCOLs  <  0)  {  [CE]  reached  end  of  file  while  parsing  [FE]    AssertionFailedError    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  ==  0  ||  nCols  <  0)  {  if  (nRows  ==  0  ||  nCOLs  <  0)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if    (nRows    ==    0    ||    nCols    <    0)    {    if  (nRows  ==  0  ||  nCOLs  <  0)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	50	None	add
143	[BUG]  [BUGGY]  int  nRows  =  matrix.getRowDimension(rows,  nCols);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nRows  =  matrix.getRowDimension(rows,  nCols);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nRows  =  matrix.getRowDimension(rows,  nCols);	  int    nRows    =    matrix.getRowDimension(rows);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
144	[BUG]  [BUGGY]  int  nRows  =  matrix.getColumnDimension(rows);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nRows  =  matrix.getColumnDimension(rows);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nRows  =  matrix.getColumnDimension(rows);	  int    nRows    =    matrix.getRowDimension(rows);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
145	[BUG]  [BUGGY]  if  (nRows  >  0  ||  nCols  <  1)  {  If  (nRows  <  0  ||  nCols  <  1)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  >  0  ||  nCols  <  1)  {  If  (nRows  <  0  ||  nCols  <  1)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if  (nRows  >  0  ||  nCols  <  1)  {  If  (nRows  <  0  ||  nCols  <  1)  {	  if    (nRows    <    0    ||    nCols    <    1)    {    If    (nRows    <    0    ||    nCols    <    1)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
146	[BUG]  [BUGGY]  if  (nRows  <  0  ||  nCols  >  1)  {  If  (nRows  >  0  ||  nCols  <  1)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  <  0  ||  nCols  >  1)  {  If  (nRows  >  0  ||  nCols  <  1)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if  (nRows  <  0  ||  nCols  >  1)  {  If  (nRows  >  0  ||  nCols  <  1)  {	  if    (nRows    <    0    ||    nCols    <    1)    {    If    (nRows    <    0    ||    nCols    <    1)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
147	[BUG]  [BUGGY]  if  (nRows  <  0  ||  nCols  >  1)  {  If  (nRows  <  0  ||  nCols  <  2)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  <  0  ||  nCols  >  1)  {  If  (nRows  <  0  ||  nCols  <  2)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if  (nRows  <  0  ||  nCols  >  1)  {  If  (nRows  <  0  ||  nCols  <  2)  {	  if    (nRows    <    0    ||    nCols    <    2)    {    If    (nRows    <    0    ||    nCols    <    2)    {    	non-compiled	[CE]  ';'  expected	6	None	replace
148	[BUG]  [BUGGY]  if  (nRows  >  0  ||  nCols  <  2)  {  If  (nRows  <  0  ||  nCols  <  2)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  >  0  ||  nCols  <  2)  {  If  (nRows  <  0  ||  nCols  <  2)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if  (nRows  >  0  ||  nCols  <  2)  {  If  (nRows  <  0  ||  nCols  <  2)  {	  if    (nRows    <    0    ||    nCols    <    2)    {    If    (nRows    <    0    ||    nCols    <    2)    {    	non-compiled	[CE]  ';'  expected	6	None	replace
149	[BUG]  [BUGGY]  if(nRows  <  0  ||  nCols  >  0)  {  If  (nRows  <  0  ||  nCols  <  2)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if(nRows  <  0  ||  nCols  >  0)  {  If  (nRows  <  0  ||  nCols  <  2)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if(nRows  <  0  ||  nCols  >  0)  {  If  (nRows  <  0  ||  nCols  <  2)  {	  if    (nRows    <    0    ||    nCols    <    2)    {    If    (nRows    <    0    ||    nCols    <    2)    {    	non-compiled	[CE]  ';'  expected	6	None	replace
150	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  <  0  ||  nCols  >  4)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	add	if  (nRows  <  0  ||  nCols  >  4)  {	  if    (nRows    <    0    ||    nCols    <    3)    {    	compilable	  [FE]  AssertionFailedError  	13	13	replace
151	[BUG]  [BUGGY]  if  (nRows  <  0  ||  nCols  >  4)  {  [FE]  AssertionFailedError  [FE]    MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  <  0  ||  nCols  >  4)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if  (nRows  <  0  ||  nCols  >  4)  {	  if    (nRows    <    0    ||    nCols    <    3)    {    	compilable	  [FE]  AssertionFailedError  	13	13	replace
152	[BUG]  [BUGGY]  int  nVars  =  matrix.outMatrix.getVarianceDimension()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nVars  =  matrix.outMatrix.getVarianceDimension()  +  1;  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nVars  =  matrix.outMatrix.getVarianceDimension()  +  1;	  int    nVars    =    matrix.outMatrix.getVarianceDimension();    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
153	[BUG]  [BUGGY]  float  nVars  =  outMatrix.getVarDimension();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  float  nVars  =  outMatrix.getVarDimension();  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	float  nVars  =  outMatrix.getVarDimension();	  int    nVars    =    outMatrix.getVarDimension();    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
154	[BUG]  [BUGGY]  int  nRows  =  matrix.getRowDimension(relativeMatrix,  nCols);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nRows  =  matrix.getRowDimension(relativeMatrix,  nCols);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nRows  =  matrix.getRowDimension(relativeMatrix,  nCols);	  int    nRows    =    matrix.getRowDimension(renderingContext,    nCols);    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
155	[BUG]  [BUGGY]  int  nRows  =  matrix.getRowDimension(renderingContext,  nCols,  0);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nRows  =  matrix.getRowDimension(renderingContext,  nCols,  0);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nRows  =  matrix.getRowDimension(renderingContext,  nCols,  0);	  int    nRows    =    matrix.getRowDimension(renderingContext,    nCols);    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
156	[BUG]  [BUGGY]  if(nRows  >  0)  {  If  (nRows  <  0  ||  nCols  >  0)  {  [CE]  ';'  expected  [FE]          MathRuntimeException$4      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if(nRows  >  0)  {  If  (nRows  <  0  ||  nCols  >  0)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if(nRows  >  0)  {  If  (nRows  <  0  ||  nCols  >  0)  {	  if    (nRows    <    0    ||    nCols    >    0)    {    If    (nRows    <    0    ||    nCols    >    0)    {    	non-compiled	[CE]  ';'  expected	18	None	replace
157	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nCols  >  0  ||  nRows  <  2)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	add	if  (nCols  >  0  ||  nRows  <  2)  {	  if    (nRows    >    0    ||    nCols    <    2)    {    	compilable	  [FE]  MathRuntimeException$4  	70	11	replace
158	[BUG]  [BUGGY]  if  (nCols  >  0  ||  nRows  <  2)  {  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nCols  >  0  ||  nRows  <  2)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if  (nCols  >  0  ||  nRows  <  2)  {	  if    (nRows    >    0    ||    nCols    <    2)    {    	compilable	  [FE]  MathRuntimeException$4  	70	11	replace
159	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nCols  >  0  ||  nRows  <  1)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	add	if  (nCols  >  0  ||  nRows  <  1)  {	  if    (nRows    >    0    ||    nCols    <    1)    {    	compilable	  [FE]  MathRuntimeException$4  	60	11	replace
160	[BUG]  [BUGGY]  if  (nCols  >  0  ||  nRows  <  1)  {  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nCols  >  0  ||  nRows  <  1)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if  (nCols  >  0  ||  nRows  <  1)  {	  if    (nRows    >    0    ||    nCols    <    1)    {    	compilable	  [FE]  MathRuntimeException$4  	60	11	replace
161	[BUG]  [BUGGY]  int  columns  =  matrix.getRowDimension();  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  columns  =  matrix.getRowDimension();  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  columns  =  matrix.getRowDimension();	  int    rows    =    matrix.getColumnDimension();    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
162	[BUG]  [BUGGY]  int  nRows  =  matrix.getColumnDimension(columnDimension,  0);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nRows  =  matrix.getColumnDimension(columnDimension,  0);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nRows  =  matrix.getColumnDimension(columnDimension,  0);	  int    nRows    =    matrix.getRowDimension(columnDimension);    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
163	[BUG]  [BUGGY]  int  nRows  =  matrix.getColumnDimension(rows,  0);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nRows  =  matrix.getColumnDimension(rows,  0);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nRows  =  matrix.getColumnDimension(rows,  0);	  int    nRows    =    matrix.getRowDimension(nCols,    0);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
164	[BUG]  [BUGGY]  int  nRows  =  matrix.getColumnDimension(columns,  0);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nRows  =  matrix.getColumnDimension(columns,  0);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nRows  =  matrix.getColumnDimension(columns,  0);	  int    nRows    =    matrix.getRowDimension(nCols,    0);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
165	[BUG]  [BUGGY]  int  nRows  =  matrix.getRowDimension(r,  0);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nRows  =  matrix.getRowDimension(r,  0);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nRows  =  matrix.getRowDimension(r,  0);	  int    nRows    =    matrix.getRowDimension(nCols,    0);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
166	[BUG]  [BUGGY]  if(nRows  >  0  ||  nCols  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]    MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if(nRows  >  0  ||  nCols  <  =  0)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if(nRows  >  0  ||  nCols  <  =  0)  {	  if    (nRows    >    0    ||    nCols    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
167	[BUG]  [BUGGY]  int  nCols  =  matrix.getColumnDimension(column);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nCols  =  matrix.getColumnDimension(column);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nCols  =  matrix.getColumnDimension(column);	  int    nCols    =    matrix.getRowDimension();    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
168	[BUG]  [BUGGY]  int  nRows  =  matrix.getRowDimension(rows  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nRows  =  matrix.getRowDimension(rows  +  1);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nRows  =  matrix.getRowDimension(rows  +  1);	  int    nRows    =    matrix.getRowDimension(nCols    +    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
169	[BUG]  [BUGGY]  int  nRows  =  matrix.getColumnDimension(rows  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nRows  =  matrix.getColumnDimension(rows  +  1);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nRows  =  matrix.getColumnDimension(rows  +  1);	  int    nRows    =    matrix.getRowDimension(nCols    +    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
170	[BUG]  [BUGGY]  int  nRows  =  matrix.getColumnDimension(nCols  *  1);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nRows  =  matrix.getColumnDimension(nCols  *  1);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nRows  =  matrix.getColumnDimension(nCols  *  1);	  int    nRows    =    matrix.getRowDimension(nCols    +    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
171	[BUG]  [BUGGY]  int  nVars  =  covarianceMatrix.getVarDimension();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nVars  =  covarianceMatrix.getVarDimension();  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nVars  =  covarianceMatrix.getVarDimension();	  int    nVars    =    outMatrix.getVarDimension();    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
172	[BUG]  [BUGGY]  int  nRows  =  matrix.getRowDimension(r);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nRows  =  matrix.getRowDimension(r);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nRows  =  matrix.getRowDimension(r);	  int    nRows    =    matrix.getColumnDimension(nCols);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
173	[BUG]  [BUGGY]  int  nRows  =  matrix.getColumnDimension(rows,  nVars);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nRows  =  matrix.getColumnDimension(rows,  nVars);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nRows  =  matrix.getColumnDimension(rows,  nVars);	  int    nRows    =    matrix.getRowDimension(nCols,    nVars);    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
174	[BUG]  [BUGGY]  int  nRows  =  matrix.getColumnDimension(columns,  nVars);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nRows  =  matrix.getColumnDimension(columns,  nVars);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nRows  =  matrix.getColumnDimension(columns,  nVars);	  int    nRows    =    matrix.getRowDimension(nCols,    nVars);    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
175	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]          nRows    =    matrix.getRowDimension();    nRows  =  matrix.getRowDimension();  nRows  =  matrix.getColumnDimension();  nRows  =  matrix.getRowDimension();  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	add	                nRows        =        matrix.getRowDimension();        nRows    =    matrix.getRowDimension();    nRows  =  matrix.getColumnDimension();  nRows  =  matrix.getRowDimension();	  	compilable	  [FE]  AssertionFailedError  	24	2	add
176	[BUG]  [BUGGY]          nRows    =    matrix.getRowDimension();    nRows  =  matrix.getRowDimension();  nRows  =  matrix.getColumnDimension();  nRows  =  matrix.getRowDimension();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]          nRows    =    matrix.getRowDimension();    nRows  =  matrix.getRowDimension();  nRows  =  matrix.getColumnDimension();  nRows  =  matrix.getRowDimension();  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	                nRows        =        matrix.getRowDimension();        nRows    =    matrix.getRowDimension();    nRows  =  matrix.getColumnDimension();  nRows  =  matrix.getRowDimension();	  	compilable	  [FE]  AssertionFailedError  	24	2	add
177	[BUG]  [BUGGY]  if(nRows  >  0)  {  If  (nRows  <  0  ||  nCols  <  1)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if(nRows  >  0)  {  If  (nRows  <  0  ||  nCols  <  1)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if(nRows  >  0)  {  If  (nRows  <  0  ||  nCols  <  1)  {	  if    (nRows    <    0    ||    nCols    <    1)    {    If    (nRows    <    0    ||    nCols    <    1)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
178	[BUG]  [BUGGY]  int  nRows  =  matrix.getRowDimension(renderingContext,  0);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nRows  =  matrix.getRowDimension(renderingContext,  0);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nRows  =  matrix.getRowDimension(renderingContext,  0);	  int    nRows    =    matrix.getRowDimension(renderingContext,    nCols);    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
179	[BUG]  [BUGGY]  int  nRows  =  matrix.getRowDimension(margin,  nCols);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  int  nRows  =  matrix.getRowDimension(margin,  nCols);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	int  nRows  =  matrix.getRowDimension(margin,  nCols);	  int    nRows    =    matrix.getRowDimension(renderingContext,    nCols);    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
180	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if(nRows  >  0  ||  nCols  >=  0)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	add	if(nRows  >  0  ||  nCols  >=  0)  {	  if    (nRows    >    0    ||    nCols    >    0)    {    	compilable	  [FE]  MathRuntimeException$4  	53	11	replace
181	[BUG]  [BUGGY]  if(nRows  >  0  ||  nCols  >=  0)  {  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if(nRows  >  0  ||  nCols  >=  0)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if(nRows  >  0  ||  nCols  >=  0)  {	  if    (nRows    >    0    ||    nCols    >    0)    {    	compilable	  [FE]  MathRuntimeException$4  	53	11	replace
182	[BUG]  [BUGGY]  if(nCols  <  0  ||  nRows  >  0)  {  if(nCOLs  <  0  ||  nRows  >  0)  {  [CE]  reached  end  of  file  while  parsing  [FE]    MathRuntimeException$4    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if(nCols  <  0  ||  nRows  >  0)  {  if(nCOLs  <  0  ||  nRows  >  0)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if(nCols    <    0    ||    nRows    >    0)    {    if(nCOLs  <  0  ||  nRows  >  0)  {	  	non-compiled	[CE]  reached  end  of  file  while  parsing	36	None	add
183	[BUG]  [BUGGY]  nRows  =  matrix.getRowDimension(nObs);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  nRows  =  matrix.getRowDimension(nObs);  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	nRows  =  matrix.getRowDimension(nObs);	  nRows    =    matrix.getRowDimension(nCols);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
184	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    AssertionFailedError    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  >  0  ||  nCols  >  2)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	add	if  (nRows  >  0  ||  nCols  >  2)  {	  if    (nRows    <    0    ||    nCols    >    2)    {    	compilable	  [FE]  MathRuntimeException$4  	11	11	replace
185	[BUG]  [BUGGY]  if  (nRows  >  0  ||  nCols  >  2)  {  [FE]  MathRuntimeException$4  [FE]    AssertionFailedError    [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  if  (nRows  >  0  ||  nCols  >  2)  {  [BUGGY]      throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	if  (nRows  >  0  ||  nCols  >  2)  {	  if    (nRows    <    0    ||    nCols    >    2)    {    	compilable	  [FE]  MathRuntimeException$4  	11	11	replace
186	[BUG]  [BUGGY]  nRows  =  matrix.getRowDimension()  *  nVars;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  checkSufficientData(final  RealMatrix  matrix)  {  int  nRows  =  matrix.getRowDimension();  int  nCols  =  matrix.getColumnDimension();      [BUGGY]  nRows  =  matrix.getRowDimension()  *  nVars;  [BUGGY]      if  (nRows  <  2  ||  nCols  <  2)  {  throw  MathRuntimeException.createIllegalArgumentException(       "insufficient  data:  only  {0}  rows  and  {1}  columns.     ",  nRows,  nCols);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  checkSufficientData  [RETURN_TYPE]  void  RealMatrix  matrix  [VARIABLES]  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  int  i  j  nCols  nObs  nRows  nVars  numberOfObservations  boolean  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	275	275	2	replace	nRows  =  matrix.getRowDimension()  *  nVars;	  nRows    =    matrix.getRowDimension()    *    nCols;    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
