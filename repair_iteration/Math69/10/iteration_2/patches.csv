bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  i  +  1);  double  r  =  correlationMatrix.getEntry(j,  i  +  1);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  i  +  1);  double  r  =  correlationMatrix.getEntry(j,  i  +  1);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double    r    =    correlationMatrix.getEntry(j,    i    +    1);    double  r  =  correlationMatrix.getEntry(j,  i  +  1);	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	20	None	add
2	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  i  +  1);  Double  r  =  correlationMatrix.getEntry(j,  i  +  1);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  i  +  1);  Double  r  =  correlationMatrix.getEntry(j,  i  +  1);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double    r    =    correlationMatrix.getEntry(j,    i    +    1);    Double  r  =  correlationMatrix.getEntry(j,  i  +  1);	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	20	None	add
3	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  i  +  1);  double  r  =  covarianceMatrix.getEntry(j,  i  +  1);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  i  +  1);  double  r  =  covarianceMatrix.getEntry(j,  i  +  1);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double    r    =    correlationMatrix.getEntry(j,    i    +    1);    double  r  =  covarianceMatrix.getEntry(j,  i  +  1);	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	20	None	add
4	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  i  +  1);  int  r  =  correlationMatrix.getEntry(j,  i  +  1);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]          AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  i  +  1);  int  r  =  correlationMatrix.getEntry(j,  i  +  1);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double    r    =    correlationMatrix.getEntry(j,    i    +    1);    int  r  =  correlationMatrix.getEntry(j,  i  +  1);	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	20	None	add
5	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  i  +  1);  double  r  =  dataMatrix.getEntry(j,  i  +  1);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]            AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  i  +  1);  double  r  =  dataMatrix.getEntry(j,  i  +  1);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double    r    =    correlationMatrix.getEntry(j,    i    +    1);    double  r  =  dataMatrix.getEntry(j,  i  +  1);	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	20	None	add
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  Double  r  =  correlationMatrix.getEntry(j,  i);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	add	Double  r  =  correlationMatrix.getEntry(j,  i);	  double    r    =    correlationMatrix.getEntry(j,    i);    Double    r    =    correlationMatrix.getEntry(j,    i);    	compilable	  [FE]  AssertionFailedError  	2	2	replace
7	[BUG]  [BUGGY]  Double  r  =  correlationMatrix.getEntry(j,  i);  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  Double  r  =  correlationMatrix.getEntry(j,  i);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	Double  r  =  correlationMatrix.getEntry(j,  i);	  double    r    =    correlationMatrix.getEntry(j,    i);    Double    r    =    correlationMatrix.getEntry(j,    i);    	compilable	  [FE]  AssertionFailedError  	2	2	replace
8	[BUG]  [BUGGY]  Double  r  =  covarianceMatrix.getEntry(j,  i);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  Double  r  =  covarianceMatrix.getEntry(j,  i);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	Double  r  =  covarianceMatrix.getEntry(j,  i);	  double    r    =    correlationMatrix.getEntry(j,    i);    Double    r    =    correlationMatrix.getEntry(j,    i);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	2	None	replace
9	[BUG]  [BUGGY]  [FE]  MatrixIndexException  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  nVars);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	add	double  r  =  correlationMatrix.getEntry(j,  nVars);	  double    r    =    correlationMatrix.getEntry(j,    i);    double    r    =    covarianceMatrix.getEntry(j,    i);    	compilable	  [FE]  MatrixIndexException  	3	7	replace
10	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  nVars);  [FE]  MatrixIndexException  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  nVars);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(j,  nVars);	  double    r    =    correlationMatrix.getEntry(j,    i);    double    r    =    covarianceMatrix.getEntry(j,    i);    	compilable	  [FE]  MatrixIndexException  	3	7	replace
11	[BUG]  [BUGGY]  double  r  =  dataMatrix.getEntry(j,  i);  [CE]  cannot  find  symbol  dataMatrix  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  dataMatrix.getEntry(j,  i);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  dataMatrix.getEntry(j,  i);	  double    r    =    correlationMatrix.getEntry(j,    i);    double    r    =    covarianceMatrix.getEntry(j,    i);    	non-compiled	[CE]  cannot  find  symbol  dataMatrix	3	None	replace
12	[BUG]  [BUGGY]  double  r  =  covarianceMatrix.getEntry(i,  j  -  1);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  covarianceMatrix.getEntry(i,  j  -  1);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  covarianceMatrix.getEntry(i,  j  -  1);	  double    r    =    correlationMatrix.getEntry(i,    j    -    1);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	73	None	replace
13	[BUG]  [BUGGY]  [FE]  MatrixIndexException  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  -  2);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	add	double  r  =  correlationMatrix.getEntry(i,  j  -  2);	  double    r    =    correlationMatrix.getEntry(i,    j    -    1);    	compilable	  [FE]  MatrixIndexException  	73	7	replace
14	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  -  2);  [FE]  MatrixIndexException  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  -  2);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(i,  j  -  2);	  double    r    =    correlationMatrix.getEntry(i,    j    -    1);    	compilable	  [FE]  MatrixIndexException  	73	7	replace
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  i  -  1);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	add	double  r  =  correlationMatrix.getEntry(j,  i  -  1);	  double    r    =    correlationMatrix.getEntry(i,    j    -    1);    	compilable	  [FE]  AssertionFailedError  	73	6	replace
16	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  i  -  1);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  i  -  1);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(j,  i  -  1);	  double    r    =    correlationMatrix.getEntry(i,    j    -    1);    	compilable	  [FE]  AssertionFailedError  	73	6	replace
17	[BUG]  [BUGGY]  Double  r  =  correlationMatrix.getEntry(i,  j,  out);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  Double  r  =  correlationMatrix.getEntry(i,  j,  out);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	Double  r  =  correlationMatrix.getEntry(i,  j,  out);	  Double    r    =    correlationMatrix.getEntry(i,    j,    covarianceMatrix);    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	16	None	replace
18	[BUG]  [BUGGY]  Double  r  =  correlationMatrix.getEntry(i,  j,  null);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  Double  r  =  correlationMatrix.getEntry(i,  j,  null);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	Double  r  =  correlationMatrix.getEntry(i,  j,  null);	  Double    r    =    correlationMatrix.getEntry(i,    j,    covarianceMatrix);    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	16	None	replace
19	[BUG]  [BUGGY]  Double  r  =  correlationMatrix.getEntry(i,  j,  dataMatrix);  [CE]  cannot  find  symbol  dataMatrix  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  Double  r  =  correlationMatrix.getEntry(i,  j,  dataMatrix);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	Double  r  =  correlationMatrix.getEntry(i,  j,  dataMatrix);	  Double    r    =    correlationMatrix.getEntry(i,    j,    covarianceMatrix);    	non-compiled	[CE]  cannot  find  symbol  dataMatrix	16	None	replace
20	[BUG]  [BUGGY]  ((  RealMatrix)r).getEntry(i,  j);  [CE]  cannot  find  symbol  r  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  ((  RealMatrix)r).getEntry(i,  j);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	((  RealMatrix)r).getEntry(i,  j);	  ((    RealMatrix)covarianceMatrix).getEntry(i,    j);    	non-compiled	[CE]  cannot  find  symbol  r	35	None	replace
21	[BUG]  [BUGGY]  int  nObs  =  matrix.getEntryCount();  [CE]  cannot  find  symbol  matrix  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  int  nObs  =  matrix.getEntryCount();  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	int  nObs  =  matrix.getEntryCount();	  int    nObs    =    covarianceMatrix.getEntryCount();    	non-compiled	[CE]  cannot  find  symbol  matrix	38	None	replace
22	[BUG]  [BUGGY]  tDistribution.cumulativeProbability(out,  j,  nVars);  [CE]  no  suitable  method  found  for  cumulativeProbability(double[][],int,int)  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  tDistribution.cumulativeProbability(out,  j,  nVars);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	tDistribution.cumulativeProbability(out,  j,  nVars);	  tDistribution.cumulativeProbability(out,    nVars);    	non-compiled	[CE]  no  suitable  method  found  for  cumulativeProbability(double[][],int,int)	65	None	replace
23	[BUG]  [BUGGY]  tDistribution.cumulativeProbability(out,  i,  nVars);  [CE]  no  suitable  method  found  for  cumulativeProbability(double[][],int,int)  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  tDistribution.cumulativeProbability(out,  i,  nVars);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	tDistribution.cumulativeProbability(out,  i,  nVars);	  tDistribution.cumulativeProbability(out,    nVars);    	non-compiled	[CE]  no  suitable  method  found  for  cumulativeProbability(double[][],int,int)	65	None	replace
24	[BUG]  [BUGGY]  tDistribution.cumulativeProbability(j,  out,  nVars);  [CE]  no  suitable  method  found  for  cumulativeProbability(int,double[][],int)  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  tDistribution.cumulativeProbability(j,  out,  nVars);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	tDistribution.cumulativeProbability(j,  out,  nVars);	  tDistribution.cumulativeProbability(out,    nVars);    	non-compiled	[CE]  no  suitable  method  found  for  cumulativeProbability(int,double[][],int)	65	None	replace
25	[BUG]  [BUGGY]  tDistribution.cumulativeProbability(out,  nVars,  j);  [CE]  no  suitable  method  found  for  cumulativeProbability(double[][],int,int)  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  tDistribution.cumulativeProbability(out,  nVars,  j);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	tDistribution.cumulativeProbability(out,  nVars,  j);	  tDistribution.cumulativeProbability(out,    nVars);    	non-compiled	[CE]  no  suitable  method  found  for  cumulativeProbability(double[][],int,int)	65	None	replace
26	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  Math.abs(nObs  *  Math.sqrt((  nObs  -  2)/(1  -  j  *  nVars)));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	add	double  r  =  Math.abs(nObs  *  Math.sqrt((  nObs  -  2)/(1  -  j  *  nVars)));	  double    r    =    Math.abs(nObs    *    Math.sqrt((    nObs    -    2)/(1    -    n    *    j)));    	compilable	  [FE]  AssertionFailedError  	60	3	replace
27	[BUG]  [BUGGY]  double  r  =  Math.abs(nObs  *  Math.sqrt((  nObs  -  2)/(1  -  j  *  nVars)));  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  Math.abs(nObs  *  Math.sqrt((  nObs  -  2)/(1  -  j  *  nVars)));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  Math.abs(nObs  *  Math.sqrt((  nObs  -  2)/(1  -  j  *  nVars)));	  double    r    =    Math.abs(nObs    *    Math.sqrt((    nObs    -    2)/(1    -    n    *    j)));    	compilable	  [FE]  AssertionFailedError  	60	3	replace
28	[BUG]  [BUGGY]  double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));  [CE]  cannot  find  symbol  n  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));	  double    r    =    Math.abs(nObs    *    Math.sqrt((    nObs    -    2)/(1    -    n    *    j)));    	non-compiled	[CE]  cannot  find  symbol  n	60	None	replace
29	[BUG]  [BUGGY]  double  r  =  Math.abs(nobs  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));  [CE]  cannot  find  symbol  nobs  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  Math.abs(nobs  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  Math.abs(nobs  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));	  double    r    =    Math.abs(nObs    *    Math.sqrt((    nObs    -    2)/(1    -    n    *    j)));    	non-compiled	[CE]  cannot  find  symbol  nobs	60	None	replace
30	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j),  covarianceMatrix.doubleValue();  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j),  covarianceMatrix.doubleValue();  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(i,  j),  covarianceMatrix.doubleValue();	  double    r    =    correlationMatrix.getEntry(i,    j).doubleValue();    	non-compiled	[CE]  ';'  expected	75	None	replace
31	[BUG]  [BUGGY]  double  r  =  covarianceMatrix.getEntry(i,  j).doubleValue();  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  covarianceMatrix.getEntry(i,  j).doubleValue();  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  covarianceMatrix.getEntry(i,  j).doubleValue();	  double    r    =    correlationMatrix.getEntry(i,    j).doubleValue();    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	75	None	replace
32	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  i).doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  i).doubleValue();  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(j,  i).doubleValue();	  double    r    =    correlationMatrix.getEntry(i,    j).doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	75	None	replace
33	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getRowDimension();  [CE]  cannot  find  symbol  dataMatrix  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  int  nObs  =  dataMatrix.getRowDimension();  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	int  nObs  =  dataMatrix.getRowDimension();	  int    nObs    =    covarianceMatrix.getRowDimension();    	non-compiled	[CE]  cannot  find  symbol  dataMatrix	31	None	replace
34	[BUG]  [BUGGY]  int  nObs  =  matrix.getRowDimension();  [CE]  cannot  find  symbol  matrix  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  int  nObs  =  matrix.getRowDimension();  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	int  nObs  =  matrix.getRowDimension();	  int    nObs    =    covarianceMatrix.getRowDimension();    	non-compiled	[CE]  cannot  find  symbol  matrix	31	None	replace
35	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  +  3);  double  r  =  correlationMatrix.getEntry(i,  j  +  3);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]    MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  +  3);  double  r  =  correlationMatrix.getEntry(i,  j  +  3);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double    r    =    correlationMatrix.getEntry(i,    j    +    3);    double  r  =  correlationMatrix.getEntry(i,  j  +  3);	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	55	None	add
36	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  +  3);  Double  r  =  correlationMatrix.getEntry(i,  j  +  3);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]      MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  +  3);  Double  r  =  correlationMatrix.getEntry(i,  j  +  3);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double    r    =    correlationMatrix.getEntry(i,    j    +    3);    Double  r  =  correlationMatrix.getEntry(i,  j  +  3);	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	55	None	add
37	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  +  3);  double  r  =  covarianceMatrix.getEntry(i,  j  +  3);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]        MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  +  3);  double  r  =  covarianceMatrix.getEntry(i,  j  +  3);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double    r    =    correlationMatrix.getEntry(i,    j    +    3);    double  r  =  covarianceMatrix.getEntry(i,  j  +  3);	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	55	None	add
38	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  +  3);  double  r  =  dataMatrix.getEntry(i,  j  +  3);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]          MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  +  3);  double  r  =  dataMatrix.getEntry(i,  j  +  3);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double    r    =    correlationMatrix.getEntry(i,    j    +    3);    double  r  =  dataMatrix.getEntry(i,  j  +  3);	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	55	None	add
39	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  +  3);  double  r  =  comparisonMatrix.getEntry(i,  j  +  3);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]            MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  +  3);  double  r  =  comparisonMatrix.getEntry(i,  j  +  3);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double    r    =    correlationMatrix.getEntry(i,    j    +    3);    double  r  =  comparisonMatrix.getEntry(i,  j  +  3);	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	55	None	add
40	[BUG]  [BUGGY]  int  nObs  =  matrix.getColumnDimension();  [CE]  cannot  find  symbol  matrix  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  int  nObs  =  matrix.getColumnDimension();  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	int  nObs  =  matrix.getColumnDimension();	  int    nObs    =    this.covarianceMatrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol  matrix	32	None	replace
41	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  +  1,  nVars);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  +  1,  nVars);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(i,  j  +  1,  nVars);	  double    r    =    correlationMatrix.getEntry(i,    j    +    1);    double    r    =    covarianceMatrix.getEntry(i,    j    +    1);    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	45	None	replace
42	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  +  1,  nVars  +  1);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  +  1,  nVars  +  1);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(i,  j  +  1,  nVars  +  1);	  double    r    =    correlationMatrix.getEntry(i,    j    +    1);    double    r    =    covarianceMatrix.getEntry(i,    j    +    1);    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	45	None	replace
43	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j,  nObs,  nVars);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j,  nObs,  nVars);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(i,  j,  nObs,  nVars);	  double    r    =    correlationMatrix.getEntry(i,    j,    nVars,    nObs);    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	11	None	replace
44	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j,  nVars,  nObs,  numberOfObservations);  [CE]  cannot  find  symbol  numberOfObservations  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j,  nVars,  nObs,  numberOfObservations);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(i,  j,  nVars,  nObs,  numberOfObservations);	  double    r    =    correlationMatrix.getEntry(i,    j,    nVars,    nObs);    	non-compiled	[CE]  cannot  find  symbol  numberOfObservations	11	None	replace
45	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j,  nVars,  nObs,  covarianceMatrix);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j,  nVars,  nObs,  covarianceMatrix);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(i,  j,  nVars,  nObs,  covarianceMatrix);	  double    r    =    correlationMatrix.getEntry(i,    j,    nVars,    nObs);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	11	None	replace
46	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  i,  nVars,  nObs);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  i,  nVars,  nObs);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(j,  i,  nVars,  nObs);	  double    r    =    correlationMatrix.getEntry(i,    j,    nVars,    nObs);    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	11	None	replace
47	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  nObs,  j,  nVars,  numberOfObservations);  [CE]  cannot  find  symbol  numberOfObservations  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  nObs,  j,  nVars,  numberOfObservations);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(i,  nObs,  j,  nVars,  numberOfObservations);	  double    r    =    correlationMatrix.getEntry(i,    nObs,    j,    nVars);    	non-compiled	[CE]  cannot  find  symbol  numberOfObservations	58	None	replace
48	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  nObs,  nVars);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  nObs,  nVars);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(j,  nObs,  nVars);	  double    r    =    correlationMatrix.getEntry(i,    nObs,    j,    nVars);    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	58	None	replace
49	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  nVars,  j,  nObs);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  nVars,  j,  nObs);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(i,  nVars,  j,  nObs);	  double    r    =    correlationMatrix.getEntry(i,    nObs,    j,    nVars);    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	58	None	replace
50	[BUG]  [BUGGY]  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(r));  [CE]  cannot  find  symbol  r  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(r));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(r));	  double    r    =    Math.abs(nObs    *    Math.sqrt((    nObs    -    2)/(1    -    n    *    j)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(r));    	non-compiled	[CE]  cannot  find  symbol  r	61	None	replace
51	[BUG]  [BUGGY]  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(nObs));  [CE]  cannot  find  symbol  r  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(nObs));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(nObs));	  double    r    =    Math.abs(nObs    *    Math.sqrt((    nObs    -    2)/(1    -    n    *    j)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(r));    	non-compiled	[CE]  cannot  find  symbol  r	61	None	replace
52	[BUG]  [BUGGY]  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(nobs));  [CE]  cannot  find  symbol  nobs  [FE]                          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(nobs));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(nobs));	  double    r    =    Math.abs(nObs    *    Math.sqrt((    nObs    -    2)/(1    -    n    *    j)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(r));    	non-compiled	[CE]  cannot  find  symbol  nobs	61	None	replace
53	[BUG]  [BUGGY]  Double  r  =  correlationMatrix.getEntry(i,  j  +  1,  nVars);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  Double  r  =  correlationMatrix.getEntry(i,  j  +  1,  nVars);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	Double  r  =  correlationMatrix.getEntry(i,  j  +  1,  nVars);	  double    r    =    correlationMatrix.getEntry(i,    j    +    1);    Double    r    =    correlationMatrix.getEntry(i,    j    +    1);    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	44	None	replace
54	[BUG]  [BUGGY]  int  nObs  =  dataset.getEntryCount();  [CE]  cannot  find  symbol  dataset  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  int  nObs  =  dataset.getEntryCount();  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	int  nObs  =  dataset.getEntryCount();	  int    nObs    =    this.covarianceMatrix.getEntryCount();    	non-compiled	[CE]  cannot  find  symbol  dataset	40	None	replace
55	[BUG]  [BUGGY]  Double  r  =  correlationMatrix.getEntry(i,  j  +  1);  Double  r  =  correlationMatrix.getEntry(i,  j  +  1);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  Double  r  =  correlationMatrix.getEntry(i,  j  +  1);  Double  r  =  correlationMatrix.getEntry(i,  j  +  1);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	Double    r    =    correlationMatrix.getEntry(i,    j    +    1);    Double  r  =  correlationMatrix.getEntry(i,  j  +  1);	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	18	None	add
56	[BUG]  [BUGGY]  Double  r  =  correlationMatrix.getEntry(i,  j  +  1);  Double  r  =  covarianceMatrix.getEntry(i,  j  +  1);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  Double  r  =  correlationMatrix.getEntry(i,  j  +  1);  Double  r  =  covarianceMatrix.getEntry(i,  j  +  1);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	Double    r    =    correlationMatrix.getEntry(i,    j    +    1);    Double  r  =  covarianceMatrix.getEntry(i,  j  +  1);	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	18	None	add
57	[BUG]  [BUGGY]  Double  r  =  correlationMatrix.getEntry(i,  j  +  1);  double  r  =  correlationMatrix.getEntry(i,  j  +  1);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  Double  r  =  correlationMatrix.getEntry(i,  j  +  1);  double  r  =  correlationMatrix.getEntry(i,  j  +  1);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	Double    r    =    correlationMatrix.getEntry(i,    j    +    1);    double  r  =  correlationMatrix.getEntry(i,  j  +  1);	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	18	None	add
58	[BUG]  [BUGGY]  Double  r  =  correlationMatrix.getEntry(i,  j  +  1);  Double  r  =  dataMatrix.getEntry(i,  j  +  1);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]          AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  Double  r  =  correlationMatrix.getEntry(i,  j  +  1);  Double  r  =  dataMatrix.getEntry(i,  j  +  1);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	Double    r    =    correlationMatrix.getEntry(i,    j    +    1);    Double  r  =  dataMatrix.getEntry(i,  j  +  1);	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	18	None	add
59	[BUG]  [BUGGY]  Double  r  =  correlationMatrix.getEntry(i,  j  +  1);  Double  r  =  correlationMatrix.getEntry(i,  j  +  1));  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  Double  r  =  correlationMatrix.getEntry(i,  j  +  1);  Double  r  =  correlationMatrix.getEntry(i,  j  +  1));  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	Double    r    =    correlationMatrix.getEntry(i,    j    +    1);    Double  r  =  correlationMatrix.getEntry(i,  j  +  1));	  	non-compiled	[CE]  ';'  expected	18	None	add
60	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j,  out,  nVars,  nObs);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j,  out,  nVars,  nObs);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(i,  j,  out,  nVars,  nObs);	  double    r    =    correlationMatrix.getEntry(i,    j,    out,    nVars);    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	57	None	replace
61	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(out,  j,  i,  nVars);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(out,  j,  i,  nVars);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(out,  j,  i,  nVars);	  double    r    =    correlationMatrix.getEntry(i,    j,    out,    nVars);    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	57	None	replace
62	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j,  nVars,  out);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j,  nVars,  out);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(i,  j,  nVars,  out);	  double    r    =    correlationMatrix.getEntry(i,    j,    out,    nVars);    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	57	None	replace
63	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getColumnDimension();  Integer  nObs  =  correlationMatrix.getColumnDimension();  [CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  int  nObs  =  correlationMatrix.getColumnDimension();  Integer  nObs  =  correlationMatrix.getColumnDimension();  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	int  nObs  =  correlationMatrix.getColumnDimension();  Integer  nObs  =  correlationMatrix.getColumnDimension();	          int    nObs    =    correlationMatrix.getColumnDimension();    Int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()	28	None	replace
64	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getColumnDimension();  Integer  nObs  =  correlationMatrix.getColumnDimension();  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  int  nObs  =  covarianceMatrix.getColumnDimension();  Integer  nObs  =  correlationMatrix.getColumnDimension();  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	int  nObs  =  covarianceMatrix.getColumnDimension();  Integer  nObs  =  correlationMatrix.getColumnDimension();	          int    nObs    =    correlationMatrix.getColumnDimension();    Int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	28	None	replace
65	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  Integer  nObs  =  dataMatrix.getColumnDimension();  [CE]  cannot  find  symbol  dataMatrix  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  Integer  nObs  =  dataMatrix.getColumnDimension();  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	int  nObs  =  dataMatrix.getColumnDimension();  Integer  nObs  =  dataMatrix.getColumnDimension();	          int    nObs    =    correlationMatrix.getColumnDimension();    Int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol  dataMatrix	28	None	replace
66	[BUG]  [BUGGY]  Double  r  =  dataMatrix.getEntry(i,  j);  [CE]  cannot  find  symbol  dataMatrix  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  Double  r  =  dataMatrix.getEntry(i,  j);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	Double  r  =  dataMatrix.getEntry(i,  j);	  Double    r    =    covarianceMatrix.getEntry(i,    j);    	non-compiled	[CE]  cannot  find  symbol  dataMatrix	17	None	replace
67	[BUG]  [BUGGY]  Double  r  =  matrix.getEntry(i,  j);  [CE]  cannot  find  symbol  matrix  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  Double  r  =  matrix.getEntry(i,  j);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	Double  r  =  matrix.getEntry(i,  j);	  Double    r    =    covarianceMatrix.getEntry(i,    j);    	non-compiled	[CE]  cannot  find  symbol  matrix	17	None	replace
68	[BUG]  [BUGGY]  double  nObs  =  correlationMatrix.getEntry(i,  j);  [CE]  cannot  find  symbol  r  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  nObs  =  correlationMatrix.getEntry(i,  j);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  nObs  =  correlationMatrix.getEntry(i,  j);	  int    nObs    =    correlationMatrix.getEntry(i,    j);    	non-compiled	[CE]  cannot  find  symbol  r	71	None	replace
69	[BUG]  [BUGGY]  Double  nObs  =  correlationMatrix.getEntry(i,  j);  [CE]  cannot  find  symbol  r  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  Double  nObs  =  correlationMatrix.getEntry(i,  j);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	Double  nObs  =  correlationMatrix.getEntry(i,  j);	  int    nObs    =    correlationMatrix.getEntry(i,    j);    	non-compiled	[CE]  cannot  find  symbol  r	71	None	replace
70	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getEntry(i,  j);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  int  nObs  =  covarianceMatrix.getEntry(i,  j);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	int  nObs  =  covarianceMatrix.getEntry(i,  j);	  int    nObs    =    correlationMatrix.getEntry(i,    j);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	71	None	replace
71	[BUG]  [BUGGY]  float  nObs  =  correlationMatrix.getEntry(i,  j);  [CE]  possible  loss  of  precision  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  float  nObs  =  correlationMatrix.getEntry(i,  j);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	float  nObs  =  correlationMatrix.getEntry(i,  j);	  int    nObs    =    correlationMatrix.getEntry(i,    j);    	non-compiled	[CE]  possible  loss  of  precision	71	None	replace
72	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  nVars,  j,  covarianceMatrix);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  nVars,  j,  covarianceMatrix);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(i,  nVars,  j,  covarianceMatrix);	  double    r    =    correlationMatrix.getEntry(i,    nVars,    j);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	59	None	replace
73	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  nVars,  i);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  nVars,  i);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(j,  nVars,  i);	  double    r    =    correlationMatrix.getEntry(i,    nVars,    j);    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	59	None	replace
74	[BUG]  [BUGGY]  ((  RealMatrix)covarianceMatrix).getEntry(j,  i);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  ((  RealMatrix)covarianceMatrix).getEntry(j,  i);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	((  RealMatrix)covarianceMatrix).getEntry(j,  i);	  ((    RealMatrix)relativeMatrix).getEntry(j,    i);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	74	None	replace
75	[BUG]  [BUGGY]  ((  RealMatrix)correlationMatrix).getEntry(j,  j);  [CE]  cannot  find  symbol  r  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  ((  RealMatrix)correlationMatrix).getEntry(j,  j);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	((  RealMatrix)correlationMatrix).getEntry(j,  j);	  ((    RealMatrix)relativeMatrix).getEntry(j,    i);    	non-compiled	[CE]  cannot  find  symbol  r	74	None	replace
76	[BUG]  [BUGGY]  ((  RealMatrix)correlationMatrix).getEntry(j,  i);  [CE]  cannot  find  symbol  r  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  ((  RealMatrix)correlationMatrix).getEntry(j,  i);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	((  RealMatrix)correlationMatrix).getEntry(j,  i);	  ((    RealMatrix)relativeMatrix).getEntry(j,    i);    	non-compiled	[CE]  cannot  find  symbol  r	74	None	replace
77	[BUG]  [BUGGY]  tDistribution.cumulativeProbability(out,  matrix);  [CE]  cannot  find  symbol  matrix  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  tDistribution.cumulativeProbability(out,  matrix);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	tDistribution.cumulativeProbability(out,  matrix);	  tDistribution.cumulativeProbability(out,    covarianceMatrix);    	non-compiled	[CE]  cannot  find  symbol  matrix	64	None	replace
78	[BUG]  [BUGGY]  [FE]  MatrixIndexException  [FE]    MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  i  +  3);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	add	double  r  =  correlationMatrix.getEntry(j,  i  +  3);	  double    r    =    correlationMatrix.getEntry(i,    j    +    3);    	compilable	  [FE]  MatrixIndexException  	56	7	replace
79	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  i  +  3);  [FE]  MatrixIndexException  [FE]    MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  i  +  3);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(j,  i  +  3);	  double    r    =    correlationMatrix.getEntry(i,    j    +    3);    	compilable	  [FE]  MatrixIndexException  	56	7	replace
80	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j)+  1;  double  r  =  correlationMatrix.getEntry(i,  j)+  1;  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j)+  1;  double  r  =  correlationMatrix.getEntry(i,  j)+  1;  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double    r    =    correlationMatrix.getEntry(i,    j)+    1;    double  r  =  correlationMatrix.getEntry(i,  j)+  1;	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	52	None	add
81	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j)+  1;  Double  r  =  correlationMatrix.getEntry(i,  j)+  1;  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j)+  1;  Double  r  =  correlationMatrix.getEntry(i,  j)+  1;  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double    r    =    correlationMatrix.getEntry(i,    j)+    1;    Double  r  =  correlationMatrix.getEntry(i,  j)+  1;	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	52	None	add
82	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j)+  1;  double  r  =  covarianceMatrix.getEntry(i,  j)+  1;  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j)+  1;  double  r  =  covarianceMatrix.getEntry(i,  j)+  1;  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double    r    =    correlationMatrix.getEntry(i,    j)+    1;    double  r  =  covarianceMatrix.getEntry(i,  j)+  1;	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	52	None	add
83	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j)+  1;  int  r  =  correlationMatrix.getEntry(i,  j)+  1;  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]          AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j)+  1;  int  r  =  correlationMatrix.getEntry(i,  j)+  1;  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double    r    =    correlationMatrix.getEntry(i,    j)+    1;    int  r  =  correlationMatrix.getEntry(i,  j)+  1;	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	52	None	add
84	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j)+  1;  double  r  =  dataMatrix.getEntry(i,  j)+  1;  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]            AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j)+  1;  double  r  =  dataMatrix.getEntry(i,  j)+  1;  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double    r    =    correlationMatrix.getEntry(i,    j)+    1;    double  r  =  dataMatrix.getEntry(i,  j)+  1;	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	52	None	add
85	[BUG]  [BUGGY]  ((  RealMatrix)covarianceMatrix).getEntry(i,  out);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  ((  RealMatrix)covarianceMatrix).getEntry(i,  out);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	((  RealMatrix)covarianceMatrix).getEntry(i,  out);	  ((    RealMatrix)relativeMatrix).getEntry(i,    out);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	66	None	replace
86	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(j,  out);  [CE]  cannot  find  symbol  relativeMatrix  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(j,  out);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	((  RealMatrix)relativeMatrix).getEntry(j,  out);	  ((    RealMatrix)relativeMatrix).getEntry(i,    out);    	non-compiled	[CE]  cannot  find  symbol  relativeMatrix	66	None	replace
87	[BUG]  [BUGGY]  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CE]  cannot  find  symbol  r  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  Math.abs(nObs    *    Math.sqrt((nObs    -    2)/(1    -    n    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  cannot  find  symbol  r	9	None	replace
88	[BUG]  [BUGGY]  Math.abs(nObs  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CE]  cannot  find  symbol  n  [FE]                          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  Math.abs(nObs  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	Math.abs(nObs  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  Math.abs(nObs    *    Math.sqrt((nObs    -    2)/(1    -    n    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  cannot  find  symbol  n	9	None	replace
89	[BUG]  [BUGGY]  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CE]  cannot  find  symbol  t  [FE]                            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  Math.abs(nObs    *    Math.sqrt((nObs    -    2)/(1    -    n    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  cannot  find  symbol  t	9	None	replace
90	[BUG]  [BUGGY]  Matrix.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CE]  cannot  find  symbol  r  [FE]                              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  Matrix.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	Matrix.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  Math.abs(nObs    *    Math.sqrt((nObs    -    2)/(1    -    n    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  cannot  find  symbol  r	9	None	replace
91	[BUG]  [BUGGY]  int  r  =  correlationMatrix.getEntry(i,  j  +  1);  [CE]  possible  loss  of  precision  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  int  r  =  correlationMatrix.getEntry(i,  j  +  1);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	int  r  =  correlationMatrix.getEntry(i,  j  +  1);	  double    r    =    correlationMatrix.getEntry(i,    j    +    1);    int    r    =    correlationMatrix.getEntry(i,    j    +    1);    	non-compiled	[CE]  possible  loss  of  precision	46	None	replace
92	[BUG]  [BUGGY]  int  r  =  correlationMatrix.getEntry(i,  j  +  1,  nVars);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  int  r  =  correlationMatrix.getEntry(i,  j  +  1,  nVars);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	int  r  =  correlationMatrix.getEntry(i,  j  +  1,  nVars);	  double    r    =    correlationMatrix.getEntry(i,    j    +    1);    int    r    =    correlationMatrix.getEntry(i,    j    +    1);    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	46	None	replace
93	[BUG]  [BUGGY]  Integer  r  =  correlationMatrix.getEntry(i,  j  +  1);  [CE]  incompatible  types  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  Integer  r  =  correlationMatrix.getEntry(i,  j  +  1);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	Integer  r  =  correlationMatrix.getEntry(i,  j  +  1);	  double    r    =    correlationMatrix.getEntry(i,    j    +    1);    int    r    =    correlationMatrix.getEntry(i,    j    +    1);    	non-compiled	[CE]  incompatible  types	46	None	replace
94	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  +  2);  double  r  =  correlationMatrix.getEntry(i,  j  +  2);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]    MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  +  2);  double  r  =  correlationMatrix.getEntry(i,  j  +  2);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double    r    =    correlationMatrix.getEntry(i,    j    +    2);    double  r  =  correlationMatrix.getEntry(i,  j  +  2);	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	23	None	add
95	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  +  2);  Double  r  =  correlationMatrix.getEntry(i,  j  +  2);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]      MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  +  2);  Double  r  =  correlationMatrix.getEntry(i,  j  +  2);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double    r    =    correlationMatrix.getEntry(i,    j    +    2);    Double  r  =  correlationMatrix.getEntry(i,  j  +  2);	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	23	None	add
96	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  +  2);  double  r  =  covarianceMatrix.getEntry(i,  j  +  2);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]        MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  +  2);  double  r  =  covarianceMatrix.getEntry(i,  j  +  2);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double    r    =    correlationMatrix.getEntry(i,    j    +    2);    double  r  =  covarianceMatrix.getEntry(i,  j  +  2);	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	23	None	add
97	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  +  2);  double  r  =  dataMatrix.getEntry(i,  j  +  2);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]          MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  +  2);  double  r  =  dataMatrix.getEntry(i,  j  +  2);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double    r    =    correlationMatrix.getEntry(i,    j    +    2);    double  r  =  dataMatrix.getEntry(i,  j  +  2);	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	23	None	add
98	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  +  2);  double  r  =  comparisonMatrix.getEntry(i,  j  +  2);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]            MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  +  2);  double  r  =  comparisonMatrix.getEntry(i,  j  +  2);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double    r    =    correlationMatrix.getEntry(i,    j    +    2);    double  r  =  comparisonMatrix.getEntry(i,  j  +  2);	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	23	None	add
99	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  +  1,  j);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  +  1,  j);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(i,  j  +  1,  j);	  double    r    =    correlationMatrix.getEntry(i,    j    +    1);    double    r    =    correlationMatrix.getEntry(i,    j    +    1);    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	43	None	replace
100	[BUG]  [BUGGY]  tDistribution.cumulativeProbability(j,  out[i][j]);  [CE]  cannot  find  symbol  r  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  tDistribution.cumulativeProbability(j,  out[i][j]);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	tDistribution.cumulativeProbability(j,  out[i][j]);	  tDistribution.cumulativeProbability(j,    out);    	non-compiled	[CE]  cannot  find  symbol  r	50	None	replace
101	[BUG]  [BUGGY]  tDistribution.cumulativeProbability(j,  out,  i);  [CE]  no  suitable  method  found  for  cumulativeProbability(int,double[][],int)  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  tDistribution.cumulativeProbability(j,  out,  i);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	tDistribution.cumulativeProbability(j,  out,  i);	  tDistribution.cumulativeProbability(j,    out);    	non-compiled	[CE]  no  suitable  method  found  for  cumulativeProbability(int,double[][],int)	50	None	replace
102	[BUG]  [BUGGY]  Double  r  =  correlationMatrix.getEntry(i,  j,  nVars,  nObs);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  Double  r  =  correlationMatrix.getEntry(i,  j,  nVars,  nObs);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	Double  r  =  correlationMatrix.getEntry(i,  j,  nVars,  nObs);	  double    r    =    correlationMatrix.getEntry(i,    j,    nVars,    numberOfObservations);    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	13	None	replace
103	[BUG]  [BUGGY]  [FE]  MatrixIndexException  [FE]    MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  i  +  2);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	add	double  r  =  correlationMatrix.getEntry(j,  i  +  2);	  double    r    =    correlationMatrix.getEntry(i,    j    +    2);    	compilable	  [FE]  MatrixIndexException  	24	7	replace
104	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  i  +  2);  [FE]  MatrixIndexException  [FE]    MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  i  +  2);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(j,  i  +  2);	  double    r    =    correlationMatrix.getEntry(i,    j    +    2);    	compilable	  [FE]  MatrixIndexException  	24	7	replace
105	[BUG]  [BUGGY]  [FE]  MatrixIndexException  [FE]      MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  *  2);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	add	double  r  =  correlationMatrix.getEntry(i,  j  *  2);	  double    r    =    correlationMatrix.getEntry(i,    j    +    2);    	compilable	  [FE]  MatrixIndexException  	24	7	replace
106	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  *  2);  [FE]  MatrixIndexException  [FE]      MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  *  2);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(i,  j  *  2);	  double    r    =    correlationMatrix.getEntry(i,    j    +    2);    	compilable	  [FE]  MatrixIndexException  	24	7	replace
107	[BUG]  [BUGGY]  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(nObs));  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(nObs));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(nObs));	  double    r    =    Math.abs(nObs    *    Math.sqrt((nObs    -    2)/(1    -    n    *    r)));    out[i][j]    =    2    *    1    -    tDistribution.cumulativeProbability(r));    	non-compiled	[CE]  ';'  expected	10	None	replace
108	[BUG]  [BUGGY]  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  n)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(r));  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  n)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(r));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	r  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  n)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(r));	  double    r    =    Math.abs(nObs    *    Math.sqrt((nObs    -    2)/(1    -    n    *    r)));    out[i][j]    =    2    *    1    -    tDistribution.cumulativeProbability(r));    	non-compiled	[CE]  ';'  expected	10	None	replace
109	[BUG]  [BUGGY]  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(nobs));  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(nobs));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(nobs));	  double    r    =    Math.abs(nObs    *    Math.sqrt((nObs    -    2)/(1    -    n    *    r)));    out[i][j]    =    2    *    1    -    tDistribution.cumulativeProbability(r));    	non-compiled	[CE]  ';'  expected	10	None	replace
110	[BUG]  [BUGGY]  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  nVars)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(r));  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  nVars)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(r));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	r  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  nVars)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(r));	  double    r    =    Math.abs(nObs    *    Math.sqrt((nObs    -    2)/(1    -    n    *    r)));    out[i][j]    =    2    *    1    -    tDistribution.cumulativeProbability(r));    	non-compiled	[CE]  ';'  expected	10	None	replace
111	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  i,  nVars,  covarianceMatrix);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  i,  nVars,  covarianceMatrix);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(j,  i,  nVars,  covarianceMatrix);	  double    r    =    correlationMatrix.getEntry(j,    i,    nVars);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	14	None	replace
112	[BUG]  [BUGGY]  double  r  =  datasetMatrix.getEntry(j,  i);  [CE]  cannot  find  symbol  datasetMatrix  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  datasetMatrix.getEntry(j,  i);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  datasetMatrix.getEntry(j,  i);	  double    r    =    correlationMatrix.getEntry(j,    i);    double    r    =    dataMatrix.getEntry(j,    i);    	non-compiled	[CE]  cannot  find  symbol  datasetMatrix	4	None	replace
113	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  -  1);  double  r  =  correlationMatrix.getEntry(i,  j  -  1);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  -  1);  double  r  =  correlationMatrix.getEntry(i,  j  -  1);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double    r    =    correlationMatrix.getEntry(i,    j    -    1);    double  r  =  correlationMatrix.getEntry(i,  j  -  1);	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	72	None	add
114	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  -  1);  Double  r  =  correlationMatrix.getEntry(i,  j  -  1);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  -  1);  Double  r  =  correlationMatrix.getEntry(i,  j  -  1);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double    r    =    correlationMatrix.getEntry(i,    j    -    1);    Double  r  =  correlationMatrix.getEntry(i,  j  -  1);	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	72	None	add
115	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  -  1);  double  r  =  covarianceMatrix.getEntry(i,  j  -  1);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  -  1);  double  r  =  covarianceMatrix.getEntry(i,  j  -  1);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double    r    =    correlationMatrix.getEntry(i,    j    -    1);    double  r  =  covarianceMatrix.getEntry(i,  j  -  1);	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	72	None	add
116	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  -  1);  int  r  =  correlationMatrix.getEntry(i,  j  -  1);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]          AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  -  1);  int  r  =  correlationMatrix.getEntry(i,  j  -  1);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double    r    =    correlationMatrix.getEntry(i,    j    -    1);    int  r  =  correlationMatrix.getEntry(i,  j  -  1);	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	72	None	add
117	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  -  1);  double  r  =  dataMatrix.getEntry(i,  j  -  1);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]            AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  -  1);  double  r  =  dataMatrix.getEntry(i,  j  -  1);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double    r    =    correlationMatrix.getEntry(i,    j    -    1);    double  r  =  dataMatrix.getEntry(i,  j  -  1);	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	72	None	add
118	[BUG]  [BUGGY]  double  r  =  Math.abs(nObs  *  Math.sqrt((  nObs  -  2)/(1  -  j  *  r)));  [CE]  variable  r  might  not  have  been  initialized  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  Math.abs(nObs  *  Math.sqrt((  nObs  -  2)/(1  -  j  *  r)));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  Math.abs(nObs  *  Math.sqrt((  nObs  -  2)/(1  -  j  *  r)));	  double    r    =    Math.abs(nObs    *    Math.sqrt((nObs    -    2)/(1    -    n    *    r)));    	non-compiled	[CE]  variable  r  might  not  have  been  initialized	7	None	replace
119	[BUG]  [BUGGY]  double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  n)));  [CE]  cannot  find  symbol  n  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  n)));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  n)));	  double    r    =    Math.abs(nObs    *    Math.sqrt((nObs    -    2)/(1    -    n    *    r)));    	non-compiled	[CE]  cannot  find  symbol  n	7	None	replace
120	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getEntryDimension();  [CE]  cannot  find  symbol  covarianceMatrix  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  int  nObs  =  covarianceMatrix.getEntryDimension();  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	int  nObs  =  covarianceMatrix.getEntryDimension();	  int    nObs    =    correlationMatrix.getEntryDimension();    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	70	None	replace
121	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getEntryDimension();  [CE]  cannot  find  symbol  dataMatrix  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  int  nObs  =  dataMatrix.getEntryDimension();  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	int  nObs  =  dataMatrix.getEntryDimension();	  int    nObs    =    correlationMatrix.getEntryDimension();    	non-compiled	[CE]  cannot  find  symbol  dataMatrix	70	None	replace
122	[BUG]  [BUGGY]  int  nObs  =  this.covarianceMatrix.getEntryDimension();  [CE]  cannot  find  symbol  covarianceMatrix  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  int  nObs  =  this.covarianceMatrix.getEntryDimension();  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	int  nObs  =  this.covarianceMatrix.getEntryDimension();	  int    nObs    =    correlationMatrix.getEntryDimension();    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	70	None	replace
123	[BUG]  [BUGGY]  double  r  =  matrix.getEntry(i,  j  +  1);  [CE]  cannot  find  symbol  matrix  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  matrix.getEntry(i,  j  +  1);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  matrix.getEntry(i,  j  +  1);	  double    r    =    covarianceMatrix.getEntry(i,    j    +    1);    	non-compiled	[CE]  cannot  find  symbol  matrix	22	None	replace
124	[BUG]  [BUGGY]  double  r  =  dataMatrix.getEntry(i,  j  +  1);  [CE]  cannot  find  symbol  dataMatrix  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  dataMatrix.getEntry(i,  j  +  1);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  dataMatrix.getEntry(i,  j  +  1);	  double    r    =    covarianceMatrix.getEntry(i,    j    +    1);    	non-compiled	[CE]  cannot  find  symbol  dataMatrix	22	None	replace
125	[BUG]  [BUGGY]  tDistribution.cumulativeProbability(i,  out);  [CE]  no  suitable  method  found  for  cumulativeProbability(int,double[][])  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  tDistribution.cumulativeProbability(i,  out);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	tDistribution.cumulativeProbability(i,  out);	  tDistribution.cumulativeProbability(t,    out);    	non-compiled	[CE]  no  suitable  method  found  for  cumulativeProbability(int,double[][])	51	None	replace
126	[BUG]  [BUGGY]  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(n));  [CE]  cannot  find  symbol  n  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(n));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(n));	  double    r    =    Math.abs(nObs    *    Math.sqrt((nObs    -    2)/(1    -    n    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(r));    	non-compiled	[CE]  cannot  find  symbol  n	8	None	replace
127	[BUG]  [BUGGY]  double  r  =  matrix.getEntry(j,  i);  [CE]  cannot  find  symbol  matrix  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  matrix.getEntry(j,  i);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  matrix.getEntry(j,  i);	  double    r    =    covarianceMatrix.getEntry(j,    i);    	non-compiled	[CE]  cannot  find  symbol  matrix	41	None	replace
128	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j)/  1;  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	add	double  r  =  correlationMatrix.getEntry(i,  j)/  1;	  double    r    =    correlationMatrix.getEntry(i,    j)+    1;    	compilable	  [FE]  AssertionFailedError  	53	2	replace
129	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j)/  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j)/  1;  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(i,  j)/  1;	  double    r    =    correlationMatrix.getEntry(i,    j)+    1;    	compilable	  [FE]  AssertionFailedError  	53	2	replace
130	[BUG]  [BUGGY]  double  r  =  covarianceMatrix.getEntry(i,  j)+  1;  [CE]  cannot  find  symbol  covarianceMatrix  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  covarianceMatrix.getEntry(i,  j)+  1;  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  covarianceMatrix.getEntry(i,  j)+  1;	  double    r    =    correlationMatrix.getEntry(i,    j)+    1;    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	53	None	replace
131	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j)+  2;  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	add	double  r  =  correlationMatrix.getEntry(i,  j)+  2;	  double    r    =    correlationMatrix.getEntry(i,    j)+    1;    	compilable	  [FE]  AssertionFailedError  	53	3	replace
132	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j)+  2;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j)+  2;  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(i,  j)+  2;	  double    r    =    correlationMatrix.getEntry(i,    j)+    1;    	compilable	  [FE]  AssertionFailedError  	53	3	replace
133	[BUG]  [BUGGY]  int  nObs  =  datasetMatrix.getColumnDimension();  [CE]  cannot  find  symbol  datasetMatrix  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  int  nObs  =  datasetMatrix.getColumnDimension();  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	int  nObs  =  datasetMatrix.getColumnDimension();	  int    nObs    =    dataMatrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol  datasetMatrix	54	None	replace
134	[BUG]  [BUGGY]  tDistribution.cumulativeProbability(out,  j,  i);  [CE]  no  suitable  method  found  for  cumulativeProbability(double[][],int,int)  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  tDistribution.cumulativeProbability(out,  j,  i);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	tDistribution.cumulativeProbability(out,  j,  i);	  tDistribution.cumulativeProbability(out,    j);    	non-compiled	[CE]  no  suitable  method  found  for  cumulativeProbability(double[][],int,int)	48	None	replace
135	[BUG]  [BUGGY]  tDistribution.cumulativeProbability(out,  j,  covarianceMatrix);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  tDistribution.cumulativeProbability(out,  j,  covarianceMatrix);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	tDistribution.cumulativeProbability(out,  j,  covarianceMatrix);	  tDistribution.cumulativeProbability(out,    j);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	48	None	replace
136	[BUG]  [BUGGY]  tDistribution.cumulativeProbability(out,  i,  j);  [CE]  no  suitable  method  found  for  cumulativeProbability(double[][],int,int)  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  tDistribution.cumulativeProbability(out,  i,  j);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	tDistribution.cumulativeProbability(out,  i,  j);	  tDistribution.cumulativeProbability(out,    j);    	non-compiled	[CE]  no  suitable  method  found  for  cumulativeProbability(double[][],int,int)	48	None	replace
137	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(i,  j,  out);  [CE]  cannot  find  symbol  relativeMatrix  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(i,  j,  out);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	((  RealMatrix)relativeMatrix).getEntry(i,  j,  out);	  ((    RealMatrix)relativeMatrix).getEntry(i,    j,    covarianceMatrix);    	non-compiled	[CE]  cannot  find  symbol  relativeMatrix	37	None	replace
138	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(i,  j,  out[j]);  [CE]  cannot  find  symbol  relativeMatrix  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(i,  j,  out[j]);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	((  RealMatrix)relativeMatrix).getEntry(i,  j,  out[j]);	  ((    RealMatrix)relativeMatrix).getEntry(i,    j,    covarianceMatrix);    	non-compiled	[CE]  cannot  find  symbol  relativeMatrix	37	None	replace
139	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(i,  j,  nVars);  [CE]  cannot  find  symbol  relativeMatrix  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(i,  j,  nVars);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	((  RealMatrix)relativeMatrix).getEntry(i,  j,  nVars);	  ((    RealMatrix)relativeMatrix).getEntry(i,    j,    covarianceMatrix);    	non-compiled	[CE]  cannot  find  symbol  relativeMatrix	37	None	replace
140	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(i,  j,  dataMatrix);  [CE]  cannot  find  symbol  dataMatrix  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(i,  j,  dataMatrix);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	((  RealMatrix)relativeMatrix).getEntry(i,  j,  dataMatrix);	  ((    RealMatrix)relativeMatrix).getEntry(i,    j,    covarianceMatrix);    	non-compiled	[CE]  cannot  find  symbol  dataMatrix	37	None	replace
141	[BUG]  [BUGGY]  double  r  =  comparisonMatrix.getEntry(j,  i);  [CE]  cannot  find  symbol  comparisonMatrix  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  comparisonMatrix.getEntry(j,  i);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  comparisonMatrix.getEntry(j,  i);	  double    r    =    correlationMatrix.getEntry(j,    i);    double    r    =    comparisonMatrix.getEntry(j,    i);    	non-compiled	[CE]  cannot  find  symbol  comparisonMatrix	5	None	replace
142	[BUG]  [BUGGY]  double  r  =  Math.abs(len  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));  [CE]  cannot  find  symbol  len  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  Math.abs(len  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  Math.abs(len  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));	  double    r    =    Math.abs(relativeProbability    *    Math.sqrt((    nObs    -    2)/(1    -    n    *    j)));    	non-compiled	[CE]  cannot  find  symbol  len	68	None	replace
143	[BUG]  [BUGGY]  double  r  =  Math.abs(l  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));  [CE]  cannot  find  symbol  l  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  Math.abs(l  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  Math.abs(l  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));	  double    r    =    Math.abs(relativeProbability    *    Math.sqrt((    nObs    -    2)/(1    -    n    *    j)));    	non-compiled	[CE]  cannot  find  symbol  l	68	None	replace
144	[BUG]  [BUGGY]  [FE]  MatrixIndexException  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  Double  r  =  correlationMatrix.getEntry(i,  j  +  2);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	add	Double  r  =  correlationMatrix.getEntry(i,  j  +  2);	  Double    r    =    correlationMatrix.getEntry(i,    j    +    1);    	compilable	  [FE]  MatrixIndexException  	19	7	replace
145	[BUG]  [BUGGY]  Double  r  =  correlationMatrix.getEntry(i,  j  +  2);  [FE]  MatrixIndexException  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  Double  r  =  correlationMatrix.getEntry(i,  j  +  2);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	Double  r  =  correlationMatrix.getEntry(i,  j  +  2);	  Double    r    =    correlationMatrix.getEntry(i,    j    +    1);    	compilable	  [FE]  MatrixIndexException  	19	7	replace
146	[BUG]  [BUGGY]  Double  r  =  covarianceMatrix.getEntry(i,  j  +  1);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  Double  r  =  covarianceMatrix.getEntry(i,  j  +  1);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	Double  r  =  covarianceMatrix.getEntry(i,  j  +  1);	  Double    r    =    correlationMatrix.getEntry(i,    j    +    1);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	19	None	replace
147	[BUG]  [BUGGY]  Double  r  =  correlationMatrix.getEntry(i,  j,  nVars,  covarianceMatrix);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  Double  r  =  correlationMatrix.getEntry(i,  j,  nVars,  covarianceMatrix);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	Double  r  =  correlationMatrix.getEntry(i,  j,  nVars,  covarianceMatrix);	  Double    r    =    correlationMatrix.getEntry(i,    j,    nVars);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	15	None	replace
148	[BUG]  [BUGGY]  Double  r  =  correlationMatrix.getEntry(i,  j,  covarianceMatrix,  nVars);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  Double  r  =  correlationMatrix.getEntry(i,  j,  covarianceMatrix,  nVars);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	Double  r  =  correlationMatrix.getEntry(i,  j,  covarianceMatrix,  nVars);	  Double    r    =    correlationMatrix.getEntry(i,    j,    nVars);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	15	None	replace
149	[BUG]  [BUGGY]  Double  r  =  correlationMatrix.getEntry(j,  i,  nVars);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  Double  r  =  correlationMatrix.getEntry(j,  i,  nVars);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	Double  r  =  correlationMatrix.getEntry(j,  i,  nVars);	  Double    r    =    correlationMatrix.getEntry(i,    j,    nVars);    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	15	None	replace
150	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  +  1));  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  +  1));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(i,  j  +  1));	  double    r    =    correlationMatrix.getEntry(i,    j    +    1);    double    r    =    correlationMatrix.getEntry(i,    j    +    1));    	non-compiled	[CE]  ';'  expected	47	None	replace
151	[BUG]  [BUGGY]  double  r  =  covarianceMatrix.getEntry(i,  j  +  1));  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  covarianceMatrix.getEntry(i,  j  +  1));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  covarianceMatrix.getEntry(i,  j  +  1));	  double    r    =    correlationMatrix.getEntry(i,    j    +    1);    double    r    =    correlationMatrix.getEntry(i,    j    +    1));    	non-compiled	[CE]  ';'  expected	47	None	replace
152	[BUG]  [BUGGY]  double  r  =  Math.abs(i  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));  [CE]  cannot  find  symbol  n  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  Math.abs(i  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  Math.abs(i  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));	  double    r    =    Math.abs(i    *    Math.sqrt((    nObs    -    2)/(1    -    n    *    r)));    	non-compiled	[CE]  cannot  find  symbol  n	69	None	replace
153	[BUG]  [BUGGY]  double  r  =  Math.abs(j  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  [CE]  cannot  find  symbol  n  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  Math.abs(j  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  Math.abs(j  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));	  double    r    =    Math.abs(i    *    Math.sqrt((    nObs    -    2)/(1    -    n    *    r)));    	non-compiled	[CE]  cannot  find  symbol  n	69	None	replace
154	[BUG]  [BUGGY]  double  r  =  Math.abs(i  *  Math.sqrt((  nObs  -  2)/(1  -  j  *  r)));  [CE]  variable  r  might  not  have  been  initialized  [FE]                          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  Math.abs(i  *  Math.sqrt((  nObs  -  2)/(1  -  j  *  r)));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  Math.abs(i  *  Math.sqrt((  nObs  -  2)/(1  -  j  *  r)));	  double    r    =    Math.abs(i    *    Math.sqrt((    nObs    -    2)/(1    -    n    *    r)));    	non-compiled	[CE]  variable  r  might  not  have  been  initialized	69	None	replace
155	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j,  nVars,  null);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j,  nVars,  null);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(i,  j,  nVars,  null);	  double    r    =    correlationMatrix.getEntry(i,    j,    nVars,    covarianceMatrix);    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	12	None	replace
156	[BUG]  [BUGGY]  double  r  =  this.covarianceMatrix.getEntry(j,  i  +  1);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  this.covarianceMatrix.getEntry(j,  i  +  1);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  this.covarianceMatrix.getEntry(j,  i  +  1);	  double    r    =    this.covarianceMatrix.getEntry(j,    i);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	42	None	replace
157	[BUG]  [BUGGY]  ((  RealMatrix)relationMatrix).getEntry(i,  j);  [CE]  cannot  find  symbol  relationMatrix  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  ((  RealMatrix)relationMatrix).getEntry(i,  j);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	((  RealMatrix)relationMatrix).getEntry(i,  j);	  ((    RealMatrix)correlationMatrix).getEntry(i,    j);    	non-compiled	[CE]  cannot  find  symbol  relationMatrix	36	None	replace
158	[BUG]  [BUGGY]  ((  RealMatrix)correlationMatrix).getEntry(i,  out[j]);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  ((  RealMatrix)correlationMatrix).getEntry(i,  out[j]);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	((  RealMatrix)correlationMatrix).getEntry(i,  out[j]);	  ((    RealMatrix)correlationMatrix).getEntry(i,    j);    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	36	None	replace
159	[BUG]  [BUGGY]  int  nObs  =  dataset.getColumnDimension();  [CE]  cannot  find  symbol  dataset  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  int  nObs  =  dataset.getColumnDimension();  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	int  nObs  =  dataset.getColumnDimension();	  int    nObs    =    covarianceMatrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol  dataset	30	None	replace
160	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(nObs,  i,  nVars);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(nObs,  i,  nVars);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(nObs,  i,  nVars);	  double    r    =    correlationMatrix.getEntry(covarianceMatrix,    i,    nVars);    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	67	None	replace
161	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(matrix,  i,  nVars);  [CE]  cannot  find  symbol  matrix  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(matrix,  i,  nVars);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(matrix,  i,  nVars);	  double    r    =    correlationMatrix.getEntry(covarianceMatrix,    i,    nVars);    	non-compiled	[CE]  cannot  find  symbol  matrix	67	None	replace
162	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  nVars,  nVars);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  nVars,  nVars);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(i,  nVars,  nVars);	  double    r    =    correlationMatrix.getEntry(covarianceMatrix,    i,    nVars);    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	67	None	replace
163	[BUG]  [BUGGY]  int  nObs  =  datasetMatrix.getEntryCount();  [CE]  cannot  find  symbol  datasetMatrix  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  int  nObs  =  datasetMatrix.getEntryCount();  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	int  nObs  =  datasetMatrix.getEntryCount();	  int    nObs    =    dataMatrix.getEntryCount();    	non-compiled	[CE]  cannot  find  symbol  datasetMatrix	39	None	replace
164	[BUG]  [BUGGY]  double  r  =  covarianceMatrix.getEntry(j,  i  +  1);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  covarianceMatrix.getEntry(j,  i  +  1);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  covarianceMatrix.getEntry(j,  i  +  1);	  double    r    =    correlationMatrix.getEntry(j,    i    +    1);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	21	None	replace
165	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  i  +  1,  nVars);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  i  +  1,  nVars);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(j,  i  +  1,  nVars);	  double    r    =    correlationMatrix.getEntry(j,    i    +    1);    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	21	None	replace
166	[BUG]  [BUGGY]  double  r  =  Math.abs(nObs  *  Math.sqrt((  i  -  2)/(1  -  n  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(r));  [CE]  cannot  find  symbol  n  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  Math.abs(nObs  *  Math.sqrt((  i  -  2)/(1  -  n  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(r));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  Math.abs(nObs  *  Math.sqrt((  i  -  2)/(1  -  n  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(r));	  double    r    =    Math.abs(nObs    *    Math.sqrt((    nObs    -    2)/(1    -    n    *    j)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(r));    	non-compiled	[CE]  cannot  find  symbol  n	61	None	replace
167	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  Int  nObs  =  correlationMatrix.getColumnDimension();  [CE]  cannot  find  symbol  dataMatrix  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  Int  nObs  =  correlationMatrix.getColumnDimension();  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	int  nObs  =  dataMatrix.getColumnDimension();  Int  nObs  =  correlationMatrix.getColumnDimension();	          int    nObs    =    correlationMatrix.getColumnDimension();    Int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol  dataMatrix	28	None	replace
168	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getColumnDimension();  Int  nObs  =  correlationMatrix.getColumnDimension();  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  int  nObs  =  covarianceMatrix.getColumnDimension();  Int  nObs  =  correlationMatrix.getColumnDimension();  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	int  nObs  =  covarianceMatrix.getColumnDimension();  Int  nObs  =  correlationMatrix.getColumnDimension();	          int    nObs    =    correlationMatrix.getColumnDimension();    Int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	28	None	replace
169	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  Int  nObs  =  dataMatrix.getColumnDimension();  [CE]  cannot  find  symbol  dataMatrix  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  Int  nObs  =  dataMatrix.getColumnDimension();  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	int  nObs  =  dataMatrix.getColumnDimension();  Int  nObs  =  dataMatrix.getColumnDimension();	          int    nObs    =    correlationMatrix.getColumnDimension();    Int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol  dataMatrix	28	None	replace
170	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j),  out.doubleValue();  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j),  out.doubleValue();  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(i,  j),  out.doubleValue();	  double    r    =    correlationMatrix.getEntry(i,    j).doubleValue();    	non-compiled	[CE]  ';'  expected	75	None	replace
171	[BUG]  [BUGGY]  double  r  =  Math.abs(covarianceMatrix  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  Math.abs(covarianceMatrix  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  Math.abs(covarianceMatrix  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));	  double    r    =    Math.abs(relativeProbability    *    Math.sqrt((    nObs    -    2)/(1    -    n    *    j)));    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	68	None	replace
172	[BUG]  [BUGGY]  double  r  =  Math.abs(nObs  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  j)));  [CE]  cannot  find  symbol  n  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  Math.abs(nObs  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  j)));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  Math.abs(nObs  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  j)));	  double    r    =    Math.abs(nObs    *    Math.sqrt((    nObs    -    2)/(1    -    n    *    j)));    	non-compiled	[CE]  cannot  find  symbol  n	60	None	replace
173	[BUG]  [BUGGY]  double  r  =  Math.abs(nVars  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));  [CE]  cannot  find  symbol  n  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  Math.abs(nVars  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  Math.abs(nVars  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));	  double    r    =    Math.abs(nObs    *    Math.sqrt((    nObs    -    2)/(1    -    n    *    j)));    	non-compiled	[CE]  cannot  find  symbol  n	60	None	replace
174	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(nVars,  i,  nVars);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(nVars,  i,  nVars);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(nVars,  i,  nVars);	  double    r    =    correlationMatrix.getEntry(covarianceMatrix,    i,    nVars);    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	67	None	replace
175	[BUG]  [BUGGY]  int  nObs  =  matrix.getEntryDimension();  [CE]  cannot  find  symbol  matrix  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  int  nObs  =  matrix.getEntryDimension();  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	int  nObs  =  matrix.getEntryDimension();	  int    nObs    =    correlationMatrix.getEntryDimension();    	non-compiled	[CE]  cannot  find  symbol  matrix	70	None	replace
176	[BUG]  [BUGGY]  double  r  =  Math.abs(nObs  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(r));  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  Math.abs(nObs  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(r));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  Math.abs(nObs  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(r));	  double    r    =    Math.abs(nObs    *    Math.sqrt((nObs    -    2)/(1    -    n    *    r)));    out[i][j]    =    2    *    1    -    tDistribution.cumulativeProbability(r));    	non-compiled	[CE]  ';'  expected	10	None	replace
177	[BUG]  [BUGGY]  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(r));  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(r));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(r));	  double    r    =    Math.abs(nObs    *    Math.sqrt((nObs    -    2)/(1    -    n    *    r)));    out[i][j]    =    2    *    1    -    tDistribution.cumulativeProbability(r));    	non-compiled	[CE]  ';'  expected	10	None	replace
178	[BUG]  [BUGGY]  out[i][j]  =  2  *  Math.abs(tDistribution.cumulativeProbability(n));  [CE]  cannot  find  symbol  n  [FE]                              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  out[i][j]  =  2  *  Math.abs(tDistribution.cumulativeProbability(n));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	out[i][j]  =  2  *  Math.abs(tDistribution.cumulativeProbability(n));	  double    r    =    Math.abs(nObs    *    Math.sqrt((nObs    -    2)/(1    -    n    *    r)));    out[i][j]    =    2    *    1    -    tDistribution.cumulativeProbability(r));    	non-compiled	[CE]  cannot  find  symbol  n	10	None	replace
179	[BUG]  [BUGGY]  Double  r  =  correlationMatrix.getEntry(i,  j,  out,  nVars);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  Double  r  =  correlationMatrix.getEntry(i,  j,  out,  nVars);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	Double  r  =  correlationMatrix.getEntry(i,  j,  out,  nVars);	  Double    r    =    correlationMatrix.getEntry(i,    j,    nVars);    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	15	None	replace
180	[BUG]  [BUGGY]  Double  r  =  correlationMatrix.getEntry(out,  i,  j,  nVars);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  Double  r  =  correlationMatrix.getEntry(out,  i,  j,  nVars);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	Double  r  =  correlationMatrix.getEntry(out,  i,  j,  nVars);	  Double    r    =    correlationMatrix.getEntry(i,    j,    nVars);    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	15	None	replace
181	[BUG]  [BUGGY]  double  r  =  dataMatrix.getEntry(i,  j  -  1);  [CE]  cannot  find  symbol  dataMatrix  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  dataMatrix.getEntry(i,  j  -  1);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  dataMatrix.getEntry(i,  j  -  1);	  double    r    =    correlationMatrix.getEntry(i,    j    -    1);    	non-compiled	[CE]  cannot  find  symbol  dataMatrix	73	None	replace
182	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  i,  out,  nVars);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  i,  out,  nVars);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(j,  i,  out,  nVars);	  double    r    =    correlationMatrix.getEntry(j,    i,    nVars);    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	14	None	replace
183	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(out,  i,  nVars);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(out,  i,  nVars);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(out,  i,  nVars);	  double    r    =    correlationMatrix.getEntry(j,    i,    nVars);    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	14	None	replace
184	[BUG]  [BUGGY]  Double  r  =  matrixMatrix.getEntry(i,  j);  [CE]  cannot  find  symbol  matrixMatrix  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  Double  r  =  matrixMatrix.getEntry(i,  j);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	Double  r  =  matrixMatrix.getEntry(i,  j);	  Double    r    =    covarianceMatrix.getEntry(i,    j);    	non-compiled	[CE]  cannot  find  symbol  matrixMatrix	17	None	replace
185	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  i  +  1);  double  r  =  correlationMatrix.getEntry(j,  i  +  1));  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  i  +  1);  double  r  =  correlationMatrix.getEntry(j,  i  +  1));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double    r    =    correlationMatrix.getEntry(j,    i    +    1);    double  r  =  correlationMatrix.getEntry(j,  i  +  1));	  	non-compiled	[CE]  ';'  expected	20	None	add
186	[BUG]  [BUGGY]  Double  r  =  dataMatrix.getEntry(j,  i);  [CE]  cannot  find  symbol  dataMatrix  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  Double  r  =  dataMatrix.getEntry(j,  i);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	Double  r  =  dataMatrix.getEntry(j,  i);	  double    r    =    correlationMatrix.getEntry(j,    i);    double    r    =    dataMatrix.getEntry(j,    i);    	non-compiled	[CE]  cannot  find  symbol  dataMatrix	4	None	replace
187	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  nObs,  nVars,  j);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  nObs,  nVars,  j);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(i,  nObs,  nVars,  j);	  double    r    =    correlationMatrix.getEntry(i,    j,    nVars,    nObs);    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	11	None	replace
188	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j,  nVars,  nObs,  nObs);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j,  nVars,  nObs,  nObs);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(i,  j,  nVars,  nObs,  nObs);	  double    r    =    correlationMatrix.getEntry(i,    j,    nVars,    nObs);    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	11	None	replace
189	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(nObs,  j,  nVars,  i);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(nObs,  j,  nVars,  i);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(nObs,  j,  nVars,  i);	  double    r    =    correlationMatrix.getEntry(i,    j,    nVars,    nObs);    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	11	None	replace
190	[BUG]  [BUGGY]  double  r  =  matrixMatrix.getEntry(i,  j  +  1);  [CE]  cannot  find  symbol  matrixMatrix  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  matrixMatrix.getEntry(i,  j  +  1);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  matrixMatrix.getEntry(i,  j  +  1);	  double    r    =    covarianceMatrix.getEntry(i,    j    +    1);    	non-compiled	[CE]  cannot  find  symbol  matrixMatrix	22	None	replace
191	[BUG]  [BUGGY]  double  r  =  Math.abs(nVars  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  [CE]  cannot  find  symbol  n  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  Math.abs(nVars  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  Math.abs(nVars  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));	  double    r    =    Math.abs(nObs    *    Math.sqrt((nObs    -    2)/(1    -    n    *    r)));    	non-compiled	[CE]  cannot  find  symbol  n	7	None	replace
192	[BUG]  [BUGGY]  double  r  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  [CE]  cannot  find  symbol  relativeProbability  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));	  double    r    =    Math.abs(nObs    *    Math.sqrt((nObs    -    2)/(1    -    n    *    r)));    	non-compiled	[CE]  cannot  find  symbol  relativeProbability	7	None	replace
193	[BUG]  [BUGGY]  Math.abs(nVars  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CE]  cannot  find  symbol  n  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  Math.abs(nVars  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	Math.abs(nVars  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  Math.abs(nObs    *    Math.sqrt((nObs    -    2)/(1    -    n    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  cannot  find  symbol  n	9	None	replace
194	[BUG]  [BUGGY]  double  r  =  matrixMatrix.getEntry(j,  i);  [CE]  cannot  find  symbol  matrixMatrix  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  matrixMatrix.getEntry(j,  i);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  matrixMatrix.getEntry(j,  i);	  double    r    =    correlationMatrix.getEntry(j,    i);    double    r    =    covarianceMatrix.getEntry(j,    i);    	non-compiled	[CE]  cannot  find  symbol  matrixMatrix	3	None	replace
195	[BUG]  [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(i,  j,  out.length);  [CE]  cannot  find  symbol  relativeMatrix  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  ((  RealMatrix)relativeMatrix).getEntry(i,  j,  out.length);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	((  RealMatrix)relativeMatrix).getEntry(i,  j,  out.length);	  ((    RealMatrix)relativeMatrix).getEntry(i,    j,    covarianceMatrix);    	non-compiled	[CE]  cannot  find  symbol  relativeMatrix	37	None	replace
196	[BUG]  [BUGGY]  int  nObs  =  this.covarianceMatrix.getColumnDimension();  int  nObs  =  this.covarianceMatrix.getRowDimension();  [CE]  cannot  find  symbol  covarianceMatrix  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  int  nObs  =  this.covarianceMatrix.getColumnDimension();  int  nObs  =  this.covarianceMatrix.getRowDimension();  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	int  nObs  =  this.covarianceMatrix.getColumnDimension();  int  nObs  =  this.covarianceMatrix.getRowDimension();	          int    nObs    =    correlationMatrix.getColumnDimension();    int    nObs    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	27	None	replace
197	[BUG]  [BUGGY]  double  r  =  covarianceMatrix.getEntry(i,  j  +  1,  j);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  covarianceMatrix.getEntry(i,  j  +  1,  j);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  covarianceMatrix.getEntry(i,  j  +  1,  j);	  double    r    =    correlationMatrix.getEntry(i,    j    +    1);    double    r    =    covarianceMatrix.getEntry(i,    j    +    1);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	45	None	replace
198	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  nObs,  j,  out,  nVars);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  nObs,  j,  out,  nVars);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(i,  nObs,  j,  out,  nVars);	  double    r    =    correlationMatrix.getEntry(i,    nObs,    j,    nVars);    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	58	None	replace
199	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  nObs,  j,  nVars,  covarianceMatrix);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  nObs,  j,  nVars,  covarianceMatrix);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(i,  nObs,  j,  nVars,  covarianceMatrix);	  double    r    =    correlationMatrix.getEntry(i,    nObs,    j,    nVars);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	58	None	replace
200	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  -  1);  double  r  =  correlationMatrix.getEntry(i,  j  -  1));  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  -  1);  double  r  =  correlationMatrix.getEntry(i,  j  -  1));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double    r    =    correlationMatrix.getEntry(i,    j    -    1);    double  r  =  correlationMatrix.getEntry(i,  j  -  1));	  	non-compiled	[CE]  ';'  expected	72	None	add
201	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(out,  i,  j,  nVars);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(out,  i,  j,  nVars);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(out,  i,  j,  nVars);	  double    r    =    correlationMatrix.getEntry(i,    j,    out,    nVars);    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	57	None	replace
202	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(out,  j,  nVars);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(out,  j,  nVars);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(out,  j,  nVars);	  double    r    =    correlationMatrix.getEntry(i,    j,    out,    nVars);    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	57	None	replace
203	[BUG]  [BUGGY]  ((  RealMatrix)correlationMatrix).getEntry(i,  out);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  ((  RealMatrix)correlationMatrix).getEntry(i,  out);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	((  RealMatrix)correlationMatrix).getEntry(i,  out);	  ((    RealMatrix)correlationMatrix).getEntry(i,    j);    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	36	None	replace
204	[BUG]  [BUGGY]  double  r  =  this.covarianceMatrix.getEntry(i,  j  +  1);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  this.covarianceMatrix.getEntry(i,  j  +  1);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  this.covarianceMatrix.getEntry(i,  j  +  1);	  double    r    =    correlationMatrix.getEntry(i,    j    +    1);    double    r    =    correlationMatrix.getEntry(i,    j    +    1);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	43	None	replace
205	[BUG]  [BUGGY]  tDistribution.cumulativeProbability(out,  i,  covarianceMatrix);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  tDistribution.cumulativeProbability(out,  i,  covarianceMatrix);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	tDistribution.cumulativeProbability(out,  i,  covarianceMatrix);	  tDistribution.cumulativeProbability(out,    i);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	49	None	replace
206	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  +  2);  double  r  =  correlationMatrix.getEntry(i,  j  +  2));  [CE]  ';'  expected  [FE]    MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  +  2);  double  r  =  correlationMatrix.getEntry(i,  j  +  2));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double    r    =    correlationMatrix.getEntry(i,    j    +    2);    double  r  =  correlationMatrix.getEntry(i,  j  +  2));	  	non-compiled	[CE]  ';'  expected	23	None	add
207	[BUG]  [BUGGY]  int  nObs  =(this.covarianceMatrix!=  null)?  this.covarianceMatrix.getEntryCount()  :  0;  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  int  nObs  =(this.covarianceMatrix!=  null)?  this.covarianceMatrix.getEntryCount()  :  0;  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	int  nObs  =(this.covarianceMatrix!=  null)?  this.covarianceMatrix.getEntryCount()  :  0;	  int    nObs    =    this.covarianceMatrix.getEntryCount();    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	40	None	replace
208	[BUG]  [BUGGY]  tDistribution.cumulativeProbability(out,  nVars,  i);  [CE]  no  suitable  method  found  for  cumulativeProbability(double[][],int,int)  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  tDistribution.cumulativeProbability(out,  nVars,  i);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	tDistribution.cumulativeProbability(out,  nVars,  i);	  tDistribution.cumulativeProbability(out,    nVars);    	non-compiled	[CE]  no  suitable  method  found  for  cumulativeProbability(double[][],int,int)	65	None	replace
209	[BUG]  [BUGGY]  int  nObs  =  this.covarianceMatrix.getRowDimension();  [CE]  cannot  find  symbol  covarianceMatrix  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  int  nObs  =  this.covarianceMatrix.getRowDimension();  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	int  nObs  =  this.covarianceMatrix.getRowDimension();	  int    nObs    =    this.covarianceMatrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	32	None	replace
210	[BUG]  [BUGGY]  [FE]  MatrixIndexException  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  Double  r  =  correlationMatrix.getEntry(i,  j  +  3);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	add	Double  r  =  correlationMatrix.getEntry(i,  j  +  3);	  Double    r    =    correlationMatrix.getEntry(i,    j    +    1);    	compilable	  [FE]  MatrixIndexException  	19	7	replace
211	[BUG]  [BUGGY]  Double  r  =  correlationMatrix.getEntry(i,  j  +  3);  [FE]  MatrixIndexException  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  Double  r  =  correlationMatrix.getEntry(i,  j  +  3);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	Double  r  =  correlationMatrix.getEntry(i,  j  +  3);	  Double    r    =    correlationMatrix.getEntry(i,    j    +    1);    	compilable	  [FE]  MatrixIndexException  	19	7	replace
212	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(relativeMatrix,  i,  nVars);  [CE]  cannot  find  symbol  relativeMatrix  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(relativeMatrix,  i,  nVars);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(relativeMatrix,  i,  nVars);	  double    r    =    correlationMatrix.getEntry(covarianceMatrix,    i,    nVars);    	non-compiled	[CE]  cannot  find  symbol  relativeMatrix	67	None	replace
213	[BUG]  [BUGGY]  double  r  =  this.covarianceMatrix.getEntry(i,  nVars);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  this.covarianceMatrix.getEntry(i,  nVars);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  this.covarianceMatrix.getEntry(i,  nVars);	  double    r    =    correlationMatrix.getEntry(covarianceMatrix,    i,    nVars);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	67	None	replace
214	[BUG]  [BUGGY]  Double  r  =  correlationMatrix.getEntry(covarianceMatrix,  i,  nVars);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  Double  r  =  correlationMatrix.getEntry(covarianceMatrix,  i,  nVars);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	Double  r  =  correlationMatrix.getEntry(covarianceMatrix,  i,  nVars);	  Double    r    =    correlationMatrix.getEntry(i,    j,    nVars);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	15	None	replace
215	[BUG]  [BUGGY]  double  r  =  Math.abs(tDistribution  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(r));  [CE]  cannot  find  symbol  n  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  Math.abs(tDistribution  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(r));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  Math.abs(tDistribution  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(r));	  double    r    =    Math.abs(nObs    *    Math.sqrt((    nObs    -    2)/(1    -    n    *    j)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(r));    	non-compiled	[CE]  cannot  find  symbol  n	61	None	replace
216	[BUG]  [BUGGY]  double  r  =  Math.abs(len  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(r));  [CE]  cannot  find  symbol  len  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  Math.abs(len  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(r));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  Math.abs(len  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(r));	  double    r    =    Math.abs(nObs    *    Math.sqrt((    nObs    -    2)/(1    -    n    *    j)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(r));    	non-compiled	[CE]  cannot  find  symbol  len	61	None	replace
217	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(covarianceMatrix,  i,  out,  nVars);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(covarianceMatrix,  i,  out,  nVars);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(covarianceMatrix,  i,  out,  nVars);	  double    r    =    correlationMatrix.getEntry(i,    j,    out,    nVars);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	57	None	replace
218	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(covarianceMatrix,  i,  j);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(covarianceMatrix,  i,  j);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(covarianceMatrix,  i,  j);	  double    r    =    correlationMatrix.getEntry(i,    nVars,    j);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	59	None	replace
219	[BUG]  [BUGGY]  double  r  =  covarianceMatrix.getEntry(i,  j,  nVars);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  covarianceMatrix.getEntry(i,  j,  nVars);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  covarianceMatrix.getEntry(i,  j,  nVars);	  double    r    =    correlationMatrix.getEntry(i,    nVars,    j);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	59	None	replace
220	[BUG]  [BUGGY]  tDistribution.cumulativeProbability(matrix,  out);  [CE]  cannot  find  symbol  matrix  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  tDistribution.cumulativeProbability(matrix,  out);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	tDistribution.cumulativeProbability(matrix,  out);	  tDistribution.cumulativeProbability(t,    out);    	non-compiled	[CE]  cannot  find  symbol  matrix	51	None	replace
221	[BUG]  [BUGGY]  tDistribution.cumulativeProbability(out,  correlationMatrix);  [CE]  no  suitable  method  found  for  cumulativeProbability(double[][],RealMatrix)  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  tDistribution.cumulativeProbability(out,  correlationMatrix);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	tDistribution.cumulativeProbability(out,  correlationMatrix);	  tDistribution.cumulativeProbability(out,    covarianceMatrix);    	non-compiled	[CE]  no  suitable  method  found  for  cumulativeProbability(double[][],RealMatrix)	64	None	replace
222	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(covarianceMatrix,  i,  nVars,  nObs);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(covarianceMatrix,  i,  nVars,  nObs);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(covarianceMatrix,  i,  nVars,  nObs);	  double    r    =    correlationMatrix.getEntry(i,    j,    nVars,    nObs);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	11	None	replace
223	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j,  1,  nVars,  nObs);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j,  1,  nVars,  nObs);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(i,  j,  1,  nVars,  nObs);	  double    r    =    correlationMatrix.getEntry(i,    j,    nVars,    nObs);    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	11	None	replace
224	[BUG]  [BUGGY]  tDistribution.cumulativeProbability(t,  out,  j);  [CE]  cannot  find  symbol  t  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  tDistribution.cumulativeProbability(t,  out,  j);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	tDistribution.cumulativeProbability(t,  out,  j);	  tDistribution.cumulativeProbability(out,    j);    	non-compiled	[CE]  cannot  find  symbol  t	48	None	replace
225	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  -  1);  double  r  =  comparisonMatrix.getEntry(i,  j  -  1);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  -  1);  double  r  =  comparisonMatrix.getEntry(i,  j  -  1);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double    r    =    correlationMatrix.getEntry(i,    j    -    1);    double  r  =  comparisonMatrix.getEntry(i,  j  -  1);	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	72	None	add
226	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  Double  r  =  correlationMatrix.getEntry(i,  j  -  1);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	add	Double  r  =  correlationMatrix.getEntry(i,  j  -  1);	  Double    r    =    correlationMatrix.getEntry(i,    j    +    1);    	compilable	  [FE]  AssertionFailedError  	19	6	replace
227	[BUG]  [BUGGY]  Double  r  =  correlationMatrix.getEntry(i,  j  -  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  Double  r  =  correlationMatrix.getEntry(i,  j  -  1);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	Double  r  =  correlationMatrix.getEntry(i,  j  -  1);	  Double    r    =    correlationMatrix.getEntry(i,    j    +    1);    	compilable	  [FE]  AssertionFailedError  	19	6	replace
228	[BUG]  [BUGGY]  double  r  =  dataMatrix.getEntry(i,  j  +  1));  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  dataMatrix.getEntry(i,  j  +  1));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  dataMatrix.getEntry(i,  j  +  1));	  double    r    =    correlationMatrix.getEntry(i,    j    +    1);    double    r    =    correlationMatrix.getEntry(i,    j    +    1));    	non-compiled	[CE]  ';'  expected	47	None	replace
229	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j)+  1;  double  r  =  relationshipMatrix.getEntry(i,  j)+  1;  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j)+  1;  double  r  =  relationshipMatrix.getEntry(i,  j)+  1;  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double    r    =    correlationMatrix.getEntry(i,    j)+    1;    double  r  =  relationshipMatrix.getEntry(i,  j)+  1;	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	52	None	add
230	[BUG]  [BUGGY]  double  r  =  Math.abs(nobs  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(r));  [CE]  cannot  find  symbol  nobs  [FE]                          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  Math.abs(nobs  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(r));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  Math.abs(nobs  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(r));	  double    r    =    Math.abs(nObs    *    Math.sqrt((nObs    -    2)/(1    -    n    *    r)));    out[i][j]    =    2    *    1    -    tDistribution.cumulativeProbability(r));    	non-compiled	[CE]  cannot  find  symbol  nobs	10	None	replace
231	[BUG]  [BUGGY]  double  r  =  Math.abs(nobs  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(r));  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  Math.abs(nobs  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(r));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  Math.abs(nobs  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(r));	  double    r    =    Math.abs(nObs    *    Math.sqrt((nObs    -    2)/(1    -    n    *    r)));    out[i][j]    =    2    *    1    -    tDistribution.cumulativeProbability(r));    	non-compiled	[CE]  ';'  expected	10	None	replace
232	[BUG]  [BUGGY]  ((  RealMatrix)covarianceMatrix).getEntry(j,  out);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  ((  RealMatrix)covarianceMatrix).getEntry(j,  out);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	((  RealMatrix)covarianceMatrix).getEntry(j,  out);	  ((    RealMatrix)relativeMatrix).getEntry(i,    out);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	66	None	replace
233	[BUG]  [BUGGY]  [FE]  MatrixIndexException  [FE]    MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  *  3);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	add	double  r  =  correlationMatrix.getEntry(i,  j  *  3);	  double    r    =    correlationMatrix.getEntry(i,    j    +    3);    	compilable	  [FE]  MatrixIndexException  	56	7	replace
234	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  *  3);  [FE]  MatrixIndexException  [FE]    MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  *  3);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(i,  j  *  3);	  double    r    =    correlationMatrix.getEntry(i,    j    +    3);    	compilable	  [FE]  MatrixIndexException  	56	7	replace
235	[BUG]  [BUGGY]  int  nObs  =  datasetMatrix.getRowDimension();  [CE]  cannot  find  symbol  datasetMatrix  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  int  nObs  =  datasetMatrix.getRowDimension();  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	int  nObs  =  datasetMatrix.getRowDimension();	  int    nObs    =    covarianceMatrix.getRowDimension();    	non-compiled	[CE]  cannot  find  symbol  datasetMatrix	31	None	replace
236	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  Math.abs(nObs  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(r));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	add	double  r  =  Math.abs(nObs  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(r));	  double    r    =    Math.abs(nObs    *    Math.sqrt((nObs    -    2)/(1    -    n    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(r));    	compilable	  [FE]  AssertionFailedError  	8	3	replace
237	[BUG]  [BUGGY]  double  r  =  Math.abs(nObs  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(r));  [FE]  AssertionFailedError  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  Math.abs(nObs  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(r));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  Math.abs(nObs  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(r));	  double    r    =    Math.abs(nObs    *    Math.sqrt((nObs    -    2)/(1    -    n    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(r));    	compilable	  [FE]  AssertionFailedError  	8	3	replace
238	[BUG]  [BUGGY]  double  r  =  Math.abs(tDistribution  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(r));  [CE]  cannot  find  symbol  n  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  Math.abs(tDistribution  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(r));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  Math.abs(tDistribution  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(r));	  double    r    =    Math.abs(nObs    *    Math.sqrt((nObs    -    2)/(1    -    n    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(r));    	non-compiled	[CE]  cannot  find  symbol  n	8	None	replace
239	[BUG]  [BUGGY]  Double  r  =  correlationMatrix.getEntry(i,  j  +  1);  Double  r  =  comparisonMatrix.getEntry(i,  j  +  1);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  Double  r  =  correlationMatrix.getEntry(i,  j  +  1);  Double  r  =  comparisonMatrix.getEntry(i,  j  +  1);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	Double    r    =    correlationMatrix.getEntry(i,    j    +    1);    Double  r  =  comparisonMatrix.getEntry(i,  j  +  1);	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	18	None	add
240	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  /  2);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	add	double  r  =  correlationMatrix.getEntry(i,  j  /  2);	  double    r    =    correlationMatrix.getEntry(i,    j    +    2);    	compilable	  [FE]  AssertionFailedError  	24	6	replace
241	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  /  2);  [FE]  AssertionFailedError  [FE]    MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  /  2);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(i,  j  /  2);	  double    r    =    correlationMatrix.getEntry(i,    j    +    2);    	compilable	  [FE]  AssertionFailedError  	24	6	replace
242	[BUG]  [BUGGY]  double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  [CE]  cannot  find  symbol  n  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));	  double    r    =    Math.abs(nObs    *    Math.sqrt((nObs    -    2)/(1    -    n    *    r)));    	non-compiled	[CE]  cannot  find  symbol  n	7	None	replace
243	[BUG]  [BUGGY]  double  r  =  Math.abs(len  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  [CE]  cannot  find  symbol  len  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  Math.abs(len  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  Math.abs(len  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));	  double    r    =    Math.abs(nObs    *    Math.sqrt((nObs    -    2)/(1    -    n    *    r)));    	non-compiled	[CE]  cannot  find  symbol  len	7	None	replace
244	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(covarianceMatrix,  i,  j,  nVars);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(covarianceMatrix,  i,  j,  nVars);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(covarianceMatrix,  i,  j,  nVars);	  double    r    =    correlationMatrix.getEntry(i,    nObs,    j,    nVars);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	58	None	replace
245	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  +  1,  j  +  1);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  +  1,  j  +  1);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  correlationMatrix.getEntry(i,  j  +  1,  j  +  1);	  double    r    =    correlationMatrix.getEntry(i,    j    +    1);    double    r    =    covarianceMatrix.getEntry(i,    j    +    1);    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	45	None	replace
246	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  +  3);  double  r  =  contributionMatrix.getEntry(i,  j  +  3);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]    MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  +  3);  double  r  =  contributionMatrix.getEntry(i,  j  +  3);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double    r    =    correlationMatrix.getEntry(i,    j    +    3);    double  r  =  contributionMatrix.getEntry(i,  j  +  3);	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	55	None	add
247	[BUG]  [BUGGY]  Math.abs(t  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CE]  cannot  find  symbol  t  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  Math.abs(t  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	Math.abs(t  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  Math.abs(nObs    *    Math.sqrt((nObs    -    2)/(1    -    n    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  cannot  find  symbol  t	9	None	replace
248	[BUG]  [BUGGY]  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  [CE]  cannot  find  symbol  r  [FE]                          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));	  Math.abs(nObs    *    Math.sqrt((nObs    -    2)/(1    -    n    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  cannot  find  symbol  r	9	None	replace
249	[BUG]  [BUGGY]  Math.abs(nObs  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CE]  cannot  find  symbol  r  [FE]                            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  Math.abs(nObs  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	Math.abs(nObs  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  Math.abs(nObs    *    Math.sqrt((nObs    -    2)/(1    -    n    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  cannot  find  symbol  r	9	None	replace
250	[BUG]  [BUGGY]  Double  r  =  correlationMatrix.getEntry(i,  j,  tDistribution);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  Double  r  =  correlationMatrix.getEntry(i,  j,  tDistribution);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	Double  r  =  correlationMatrix.getEntry(i,  j,  tDistribution);	  Double    r    =    correlationMatrix.getEntry(i,    j,    covarianceMatrix);    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	16	None	replace
251	[BUG]  [BUGGY]  Double  r  =  correlationMatrix.getEntry(i,  j,  0);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  Double  r  =  correlationMatrix.getEntry(i,  j,  0);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	Double  r  =  correlationMatrix.getEntry(i,  j,  0);	  Double    r    =    correlationMatrix.getEntry(i,    j,    covarianceMatrix);    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	16	None	replace
252	[BUG]  [BUGGY]  tDistribution.cumulativeProbability(out,  covarianceMatrix,  nVars);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  tDistribution.cumulativeProbability(out,  covarianceMatrix,  nVars);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	tDistribution.cumulativeProbability(out,  covarianceMatrix,  nVars);	  tDistribution.cumulativeProbability(out,    nVars);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	65	None	replace
253	[BUG]  [BUGGY]  tDistribution.cumulativeProbability(t,  out,  nVars);  [CE]  cannot  find  symbol  t  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {      [BUGGY]  tDistribution.cumulativeProbability(t,  out,  nVars);  [BUGGY]      double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	tDistribution.cumulativeProbability(t,  out,  nVars);	  tDistribution.cumulativeProbability(out,    nVars);    	non-compiled	[CE]  cannot  find  symbol  t	65	None	replace
