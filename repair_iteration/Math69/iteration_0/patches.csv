bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number
this_action2	[BUG]  [BUGGY]    int  numberOfObservations  =  matrix.getColumnDimension();  [CE]  cannot  find  symbol  matrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  [BUGGY]    int  numberOfObservations  =  matrix.getColumnDimension();  [BUGGY]  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	    int  numberOfObservations  =  matrix.getColumnDimension();		non-compiled	[CE]  cannot  find  symbol  matrix	12	None	add
3	[BUG]  [BUGGY]    nObs  =  matrix.getColumnDimension();  [CE]  cannot  assign  a  value  to  final  variable  nObs  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  [BUGGY]    nObs  =  matrix.getColumnDimension();  [BUGGY]  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	    nObs  =  matrix.getColumnDimension();		non-compiled	[CE]  cannot  assign  a  value  to  final  variable  nObs	12	None	add
4	[BUG]  [BUGGY]    int  nObs  =  matrix.getColumnDimension();  [CE]  cannot  find  symbol  matrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  [BUGGY]    int  nObs  =  matrix.getColumnDimension();  [BUGGY]  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	    int  nObs  =  matrix.getColumnDimension();		non-compiled	[CE]  cannot  find  symbol  matrix	12	None	add
5	[BUG]  [BUGGY]    int  numberOfObservations  =  matrix.getNumberOfObservations();  [CE]  cannot  find  symbol  matrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  [BUGGY]    int  numberOfObservations  =  matrix.getNumberOfObservations();  [BUGGY]  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	    int  numberOfObservations  =  matrix.getNumberOfObservations();		non-compiled	[CE]  cannot  find  symbol  matrix	12	None	add
11	[BUG]  [BUGGY]    int  nVars  =  matrix.getColumnDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  [BUGGY]    int  nVars  =  matrix.getColumnDimension();  [BUGGY]  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	    int  nVars  =  matrix.getColumnDimension();		non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	10	None	add
12	[BUG]  [BUGGY]    int  nObs  =  matrix.getColumnDimension();  [CE]  cannot  find  symbol  matrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  [BUGGY]    int  nObs  =  matrix.getColumnDimension();  [BUGGY]  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	    int  nObs  =  matrix.getColumnDimension();		non-compiled	[CE]  cannot  find  symbol  matrix	10	None	add
13	[BUG]  [BUGGY]    int  numberOfObservations  =  matrix.getColumnDimension();  [CE]  cannot  find  symbol  matrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  [BUGGY]    int  numberOfObservations  =  matrix.getColumnDimension();  [BUGGY]  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	    int  numberOfObservations  =  matrix.getColumnDimension();		non-compiled	[CE]  cannot  find  symbol  matrix	10	None	add
14	[BUG]  [BUGGY]    int  nVars  =  matrix.getNumberOfObservations();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  [BUGGY]    int  nVars  =  matrix.getNumberOfObservations();  [BUGGY]  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	    int  nVars  =  matrix.getNumberOfObservations();		non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	10	None	add
15	[BUG]  [BUGGY]    int  nVars  =  correlationMatrix.getColumnDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  [BUGGY]    int  nVars  =  correlationMatrix.getColumnDimension();  [BUGGY]  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	    int  nVars  =  correlationMatrix.getColumnDimension();		non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	10	None	add
22	[BUG]  [BUGGY]    int  nObs  =  matrix.getColumnDimension();  [CE]  cannot  find  symbol  matrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  [BUGGY]    int  nObs  =  matrix.getColumnDimension();  [BUGGY]  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	161	161	2	replace	    int  nObs  =  matrix.getColumnDimension();		non-compiled	[CE]  cannot  find  symbol  matrix	6	None	add
23	[BUG]  [BUGGY]    int  nObs  =  this.covarianceMatrix.getColumnDimension();  [CE]  cannot  find  symbol  covarianceMatrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  [BUGGY]    int  nObs  =  this.covarianceMatrix.getColumnDimension();  [BUGGY]  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	161	161	2	replace	    int  nObs  =  this.covarianceMatrix.getColumnDimension();		non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	6	None	add
24	[BUG]  [BUGGY]    int  nObs  =  getNumberOfObservations();  [CE]  cannot  find  symbol  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  [BUGGY]    int  nObs  =  getNumberOfObservations();  [BUGGY]  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	161	161	2	replace	    int  nObs  =  getNumberOfObservations();		non-compiled	[CE]  cannot  find  symbol	6	None	add
25	[BUG]  [BUGGY]    int  nObs  =  matrix.getNumberOfObservations();  [CE]  cannot  find  symbol  matrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  [BUGGY]    int  nObs  =  matrix.getNumberOfObservations();  [BUGGY]  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	161	161	2	replace	    int  nObs  =  matrix.getNumberOfObservations();		non-compiled	[CE]  cannot  find  symbol  matrix	6	None	add
31	[BUG]  [BUGGY]    double[][]  out  =  new  double[nVars][i  -  1];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  [BUGGY]    double[][]  out  =  new  double[nVars][i  -  1];  [BUGGY]  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	    double[][]  out  =  new  double[nVars][i  -  1];		non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	14	None	add
32	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testPValueNearZero  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  [BUGGY]    out[i][0]  =  0d;  [BUGGY]  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	add	    out[i][0]  =  0d;		compilable	  [FE]  AssertionFailedError  testPValueNearZero	14	2
33	[BUG]  [BUGGY]    out[i][0]  =  0d;  [FE]  AssertionFailedError  testPValueNearZero  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  [BUGGY]    out[i][0]  =  0d;  [BUGGY]  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	    out[i][0]  =  0d;		compilable	  [FE]  AssertionFailedError  testPValueNearZero	14	2	add
33	[BUG]  [BUGGY]    double[][]  out  =  new  double[nVars][i];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  [BUGGY]    double[][]  out  =  new  double[nVars][i];  [BUGGY]  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	    double[][]  out  =  new  double[nVars][i];		non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	14	None	add
34	[BUG]  [BUGGY]    double[][]  out  =  new  double[nVars][i].doubleValue();  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  [BUGGY]    double[][]  out  =  new  double[nVars][i].doubleValue();  [BUGGY]  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	    double[][]  out  =  new  double[nVars][i].doubleValue();		non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	14	None	add
35	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testPValueNearZero  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  [BUGGY]    out[i][i]  =  0d;  [BUGGY]  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	add	    out[i][i]  =  0d;		compilable	  [FE]  AssertionFailedError  testPValueNearZero	14	2
36	[BUG]  [BUGGY]    out[i][i]  =  0d;  [FE]  AssertionFailedError  testPValueNearZero  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  [BUGGY]    out[i][i]  =  0d;  [BUGGY]  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	    out[i][i]  =  0d;		compilable	  [FE]  AssertionFailedError  testPValueNearZero	14	2	add
41	[BUG]  [BUGGY]    int  nVars  =  correlationMatrix.getColumnDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  [BUGGY]    int  nVars  =  correlationMatrix.getColumnDimension();  [BUGGY]  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	    int  nVars  =  correlationMatrix.getColumnDimension();		non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	8	None	add
42	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testPValueNearZero  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  [BUGGY]    int  numberOfObservations  =  correlationMatrix.getColumnDimension();  [BUGGY]  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	add	    int  numberOfObservations  =  correlationMatrix.getColumnDimension();		compilable	  [FE]  AssertionFailedError  testPValueNearZero	8	2
43	[BUG]  [BUGGY]    int  numberOfObservations  =  correlationMatrix.getColumnDimension();  [FE]  AssertionFailedError  testPValueNearZero  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  [BUGGY]    int  numberOfObservations  =  correlationMatrix.getColumnDimension();  [BUGGY]  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	    int  numberOfObservations  =  correlationMatrix.getColumnDimension();		compilable	  [FE]  AssertionFailedError  testPValueNearZero	8	2	add
43	[BUG]  [BUGGY]    int  numberOfObservations  =  tDistribution.getColumnDimension();  [CE]  cannot  find  symbol  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  [BUGGY]    int  numberOfObservations  =  tDistribution.getColumnDimension();  [BUGGY]  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	    int  numberOfObservations  =  tDistribution.getColumnDimension();		non-compiled	[CE]  cannot  find  symbol	8	None	add
44	[BUG]  [BUGGY]    Integer  nVars  =  correlationMatrix.getColumnDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  [BUGGY]    Integer  nVars  =  correlationMatrix.getColumnDimension();  [BUGGY]  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	    Integer  nVars  =  correlationMatrix.getColumnDimension();		non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	8	None	add
45	[BUG]  [BUGGY]    int  nVars  =  matrix.getColumnDimension();  [CE]  cannot  find  symbol  matrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  [BUGGY]    int  nVars  =  matrix.getColumnDimension();  [BUGGY]  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	    int  nVars  =  matrix.getColumnDimension();		non-compiled	[CE]  cannot  find  symbol  matrix	8	None	add
52	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testPValueNearZero  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  [BUGGY]  if(j  ==  i)  {  [BUGGY]  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	166	166	2	add	if(j  ==  i)  {	if  (i  ==  j)  {  	compilable	  [FE]  AssertionFailedError  testPValueNearZero	15	2
53	[BUG]  [BUGGY]  if(j  ==  i)  {  [FE]  AssertionFailedError  testPValueNearZero  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  [BUGGY]  if(j  ==  i)  {  [BUGGY]  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	166	166	2	replace	if(j  ==  i)  {	if  (i  ==  j)  {  	compilable	  [FE]  AssertionFailedError  testPValueNearZero	15	2	replace
55	[BUG]  [BUGGY]    [CE]  'else'  without  'if'  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  [BUGGY]    [BUGGY]  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	166	166	2	replace	  	if  (i  ==  j)  {  	non-compiled	[CE]  'else'  without  'if'	15	None	replace
61	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testPValueNearZero  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  [BUGGY]  out[i][j]  =  0;  [BUGGY]  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	167	167	2	add	out[i][j]  =  0;	out[i][j]  =  0d;  	compilable	  [FE]  AssertionFailedError  testPValueNearZero	17	2
62	[BUG]  [BUGGY]  out[i][j]  =  0;  [FE]  AssertionFailedError  testPValueNearZero  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  [BUGGY]  out[i][j]  =  0;  [BUGGY]  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	167	167	2	replace	out[i][j]  =  0;	out[i][j]  =  0d;  	compilable	  [FE]  AssertionFailedError  testPValueNearZero	17	2	replace
65	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testPValueNearZero  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  [BUGGY]    [BUGGY]  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	167	167	2	add	  	out[i][j]  =  0d;  	compilable	  [FE]  AssertionFailedError  testPValueNearZero	17	2
66	[BUG]  [BUGGY]    [FE]  AssertionFailedError  testPValueNearZero  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  [BUGGY]    [BUGGY]  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	167	167	2	replace	  	out[i][j]  =  0d;  	compilable	  [FE]  AssertionFailedError  testPValueNearZero	17	2	replace
71	[BUG]  [BUGGY]    this.correlationMatrix  =  Math.random(),  data[nObs]);  [CE]  ';'  expected  [CONTEXT]  public  PearsonsCorrelation(double[][]  data)  {  this(new  BlockRealMatrix(data));  [BUGGY]    this.correlationMatrix  =  Math.random(),  data[nObs]);  [BUGGY]  }  [CLASS]  PearsonsCorrelation  [METHOD]  <init>  [RETURN_TYPE]  PearsonsCorrelation(double[][])  double[][]  data  [VARIABLES]  double[][]  data  boolean  RealMatrix  correlationMatrix  int  nObs  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	1.0	69	69	2	replace	    this.correlationMatrix  =  Math.random(),  data[nObs]);		non-compiled	[CE]  ';'  expected	4	None	add
72	[BUG]  [BUGGY]    this.correlationMatrix  =  Math.random();  [CE]  incompatible  types  [CONTEXT]  public  PearsonsCorrelation(double[][]  data)  {  this(new  BlockRealMatrix(data));  [BUGGY]    this.correlationMatrix  =  Math.random();  [BUGGY]  }  [CLASS]  PearsonsCorrelation  [METHOD]  <init>  [RETURN_TYPE]  PearsonsCorrelation(double[][])  double[][]  data  [VARIABLES]  double[][]  data  boolean  RealMatrix  correlationMatrix  int  nObs  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	1.0	69	69	2	replace	    this.correlationMatrix  =  Math.random();		non-compiled	[CE]  incompatible  types	4	None	add
73	[BUG]  [BUGGY]    this.correlationMatrix  =  Math.random(),  data[0],  0,  nObs);  [CE]  ';'  expected  [CONTEXT]  public  PearsonsCorrelation(double[][]  data)  {  this(new  BlockRealMatrix(data));  [BUGGY]    this.correlationMatrix  =  Math.random(),  data[0],  0,  nObs);  [BUGGY]  }  [CLASS]  PearsonsCorrelation  [METHOD]  <init>  [RETURN_TYPE]  PearsonsCorrelation(double[][])  double[][]  data  [VARIABLES]  double[][]  data  boolean  RealMatrix  correlationMatrix  int  nObs  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	1.0	69	69	2	replace	    this.correlationMatrix  =  Math.random(),  data[0],  0,  nObs);		non-compiled	[CE]  ';'  expected	4	None	add
74	[BUG]  [BUGGY]    this.correlationMatrix  =  new  RealMatrix(data);  [CE]  RealMatrix  is  abstract;  cannot  be  instantiated  [CONTEXT]  public  PearsonsCorrelation(double[][]  data)  {  this(new  BlockRealMatrix(data));  [BUGGY]    this.correlationMatrix  =  new  RealMatrix(data);  [BUGGY]  }  [CLASS]  PearsonsCorrelation  [METHOD]  <init>  [RETURN_TYPE]  PearsonsCorrelation(double[][])  double[][]  data  [VARIABLES]  double[][]  data  boolean  RealMatrix  correlationMatrix  int  nObs  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	1.0	69	69	2	replace	    this.correlationMatrix  =  new  RealMatrix(data);		non-compiled	[CE]  RealMatrix  is  abstract;  cannot  be  instantiated	4	None	add
75	[BUG]  [BUGGY]    this.correlationMatrix  =  new  RealMatrix(data,  false);  [CE]  RealMatrix  is  abstract;  cannot  be  instantiated  [CONTEXT]  public  PearsonsCorrelation(double[][]  data)  {  this(new  BlockRealMatrix(data));  [BUGGY]    this.correlationMatrix  =  new  RealMatrix(data,  false);  [BUGGY]  }  [CLASS]  PearsonsCorrelation  [METHOD]  <init>  [RETURN_TYPE]  PearsonsCorrelation(double[][])  double[][]  data  [VARIABLES]  double[][]  data  boolean  RealMatrix  correlationMatrix  int  nObs  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	1.0	69	69	2	replace	    this.correlationMatrix  =  new  RealMatrix(data,  false);		non-compiled	[CE]  RealMatrix  is  abstract;  cannot  be  instantiated	4	None	add
84	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numberOfObservations;  j++)  {  [CE]  cannot  find  symbol  numberOfObservations  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  [BUGGY]  for(int  j  =  0;  j  <  numberOfObservations;  j++)  {  [BUGGY]  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int  j  =  0;  j  <  numberOfObservations;  j++)  {	for  (int  j  =  0;  j  <  nVars;  j++)  {  	non-compiled	[CE]  cannot  find  symbol  numberOfObservations	13	None	replace
113	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars.length;  i++)  {  [CE]  int  cannot  be  dereferenced  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  [BUGGY]  for(int  i  =  0;  i  <  nVars.length;  i++)  {  [BUGGY]  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nVars.length;  i++)  {	for  (int  i  =  0;  i  <  nVars;  i++)  {  	non-compiled	[CE]  int  cannot  be  dereferenced	11	None	replace
122	[BUG]  [BUGGY]  this(new  BlockRealMatrix(data,  correlationMatrix));  [CE]  cannot  reference  correlationMatrix  before  supertype  constructor  has  been  called  [CONTEXT]  public  PearsonsCorrelation(double[][]  data)  {  [BUGGY]  this(new  BlockRealMatrix(data,  correlationMatrix));  [BUGGY]  }  [CLASS]  PearsonsCorrelation  [METHOD]  <init>  [RETURN_TYPE]  PearsonsCorrelation(double[][])  double[][]  data  [VARIABLES]  double[][]  data  boolean  RealMatrix  correlationMatrix  int  nObs  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	1.0	68	68	2	replace	this(new  BlockRealMatrix(data,  correlationMatrix));	this(new  BlockRealMatrix(data));  	non-compiled	[CE]  cannot  reference  correlationMatrix  before  supertype  constructor  has  been  called	1	None	replace
123	[BUG]  [BUGGY]  this(new  BlockRealMatrix(data,  nObs));  [CE]  cannot  reference  nObs  before  supertype  constructor  has  been  called  [CONTEXT]  public  PearsonsCorrelation(double[][]  data)  {  [BUGGY]  this(new  BlockRealMatrix(data,  nObs));  [BUGGY]  }  [CLASS]  PearsonsCorrelation  [METHOD]  <init>  [RETURN_TYPE]  PearsonsCorrelation(double[][])  double[][]  data  [VARIABLES]  double[][]  data  boolean  RealMatrix  correlationMatrix  int  nObs  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	1.0	68	68	2	replace	this(new  BlockRealMatrix(data,  nObs));	this(new  BlockRealMatrix(data));  	non-compiled	[CE]  cannot  reference  nObs  before  supertype  constructor  has  been  called	1	None	replace
124	[BUG]  [BUGGY]  this(new  BlockRealMatrix(data,  false));  [CE]  no  suitable  constructor  found  for  BlockRealMatrix(double[][],boolean)  [CONTEXT]  public  PearsonsCorrelation(double[][]  data)  {  [BUGGY]  this(new  BlockRealMatrix(data,  false));  [BUGGY]  }  [CLASS]  PearsonsCorrelation  [METHOD]  <init>  [RETURN_TYPE]  PearsonsCorrelation(double[][])  double[][]  data  [VARIABLES]  double[][]  data  boolean  RealMatrix  correlationMatrix  int  nObs  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	1.0	68	68	2	replace	this(new  BlockRealMatrix(data,  false));	this(new  BlockRealMatrix(data));  	non-compiled	[CE]  no  suitable  constructor  found  for  BlockRealMatrix(double[][],boolean)	1	None	replace
125	[BUG]  [BUGGY]    [CE]  variable  correlationMatrix  might  not  have  been  initialized  [CONTEXT]  public  PearsonsCorrelation(double[][]  data)  {  [BUGGY]    [BUGGY]  }  [CLASS]  PearsonsCorrelation  [METHOD]  <init>  [RETURN_TYPE]  PearsonsCorrelation(double[][])  double[][]  data  [VARIABLES]  double[][]  data  boolean  RealMatrix  correlationMatrix  int  nObs  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	1.0	68	68	2	replace	  	this(new  BlockRealMatrix(data));  	non-compiled	[CE]  variable  correlationMatrix  might  not  have  been  initialized	1	None	replace
132	[BUG]  [BUGGY]  int  nVars  =  this.covarianceMatrix.getColumnDimension();  [CE]  cannot  find  symbol  covarianceMatrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  [BUGGY]  int  nVars  =  this.covarianceMatrix.getColumnDimension();  [BUGGY]  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =  this.covarianceMatrix.getColumnDimension();	int  nVars  =  correlationMatrix.getColumnDimension();  	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	7	None	replace
133	[BUG]  [BUGGY]  int  nVars  =  correlationMatrix.getVariance();  [CE]  cannot  find  symbol  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  [BUGGY]  int  nVars  =  correlationMatrix.getVariance();  [BUGGY]  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =  correlationMatrix.getVariance();	int  nVars  =  correlationMatrix.getColumnDimension();  	non-compiled	[CE]  cannot  find  symbol	7	None	replace
134	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testPValueNearZero  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  [BUGGY]  int  nVars  =  this.correlationMatrix.getColumnDimension();  [BUGGY]  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	add	int  nVars  =  this.correlationMatrix.getColumnDimension();	int  nVars  =  correlationMatrix.getColumnDimension();  	compilable	  [FE]  AssertionFailedError  testPValueNearZero	7	2
135	[BUG]  [BUGGY]  int  nVars  =  this.correlationMatrix.getColumnDimension();  [FE]  AssertionFailedError  testPValueNearZero  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  [BUGGY]  int  nVars  =  this.correlationMatrix.getColumnDimension();  [BUGGY]  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =  this.correlationMatrix.getColumnDimension();	int  nVars  =  correlationMatrix.getColumnDimension();  	compilable	  [FE]  AssertionFailedError  testPValueNearZero	7	2	replace
141	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testPValueNearZero  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  [BUGGY]    out[i][j]  =  tDistribution.cumulativeProbability(nVars);  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	add	    out[i][j]  =  tDistribution.cumulativeProbability(nVars);		compilable	  [FE]  AssertionFailedError  testPValueNearZero	20	2
142	[BUG]  [BUGGY]    out[i][j]  =  tDistribution.cumulativeProbability(nVars);  [FE]  AssertionFailedError  testPValueNearZero  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  [BUGGY]    out[i][j]  =  tDistribution.cumulativeProbability(nVars);  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	    out[i][j]  =  tDistribution.cumulativeProbability(nVars);		compilable	  [FE]  AssertionFailedError  testPValueNearZero	20	2	add
142	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testPValueNearZero  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  [BUGGY]    out[i][j]  =  2  *(tDistribution.cumulativeProbability(i));  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	add	    out[i][j]  =  2  *(tDistribution.cumulativeProbability(i));		compilable	  [FE]  AssertionFailedError  testPValueNearZero	20	2
143	[BUG]  [BUGGY]    out[i][j]  =  2  *(tDistribution.cumulativeProbability(i));  [FE]  AssertionFailedError  testPValueNearZero  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  [BUGGY]    out[i][j]  =  2  *(tDistribution.cumulativeProbability(i));  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	    out[i][j]  =  2  *(tDistribution.cumulativeProbability(i));		compilable	  [FE]  AssertionFailedError  testPValueNearZero	20	2	add
143	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testPValueNearZero  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  [BUGGY]    out[i][j]  =  2  *(tDistribution.cumulativeProbability(nVars));  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	add	    out[i][j]  =  2  *(tDistribution.cumulativeProbability(nVars));		compilable	  [FE]  AssertionFailedError  testPValueNearZero	20	2
144	[BUG]  [BUGGY]    out[i][j]  =  2  *(tDistribution.cumulativeProbability(nVars));  [FE]  AssertionFailedError  testPValueNearZero  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  [BUGGY]    out[i][j]  =  2  *(tDistribution.cumulativeProbability(nVars));  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	    out[i][j]  =  2  *(tDistribution.cumulativeProbability(nVars));		compilable	  [FE]  AssertionFailedError  testPValueNearZero	20	2	add
144	[BUG]  [BUGGY]    out[i][j]  =  tDistribution.cumulativeProbability(nVars));  [CE]  ';'  expected  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  [BUGGY]    out[i][j]  =  tDistribution.cumulativeProbability(nVars));  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	    out[i][j]  =  tDistribution.cumulativeProbability(nVars));		non-compiled	[CE]  ';'  expected	20	None	add
145	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testPValueNearZero  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  [BUGGY]    out[i][j]  =  tDistribution.cumulativeProbability(nObs);  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	add	    out[i][j]  =  tDistribution.cumulativeProbability(nObs);		compilable	  [FE]  AssertionFailedError  testPValueNearZero	20	2
146	[BUG]  [BUGGY]    out[i][j]  =  tDistribution.cumulativeProbability(nObs);  [FE]  AssertionFailedError  testPValueNearZero  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  [BUGGY]    out[i][j]  =  tDistribution.cumulativeProbability(nObs);  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	    out[i][j]  =  tDistribution.cumulativeProbability(nObs);		compilable	  [FE]  AssertionFailedError  testPValueNearZero	20	2	add
151	[BUG]  [BUGGY]    double[][]  out  =  matrix.getEntry(i,  j);  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  [BUGGY]    double[][]  out  =  matrix.getEntry(i,  j);  [BUGGY]  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	166	166	2	replace	    double[][]  out  =  matrix.getEntry(i,  j);		non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	16	None	add
152	[BUG]  [BUGGY]    i  =  correlationMatrix.getEntry(i,  j);  [CE]  possible  loss  of  precision  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  [BUGGY]    i  =  correlationMatrix.getEntry(i,  j);  [BUGGY]  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	166	166	2	replace	    i  =  correlationMatrix.getEntry(i,  j);		non-compiled	[CE]  possible  loss  of  precision	16	None	add
153	[BUG]  [BUGGY]    int  i  =  correlationMatrix.getEntry(i,  j);  [CE]  variable  i  is  already  defined  in  method  getCorrelationPValues()  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  [BUGGY]    int  i  =  correlationMatrix.getEntry(i,  j);  [BUGGY]  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	166	166	2	replace	    int  i  =  correlationMatrix.getEntry(i,  j);		non-compiled	[CE]  variable  i  is  already  defined  in  method  getCorrelationPValues()	16	None	add
154	[BUG]  [BUGGY]    int  i  =  correlationMatrix.getColumnDimension();  [CE]  variable  i  is  already  defined  in  method  getCorrelationPValues()  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  [BUGGY]    int  i  =  correlationMatrix.getColumnDimension();  [BUGGY]  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	166	166	2	replace	    int  i  =  correlationMatrix.getColumnDimension();		non-compiled	[CE]  variable  i  is  already  defined  in  method  getCorrelationPValues()	16	None	add
155	[BUG]  [BUGGY]    int  i  =  correlationMatrix.getColumnDimension(j);  [CE]  variable  i  is  already  defined  in  method  getCorrelationPValues()  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  [BUGGY]    int  i  =  correlationMatrix.getColumnDimension(j);  [BUGGY]  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	166	166	2	replace	    int  i  =  correlationMatrix.getColumnDimension(j);		non-compiled	[CE]  variable  i  is  already  defined  in  method  getCorrelationPValues()	16	None	add
161	[BUG]  [BUGGY]  double  r  =  matrix.getEntry(i,  j);  [CE]  cannot  find  symbol  matrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  [BUGGY]  double  r  =  matrix.getEntry(i,  j);  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  matrix.getEntry(i,  j);	double  r  =  correlationMatrix.getEntry(i,  j);  	non-compiled	[CE]  cannot  find  symbol  matrix	19	None	replace
163	[BUG]  [BUGGY]  double  r  =  covarianceMatrix.getEntry(i,  j);  [CE]  cannot  find  symbol  covarianceMatrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  [BUGGY]  double  r  =  covarianceMatrix.getEntry(i,  j);  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  covarianceMatrix.getEntry(i,  j);	double  r  =  correlationMatrix.getEntry(i,  j);  	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	19	None	replace
171	[BUG]  [BUGGY]  this.correlationMatrix  =  new  DoubleColumnRealMatrix(data);  [CE]  illegal  start  of  expression  [CONTEXT]  public  PearsonsCorrelation(double[][]  data)  {  this(new  BlockRealMatrix(data));  [BUGGY]  this.correlationMatrix  =  new  DoubleColumnRealMatrix(data);  [BUGGY]    [CLASS]  PearsonsCorrelation  [METHOD]  <init>  [RETURN_TYPE]  PearsonsCorrelation(double[][])  double[][]  data  [VARIABLES]  double[][]  data  boolean  RealMatrix  correlationMatrix  int  nObs  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	1.0	69	69	2	replace	this.correlationMatrix  =  new  DoubleColumnRealMatrix(data);	}  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
181	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testPValueNearZero  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  [BUGGY]    double  d  =  correlationMatrix.getEntry(i,  j);  [BUGGY]  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	167	167	2	add	    double  d  =  correlationMatrix.getEntry(i,  j);		compilable	  [FE]  AssertionFailedError  testPValueNearZero	18	2
182	[BUG]  [BUGGY]    double  d  =  correlationMatrix.getEntry(i,  j);  [FE]  AssertionFailedError  testPValueNearZero  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  [BUGGY]    double  d  =  correlationMatrix.getEntry(i,  j);  [BUGGY]  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	167	167	2	replace	    double  d  =  correlationMatrix.getEntry(i,  j);		compilable	  [FE]  AssertionFailedError  testPValueNearZero	18	2	add
182	[BUG]  [BUGGY]    double[][]  out  =  matrix.getEntry(i,  j);  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  [BUGGY]    double[][]  out  =  matrix.getEntry(i,  j);  [BUGGY]  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	167	167	2	replace	    double[][]  out  =  matrix.getEntry(i,  j);		non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	18	None	add
183	[BUG]  [BUGGY]    double[][]  out  =  new  double[nVars][nVars];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  [BUGGY]    double[][]  out  =  new  double[nVars][nVars];  [BUGGY]  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	167	167	2	replace	    double[][]  out  =  new  double[nVars][nVars];		non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	18	None	add
185	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testPValueNearZero  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  [BUGGY]    double  d  =  correlationMatrix.getEntry(i,  j);  out[i][j]  =  0d;  [BUGGY]  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	167	167	2	add	    double  d  =  correlationMatrix.getEntry(i,  j);  out[i][j]  =  0d;		compilable	  [FE]  AssertionFailedError  testPValueNearZero	18	2
186	[BUG]  [BUGGY]    double  d  =  correlationMatrix.getEntry(i,  j);  out[i][j]  =  0d;  [FE]  AssertionFailedError  testPValueNearZero  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  [BUGGY]    double  d  =  correlationMatrix.getEntry(i,  j);  out[i][j]  =  0d;  [BUGGY]  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	167	167	2	replace	    double  d  =  correlationMatrix.getEntry(i,  j);  out[i][j]  =  0d;		compilable	  [FE]  AssertionFailedError  testPValueNearZero	18	2	add
191	[BUG]  [BUGGY]    super();  [CE]  call  to  this  must  be  first  statement  in  constructor  [CONTEXT]  public  PearsonsCorrelation(double[][]  data)  {  [BUGGY]    super();  [BUGGY]  this(new  BlockRealMatrix(data));  }  [CLASS]  PearsonsCorrelation  [METHOD]  <init>  [RETURN_TYPE]  PearsonsCorrelation(double[][])  double[][]  data  [VARIABLES]  double[][]  data  boolean  RealMatrix  correlationMatrix  int  nObs  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	1.0	68	68	2	replace	    super();		non-compiled	[CE]  call  to  this  must  be  first  statement  in  constructor	2	None	add
192	[BUG]  [BUGGY]    this(data,  0,  data[0],  0,  nObs);  [CE]  cannot  reference  nObs  before  supertype  constructor  has  been  called  [CONTEXT]  public  PearsonsCorrelation(double[][]  data)  {  [BUGGY]    this(data,  0,  data[0],  0,  nObs);  [BUGGY]  this(new  BlockRealMatrix(data));  }  [CLASS]  PearsonsCorrelation  [METHOD]  <init>  [RETURN_TYPE]  PearsonsCorrelation(double[][])  double[][]  data  [VARIABLES]  double[][]  data  boolean  RealMatrix  correlationMatrix  int  nObs  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	1.0	68	68	2	replace	    this(data,  0,  data[0],  0,  nObs);		non-compiled	[CE]  cannot  reference  nObs  before  supertype  constructor  has  been  called	2	None	add
193	[BUG]  [BUGGY]    super();  this.nObs  =  0;  [CE]  call  to  this  must  be  first  statement  in  constructor  [CONTEXT]  public  PearsonsCorrelation(double[][]  data)  {  [BUGGY]    super();  this.nObs  =  0;  [BUGGY]  this(new  BlockRealMatrix(data));  }  [CLASS]  PearsonsCorrelation  [METHOD]  <init>  [RETURN_TYPE]  PearsonsCorrelation(double[][])  double[][]  data  [VARIABLES]  double[][]  data  boolean  RealMatrix  correlationMatrix  int  nObs  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	1.0	68	68	2	replace	    super();  this.nObs  =  0;		non-compiled	[CE]  call  to  this  must  be  first  statement  in  constructor	2	None	add
194	[BUG]  [BUGGY]    super();  this.nObs  =  true;  [CE]  incompatible  types  [CONTEXT]  public  PearsonsCorrelation(double[][]  data)  {  [BUGGY]    super();  this.nObs  =  true;  [BUGGY]  this(new  BlockRealMatrix(data));  }  [CLASS]  PearsonsCorrelation  [METHOD]  <init>  [RETURN_TYPE]  PearsonsCorrelation(double[][])  double[][]  data  [VARIABLES]  double[][]  data  boolean  RealMatrix  correlationMatrix  int  nObs  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	1.0	68	68	2	replace	    super();  this.nObs  =  true;		non-compiled	[CE]  incompatible  types	2	None	add
195	[BUG]  [BUGGY]    this(data,  0,  data.length);  [CE]  no  suitable  constructor  found  for  PearsonsCorrelation(double[][],int,int)  [CONTEXT]  public  PearsonsCorrelation(double[][]  data)  {  [BUGGY]    this(data,  0,  data.length);  [BUGGY]  this(new  BlockRealMatrix(data));  }  [CLASS]  PearsonsCorrelation  [METHOD]  <init>  [RETURN_TYPE]  PearsonsCorrelation(double[][])  double[][]  data  [VARIABLES]  double[][]  data  boolean  RealMatrix  correlationMatrix  int  nObs  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	1.0	68	68	2	replace	    this(data,  0,  data.length);		non-compiled	[CE]  no  suitable  constructor  found  for  PearsonsCorrelation(double[][],int,int)	2	None	add
1	[BUG]  [BUGGY]    out[i][j]  =  matrix.getEntry(i,  j);  [CE]  cannot  find  symbol  matrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  [BUGGY]    out[i][j]  =  matrix.getEntry(i,  j);  [BUGGY]  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	167	167	2	replace	    out[i][j]  =  matrix.getEntry(i,  j);		non-compiled	[CE]  cannot  find  symbol  matrix	18	None	add
2	[BUG]  [BUGGY]    out[i][j]  =  matrix.getCorrelationPvalues();  [CE]  cannot  find  symbol  matrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  [BUGGY]    out[i][j]  =  matrix.getCorrelationPvalues();  [BUGGY]  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	167	167	2	replace	    out[i][j]  =  matrix.getCorrelationPvalues();		non-compiled	[CE]  cannot  find  symbol  matrix	18	None	add
3	[BUG]  [BUGGY]    CovarianceMatrix  matrix  =  getCovarianceMatrix();  [CE]  cannot  find  symbol  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  [BUGGY]    CovarianceMatrix  matrix  =  getCovarianceMatrix();  [BUGGY]  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	167	167	2	replace	    CovarianceMatrix  matrix  =  getCovarianceMatrix();		non-compiled	[CE]  cannot  find  symbol	18	None	add
4	[BUG]  [BUGGY]    out[i][j]  =  matrix.getCorrelation(i,  j);  [CE]  cannot  find  symbol  matrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  [BUGGY]    out[i][j]  =  matrix.getCorrelation(i,  j);  [BUGGY]  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	167	167	2	replace	    out[i][j]  =  matrix.getCorrelation(i,  j);		non-compiled	[CE]  cannot  find  symbol  matrix	18	None	add
5	[BUG]  [BUGGY]    out[i][j]  =  matrix.getCorrelationPValue(i);  [CE]  cannot  find  symbol  matrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  [BUGGY]    out[i][j]  =  matrix.getCorrelationPValue(i);  [BUGGY]  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	167	167	2	replace	    out[i][j]  =  matrix.getCorrelationPValue(i);		non-compiled	[CE]  cannot  find  symbol  matrix	18	None	add
43	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testPValueNearZero  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  [BUGGY]  out[i][j]  =  0.0;  [BUGGY]  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	167	167	2	add	out[i][j]  =  0.0;	out[i][j]  =  0d;  	compilable	  [FE]  AssertionFailedError  testPValueNearZero	17	2
44	[BUG]  [BUGGY]  out[i][j]  =  0.0;  [FE]  AssertionFailedError  testPValueNearZero  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  [BUGGY]  out[i][j]  =  0.0;  [BUGGY]  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	167	167	2	replace	out[i][j]  =  0.0;	out[i][j]  =  0d;  	compilable	  [FE]  AssertionFailedError  testPValueNearZero	17	2	replace
44	[BUG]  [BUGGY]  out[i][j]  =  0x;  [CE]  hexadecimal  numbers  must  contain  at  least  one  hexadecimal  digit  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  [BUGGY]  out[i][j]  =  0x;  [BUGGY]  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	167	167	2	replace	out[i][j]  =  0x;	out[i][j]  =  0d;  	non-compiled	[CE]  hexadecimal  numbers  must  contain  at  least  one  hexadecimal  digit	17	None	replace
81	[BUG]  [BUGGY]  int  nVars  =  tDistribution.getColumnDimension();  [CE]  cannot  find  symbol  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  [BUGGY]  int  nVars  =  tDistribution.getColumnDimension();  [BUGGY]  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =  tDistribution.getColumnDimension();	int  nVars  =  correlationMatrix.getColumnDimension();  	non-compiled	[CE]  cannot  find  symbol	7	None	replace
82	[BUG]  [BUGGY]  int  nVars  =  correlationMatrix.getVarCount();  [CE]  cannot  find  symbol  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  [BUGGY]  int  nVars  =  correlationMatrix.getVarCount();  [BUGGY]  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =  correlationMatrix.getVarCount();	int  nVars  =  correlationMatrix.getColumnDimension();  	non-compiled	[CE]  cannot  find  symbol	7	None	replace
84	[BUG]  [BUGGY]  int  nVars  =  tDistribution.getRowDimension();  [CE]  cannot  find  symbol  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  [BUGGY]  int  nVars  =  tDistribution.getRowDimension();  [BUGGY]  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =  tDistribution.getRowDimension();	int  nVars  =  correlationMatrix.getColumnDimension();  	non-compiled	[CE]  cannot  find  symbol	7	None	replace
121	[BUG]  [BUGGY]    out[i][j]  =  matrix.getCorrelationPvalues();  [CE]  cannot  find  symbol  matrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  [BUGGY]    out[i][j]  =  matrix.getCorrelationPvalues();  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	    out[i][j]  =  matrix.getCorrelationPvalues();		non-compiled	[CE]  cannot  find  symbol  matrix	20	None	add
122	[BUG]  [BUGGY]    CovarianceMatrix  matrix  =  getCovarianceMatrix();  [CE]  cannot  find  symbol  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  [BUGGY]    CovarianceMatrix  matrix  =  getCovarianceMatrix();  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	    CovarianceMatrix  matrix  =  getCovarianceMatrix();		non-compiled	[CE]  cannot  find  symbol	20	None	add
123	[BUG]  [BUGGY]    out[i][j]  =  matrix.getEntry(i,  j);  [CE]  cannot  find  symbol  matrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  [BUGGY]    out[i][j]  =  matrix.getEntry(i,  j);  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	    out[i][j]  =  matrix.getEntry(i,  j);		non-compiled	[CE]  cannot  find  symbol  matrix	20	None	add
124	[BUG]  [BUGGY]    out[i][j]  =  matrix.getCorrelationPValues();  [CE]  cannot  find  symbol  matrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  [BUGGY]    out[i][j]  =  matrix.getCorrelationPValues();  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	    out[i][j]  =  matrix.getCorrelationPValues();		non-compiled	[CE]  cannot  find  symbol  matrix	20	None	add
125	[BUG]  [BUGGY]    out[i][j]  =  matrix.getCovariance();  [CE]  cannot  find  symbol  matrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  [BUGGY]    out[i][j]  =  matrix.getCovariance();  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	    out[i][j]  =  matrix.getCovariance();		non-compiled	[CE]  cannot  find  symbol  matrix	20	None	add
142	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfObservations;  i++)  {  [CE]  cannot  find  symbol  numberOfObservations  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  [BUGGY]  for(int  i  =  0;  i  <  numberOfObservations;  i++)  {  [BUGGY]  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  numberOfObservations;  i++)  {	for  (int  i  =  0;  i  <  nVars;  i++)  {  	non-compiled	[CE]  cannot  find  symbol  numberOfObservations	11	None	replace
161	[BUG]  [BUGGY]    int  numberOfObservations  =  correlationMatrix.getNumberOfObservations();  [CE]  cannot  find  symbol  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  [BUGGY]    int  numberOfObservations  =  correlationMatrix.getNumberOfObservations();  [BUGGY]  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	166	166	2	replace	    int  numberOfObservations  =  correlationMatrix.getNumberOfObservations();		non-compiled	[CE]  cannot  find  symbol	16	None	add
162	[BUG]  [BUGGY]    int  numberOfObservations  =  matrix.getNumberOfObservations();  [CE]  cannot  find  symbol  matrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  [BUGGY]    int  numberOfObservations  =  matrix.getNumberOfObservations();  [BUGGY]  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	166	166	2	replace	    int  numberOfObservations  =  matrix.getNumberOfObservations();		non-compiled	[CE]  cannot  find  symbol  matrix	16	None	add
163	[BUG]  [BUGGY]    int  numberOfObservations  =  correlationMatrix.getNumberOfObservations(i);  [CE]  cannot  find  symbol  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  [BUGGY]    int  numberOfObservations  =  correlationMatrix.getNumberOfObservations(i);  [BUGGY]  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	166	166	2	replace	    int  numberOfObservations  =  correlationMatrix.getNumberOfObservations(i);		non-compiled	[CE]  cannot  find  symbol	16	None	add
164	[BUG]  [BUGGY]    out[i][j]  =  matrix.getEntry(i,  j);  [CE]  cannot  find  symbol  matrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  [BUGGY]    out[i][j]  =  matrix.getEntry(i,  j);  [BUGGY]  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	166	166	2	replace	    out[i][j]  =  matrix.getEntry(i,  j);		non-compiled	[CE]  cannot  find  symbol  matrix	16	None	add
165	[BUG]  [BUGGY]    double[][]  out  =  matrix.getCorrelationPvalues();  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  [BUGGY]    double[][]  out  =  matrix.getCorrelationPvalues();  [BUGGY]  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	166	166	2	replace	    double[][]  out  =  matrix.getCorrelationPvalues();		non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	16	None	add
222	[BUG]  [BUGGY]    Preconditions.checkNotNull(data);  [CE]  cannot  find  symbol  Preconditions  [CONTEXT]  public  PearsonsCorrelation(double[][]  data)  {  [BUGGY]    Preconditions.checkNotNull(data);  [BUGGY]  this(new  BlockRealMatrix(data));  }  [CLASS]  PearsonsCorrelation  [METHOD]  <init>  [RETURN_TYPE]  PearsonsCorrelation(double[][])  double[][]  data  [VARIABLES]  double[][]  data  boolean  RealMatrix  correlationMatrix  int  nObs  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	1.0	68	68	2	replace	    Preconditions.checkNotNull(data);		non-compiled	[CE]  cannot  find  symbol  Preconditions	2	None	add
223	[BUG]  [BUGGY]    Preconditions.checkArgument(data!=  null);  [CE]  cannot  find  symbol  Preconditions  [CONTEXT]  public  PearsonsCorrelation(double[][]  data)  {  [BUGGY]    Preconditions.checkArgument(data!=  null);  [BUGGY]  this(new  BlockRealMatrix(data));  }  [CLASS]  PearsonsCorrelation  [METHOD]  <init>  [RETURN_TYPE]  PearsonsCorrelation(double[][])  double[][]  data  [VARIABLES]  double[][]  data  boolean  RealMatrix  correlationMatrix  int  nObs  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	1.0	68	68	2	replace	    Preconditions.checkArgument(data!=  null);		non-compiled	[CE]  cannot  find  symbol  Preconditions	2	None	add
225	[BUG]  [BUGGY]    super(data);  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [CONTEXT]  public  PearsonsCorrelation(double[][]  data)  {  [BUGGY]    super(data);  [BUGGY]  this(new  BlockRealMatrix(data));  }  [CLASS]  PearsonsCorrelation  [METHOD]  <init>  [RETURN_TYPE]  PearsonsCorrelation(double[][])  double[][]  data  [VARIABLES]  double[][]  data  boolean  RealMatrix  correlationMatrix  int  nObs  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	1.0	68	68	2	replace	    super(data);		non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	2	None	add
261	[BUG]  [BUGGY]  this.correlationMatrix  =  getCorrelationMatrix();  [CE]  illegal  start  of  expression  [CONTEXT]  public  PearsonsCorrelation(double[][]  data)  {  this(new  BlockRealMatrix(data));  [BUGGY]  this.correlationMatrix  =  getCorrelationMatrix();  [BUGGY]    [CLASS]  PearsonsCorrelation  [METHOD]  <init>  [RETURN_TYPE]  PearsonsCorrelation(double[][])  double[][]  data  [VARIABLES]  double[][]  data  boolean  RealMatrix  correlationMatrix  int  nObs  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	1.0	69	69	2	replace	this.correlationMatrix  =  getCorrelationMatrix();	}  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
262	[BUG]  [BUGGY]  this.correlationMatrix  =  Math.exp(getNarObj(),  data);  [CE]  illegal  start  of  expression  [CONTEXT]  public  PearsonsCorrelation(double[][]  data)  {  this(new  BlockRealMatrix(data));  [BUGGY]  this.correlationMatrix  =  Math.exp(getNarObj(),  data);  [BUGGY]    [CLASS]  PearsonsCorrelation  [METHOD]  <init>  [RETURN_TYPE]  PearsonsCorrelation(double[][])  double[][]  data  [VARIABLES]  double[][]  data  boolean  RealMatrix  correlationMatrix  int  nObs  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	1.0	69	69	2	replace	this.correlationMatrix  =  Math.exp(getNarObj(),  data);	}  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
263	[BUG]  [BUGGY]  this.correlationMatrix  =  Math.exp(-getNeighborElement(),  data);  [CE]  illegal  start  of  expression  [CONTEXT]  public  PearsonsCorrelation(double[][]  data)  {  this(new  BlockRealMatrix(data));  [BUGGY]  this.correlationMatrix  =  Math.exp(-getNeighborElement(),  data);  [BUGGY]    [CLASS]  PearsonsCorrelation  [METHOD]  <init>  [RETURN_TYPE]  PearsonsCorrelation(double[][])  double[][]  data  [VARIABLES]  double[][]  data  boolean  RealMatrix  correlationMatrix  int  nObs  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	1.0	69	69	2	replace	this.correlationMatrix  =  Math.exp(-getNeighborElement(),  data);	}  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
264	[BUG]  [BUGGY]  this.correlationMatrix  =  correlationMatrix.get(data);  [CE]  illegal  start  of  expression  [CONTEXT]  public  PearsonsCorrelation(double[][]  data)  {  this(new  BlockRealMatrix(data));  [BUGGY]  this.correlationMatrix  =  correlationMatrix.get(data);  [BUGGY]    [CLASS]  PearsonsCorrelation  [METHOD]  <init>  [RETURN_TYPE]  PearsonsCorrelation(double[][])  double[][]  data  [VARIABLES]  double[][]  data  boolean  RealMatrix  correlationMatrix  int  nObs  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	1.0	69	69	2	replace	this.correlationMatrix  =  correlationMatrix.get(data);	}  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
281	[BUG]  [BUGGY]    int  numberOfObservations  =  correlationMatrix.getNumberOfObservations();  [CE]  cannot  find  symbol  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  [BUGGY]    int  numberOfObservations  =  correlationMatrix.getNumberOfObservations();  [BUGGY]  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	    int  numberOfObservations  =  correlationMatrix.getNumberOfObservations();		non-compiled	[CE]  cannot  find  symbol	10	None	add
282	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testPValueNearZero  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  [BUGGY]    int  numberOfObservations  =  correlationMatrix.getColumnDimension();  [BUGGY]  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	add	    int  numberOfObservations  =  correlationMatrix.getColumnDimension();		compilable	  [FE]  AssertionFailedError  testPValueNearZero	10	2
283	[BUG]  [BUGGY]    int  numberOfObservations  =  correlationMatrix.getColumnDimension();  [FE]  AssertionFailedError  testPValueNearZero  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  [BUGGY]    int  numberOfObservations  =  correlationMatrix.getColumnDimension();  [BUGGY]  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	    int  numberOfObservations  =  correlationMatrix.getColumnDimension();		compilable	  [FE]  AssertionFailedError  testPValueNearZero	10	2	add
283	[BUG]  [BUGGY]    int  numberOfObservations  =  matrix.getNumberOfObservations();  [CE]  cannot  find  symbol  matrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  [BUGGY]    int  numberOfObservations  =  matrix.getNumberOfObservations();  [BUGGY]  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	    int  numberOfObservations  =  matrix.getNumberOfObservations();		non-compiled	[CE]  cannot  find  symbol  matrix	10	None	add
284	[BUG]  [BUGGY]    int  numberOfObservations  =  tDistribution.getNumberOfObservations();  [CE]  cannot  find  symbol  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  [BUGGY]    int  numberOfObservations  =  tDistribution.getNumberOfObservations();  [BUGGY]  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	    int  numberOfObservations  =  tDistribution.getNumberOfObservations();		non-compiled	[CE]  cannot  find  symbol	10	None	add
302	[BUG]  [BUGGY]    int  numberOfObservations  =  correlationMatrix.getNumberOfObservations();  [CE]  cannot  find  symbol  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  [BUGGY]    int  numberOfObservations  =  correlationMatrix.getNumberOfObservations();  [BUGGY]  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	    int  numberOfObservations  =  correlationMatrix.getNumberOfObservations();		non-compiled	[CE]  cannot  find  symbol	12	None	add
304	[BUG]  [BUGGY]    int  numberOfObservations  =  tDistribution.getNumberOfObservations();  [CE]  cannot  find  symbol  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  [BUGGY]    int  numberOfObservations  =  tDistribution.getNumberOfObservations();  [BUGGY]  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	    int  numberOfObservations  =  tDistribution.getNumberOfObservations();		non-compiled	[CE]  cannot  find  symbol	12	None	add
305	[BUG]  [BUGGY]    CovarianceMatrix  matrix  =  getCovarianceMatrix();  [CE]  cannot  find  symbol  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  [BUGGY]    CovarianceMatrix  matrix  =  getCovarianceMatrix();  [BUGGY]  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	    CovarianceMatrix  matrix  =  getCovarianceMatrix();		non-compiled	[CE]  cannot  find  symbol	12	None	add
322	[BUG]  [BUGGY]    int  nObs  =  correlationMatrix.getNumberOfObservations();  [CE]  cannot  find  symbol  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  [BUGGY]    int  nObs  =  correlationMatrix.getNumberOfObservations();  [BUGGY]  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	161	161	2	replace	    int  nObs  =  correlationMatrix.getNumberOfObservations();		non-compiled	[CE]  cannot  find  symbol	6	None	add
323	[BUG]  [BUGGY]    int  numberOfObservations  =  correlationMatrix.getNumberOfObservations();  [CE]  cannot  find  symbol  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  [BUGGY]    int  numberOfObservations  =  correlationMatrix.getNumberOfObservations();  [BUGGY]  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	161	161	2	replace	    int  numberOfObservations  =  correlationMatrix.getNumberOfObservations();		non-compiled	[CE]  cannot  find  symbol	6	None	add
325	[BUG]  [BUGGY]    int  nObs  =  this.covarianceMatrix.getNodeOfObservations();  [CE]  cannot  find  symbol  covarianceMatrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  [BUGGY]    int  nObs  =  this.covarianceMatrix.getNodeOfObservations();  [BUGGY]  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	161	161	2	replace	    int  nObs  =  this.covarianceMatrix.getNodeOfObservations();		non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	6	None	add
341	[BUG]  [BUGGY]    nObs  =  Math.max(nObs,  data.length);  [CE]  variable  nObs  might  already  have  been  assigned  [CONTEXT]  public  PearsonsCorrelation(double[][]  data)  {  this(new  BlockRealMatrix(data));  [BUGGY]    nObs  =  Math.max(nObs,  data.length);  [BUGGY]  }  [CLASS]  PearsonsCorrelation  [METHOD]  <init>  [RETURN_TYPE]  PearsonsCorrelation(double[][])  double[][]  data  [VARIABLES]  double[][]  data  boolean  RealMatrix  correlationMatrix  int  nObs  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	1.0	69	69	2	replace	    nObs  =  Math.max(nObs,  data.length);		non-compiled	[CE]  variable  nObs  might  already  have  been  assigned	4	None	add
342	[BUG]  [BUGGY]    nObs  =  Math.min(nObs,  data.length);  [CE]  variable  nObs  might  already  have  been  assigned  [CONTEXT]  public  PearsonsCorrelation(double[][]  data)  {  this(new  BlockRealMatrix(data));  [BUGGY]    nObs  =  Math.min(nObs,  data.length);  [BUGGY]  }  [CLASS]  PearsonsCorrelation  [METHOD]  <init>  [RETURN_TYPE]  PearsonsCorrelation(double[][])  double[][]  data  [VARIABLES]  double[][]  data  boolean  RealMatrix  correlationMatrix  int  nObs  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	1.0	69	69	2	replace	    nObs  =  Math.min(nObs,  data.length);		non-compiled	[CE]  variable  nObs  might  already  have  been  assigned	4	None	add
345	[BUG]  [BUGGY]    this.correlationMatrix  =  Math.exp(this,  data);  [CE]  method  exp  in  class  Math  cannot  be  applied  to  given  types;  [CONTEXT]  public  PearsonsCorrelation(double[][]  data)  {  this(new  BlockRealMatrix(data));  [BUGGY]    this.correlationMatrix  =  Math.exp(this,  data);  [BUGGY]  }  [CLASS]  PearsonsCorrelation  [METHOD]  <init>  [RETURN_TYPE]  PearsonsCorrelation(double[][])  double[][]  data  [VARIABLES]  double[][]  data  boolean  RealMatrix  correlationMatrix  int  nObs  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	1.0	69	69	2	replace	    this.correlationMatrix  =  Math.exp(this,  data);		non-compiled	[CE]  method  exp  in  class  Math  cannot  be  applied  to  given  types;	4	None	add
361	[BUG]  [BUGGY]    int  numberOfObservations  =  correlationMatrix.getNumberOfObservations();  [CE]  cannot  find  symbol  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  [BUGGY]    int  numberOfObservations  =  correlationMatrix.getNumberOfObservations();  [BUGGY]  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	    int  numberOfObservations  =  correlationMatrix.getNumberOfObservations();		non-compiled	[CE]  cannot  find  symbol	14	None	add
362	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testPValueNearZero  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  [BUGGY]    int  numberOfObservations  =  correlationMatrix.getColumnDimension();  [BUGGY]  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	add	    int  numberOfObservations  =  correlationMatrix.getColumnDimension();		compilable	  [FE]  AssertionFailedError  testPValueNearZero	14	2
363	[BUG]  [BUGGY]    int  numberOfObservations  =  correlationMatrix.getColumnDimension();  [FE]  AssertionFailedError  testPValueNearZero  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  [BUGGY]    int  numberOfObservations  =  correlationMatrix.getColumnDimension();  [BUGGY]  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	    int  numberOfObservations  =  correlationMatrix.getColumnDimension();		compilable	  [FE]  AssertionFailedError  testPValueNearZero	14	2	add
363	[BUG]  [BUGGY]    int  numberOfObservations  =  matrix.getNumberOfObservations();  [CE]  cannot  find  symbol  matrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  [BUGGY]    int  numberOfObservations  =  matrix.getNumberOfObservations();  [BUGGY]  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	    int  numberOfObservations  =  matrix.getNumberOfObservations();		non-compiled	[CE]  cannot  find  symbol  matrix	14	None	add
364	[BUG]  [BUGGY]    out[i][0]  =  tDistribution.doubleValue();  [CE]  cannot  find  symbol  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  [BUGGY]    out[i][0]  =  tDistribution.doubleValue();  [BUGGY]  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	    out[i][0]  =  tDistribution.doubleValue();		non-compiled	[CE]  cannot  find  symbol	14	None	add
365	[BUG]  [BUGGY]    int  numberOfObservations  =  correlationMatrix.getNumberOfObservations(i);  [CE]  cannot  find  symbol  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  [BUGGY]    int  numberOfObservations  =  correlationMatrix.getNumberOfObservations(i);  [BUGGY]  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	    int  numberOfObservations  =  correlationMatrix.getNumberOfObservations(i);		non-compiled	[CE]  cannot  find  symbol	14	None	add
381	[BUG]  [BUGGY]    int  numberOfObservations  =  correlationMatrix.getNumberOfObservations();  [CE]  cannot  find  symbol  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  [BUGGY]    int  numberOfObservations  =  correlationMatrix.getNumberOfObservations();  [BUGGY]  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	    int  numberOfObservations  =  correlationMatrix.getNumberOfObservations();		non-compiled	[CE]  cannot  find  symbol	8	None	add
382	[BUG]  [BUGGY]    int  numberOfObservations  =  tDistribution.getNumberOfObservations();  [CE]  cannot  find  symbol  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  [BUGGY]    int  numberOfObservations  =  tDistribution.getNumberOfObservations();  [BUGGY]  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	    int  numberOfObservations  =  tDistribution.getNumberOfObservations();		non-compiled	[CE]  cannot  find  symbol	8	None	add
2	[BUG]  [BUGGY]    super();  correlationMatrix  =  new  RealMatrix(data);  [CE]  RealMatrix  is  abstract;  cannot  be  instantiated  [CONTEXT]  public  PearsonsCorrelation(double[][]  data)  {  [BUGGY]    super();  correlationMatrix  =  new  RealMatrix(data);  [BUGGY]  this(new  BlockRealMatrix(data));  }  [CLASS]  PearsonsCorrelation  [METHOD]  <init>  [RETURN_TYPE]  PearsonsCorrelation(double[][])  double[][]  data  [VARIABLES]  double[][]  data  boolean  RealMatrix  correlationMatrix  int  nObs  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	1.0	68	68	2	replace	    super();  correlationMatrix  =  new  RealMatrix(data);		non-compiled	[CE]  RealMatrix  is  abstract;  cannot  be  instantiated	2	None	add
3	[BUG]  [BUGGY]    super();  correlationMatrix  =  new  RealMatrix(data,  false);  [CE]  RealMatrix  is  abstract;  cannot  be  instantiated  [CONTEXT]  public  PearsonsCorrelation(double[][]  data)  {  [BUGGY]    super();  correlationMatrix  =  new  RealMatrix(data,  false);  [BUGGY]  this(new  BlockRealMatrix(data));  }  [CLASS]  PearsonsCorrelation  [METHOD]  <init>  [RETURN_TYPE]  PearsonsCorrelation(double[][])  double[][]  data  [VARIABLES]  double[][]  data  boolean  RealMatrix  correlationMatrix  int  nObs  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	1.0	68	68	2	replace	    super();  correlationMatrix  =  new  RealMatrix(data,  false);		non-compiled	[CE]  RealMatrix  is  abstract;  cannot  be  instantiated	2	None	add
4	[BUG]  [BUGGY]    this(new  Double(data));  [CE]  no  suitable  constructor  found  for  Double(double[][])  [CONTEXT]  public  PearsonsCorrelation(double[][]  data)  {  [BUGGY]    this(new  Double(data));  [BUGGY]  this(new  BlockRealMatrix(data));  }  [CLASS]  PearsonsCorrelation  [METHOD]  <init>  [RETURN_TYPE]  PearsonsCorrelation(double[][])  double[][]  data  [VARIABLES]  double[][]  data  boolean  RealMatrix  correlationMatrix  int  nObs  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	1.0	68	68	2	replace	    this(new  Double(data));		non-compiled	[CE]  no  suitable  constructor  found  for  Double(double[][])	2	None	add
5	[BUG]  [BUGGY]    super();  correlationMatrix  =  new  RealMatrix(data,  0,  data.length);  [CE]  RealMatrix  is  abstract;  cannot  be  instantiated  [CONTEXT]  public  PearsonsCorrelation(double[][]  data)  {  [BUGGY]    super();  correlationMatrix  =  new  RealMatrix(data,  0,  data.length);  [BUGGY]  this(new  BlockRealMatrix(data));  }  [CLASS]  PearsonsCorrelation  [METHOD]  <init>  [RETURN_TYPE]  PearsonsCorrelation(double[][])  double[][]  data  [VARIABLES]  double[][]  data  boolean  RealMatrix  correlationMatrix  int  nObs  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	1.0	68	68	2	replace	    super();  correlationMatrix  =  new  RealMatrix(data,  0,  data.length);		non-compiled	[CE]  RealMatrix  is  abstract;  cannot  be  instantiated	2	None	add
31	[BUG]  [BUGGY]    setNumberOfLinks(data);  [CE]  cannot  find  symbol  [CONTEXT]  public  PearsonsCorrelation(double[][]  data)  {  this(new  BlockRealMatrix(data));  [BUGGY]    setNumberOfLinks(data);  [BUGGY]  }  [CLASS]  PearsonsCorrelation  [METHOD]  <init>  [RETURN_TYPE]  PearsonsCorrelation(double[][])  double[][]  data  [VARIABLES]  double[][]  data  boolean  RealMatrix  correlationMatrix  int  nObs  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	1.0	69	69	2	replace	    setNumberOfLinks(data);		non-compiled	[CE]  cannot  find  symbol	4	None	add
32	[BUG]  [BUGGY]    setNumberOfLinks(new  Double(data));  [CE]  no  suitable  constructor  found  for  Double(double[][])  [CONTEXT]  public  PearsonsCorrelation(double[][]  data)  {  this(new  BlockRealMatrix(data));  [BUGGY]    setNumberOfLinks(new  Double(data));  [BUGGY]  }  [CLASS]  PearsonsCorrelation  [METHOD]  <init>  [RETURN_TYPE]  PearsonsCorrelation(double[][])  double[][]  data  [VARIABLES]  double[][]  data  boolean  RealMatrix  correlationMatrix  int  nObs  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	1.0	69	69	2	replace	    setNumberOfLinks(new  Double(data));		non-compiled	[CE]  no  suitable  constructor  found  for  Double(double[][])	4	None	add
33	[BUG]  [BUGGY]    setNobs(nObs);  [CE]  cannot  find  symbol  [CONTEXT]  public  PearsonsCorrelation(double[][]  data)  {  this(new  BlockRealMatrix(data));  [BUGGY]    setNobs(nObs);  [BUGGY]  }  [CLASS]  PearsonsCorrelation  [METHOD]  <init>  [RETURN_TYPE]  PearsonsCorrelation(double[][])  double[][]  data  [VARIABLES]  double[][]  data  boolean  RealMatrix  correlationMatrix  int  nObs  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	1.0	69	69	2	replace	    setNobs(nObs);		non-compiled	[CE]  cannot  find  symbol	4	None	add
34	[BUG]  [BUGGY]    setNumberOfLinks(1);  [CE]  cannot  find  symbol  [CONTEXT]  public  PearsonsCorrelation(double[][]  data)  {  this(new  BlockRealMatrix(data));  [BUGGY]    setNumberOfLinks(1);  [BUGGY]  }  [CLASS]  PearsonsCorrelation  [METHOD]  <init>  [RETURN_TYPE]  PearsonsCorrelation(double[][])  double[][]  data  [VARIABLES]  double[][]  data  boolean  RealMatrix  correlationMatrix  int  nObs  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	1.0	69	69	2	replace	    setNumberOfLinks(1);		non-compiled	[CE]  cannot  find  symbol	4	None	add
35	[BUG]  [BUGGY]    setNumberOfLinks(new  Double(data.length));  [CE]  cannot  find  symbol  [CONTEXT]  public  PearsonsCorrelation(double[][]  data)  {  this(new  BlockRealMatrix(data));  [BUGGY]    setNumberOfLinks(new  Double(data.length));  [BUGGY]  }  [CLASS]  PearsonsCorrelation  [METHOD]  <init>  [RETURN_TYPE]  PearsonsCorrelation(double[][])  double[][]  data  [VARIABLES]  double[][]  data  boolean  RealMatrix  correlationMatrix  int  nObs  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	1.0	69	69	2	replace	    setNumberOfLinks(new  Double(data.length));		non-compiled	[CE]  cannot  find  symbol	4	None	add
61	[BUG]  [BUGGY]    covarianceMatrix.setColumnDimension(nObs  -  1);  [CE]  cannot  find  symbol  covarianceMatrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  [BUGGY]    covarianceMatrix.setColumnDimension(nObs  -  1);  [BUGGY]  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	    covarianceMatrix.setColumnDimension(nObs  -  1);		non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	12	None	add
63	[BUG]  [BUGGY]    int  numberOfObservations  =  count(nVars  -  1);  [CE]  cannot  find  symbol  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  [BUGGY]    int  numberOfObservations  =  count(nVars  -  1);  [BUGGY]  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	    int  numberOfObservations  =  count(nVars  -  1);		non-compiled	[CE]  cannot  find  symbol	12	None	add
64	[BUG]  [BUGGY]    covarianceMatrix.setColumnDimension(nVars  -  1);  [CE]  cannot  find  symbol  covarianceMatrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  [BUGGY]    covarianceMatrix.setColumnDimension(nVars  -  1);  [BUGGY]  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	    covarianceMatrix.setColumnDimension(nVars  -  1);		non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	12	None	add
65	[BUG]  [BUGGY]    covarianceMatrix.setColumnDimension(nObs  +  1);  [CE]  cannot  find  symbol  covarianceMatrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  [BUGGY]    covarianceMatrix.setColumnDimension(nObs  +  1);  [BUGGY]  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	    covarianceMatrix.setColumnDimension(nObs  +  1);		non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	12	None	add
93	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testPValueNearZero  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  [BUGGY]  TDistribution  tDistribution  =  new  TDistributionImpl(this.nObs  -  2);  [BUGGY]  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	161	161	2	add	TDistribution  tDistribution  =  new  TDistributionImpl(this.nObs  -  2);	TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  	compilable	  [FE]  AssertionFailedError  testPValueNearZero	5	2
94	[BUG]  [BUGGY]  TDistribution  tDistribution  =  new  TDistributionImpl(this.nObs  -  2);  [FE]  AssertionFailedError  testPValueNearZero  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  [BUGGY]  TDistribution  tDistribution  =  new  TDistributionImpl(this.nObs  -  2);  [BUGGY]  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	161	161	2	replace	TDistribution  tDistribution  =  new  TDistributionImpl(this.nObs  -  2);	TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  	compilable	  [FE]  AssertionFailedError  testPValueNearZero	5	2	replace
94	[BUG]  [BUGGY]  TDistribution  tDistribution  =  new  TDistributionImpl(NumberOfObservations  -  2);  [CE]  cannot  find  symbol  NumberOfObservations  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  [BUGGY]  TDistribution  tDistribution  =  new  TDistributionImpl(NumberOfObservations  -  2);  [BUGGY]  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	161	161	2	replace	TDistribution  tDistribution  =  new  TDistributionImpl(NumberOfObservations  -  2);	TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  	non-compiled	[CE]  cannot  find  symbol  NumberOfObservations	5	None	replace
124	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numbersOfObservations;  i++)  {  [CE]  cannot  find  symbol  numbersOfObservations  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  [BUGGY]  for(int  i  =  0;  i  <  numbersOfObservations;  i++)  {  [BUGGY]  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  numbersOfObservations;  i++)  {	for  (int  i  =  0;  i  <  nVars;  i++)  {  	non-compiled	[CE]  cannot  find  symbol  numbersOfObservations	11	None	replace
151	[BUG]  [BUGGY]    out[i][j]  =  matrix.get(i);  [CE]  cannot  find  symbol  matrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  [BUGGY]    out[i][j]  =  matrix.get(i);  [BUGGY]  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	166	166	2	replace	    out[i][j]  =  matrix.get(i);		non-compiled	[CE]  cannot  find  symbol  matrix	16	None	add
152	[BUG]  [BUGGY]    covarianceMatrix.validate(i,  out[i][j]);  [CE]  cannot  find  symbol  covarianceMatrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  [BUGGY]    covarianceMatrix.validate(i,  out[i][j]);  [BUGGY]  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	166	166	2	replace	    covarianceMatrix.validate(i,  out[i][j]);		non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	16	None	add
153	[BUG]  [BUGGY]    covarianceMatrix.set(i,  out[i][j].multiply(tDistribution.cumulativeProbability(i)));  [CE]  double  cannot  be  dereferenced  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  [BUGGY]    covarianceMatrix.set(i,  out[i][j].multiply(tDistribution.cumulativeProbability(i)));  [BUGGY]  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	166	166	2	replace	    covarianceMatrix.set(i,  out[i][j].multiply(tDistribution.cumulativeProbability(i)));		non-compiled	[CE]  double  cannot  be  dereferenced	16	None	add
154	[BUG]  [BUGGY]    covarianceMatrix.set(i,  out[i][j]);  [CE]  cannot  find  symbol  covarianceMatrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  [BUGGY]    covarianceMatrix.set(i,  out[i][j]);  [BUGGY]  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	166	166	2	replace	    covarianceMatrix.set(i,  out[i][j]);		non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	16	None	add
155	[BUG]  [BUGGY]    covarianceMatrix.set(i,  out[i][j].multiply(tDistribution.value(i)));  [CE]  cannot  find  symbol  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  [BUGGY]    covarianceMatrix.set(i,  out[i][j].multiply(tDistribution.value(i)));  [BUGGY]  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	166	166	2	replace	    covarianceMatrix.set(i,  out[i][j].multiply(tDistribution.value(i)));		non-compiled	[CE]  cannot  find  symbol	16	None	add
184	[BUG]  [BUGGY]  int  nVars  =  covarianceMatrix.getColumnDimension();  [CE]  cannot  find  symbol  covarianceMatrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  [BUGGY]  int  nVars  =  covarianceMatrix.getColumnDimension();  [BUGGY]  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	int  nVars  =  covarianceMatrix.getColumnDimension();	int  nVars  =  correlationMatrix.getColumnDimension();  	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	7	None	replace
214	[BUG]  [BUGGY]  this(new  BlockRealMatrix(data),  false);  [CE]  no  suitable  constructor  found  for  PearsonsCorrelation(BlockRealMatrix,boolean)  [CONTEXT]  public  PearsonsCorrelation(double[][]  data)  {  [BUGGY]  this(new  BlockRealMatrix(data),  false);  [BUGGY]  }  [CLASS]  PearsonsCorrelation  [METHOD]  <init>  [RETURN_TYPE]  PearsonsCorrelation(double[][])  double[][]  data  [VARIABLES]  double[][]  data  boolean  RealMatrix  correlationMatrix  int  nObs  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	1.0	68	68	2	replace	this(new  BlockRealMatrix(data),  false);	this(new  BlockRealMatrix(data));  	non-compiled	[CE]  no  suitable  constructor  found  for  PearsonsCorrelation(BlockRealMatrix,boolean)	1	None	replace
243	[BUG]  [BUGGY]    int  nObs  =  this.covarianceMatrix.getNumberOfObservations();  [CE]  cannot  find  symbol  covarianceMatrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  [BUGGY]    int  nObs  =  this.covarianceMatrix.getNumberOfObservations();  [BUGGY]  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	161	161	2	replace	    int  nObs  =  this.covarianceMatrix.getNumberOfObservations();		non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	6	None	add
273	[BUG]  [BUGGY]  double  r  =  this.covarianceMatrix.getEntry(i,  j);  [CE]  cannot  find  symbol  covarianceMatrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  [BUGGY]  double  r  =  this.covarianceMatrix.getEntry(i,  j);  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	double  r  =  this.covarianceMatrix.getEntry(i,  j);	double  r  =  correlationMatrix.getEntry(i,  j);  	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	19	None	replace
332	[BUG]  [BUGGY]    out[i][j]  =  matrix.getValue(i,  j);  [CE]  cannot  find  symbol  matrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  [BUGGY]    out[i][j]  =  matrix.getValue(i,  j);  [BUGGY]  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	167	167	2	replace	    out[i][j]  =  matrix.getValue(i,  j);		non-compiled	[CE]  cannot  find  symbol  matrix	18	None	add
333	[BUG]  [BUGGY]    out[i][j]  =  matrix.getColumnDimension();  [CE]  cannot  find  symbol  matrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  [BUGGY]    out[i][j]  =  matrix.getColumnDimension();  [BUGGY]  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	167	167	2	replace	    out[i][j]  =  matrix.getColumnDimension();		non-compiled	[CE]  cannot  find  symbol  matrix	18	None	add
334	[BUG]  [BUGGY]    out[i][j]  =  matrix.get(i);  [CE]  cannot  find  symbol  matrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  [BUGGY]    out[i][j]  =  matrix.get(i);  [BUGGY]  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	167	167	2	replace	    out[i][j]  =  matrix.get(i);		non-compiled	[CE]  cannot  find  symbol  matrix	18	None	add
335	[BUG]  [BUGGY]    covarianceMatrix.set(i,  j);  [CE]  cannot  find  symbol  covarianceMatrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  [BUGGY]    covarianceMatrix.set(i,  j);  [BUGGY]  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	167	167	2	replace	    covarianceMatrix.set(i,  j);		non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	18	None	add
391	[BUG]  [BUGGY]    out[i][j]  =  matrix.getColumnDimension();  [CE]  cannot  find  symbol  matrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  [BUGGY]    out[i][j]  =  matrix.getColumnDimension();  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	    out[i][j]  =  matrix.getColumnDimension();		non-compiled	[CE]  cannot  find  symbol  matrix	20	None	add
392	[BUG]  [BUGGY]    out[i][j]  =  matrix.getValue(i,  j);  [CE]  cannot  find  symbol  matrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  [BUGGY]    out[i][j]  =  matrix.getValue(i,  j);  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	    out[i][j]  =  matrix.getValue(i,  j);		non-compiled	[CE]  cannot  find  symbol  matrix	20	None	add
394	[BUG]  [BUGGY]    out[i][j]  =  matrix.get(i);  [CE]  cannot  find  symbol  matrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  [BUGGY]    out[i][j]  =  matrix.get(i);  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	    out[i][j]  =  matrix.get(i);		non-compiled	[CE]  cannot  find  symbol  matrix	20	None	add
395	[BUG]  [BUGGY]    covarianceMatrix.set(i,  j);  [CE]  cannot  find  symbol  covarianceMatrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  [BUGGY]    covarianceMatrix.set(i,  j);  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	169	169	2	replace	    covarianceMatrix.set(i,  j);		non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	20	None	add
422	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numberOfObservations.length;  j++)  {  [CE]  cannot  find  symbol  numberOfObservations  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  [BUGGY]  for(int  j  =  0;  j  <  numberOfObservations.length;  j++)  {  [BUGGY]  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int  j  =  0;  j  <  numberOfObservations.length;  j++)  {	for  (int  j  =  0;  j  <  nVars;  j++)  {  	non-compiled	[CE]  cannot  find  symbol  numberOfObservations	13	None	replace
423	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  numbersOfObservations;  j++)  {  [CE]  cannot  find  symbol  numbersOfObservations  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  [BUGGY]  for(int  j  =  0;  j  <  numbersOfObservations;  j++)  {  [BUGGY]  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	for(int  j  =  0;  j  <  numbersOfObservations;  j++)  {	for  (int  j  =  0;  j  <  nVars;  j++)  {  	non-compiled	[CE]  cannot  find  symbol  numbersOfObservations	13	None	replace
451	[BUG]  [BUGGY]    out[i][i]  =  matrix.get(i);  [CE]  cannot  find  symbol  matrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  [BUGGY]    out[i][i]  =  matrix.get(i);  [BUGGY]  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	    out[i][i]  =  matrix.get(i);		non-compiled	[CE]  cannot  find  symbol  matrix	14	None	add
452	[BUG]  [BUGGY]    out[i][0]  =  matrix.get(i);  [CE]  cannot  find  symbol  matrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  [BUGGY]    out[i][0]  =  matrix.get(i);  [BUGGY]  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	    out[i][0]  =  matrix.get(i);		non-compiled	[CE]  cannot  find  symbol  matrix	14	None	add
453	[BUG]  [BUGGY]    out[i][i]  =  matrix.getColumnDimension();  [CE]  cannot  find  symbol  matrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  [BUGGY]    out[i][i]  =  matrix.getColumnDimension();  [BUGGY]  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	    out[i][i]  =  matrix.getColumnDimension();		non-compiled	[CE]  cannot  find  symbol  matrix	14	None	add
454	[BUG]  [BUGGY]    nVars  =  matrix.getNumberOfObservations();  [CE]  cannot  find  symbol  matrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  [BUGGY]    nVars  =  matrix.getNumberOfObservations();  [BUGGY]  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	    nVars  =  matrix.getNumberOfObservations();		non-compiled	[CE]  cannot  find  symbol  matrix	14	None	add
455	[BUG]  [BUGGY]    out[i][i]  =  matrix.getValue(i);  [CE]  cannot  find  symbol  matrix  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  [BUGGY]    out[i][i]  =  matrix.getValue(i);  [BUGGY]  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	165	165	2	replace	    out[i][i]  =  matrix.getValue(i);		non-compiled	[CE]  cannot  find  symbol  matrix	14	None	add
483	[BUG]  [BUGGY]  out[i][j]  =  value;  [CE]  cannot  find  symbol  value  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  [BUGGY]  out[i][j]  =  value;  [BUGGY]  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	167	167	2	replace	out[i][j]  =  value;	out[i][j]  =  0d;  	non-compiled	[CE]  cannot  find  symbol  value	17	None	replace
514	[BUG]  [BUGGY]    int  numberOfObservations  =  Math.abs(tDistribution.numberOfObservations);  [CE]  cannot  find  symbol  numberOfObservations  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  [BUGGY]    int  numberOfObservations  =  Math.abs(tDistribution.numberOfObservations);  [BUGGY]  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	    int  numberOfObservations  =  Math.abs(tDistribution.numberOfObservations);		non-compiled	[CE]  cannot  find  symbol  numberOfObservations	8	None	add
515	[BUG]  [BUGGY]    int  numberOfObservations  =  Math.abs(tDistribution.numberOfObservations  -  1);  [CE]  cannot  find  symbol  numberOfObservations  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  [BUGGY]    int  numberOfObservations  =  Math.abs(tDistribution.numberOfObservations  -  1);  [BUGGY]  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	162	162	2	replace	    int  numberOfObservations  =  Math.abs(tDistribution.numberOfObservations  -  1);		non-compiled	[CE]  cannot  find  symbol  numberOfObservations	8	None	add
574	[BUG]  [BUGGY]    int  numberOfObservations  =  Math.max(nVars,  tDistribution.numberOfObservations);  [CE]  cannot  find  symbol  numberOfObservations  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  [BUGGY]    int  numberOfObservations  =  Math.max(nVars,  tDistribution.numberOfObservations);  [BUGGY]  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	    int  numberOfObservations  =  Math.max(nVars,  tDistribution.numberOfObservations);		non-compiled	[CE]  cannot  find  symbol  numberOfObservations	10	None	add
575	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testPValueNearZero  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  [BUGGY]    int  numberOfObservations  =  Math.abs(nVars  -  1);  [BUGGY]  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	add	    int  numberOfObservations  =  Math.abs(nVars  -  1);		compilable	  [FE]  AssertionFailedError  testPValueNearZero	10	2
576	[BUG]  [BUGGY]    int  numberOfObservations  =  Math.abs(nVars  -  1);  [FE]  AssertionFailedError  testPValueNearZero  [CONTEXT]  public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  [BUGGY]    int  numberOfObservations  =  Math.abs(nVars  -  1);  [BUGGY]  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	    int  numberOfObservations  =  Math.abs(nVars  -  1);		compilable	  [FE]  AssertionFailedError  testPValueNearZero	10	2	add
