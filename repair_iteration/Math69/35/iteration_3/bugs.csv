bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  size  =  xArray.getSize();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double  size  =  xArray.getSize();  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double  size  =  xArray.getSize();	  double    size    =    regression.getSize();    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
2	[BUG]  [BUGGY]  double  size  =  regression.getSize()  +  1;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double  size  =  regression.getSize()  +  1;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double  size  =  regression.getSize()  +  1;	  double    size    =    regression.getSize();    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
3	[BUG]  [BUGGY]  double  size  =  yArray.getSize();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double  size  =  yArray.getSize();  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double  size  =  yArray.getSize();	  double    size    =    regression.getSize();    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
4	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length  >=  xArray.length)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(yArray.length  >=  xArray.length)  {	  if(xArray.length    >=    yArray.length)    {    	compilable	  [FE]  AssertionFailedError  	55	3	replace
5	[BUG]  [BUGGY]  if(yArray.length  >=  xArray.length)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length  >=  xArray.length)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length  >=  xArray.length)  {	  if(xArray.length    >=    yArray.length)    {    	compilable	  [FE]  AssertionFailedError  	55	3	replace
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length  ==  xArray.length)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(yArray.length  ==  xArray.length)  {	  if(xArray.length    ==    yArray.length    ||    xArray.length    >    1)    {    if(xArray.length    >=    yArray.length    ||    xArray.length    >    1)    {    	compilable	  [FE]  AssertionFailedError  	32	3	replace
7	[BUG]  [BUGGY]  if(yArray.length  ==  xArray.length)  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length  ==  xArray.length)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length  ==  xArray.length)  {	  if(xArray.length    ==    yArray.length    ||    xArray.length    >    1)    {    if(xArray.length    >=    yArray.length    ||    xArray.length    >    1)    {    	compilable	  [FE]  AssertionFailedError  	32	3	replace
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length  ==  yArray.length  ||  yArray.length  <  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(xArray.length  ==  yArray.length  ||  yArray.length  <  1)  {	  if(yArray.length    ==    xArray.length    ||    yArray.length    >    1)    {    	compilable	  [FE]  AssertionFailedError  	28	3	replace
9	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length  ||  yArray.length  <  1)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length  ==  yArray.length  ||  yArray.length  <  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length  ==  yArray.length  ||  yArray.length  <  1)  {	  if(yArray.length    ==    xArray.length    ||    yArray.length    >    1)    {    	compilable	  [FE]  AssertionFailedError  	28	3	replace
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length  ==  yArray.length  ||  yArray.length!=  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(xArray.length  ==  yArray.length  ||  yArray.length!=  1)  {	  if(yArray.length    ==    xArray.length    ||    yArray.length    >    1)    {    	compilable	  [FE]  AssertionFailedError  	28	3	replace
11	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length  ||  yArray.length!=  1)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length  ==  yArray.length  ||  yArray.length!=  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length  ==  yArray.length  ||  yArray.length!=  1)  {	  if(yArray.length    ==    xArray.length    ||    yArray.length    >    1)    {    	compilable	  [FE]  AssertionFailedError  	28	3	replace
12	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  yArray.getCovarianceMatrix(regression);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  RealMatrix  covarianceMatrix  =  yArray.getCovarianceMatrix(regression);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix  covarianceMatrix  =  yArray.getCovarianceMatrix(regression);	  RealMatrix    covarianceMatrix    =    yArray.getCovarianceMatrix();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
13	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  xArray.getCovarianceMatrix();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  RealMatrix  covarianceMatrix  =  xArray.getCovarianceMatrix();  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix  covarianceMatrix  =  xArray.getCovarianceMatrix();	  RealMatrix    covarianceMatrix    =    yArray.getCovarianceMatrix();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
14	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  ==  1)  {  if(xArray.length!=  yArray.length  ||  xArray.length  ==  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  ==  1)  {  if(xArray.length!=  yArray.length  ||  xArray.length  ==  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=    yArray.length    ||    xArray.length    ==    1)    {    if(xArray.length!=  yArray.length  ||  xArray.length  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
15	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  ==  1)  {  if(xArray.length  >=  yArray.length  ||  xArray.length  ==  1)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  ==  1)  {  if(xArray.length  >=  yArray.length  ||  xArray.length  ==  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=    yArray.length    ||    xArray.length    ==    1)    {    if(xArray.length  >=  yArray.length  ||  xArray.length  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
16	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  ==  1)  {  if(xArray.length  ==  yArray.length  ||  xArray.length  ==  1)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  ==  1)  {  if(xArray.length  ==  yArray.length  ||  xArray.length  ==  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=    yArray.length    ||    xArray.length    ==    1)    {    if(xArray.length  ==  yArray.length  ||  xArray.length  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
17	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  ==  1)  {  If(xArray.length!=  yArray.length  ||  xArray.length  ==  1)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  ==  1)  {  If(xArray.length!=  yArray.length  ||  xArray.length  ==  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=    yArray.length    ||    xArray.length    ==    1)    {    If(xArray.length!=  yArray.length  ||  xArray.length  ==  1)  {	  	non-compiled	[CE]  ';'  expected	23	None	add
18	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(regression,  yArray);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(regression,  yArray);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix  covarianceMatrix  =  getCovarianceMatrix(regression,  yArray);	  RealMatrix    covarianceMatrix    =    getCovarianceMatrix(regression);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
19	[BUG]  [BUGGY]  int  nVars  =  Math.max(yArray.getR().computeValue(xArray),  yArray.length);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  int  nVars  =  Math.max(yArray.getR().computeValue(xArray),  yArray.length);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  nVars  =  Math.max(yArray.getR().computeValue(xArray),  yArray.length);	  int    nVars    =    Math.max(yArray.getR().computeValue(xArray),    regression);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
20	[BUG]  [BUGGY]  int  nVars  =  Math.max(yArray.getR().computeValue(xArray)/  2,  regression);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  int  nVars  =  Math.max(yArray.getR().computeValue(xArray)/  2,  regression);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  nVars  =  Math.max(yArray.getR().computeValue(xArray)/  2,  regression);	  int    nVars    =    Math.max(yArray.getR().computeValue(xArray),    regression);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
21	[BUG]  [BUGGY]  int  nVars  =  Math.max(yArray.getR().computeValue(xArray,  yArray.length));  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  int  nVars  =  Math.max(yArray.getR().computeValue(xArray,  yArray.length));  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  nVars  =  Math.max(yArray.getR().computeValue(xArray,  yArray.length));	  int    nVars    =    Math.max(yArray.getR().computeValue(xArray),    regression);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
22	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length!=  yArray.length  ||  yArray.length  <  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(xArray.length!=  yArray.length  ||  yArray.length  <  1)  {	  if(yArray.length!=    xArray.length    ||    yArray.length    >    1)    {    	compilable	  [FE]  MathRuntimeException$4  	90	13	replace
23	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length  ||  yArray.length  <  1)  {  [FE]  MathRuntimeException$4  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length!=  yArray.length  ||  yArray.length  <  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=  yArray.length  ||  yArray.length  <  1)  {	  if(yArray.length!=    xArray.length    ||    yArray.length    >    1)    {    	compilable	  [FE]  MathRuntimeException$4  	90	13	replace
24	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length!=  yArray.length  ||  yArray.length  ==  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(xArray.length!=  yArray.length  ||  yArray.length  ==  1)  {	  if(yArray.length!=    xArray.length    ||    yArray.length    >    1)    {    	compilable	  [FE]  AssertionFailedError  	90	14	replace
25	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length  ||  yArray.length  ==  1)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length!=  yArray.length  ||  yArray.length  ==  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=  yArray.length  ||  yArray.length  ==  1)  {	  if(yArray.length!=    xArray.length    ||    yArray.length    >    1)    {    	compilable	  [FE]  AssertionFailedError  	90	14	replace
26	[BUG]  [BUGGY]  Double[]  xArray  =(double[])dataRegression.clone();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  Double[]  xArray  =(double[])dataRegression.clone();  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Double[]  xArray  =(double[])dataRegression.clone();	  Double[]    xArray    =(double[])regression.clone();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
27	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  <  1)  {  if(xArray.length!=  yArray.length  ||  xArray.length  <  1)  {  [CE]  illegal  start  of  expression  [FE]    MathRuntimeException$4    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  <  1)  {  if(xArray.length!=  yArray.length  ||  xArray.length  <  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=    yArray.length    ||    xArray.length    <    1)    {    if(xArray.length!=  yArray.length  ||  xArray.length  <  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
28	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  <  1)  {  if(xArray.length  >=  yArray.length  ||  xArray.length  <  1)  {  [CE]  illegal  start  of  expression  [FE]      MathRuntimeException$4    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  <  1)  {  if(xArray.length  >=  yArray.length  ||  xArray.length  <  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=    yArray.length    ||    xArray.length    <    1)    {    if(xArray.length  >=  yArray.length  ||  xArray.length  <  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
29	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  <  1)  {  if(xArray.length  ==  yArray.length  ||  xArray.length  <  1)  {  [CE]  illegal  start  of  expression  [FE]        MathRuntimeException$4    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  <  1)  {  if(xArray.length  ==  yArray.length  ||  xArray.length  <  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=    yArray.length    ||    xArray.length    <    1)    {    if(xArray.length  ==  yArray.length  ||  xArray.length  <  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
30	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  <  1)  {  if(xArray.length  >>  yArray.length  ||  xArray.length  <  1)  {  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$4    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  <  1)  {  if(xArray.length  >>  yArray.length  ||  xArray.length  <  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=    yArray.length    ||    xArray.length    <    1)    {    if(xArray.length  >>  yArray.length  ||  xArray.length  <  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
31	[BUG]  [BUGGY]  Regression  <  double>  regression  =  xArray.removeDouble(yArray);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  Regression  <  double>  regression  =  xArray.removeDouble(yArray);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  <  double>  regression  =  xArray.removeDouble(yArray);	  Regression    <    double>    regression    =    xArray.removeDouble(regression);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
32	[BUG]  [BUGGY]  double[]  yArray  =(double[])xArray.clone();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  yArray  =(double[])xArray.clone();  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  yArray  =(double[])xArray.clone();	  double[]    yArray    =(double[])yArray.clone();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
33	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length!=  xArray.length  ||  xArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(yArray.length!=  xArray.length  ||  xArray.length  >  1)  {	  if(xArray.length!=    yArray.length    ||    xArray.length    >    1)    {    if(xArray.length    >=    yArray.length    ||    xArray.length    >    1)    {    	compilable	  [FE]  AssertionFailedError  	60	2	replace
34	[BUG]  [BUGGY]  if(yArray.length!=  xArray.length  ||  xArray.length  >  1)  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length!=  xArray.length  ||  xArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length!=  xArray.length  ||  xArray.length  >  1)  {	  if(xArray.length!=    yArray.length    ||    xArray.length    >    1)    {    if(xArray.length    >=    yArray.length    ||    xArray.length    >    1)    {    	compilable	  [FE]  AssertionFailedError  	60	2	replace
35	[BUG]  [BUGGY]  int  size  =  xArray.length;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  int  size  =  xArray.length;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  size  =  xArray.length;	  int    size    =    yArray.length;    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
36	[BUG]  [BUGGY]  double  size  =  yArray.length;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double  size  =  yArray.length;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double  size  =  yArray.length;	  int    size    =    yArray.length;    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
37	[BUG]  [BUGGY]  int  size  =  yArray.length  -  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  int  size  =  yArray.length  -  1;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  size  =  yArray.length  -  1;	  int    size    =    yArray.length;    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
38	[BUG]  [BUGGY]  Double[]  xArray  =  new  double[yArray.length  +  1];  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  Double[]  xArray  =  new  double[yArray.length  +  1];  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Double[]  xArray  =  new  double[yArray.length  +  1];	  double[]    xArray    =    new    double[yArray.length    +    2];    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
39	[BUG]  [BUGGY]  int  nVars  =  Math.max(regression.getR().computeValue(xArray,  yArray,  1));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  int  nVars  =  Math.max(regression.getR().computeValue(xArray,  yArray,  1));  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  nVars  =  Math.max(regression.getR().computeValue(xArray,  yArray,  1));	  int    nVars    =    Math.max(regression.getR().computeValue(xArray,    yArray,    0));    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
40	[BUG]  [BUGGY]  int  nVars  =  Math.max(regression.getR().computeValue(xArray,  yArray,  0,  xArray.length));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  int  nVars  =  Math.max(regression.getR().computeValue(xArray,  yArray,  0,  xArray.length));  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  nVars  =  Math.max(regression.getR().computeValue(xArray,  yArray,  0,  xArray.length));	  int    nVars    =    Math.max(regression.getR().computeValue(xArray,    yArray,    0));    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
41	[BUG]  [BUGGY]  double[]  yArray  =  yArray.getData();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  yArray  =  yArray.getData();  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  yArray  =  yArray.getData();	  double[]    yArray    =    regression.getData();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
42	[BUG]  [BUGGY]  double[]  yArray  =  xArray.getData();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  yArray  =  xArray.getData();  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  yArray  =  xArray.getData();	  double[]    yArray    =    regression.getData();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
43	[BUG]  [BUGGY]  double[]  yArray  =  regression.getData(xArray);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  yArray  =  regression.getData(xArray);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  yArray  =  regression.getData(xArray);	  double[]    yArray    =    regression.getData();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
44	[BUG]  [BUGGY]  double[]  yArray  =  regression.computeDataRef(xArray,  yArray,  null);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  yArray  =  regression.computeDataRef(xArray,  yArray,  null);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  yArray  =  regression.computeDataRef(xArray,  yArray,  null);	  double[]    yArray    =    regression.computeDataRef(xArray,    yArray);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
45	[BUG]  [BUGGY]  double[]  yArray  =  regression.computeDataRef(xArray,  yArray,  false);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  yArray  =  regression.computeDataRef(xArray,  yArray,  false);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  yArray  =  regression.computeDataRef(xArray,  yArray,  false);	  double[]    yArray    =    regression.computeDataRef(xArray,    yArray);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
46	[BUG]  [BUGGY]  double[]  yArray  =  regression.computeDataRef(xArray,  yArray,  true);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  yArray  =  regression.computeDataRef(xArray,  yArray,  true);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  yArray  =  regression.computeDataRef(xArray,  yArray,  true);	  double[]    yArray    =    regression.computeDataRef(xArray,    yArray);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
47	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	  for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
48	[BUG]  [BUGGY]  For(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  For(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	For(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	  for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    	non-compiled	[CE]  	115	None	replace
49	[BUG]  [BUGGY]  if(yArray.length  ==  xArray.length  ||  yArray.length  >  1)  {  if(yArray.length  ==  xArray.length  ||  yArray.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length  ==  xArray.length  ||  yArray.length  >  1)  {  if(yArray.length  ==  xArray.length  ||  yArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length    ==    xArray.length    ||    yArray.length    >    1)    {    if(yArray.length  ==  xArray.length  ||  yArray.length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
50	[BUG]  [BUGGY]  if(yArray.length  ==  xArray.length  ||  yArray.length  >  1)  {  if(xArray.length  ==  xArray.length  ||  yArray.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length  ==  xArray.length  ||  yArray.length  >  1)  {  if(xArray.length  ==  xArray.length  ||  yArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length    ==    xArray.length    ||    yArray.length    >    1)    {    if(xArray.length  ==  xArray.length  ||  yArray.length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
51	[BUG]  [BUGGY]  if(yArray.length  ==  xArray.length  ||  yArray.length  >  1)  {  if(xArray.length  ==  yArray.length  ||  yArray.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length  ==  xArray.length  ||  yArray.length  >  1)  {  if(xArray.length  ==  yArray.length  ||  yArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length    ==    xArray.length    ||    yArray.length    >    1)    {    if(xArray.length  ==  yArray.length  ||  yArray.length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
52	[BUG]  [BUGGY]  if(yArray.length!=  xArray.length  &&  yArray.length  >  1)  {  if(yArray.length!=  xArray.length  &&  yArray.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]    MathRuntimeException$4    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length!=  xArray.length  &&  yArray.length  >  1)  {  if(yArray.length!=  xArray.length  &&  yArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length!=    xArray.length    &&    yArray.length    >    1)    {    if(yArray.length!=  xArray.length  &&  yArray.length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	83	None	add
53	[BUG]  [BUGGY]  if(yArray.length!=  xArray.length  &&  yArray.length  >  1)  {  if(xArray.length!=  xArray.length  &&  yArray.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]      MathRuntimeException$4    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length!=  xArray.length  &&  yArray.length  >  1)  {  if(xArray.length!=  xArray.length  &&  yArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length!=    xArray.length    &&    yArray.length    >    1)    {    if(xArray.length!=  xArray.length  &&  yArray.length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	83	None	add
54	[BUG]  [BUGGY]  if(yArray.length!=  xArray.length  &&  yArray.length  >  1)  {  if(yArray.length  >=  xArray.length  &&  yArray.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]        MathRuntimeException$4    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length!=  xArray.length  &&  yArray.length  >  1)  {  if(yArray.length  >=  xArray.length  &&  yArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length!=    xArray.length    &&    yArray.length    >    1)    {    if(yArray.length  >=  xArray.length  &&  yArray.length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	83	None	add
55	[BUG]  [BUGGY]  if(yArray.length!=  xArray.length  &&  yArray.length  >  1)  {  if(xArray.length!=  yArray.length  &&  yArray.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$4    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length!=  xArray.length  &&  yArray.length  >  1)  {  if(xArray.length!=  yArray.length  &&  yArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length!=    xArray.length    &&    yArray.length    >    1)    {    if(xArray.length!=  yArray.length  &&  yArray.length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	83	None	add
56	[BUG]  [BUGGY]  double[]  xxArray  =(double[])xArray.clone();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  xxArray  =(double[])xArray.clone();  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xxArray  =(double[])xArray.clone();	  double[]    xxArray    =(double[])yArray.clone();    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
57	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length  ||  yArray.length  >  1)  {  if(xArray.length  ==  yArray.length  ||  yArray.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length  ==  yArray.length  ||  yArray.length  >  1)  {  if(xArray.length  ==  yArray.length  ||  yArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length    ==    yArray.length    ||    yArray.length    >    1)    {    if(xArray.length  ==  yArray.length  ||  yArray.length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
58	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length  ||  yArray.length  >  1)  {  if(xArray.length!=  yArray.length  ||  yArray.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length  ==  yArray.length  ||  yArray.length  >  1)  {  if(xArray.length!=  yArray.length  ||  yArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length    ==    yArray.length    ||    yArray.length    >    1)    {    if(xArray.length!=  yArray.length  ||  yArray.length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
59	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length  ||  yArray.length  >  1)  {  If(xArray.length  ==  yArray.length  ||  yArray.length  >  1)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length  ==  yArray.length  ||  yArray.length  >  1)  {  If(xArray.length  ==  yArray.length  ||  yArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length    ==    yArray.length    ||    yArray.length    >    1)    {    If(xArray.length  ==  yArray.length  ||  yArray.length  >  1)  {	  	non-compiled	[CE]  ';'  expected	25	None	add
60	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length  ||  yArray.length  >  1)  {  if(xArray.length  >=  yArray.length  ||  yArray.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length  ==  yArray.length  ||  yArray.length  >  1)  {  if(xArray.length  >=  yArray.length  ||  yArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length    ==    yArray.length    ||    yArray.length    >    1)    {    if(xArray.length  >=  yArray.length  ||  yArray.length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
61	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length  ||  yArray.length  >  1)  {  if(xArray.length!=  yArray.length  ||  yArray.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length!=  yArray.length  ||  yArray.length  >  1)  {  if(xArray.length!=  yArray.length  ||  yArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=    yArray.length    ||    yArray.length    >    1)    {    if(xArray.length!=  yArray.length  ||  yArray.length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
62	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length  ||  yArray.length  >  1)  {  if(xArray.length  >=  yArray.length  ||  yArray.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length!=  yArray.length  ||  yArray.length  >  1)  {  if(xArray.length  >=  yArray.length  ||  yArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=    yArray.length    ||    yArray.length    >    1)    {    if(xArray.length  >=  yArray.length  ||  yArray.length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
63	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length  ||  yArray.length  >  1)  {  if(xArray.length  ==  yArray.length  ||  yArray.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length!=  yArray.length  ||  yArray.length  >  1)  {  if(xArray.length  ==  yArray.length  ||  yArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=    yArray.length    ||    yArray.length    >    1)    {    if(xArray.length  ==  yArray.length  ||  yArray.length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
64	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length  ||  yArray.length  >  1)  {  if(xArray.length  >>  yArray.length  ||  yArray.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length!=  yArray.length  ||  yArray.length  >  1)  {  if(xArray.length  >>  yArray.length  ||  yArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=    yArray.length    ||    yArray.length    >    1)    {    if(xArray.length  >>  yArray.length  ||  yArray.length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
65	[BUG]  [BUGGY]  Regression  <  double>  regression  =  this.regression.getR()  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  Regression  <  double>  regression  =  this.regression.getR()  +  1;  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  <  double>  regression  =  this.regression.getR()  +  1;	  Regression    <    double>    regression    =    this.regression.getR();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
66	[BUG]  [BUGGY]  Regression  <  double>  regression  =  this.regression.getR()  /  2;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  Regression  <  double>  regression  =  this.regression.getR()  /  2;  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  <  double>  regression  =  this.regression.getR()  /  2;	  Regression    <    double>    regression    =    this.regression.getR();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
67	[BUG]  [BUGGY]  Regression  <  double>  regression  =  this.regression.getRegression();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  Regression  <  double>  regression  =  this.regression.getRegression();  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  <  double>  regression  =  this.regression.getRegression();	  Regression    <    double>    regression    =    this.regression.getR();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
68	[BUG]  [BUGGY]  double[]  xArray  =(double[])yArray.toArray(regression,  dataArea);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  xArray  =(double[])yArray.toArray(regression,  dataArea);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =(double[])yArray.toArray(regression,  dataArea);	  double[]    xArray    =(double[])yArray.toArray(regression);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
69	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length!=  xArray.length  ||  xArray.length  ==  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(yArray.length!=  xArray.length  ||  xArray.length  ==  1)  {	  if(xArray.length!=    yArray.length    ||    xArray.length    ==    1)    {    	compilable	  [FE]  AssertionFailedError  	24	14	replace
70	[BUG]  [BUGGY]  if(yArray.length!=  xArray.length  ||  xArray.length  ==  1)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length!=  xArray.length  ||  xArray.length  ==  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length!=  xArray.length  ||  xArray.length  ==  1)  {	  if(xArray.length!=    yArray.length    ||    xArray.length    ==    1)    {    	compilable	  [FE]  AssertionFailedError  	24	14	replace
71	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length  ==  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(xArray.length  ==  yArray.length  ||  xArray.length  ==  1)  {	  if(xArray.length!=    yArray.length    ||    xArray.length    ==    1)    {    	compilable	  [FE]  AssertionFailedError  	24	3	replace
72	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length  ==  1)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length  ==  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length  ==  yArray.length  ||  xArray.length  ==  1)  {	  if(xArray.length!=    yArray.length    ||    xArray.length    ==    1)    {    	compilable	  [FE]  AssertionFailedError  	24	3	replace
73	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  ==  2)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(xArray.length!=  yArray.length  ||  xArray.length  ==  2)  {	  if(xArray.length!=    yArray.length    ||    xArray.length    ==    1)    {    	compilable	  [FE]  MathRuntimeException$4  	24	13	replace
74	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  ==  2)  {  [FE]  MathRuntimeException$4  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  ==  2)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=  yArray.length  ||  xArray.length  ==  2)  {	  if(xArray.length!=    yArray.length    ||    xArray.length    ==    1)    {    	compilable	  [FE]  MathRuntimeException$4  	24	13	replace
75	[BUG]  [BUGGY]  if(yArray.length  ==  xArray.length  ||  xArray.length  >  1)  {  if(yArray.length  ==  xArray.length  ||  xArray.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length  ==  xArray.length  ||  xArray.length  >  1)  {  if(yArray.length  ==  xArray.length  ||  xArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length    ==    xArray.length    ||    xArray.length    >    1)    {    if(yArray.length  ==  xArray.length  ||  xArray.length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	112	None	add
76	[BUG]  [BUGGY]  if(yArray.length  ==  xArray.length  ||  xArray.length  >  1)  {  if(xArray.length  ==  xArray.length  ||  xArray.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length  ==  xArray.length  ||  xArray.length  >  1)  {  if(xArray.length  ==  xArray.length  ||  xArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length    ==    xArray.length    ||    xArray.length    >    1)    {    if(xArray.length  ==  xArray.length  ||  xArray.length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	112	None	add
77	[BUG]  [BUGGY]  if(yArray.length  ==  xArray.length  ||  xArray.length  >  1)  {  If(yArray.length  ==  xArray.length  ||  xArray.length  >  1)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length  ==  xArray.length  ||  xArray.length  >  1)  {  If(yArray.length  ==  xArray.length  ||  xArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length    ==    xArray.length    ||    xArray.length    >    1)    {    If(yArray.length  ==  xArray.length  ||  xArray.length  >  1)  {	  	non-compiled	[CE]  ';'  expected	112	None	add
78	[BUG]  [BUGGY]  RealMatrix  outMatrix  =  regression.getCovarianceMatrix(xArray);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  RealMatrix  outMatrix  =  regression.getCovarianceMatrix(xArray);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix  outMatrix  =  regression.getCovarianceMatrix(xArray);	  RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix(outMatrix);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
79	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix(xArray);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix(xArray);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix(xArray);	  RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix(outMatrix);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
80	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix(xArray,  outMatrix);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix(xArray,  outMatrix);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix(xArray,  outMatrix);	  RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix(outMatrix);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
81	[BUG]  [BUGGY]  RealMatrix  outputMatrix  =  regression.getCovarianceMatrix(xArray);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  RealMatrix  outputMatrix  =  regression.getCovarianceMatrix(xArray);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix  outputMatrix  =  regression.getCovarianceMatrix(xArray);	  RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix(outMatrix);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
82	[BUG]  [BUGGY]  If(yArray.length!=  xArray.length)  {  [CE]  ';'  expected  [FE]        MathRuntimeException$4      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  If(yArray.length!=  xArray.length)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	If(yArray.length!=  xArray.length)  {	  if(xArray.length!=    yArray.length)    {    If(xArray.length!=    yArray.length)    {    	non-compiled	[CE]  ';'  expected	103	None	replace
83	[BUG]  [BUGGY]  int  nObs  =  Math.max(regression.getR().length,  yArray.length);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  int  nObs  =  Math.max(regression.getR().length,  yArray.length);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  nObs  =  Math.max(regression.getR().length,  yArray.length);	  int    nObs    =    Math.max(regression.getR().length,    xArray.length);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
84	[BUG]  [BUGGY]  int  nObs  =  Math.min(regression.getR().length,  yArray.length);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  int  nObs  =  Math.min(regression.getR().length,  yArray.length);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  nObs  =  Math.min(regression.getR().length,  yArray.length);	  int    nObs    =    Math.max(regression.getR().length,    xArray.length);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
85	[BUG]  [BUGGY]  int  nObs  =  Math.max(regression.getR().length,  xArray.length,  yArray.length);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  int  nObs  =  Math.max(regression.getR().length,  xArray.length,  yArray.length);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  nObs  =  Math.max(regression.getR().length,  xArray.length,  yArray.length);	  int    nObs    =    Math.max(regression.getR().length,    xArray.length);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
86	[BUG]  [BUGGY]  int  nVars  =  Math.min(regression.getR().computeValue(xArray,  yArray));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  int  nVars  =  Math.min(regression.getR().computeValue(xArray,  yArray));  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  nVars  =  Math.min(regression.getR().computeValue(xArray,  yArray));	  int    nVars    =    Math.max(regression.getR().computeValue(yArray,    xArray));    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
87	[BUG]  [BUGGY]  int  nVars  =  Math.max(yArray.getR().computeValue(regression,  xArray));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  int  nVars  =  Math.max(yArray.getR().computeValue(regression,  xArray));  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  nVars  =  Math.max(yArray.getR().computeValue(regression,  xArray));	  int    nVars    =    Math.max(regression.getR().computeValue(yArray,    xArray));    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
88	[BUG]  [BUGGY]  Regression  <  double>  regression  =  yArray.getR()  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  Regression  <  double>  regression  =  yArray.getR()  +  1;  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  <  double>  regression  =  yArray.getR()  +  1;	  Regression    <    double>    regression    =    yArray.getR();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
89	[BUG]  [BUGGY]  Regression  <  double>  regression  =  yArray.getRegression();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  Regression  <  double>  regression  =  yArray.getRegression();  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  <  double>  regression  =  yArray.getRegression();	  Regression    <    double>    regression    =    yArray.getR();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
90	[BUG]  [BUGGY]  double[]  xArray  =  new  double[xArray.length  +  2];  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  xArray  =  new  double[xArray.length  +  2];  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =  new  double[xArray.length  +  2];	  double[]    xArray    =    new    double[xArray.length    +    1];    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
91	[BUG]  [BUGGY]  double[]  xArray  =  new  double[xArray.length  +  3];  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  xArray  =  new  double[xArray.length  +  3];  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =  new  double[xArray.length  +  3];	  double[]    xArray    =    new    double[xArray.length    +    1];    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
92	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length!=  1)  {  if(xArray.length  ==  yArray.length  ||  xArray.length!=  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length!=  1)  {  if(xArray.length  ==  yArray.length  ||  xArray.length!=  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length    ==    yArray.length    ||    xArray.length!=    1)    {    if(xArray.length  ==  yArray.length  ||  xArray.length!=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
93	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length!=  1)  {  if(xArray.length  ==  yArray.length  ||  xArray.length  >=  1)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length!=  1)  {  if(xArray.length  ==  yArray.length  ||  xArray.length  >=  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length    ==    yArray.length    ||    xArray.length!=    1)    {    if(xArray.length  ==  yArray.length  ||  xArray.length  >=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
94	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length!=  1)  {  if(xArray.length  ==  yArray.length  ||  xArray.length  >>  1)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length!=  1)  {  if(xArray.length  ==  yArray.length  ||  xArray.length  >>  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length    ==    yArray.length    ||    xArray.length!=    1)    {    if(xArray.length  ==  yArray.length  ||  xArray.length  >>  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
95	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length!=  1)  {  if(xArray.length!=  yArray.length  ||  xArray.length!=  1)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length!=  1)  {  if(xArray.length!=  yArray.length  ||  xArray.length!=  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length    ==    yArray.length    ||    xArray.length!=    1)    {    if(xArray.length!=  yArray.length  ||  xArray.length!=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
96	[BUG]  [BUGGY]  int  nObs  =  Math.max(regression.getR().compareTo(xArray,  yArray[0]));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  int  nObs  =  Math.max(regression.getR().compareTo(xArray,  yArray[0]));  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  nObs  =  Math.max(regression.getR().compareTo(xArray,  yArray[0]));	  int    nObs    =    Math.max(regression.getR().compareTo(xArray,    yArray));    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
97	[BUG]  [BUGGY]  int  nObs  =  Math.max(regression.getR().compareTo(xArray,  yArray)+  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  int  nObs  =  Math.max(regression.getR().compareTo(xArray,  yArray)+  1);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  nObs  =  Math.max(regression.getR().compareTo(xArray,  yArray)+  1);	  int    nObs    =    Math.max(regression.getR().compareTo(xArray,    yArray));    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
98	[BUG]  [BUGGY]  int  nObs  =  Math.min(regression.getR().compareTo(xArray,  yArray));  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  int  nObs  =  Math.min(regression.getR().compareTo(xArray,  yArray));  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  nObs  =  Math.min(regression.getR().compareTo(xArray,  yArray));	  int    nObs    =    Math.max(regression.getR().compareTo(xArray,    yArray));    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
99	[BUG]  [BUGGY]  Double[]  yArray  =(double[])regression.clone();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  Double[]  yArray  =(double[])regression.clone();  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Double[]  yArray  =(double[])regression.clone();	  double[]    yArray    =(double[])regression.clone();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
100	[BUG]  [BUGGY]  double[]  xArray  =  new  double[xArray.length],  yArray.length);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  xArray  =  new  double[xArray.length],  yArray.length);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =  new  double[xArray.length],  yArray.length);	  double[]    xArray    =    new    double[yArray.length],    yArray.length);    	non-compiled	[CE]  	114	None	replace
101	[BUG]  [BUGGY]  final  double[]  xArray  =  new  double[yArray.length],  yArray.length);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  final  double[]  xArray  =  new  double[yArray.length],  yArray.length);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	final  double[]  xArray  =  new  double[yArray.length],  yArray.length);	  double[]    xArray    =    new    double[yArray.length],    yArray.length);    	non-compiled	[CE]  	114	None	replace
102	[BUG]  [BUGGY]  double[]  xArray  =  new  double[yArray.length],  xArray.length);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  xArray  =  new  double[yArray.length],  xArray.length);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =  new  double[yArray.length],  xArray.length);	  double[]    xArray    =    new    double[yArray.length],    yArray.length);    	non-compiled	[CE]  	114	None	replace
103	[BUG]  [BUGGY]  double[]  yArray  =  new  double[xArray.length],  yArray.length);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  yArray  =  new  double[xArray.length],  yArray.length);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  yArray  =  new  double[xArray.length],  yArray.length);	  double[]    xArray    =    new    double[yArray.length],    yArray.length);    	non-compiled	[CE]  	114	None	replace
104	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          MathRuntimeException$4      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length  >=  xArray.length  &&  yArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(yArray.length  >=  xArray.length  &&  yArray.length  >  1)  {	  if(xArray.length!=    yArray.length    &&    yArray.length    >    1)    {    if(xArray.length    >=    yArray.length    &&    yArray.length    >    1)    {    	compilable	  [FE]  AssertionFailedError  	34	2	replace
105	[BUG]  [BUGGY]  if(yArray.length  >=  xArray.length  &&  yArray.length  >  1)  {  [FE]  AssertionFailedError  [FE]          MathRuntimeException$4      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length  >=  xArray.length  &&  yArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length  >=  xArray.length  &&  yArray.length  >  1)  {	  if(xArray.length!=    yArray.length    &&    yArray.length    >    1)    {    if(xArray.length    >=    yArray.length    &&    yArray.length    >    1)    {    	compilable	  [FE]  AssertionFailedError  	34	2	replace
106	[BUG]  [BUGGY]  int  nVars  =  Math.max(regression.getR().computeValue(xArray,  yArray)/  2,  0);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  int  nVars  =  Math.max(regression.getR().computeValue(xArray,  yArray)/  2,  0);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  nVars  =  Math.max(regression.getR().computeValue(xArray,  yArray)/  2,  0);	  int    nVars    =    Math.max(regression.getR().computeValue(xArray,    yArray),    0);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
107	[BUG]  [BUGGY]  int  nVars  =  Math.max(regression.getR().computeValue(xArray,  yArray),  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  int  nVars  =  Math.max(regression.getR().computeValue(xArray,  yArray),  1);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  nVars  =  Math.max(regression.getR().computeValue(xArray,  yArray),  1);	  int    nVars    =    Math.max(regression.getR().computeValue(xArray,    yArray),    0);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
108	[BUG]  [BUGGY]  int  nVars  =  Math.max(regression.getR().computeValue(xArray,  yArray),  0,  yArray.length);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  int  nVars  =  Math.max(regression.getR().computeValue(xArray,  yArray),  0,  yArray.length);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  nVars  =  Math.max(regression.getR().computeValue(xArray,  yArray),  0,  yArray.length);	  int    nVars    =    Math.max(regression.getR().computeValue(xArray,    yArray),    0);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
109	[BUG]  [BUGGY]  RealMatrix  yArray  =  outMatrix.getCovarianceMatrix();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  RealMatrix  yArray  =  outMatrix.getCovarianceMatrix();  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix  yArray  =  outMatrix.getCovarianceMatrix();	  RealMatrix    covarianceMatrix    =    outMatrix.getCovarianceMatrix();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
110	[BUG]  [BUGGY]  double[]  yArray  =(double[])regression.toArray(xArray);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  yArray  =(double[])regression.toArray(xArray);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  yArray  =(double[])regression.toArray(xArray);	  double[]    yArray    =(double[])regression.toArray(yArray);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
111	[BUG]  [BUGGY]  double[]  yArray  =(double[])xArray.toArray(yArray);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  yArray  =(double[])xArray.toArray(yArray);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  yArray  =(double[])xArray.toArray(yArray);	  double[]    yArray    =(double[])regression.toArray(yArray);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
112	[BUG]  [BUGGY]  double[]  yArray  =(double[])regression.toArray(xArray,  yArray);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  yArray  =(double[])regression.toArray(xArray,  yArray);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  yArray  =(double[])regression.toArray(xArray,  yArray);	  double[]    yArray    =(double[])regression.toArray(yArray);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
113	[BUG]  [BUGGY]  Regression  <  double>  regression  =  xArray.getR()  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  Regression  <  double>  regression  =  xArray.getR()  +  1;  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  <  double>  regression  =  xArray.getR()  +  1;	  Regression    <    double>    regression    =    xArray.getR();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
114	[BUG]  [BUGGY]  Regression  <  double>  regression  =  xArray.getR()  *  yArray.length;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  Regression  <  double>  regression  =  xArray.getR()  *  yArray.length;  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  <  double>  regression  =  xArray.getR()  *  yArray.length;	  Regression    <    double>    regression    =    xArray.getR();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
115	[BUG]  [BUGGY]  if(yArray.length  ==  xArray.length)  {  If(xArray.length  ==  yArray.length  ||  xArray.length  >  1)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length  ==  xArray.length)  {  If(xArray.length  ==  yArray.length  ||  xArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length  ==  xArray.length)  {  If(xArray.length  ==  yArray.length  ||  xArray.length  >  1)  {	  if(xArray.length    ==    yArray.length    ||    xArray.length    >    1)    {    If(xArray.length    ==    yArray.length    ||    xArray.length    >    1)    {    	non-compiled	[CE]  ';'  expected	30	None	replace
116	[BUG]  [BUGGY]  If(xArray.length  ==  yArray.length  ||  xArray.length  ==  1)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  If(xArray.length  ==  yArray.length  ||  xArray.length  ==  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	If(xArray.length  ==  yArray.length  ||  xArray.length  ==  1)  {	  if(xArray.length    ==    yArray.length    ||    xArray.length    >    1)    {    If(xArray.length    ==    yArray.length    ||    xArray.length    >    1)    {    	non-compiled	[CE]  ';'  expected	30	None	replace
117	[BUG]  [BUGGY]  if(yArray.length  ==  xArray.length)  {  If(xArray.length  ==  yArray.length  ||  xArray.length!=  1)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length  ==  xArray.length)  {  If(xArray.length  ==  yArray.length  ||  xArray.length!=  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length  ==  xArray.length)  {  If(xArray.length  ==  yArray.length  ||  xArray.length!=  1)  {	  if(xArray.length    ==    yArray.length    ||    xArray.length    >    1)    {    If(xArray.length    ==    yArray.length    ||    xArray.length    >    1)    {    	non-compiled	[CE]  ';'  expected	30	None	replace
118	[BUG]  [BUGGY]  if(yArray.length  ==  xArray.length)  {  If(xArray.length  ==  yArray.length  ||  xArray.length  ==  1)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length  ==  xArray.length)  {  If(xArray.length  ==  yArray.length  ||  xArray.length  ==  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length  ==  xArray.length)  {  If(xArray.length  ==  yArray.length  ||  xArray.length  ==  1)  {	  if(xArray.length    ==    yArray.length    ||    xArray.length    >    1)    {    If(xArray.length    ==    yArray.length    ||    xArray.length    >    1)    {    	non-compiled	[CE]  ';'  expected	30	None	replace
119	[BUG]  [BUGGY]  Regression  <  double>  regression  =  yArray.removeDouble(regex);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  Regression  <  double>  regression  =  yArray.removeDouble(regex);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  <  double>  regression  =  yArray.removeDouble(regex);	  Regression    <    double>    regression    =    xArray.removeDouble(regex);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
120	[BUG]  [BUGGY]  double[]  xArray  =(double[])regression.compareTo(xArray,  yArray);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  xArray  =(double[])regression.compareTo(xArray,  yArray);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =(double[])regression.compareTo(xArray,  yArray);	  double[]    xArray    =(double[])regression.toArray(xArray);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
121	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(regression,  yArray,  xArray);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(regression,  yArray,  xArray);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix  covarianceMatrix  =  getCovarianceMatrix(regression,  yArray,  xArray);	  RealMatrix    covarianceMatrix    =    getCovarianceMatrix(xArray,    yArray,    regression);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
122	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(yArray,  xArray,  regression);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(yArray,  xArray,  regression);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix  covarianceMatrix  =  getCovarianceMatrix(yArray,  xArray,  regression);	  RealMatrix    covarianceMatrix    =    getCovarianceMatrix(xArray,    yArray,    regression);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
123	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(xArray,  yArray,  regression,  null);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(xArray,  yArray,  regression,  null);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix  covarianceMatrix  =  getCovarianceMatrix(xArray,  yArray,  regression,  null);	  RealMatrix    covarianceMatrix    =    getCovarianceMatrix(xArray,    yArray,    regression);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
124	[BUG]  [BUGGY]  if(yArray.length!=  xArray.length)  {  If(xArray.length!=  yArray.length  ||  xArray.length  >  1)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length!=  xArray.length)  {  If(xArray.length!=  yArray.length  ||  xArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length!=  xArray.length)  {  If(xArray.length!=  yArray.length  ||  xArray.length  >  1)  {	  if(xArray.length!=    yArray.length    ||    xArray.length    >    1)    {    If(xArray.length!=    yArray.length    ||    xArray.length    >    1)    {    	non-compiled	[CE]  ';'  expected	62	None	replace
125	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length)  {  If(xArray.length!=  yArray.length  ||  xArray.length  >  1)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length!=  yArray.length)  {  If(xArray.length!=  yArray.length  ||  xArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=  yArray.length)  {  If(xArray.length!=  yArray.length  ||  xArray.length  >  1)  {	  if(xArray.length!=    yArray.length    ||    xArray.length    >    1)    {    If(xArray.length!=    yArray.length    ||    xArray.length    >    1)    {    	non-compiled	[CE]  ';'  expected	62	None	replace
126	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length)  {  If(xArray.length!=  yArray.length  ||  xArray.length  ==  1)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length!=  yArray.length)  {  If(xArray.length!=  yArray.length  ||  xArray.length  ==  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=  yArray.length)  {  If(xArray.length!=  yArray.length  ||  xArray.length  ==  1)  {	  if(xArray.length!=    yArray.length    ||    xArray.length    >    1)    {    If(xArray.length!=    yArray.length    ||    xArray.length    >    1)    {    	non-compiled	[CE]  ';'  expected	62	None	replace
127	[BUG]  [BUGGY]  If(xArray.length!=  yArray.length  ||  xArray.length  ==  1)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  If(xArray.length!=  yArray.length  ||  xArray.length  ==  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	If(xArray.length!=  yArray.length  ||  xArray.length  ==  1)  {	  if(xArray.length!=    yArray.length    ||    xArray.length    >    1)    {    If(xArray.length!=    yArray.length    ||    xArray.length    >    1)    {    	non-compiled	[CE]  ';'  expected	62	None	replace
128	[BUG]  [BUGGY]  double[]  yArray  =  yArray.getR();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  yArray  =  yArray.getR();  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  yArray  =  yArray.getR();	  double[]    yArray    =    regression.getR();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
129	[BUG]  [BUGGY]  double[]  yArray  =  xArray.getR();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  yArray  =  xArray.getR();  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  yArray  =  xArray.getR();	  double[]    yArray    =    regression.getR();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
130	[BUG]  [BUGGY]  double[]  yArray  =  regression.getY();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  yArray  =  regression.getY();  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  yArray  =  regression.getY();	  double[]    yArray    =    regression.getR();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
131	[BUG]  [BUGGY]  Regression  <  double>  regression  =  this.regression.getR().removeDouble(yArray);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  Regression  <  double>  regression  =  this.regression.getR().removeDouble(yArray);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  <  double>  regression  =  this.regression.getR().removeDouble(yArray);	  Regression    <    double>    regression    =    this.regression.removeDouble(yArray);    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
132	[BUG]  [BUGGY]  Regression  <  double>  regression  =  yArray.removeDouble(xArray.length);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  Regression  <  double>  regression  =  yArray.removeDouble(xArray.length);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  <  double>  regression  =  yArray.removeDouble(xArray.length);	  Regression    <    double>    regression    =    yArray.removeDouble(xArray);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
133	[BUG]  [BUGGY]  Regression  <  double>  regression  =  yArray.removeDouble(yArray);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  Regression  <  double>  regression  =  yArray.removeDouble(yArray);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  <  double>  regression  =  yArray.removeDouble(yArray);	  Regression    <    double>    regression    =    yArray.removeDouble(xArray);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
134	[BUG]  [BUGGY]  double[]  xArray  =  new  double[yArray.length  /  2];  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  xArray  =  new  double[yArray.length  /  2];  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =  new  double[yArray.length  /  2];	  double[]    xArray    =    new    double[yArray.length    *    2];    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
135	[BUG]  [BUGGY]  double[]  xArray  =  new  double[yArray.length  *  2  +  1];  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  xArray  =  new  double[yArray.length  *  2  +  1];  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =  new  double[yArray.length  *  2  +  1];	  double[]    xArray    =    new    double[yArray.length    *    2];    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
136	[BUG]  [BUGGY]  double[]  xArray  =  new  double[xArray.length  *  2];  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  xArray  =  new  double[xArray.length  *  2];  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =  new  double[xArray.length  *  2];	  double[]    xArray    =    new    double[yArray.length    *    2];    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
137	[BUG]  [BUGGY]  if(xArray.length  >=  yArray.length)  {  if(xArray.length  >=  yArray.length)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length  >=  yArray.length)  {  if(xArray.length  >=  yArray.length)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length    >=    yArray.length)    {    if(xArray.length  >=  yArray.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
138	[BUG]  [BUGGY]  if(xArray.length  >=  yArray.length)  {  if(xArray.length!=  yArray.length)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length  >=  yArray.length)  {  if(xArray.length!=  yArray.length)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length    >=    yArray.length)    {    if(xArray.length!=  yArray.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
139	[BUG]  [BUGGY]  if(xArray.length  >=  yArray.length)  {  if(xArray.length  >>  yArray.length)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length  >=  yArray.length)  {  if(xArray.length  >>  yArray.length)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length    >=    yArray.length)    {    if(xArray.length  >>  yArray.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
140	[BUG]  [BUGGY]  if(xArray.length  >=  yArray.length)  {  if(xArray.length  ==  yArray.length)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length  >=  yArray.length)  {  if(xArray.length  ==  yArray.length)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length    >=    yArray.length)    {    if(xArray.length  ==  yArray.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
141	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length  <  2)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(xArray.length  ==  yArray.length  ||  xArray.length  <  2)  {	  if(xArray.length    ==    yArray.length    ||    xArray.length    <    1)    {    	compilable	  [FE]  AssertionFailedError  	44	3	replace
142	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length  <  2)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length  <  2)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length  ==  yArray.length  ||  xArray.length  <  2)  {	  if(xArray.length    ==    yArray.length    ||    xArray.length    <    1)    {    	compilable	  [FE]  AssertionFailedError  	44	3	replace
143	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length  ==  xArray.length  ||  xArray.length  <  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(yArray.length  ==  xArray.length  ||  xArray.length  <  1)  {	  if(xArray.length    ==    yArray.length    ||    xArray.length    <    1)    {    	compilable	  [FE]  AssertionFailedError  	44	3	replace
144	[BUG]  [BUGGY]  if(yArray.length  ==  xArray.length  ||  xArray.length  <  1)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length  ==  xArray.length  ||  xArray.length  <  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length  ==  xArray.length  ||  xArray.length  <  1)  {	  if(xArray.length    ==    yArray.length    ||    xArray.length    <    1)    {    	compilable	  [FE]  AssertionFailedError  	44	3	replace
145	[BUG]  [BUGGY]  int  nVars  =  Math.min(yArray.getR().computeValue(xArray,  yArray));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  int  nVars  =  Math.min(yArray.getR().computeValue(xArray,  yArray));  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  nVars  =  Math.min(yArray.getR().computeValue(xArray,  yArray));	  int    nVars    =    Math.max(yArray.getR().computeValue(xArray,    yArray));    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
146	[BUG]  [BUGGY]  int  nVars  =  Math.max(yArray.getR().computeValue(xArray,  yArray[0]));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  int  nVars  =  Math.max(yArray.getR().computeValue(xArray,  yArray[0]));  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  nVars  =  Math.max(yArray.getR().computeValue(xArray,  yArray[0]));	  int    nVars    =    Math.max(yArray.getR().computeValue(xArray,    yArray));    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
147	[BUG]  [BUGGY]  If(yArray.length  ==  xArray.length  &&  yArray.length  >  1)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  If(yArray.length  ==  xArray.length  &&  yArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	If(yArray.length  ==  xArray.length  &&  yArray.length  >  1)  {	  if(xArray.length    ==    yArray.length    &&    yArray.length    >    1)    {    If(xArray.length    ==    yArray.length    &&    yArray.length    >    1)    {    	non-compiled	[CE]  ';'  expected	81	None	replace
148	[BUG]  [BUGGY]  If(xArray.length  ==  yArray.length  &&  yArray.length  >  1)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  If(xArray.length  ==  yArray.length  &&  yArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	If(xArray.length  ==  yArray.length  &&  yArray.length  >  1)  {	  if(xArray.length    ==    yArray.length    &&    yArray.length    >    1)    {    If(xArray.length    ==    yArray.length    &&    yArray.length    >    1)    {    	non-compiled	[CE]  ';'  expected	81	None	replace
149	[BUG]  [BUGGY]  If(xArray.length!=  yArray.length  &&  yArray.length  >  1)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  If(xArray.length!=  yArray.length  &&  yArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	If(xArray.length!=  yArray.length  &&  yArray.length  >  1)  {	  if(xArray.length    ==    yArray.length    &&    yArray.length    >    1)    {    If(xArray.length    ==    yArray.length    &&    yArray.length    >    1)    {    	non-compiled	[CE]  ';'  expected	81	None	replace
150	[BUG]  [BUGGY]  Regression  <  double>  regression  =  regression.remove(xArray.length  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  Regression  <  double>  regression  =  regression.remove(xArray.length  -  1);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  <  double>  regression  =  regression.remove(xArray.length  -  1);	  Regression    <    double>    regression    =    regression.remove(xArray.length);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
151	[BUG]  [BUGGY]  Regression  <  double>  regression  =  regression.remove(yArray.length);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  Regression  <  double>  regression  =  regression.remove(yArray.length);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  <  double>  regression  =  regression.remove(yArray.length);	  Regression    <    double>    regression    =    regression.remove(xArray.length);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
152	[BUG]  [BUGGY]  Regression  <  double>  regression  =  regression.remove(xArray.length,  yArray.length);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  Regression  <  double>  regression  =  regression.remove(xArray.length,  yArray.length);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  <  double>  regression  =  regression.remove(xArray.length,  yArray.length);	  Regression    <    double>    regression    =    regression.remove(xArray.length);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
153	[BUG]  [BUGGY]  Regression  <  double>  regression  =  regression.remove(xArray.length  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  Regression  <  double>  regression  =  regression.remove(xArray.length  +  1);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  <  double>  regression  =  regression.remove(xArray.length  +  1);	  Regression    <    double>    regression    =    regression.remove(xArray.length);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
154	[BUG]  [BUGGY]  double[]  yArray  =  new  double[xArray.length  +  1];  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  yArray  =  new  double[xArray.length  +  1];  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  yArray  =  new  double[xArray.length  +  1];	  double[]    yArray    =    new    double[yArray.length    +    1];    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
155	[BUG]  [BUGGY]  double[]  yArray  =  new  double[yArray.length  +  2];  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  yArray  =  new  double[yArray.length  +  2];  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  yArray  =  new  double[yArray.length  +  2];	  double[]    yArray    =    new    double[yArray.length    +    1];    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
156	[BUG]  [BUGGY]  double[]  yArray  =  new  double[yArray.length  +  3];  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  yArray  =  new  double[yArray.length  +  3];  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  yArray  =  new  double[yArray.length  +  3];	  double[]    yArray    =    new    double[yArray.length    +    1];    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
157	[BUG]  [BUGGY]  double[]  xArray  =(double[])yArray.toArray(regression,  xArray);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  xArray  =(double[])yArray.toArray(regression,  xArray);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =(double[])yArray.toArray(regression,  xArray);	  double[]    xArray    =(double[])regression.toArray(xArray,    yArray);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
158	[BUG]  [BUGGY]  double[]  xArray  =(double[])yArray.toArray(regression,  yArray);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  xArray  =(double[])yArray.toArray(regression,  yArray);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =(double[])yArray.toArray(regression,  yArray);	  double[]    xArray    =(double[])regression.toArray(xArray,    yArray);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
159	[BUG]  [BUGGY]  RealMatrix  outMatrix  =  getCovarianceMatrix(xArray);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  RealMatrix  outMatrix  =  getCovarianceMatrix(xArray);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix  outMatrix  =  getCovarianceMatrix(xArray);	  RealMatrix    covarianceMatrix    =    getCovarianceMatrix(outMatrix);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
160	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(xArray,  outMatrix);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(xArray,  outMatrix);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix  covarianceMatrix  =  getCovarianceMatrix(xArray,  outMatrix);	  RealMatrix    covarianceMatrix    =    getCovarianceMatrix(outMatrix);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
161	[BUG]  [BUGGY]  RealMatrix  yArray  =  getCovarianceMatrix(outMatrix);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  RealMatrix  yArray  =  getCovarianceMatrix(outMatrix);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix  yArray  =  getCovarianceMatrix(outMatrix);	  RealMatrix    covarianceMatrix    =    getCovarianceMatrix(outMatrix);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
162	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
163	[BUG]  [BUGGY]  For(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  For(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	For(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	  for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    	non-compiled	[CE]  	116	None	replace
164	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(yArray,  regression);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(yArray,  regression);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix  covarianceMatrix  =  getCovarianceMatrix(yArray,  regression);	  RealMatrix    covarianceMatrix    =    getCovarianceMatrix(yArray);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
165	[BUG]  [BUGGY]  double[]  xArray  =  new  double[xArray.length  *  1];  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  xArray  =  new  double[xArray.length  *  1];  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =  new  double[xArray.length  *  1];	  double[]    xArray    =    new    double[yArray.length    *    1];    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
166	[BUG]  [BUGGY]  double[]  xArray  =  new  double[yArray.length  /  1];  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  xArray  =  new  double[yArray.length  /  1];  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =  new  double[yArray.length  /  1];	  double[]    xArray    =    new    double[yArray.length    *    1];    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
167	[BUG]  [BUGGY]  RealMatrix  yArray  =  getCovarianceMatrix(xArray);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  RealMatrix  yArray  =  getCovarianceMatrix(xArray);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix  yArray  =  getCovarianceMatrix(xArray);	  RealMatrix    covarianceMatrix    =    getCovarianceMatrix(xArray);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
168	[BUG]  [BUGGY]  RealMatrix  yArray  =  getCovarianceMatrix(xArray,  yArray,  regression);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  RealMatrix  yArray  =  getCovarianceMatrix(xArray,  yArray,  regression);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix  yArray  =  getCovarianceMatrix(xArray,  yArray,  regression);	  RealMatrix    yArray    =    getCovarianceMatrix(xArray,    yArray);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
169	[BUG]  [BUGGY]  RealMatrix  yArray  =  getCovarianceMatrix(xArray,  yArray.length);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  RealMatrix  yArray  =  getCovarianceMatrix(xArray,  yArray.length);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix  yArray  =  getCovarianceMatrix(xArray,  yArray.length);	  RealMatrix    yArray    =    getCovarianceMatrix(xArray,    yArray);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
170	[BUG]  [BUGGY]  RealMatrix  yArray  =  getCovarianceMatrix(xArray,  yArray,  null);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  RealMatrix  yArray  =  getCovarianceMatrix(xArray,  yArray,  null);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix  yArray  =  getCovarianceMatrix(xArray,  yArray,  null);	  RealMatrix    yArray    =    getCovarianceMatrix(xArray,    yArray);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
171	[BUG]  [BUGGY]  Regression  <  double>  regression  =  this.regression.removeDouble(xArray,  yArray);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  Regression  <  double>  regression  =  this.regression.removeDouble(xArray,  yArray);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  <  double>  regression  =  this.regression.removeDouble(xArray,  yArray);	  Regression    <    double>    regression    =    this.regression.removeDouble(xArray);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
172	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    MathRuntimeException$4    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  <  2)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(xArray.length!=  yArray.length  ||  xArray.length  <  2)  {	  if(xArray.length!=    yArray.length    ||    xArray.length    <    1)    {    	compilable	  [FE]  AssertionFailedError  	22	14	replace
173	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  <  2)  {  [FE]  AssertionFailedError  [FE]    MathRuntimeException$4    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  <  2)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=  yArray.length  ||  xArray.length  <  2)  {	  if(xArray.length!=    yArray.length    ||    xArray.length    <    1)    {    	compilable	  [FE]  AssertionFailedError  	22	14	replace
174	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]      MathRuntimeException$4    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length!=  xArray.length  ||  xArray.length  <  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(yArray.length!=  xArray.length  ||  xArray.length  <  1)  {	  if(xArray.length!=    yArray.length    ||    xArray.length    <    1)    {    	compilable	  [FE]  MathRuntimeException$4  	22	13	replace
175	[BUG]  [BUGGY]  if(yArray.length!=  xArray.length  ||  xArray.length  <  1)  {  [FE]  MathRuntimeException$4  [FE]      MathRuntimeException$4    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length!=  xArray.length  ||  xArray.length  <  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length!=  xArray.length  ||  xArray.length  <  1)  {	  if(xArray.length!=    yArray.length    ||    xArray.length    <    1)    {    	compilable	  [FE]  MathRuntimeException$4  	22	13	replace
176	[BUG]  [BUGGY]  Double[]  yArray  =(double[])yArray.clone();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  Double[]  yArray  =(double[])yArray.clone();  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Double[]  yArray  =(double[])yArray.clone();	  Double[]    xArray    =(double[])yArray.clone();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
177	[BUG]  [BUGGY]  Double[]  xArray  =(Double[])yArray.clone();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  Double[]  xArray  =(Double[])yArray.clone();  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Double[]  xArray  =(Double[])yArray.clone();	  Double[]    xArray    =(double[])yArray.clone();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
178	[BUG]  [BUGGY]  Regression  <  double>  regression  =  xArray.removeDouble(relative);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  Regression  <  double>  regression  =  xArray.removeDouble(relative);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  <  double>  regression  =  xArray.removeDouble(relative);	  Regression    <    double>    regression    =    yArray.removeDouble(relative);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
179	[BUG]  [BUGGY]  double  size  =  yArray.size();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double  size  =  yArray.size();  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double  size  =  yArray.size();	  int    size    =    yArray.size();    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
180	[BUG]  [BUGGY]  int  size  =  xArray.size();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  int  size  =  xArray.size();  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  size  =  xArray.size();	  int    size    =    yArray.size();    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
181	[BUG]  [BUGGY]  int  size  =  yArray.size()  +  1;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  int  size  =  yArray.size()  +  1;  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  size  =  yArray.size()  +  1;	  int    size    =    yArray.size();    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
182	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length!=  yArray.length)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(yArray.length!=  yArray.length)  {	  if(yArray.length!=    xArray.length)    {    	compilable	  [FE]  MathRuntimeException$4  	51	13	replace
183	[BUG]  [BUGGY]  if(yArray.length!=  yArray.length)  {  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length!=  yArray.length)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length!=  yArray.length)  {	  if(yArray.length!=    xArray.length)    {    	compilable	  [FE]  MathRuntimeException$4  	51	13	replace
184	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  0,  yArray[i]);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  0,  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  0,  yArray[i]);  }	  for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    0,    yArray[i]);    }    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
185	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  0,  yArray[i]);  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  0,  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  0,  yArray[i]);  }	  for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    0,    yArray[i]);    }    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
186	[BUG]  [BUGGY]  For(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  0,  yArray[i]);  }  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  For(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  0,  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	For(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  0,  yArray[i]);  }	  for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    0,    yArray[i]);    }    	non-compiled	[CE]  	118	None	replace
187	[BUG]  [BUGGY]  If(yArray.length!=  xArray.length  &&  yArray.length  >  1)  {  [CE]  ';'  expected  [FE]        MathRuntimeException$4      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  If(yArray.length!=  xArray.length  &&  yArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	If(yArray.length!=  xArray.length  &&  yArray.length  >  1)  {	  if(xArray.length!=    yArray.length    &&    yArray.length    >    1)    {    If(xArray.length!=    yArray.length    &&    yArray.length    >    1)    {    	non-compiled	[CE]  ';'  expected	96	None	replace
188	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i]);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i]);  }	  for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i]);    }    	non-compiled	[CE]  illegal  start  of  type	117	None	replace
189	[BUG]  [BUGGY]  int  nVars  =  Math.max(regression.getR().computeValue(yArray,  xArray,  size));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  int  nVars  =  Math.max(regression.getR().computeValue(yArray,  xArray,  size));  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  nVars  =  Math.max(regression.getR().computeValue(yArray,  xArray,  size));	  int    nVars    =    Math.max(regression.getR().computeValue(xArray,    yArray,    size));    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
190	[BUG]  [BUGGY]  int  nVars  =  Math.max(regression.getR().computeValue(xArray,  yArray,  0,  size));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  int  nVars  =  Math.max(regression.getR().computeValue(xArray,  yArray,  0,  size));  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  nVars  =  Math.max(regression.getR().computeValue(xArray,  yArray,  0,  size));	  int    nVars    =    Math.max(regression.getR().computeValue(xArray,    yArray,    size));    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
191	[BUG]  [BUGGY]  Regression  regression  =  new  Regression(xArray.length);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  Regression  regression  =  new  Regression(xArray.length);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  regression  =  new  Regression(xArray.length);	  Regression    regression    =    new    Regression();    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
192	[BUG]  [BUGGY]  Regression  regression  =  new  Regression(xArray.length,  yArray.length);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  Regression  regression  =  new  Regression(xArray.length,  yArray.length);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  regression  =  new  Regression(xArray.length,  yArray.length);	  Regression    regression    =    new    Regression();    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
193	[BUG]  [BUGGY]  Regression  regression  =  new  Regression(xArray,  yArray);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  Regression  regression  =  new  Regression(xArray,  yArray);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  regression  =  new  Regression(xArray,  yArray);	  Regression    regression    =    new    Regression();    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
194	[BUG]  [BUGGY]  double[]  yArray  =  new  double[xArray.length];  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  yArray  =  new  double[xArray.length];  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  yArray  =  new  double[xArray.length];	  double[]    yArray    =    new    double[yArray.length];    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
195	[BUG]  [BUGGY]  final  double[]  yArray  =  new  double[yArray.length];  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  final  double[]  yArray  =  new  double[yArray.length];  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	final  double[]  yArray  =  new  double[yArray.length];	  double[]    yArray    =    new    double[yArray.length];    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
196	[BUG]  [BUGGY]  double[]  xArray  =(double[])rev.clone();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  xArray  =(double[])rev.clone();  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =(double[])rev.clone();	  double[]    xArray    =(double[])variance.clone();    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
197	[BUG]  [BUGGY]  double[]  xArray  =  new  double[xArray.length  -  1];  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  xArray  =  new  double[xArray.length  -  1];  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =  new  double[xArray.length  -  1];	  double[]    xArray    =    new    double[xArray.length];    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
198	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length)  {  if(xArray.length  ==  yArray.length)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length  ==  yArray.length)  {  if(xArray.length  ==  yArray.length)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length    ==    yArray.length)    {    if(xArray.length  ==  yArray.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
199	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length)  {  if(xArray.length!=  yArray.length)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length  ==  yArray.length)  {  if(xArray.length!=  yArray.length)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length    ==    yArray.length)    {    if(xArray.length!=  yArray.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
200	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length)  {  if(xArray.length  >=  yArray.length)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length  ==  yArray.length)  {  if(xArray.length  >=  yArray.length)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length    ==    yArray.length)    {    if(xArray.length  >=  yArray.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
201	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length)  {  If(xArray.length  ==  yArray.length)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length  ==  yArray.length)  {  If(xArray.length  ==  yArray.length)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length    ==    yArray.length)    {    If(xArray.length  ==  yArray.length)  {	  	non-compiled	[CE]  ';'  expected	52	None	add
202	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length!=  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(xArray.length!=  yArray.length  ||  xArray.length!=  1)  {	  if(xArray.length    ==    yArray.length    ||    xArray.length!=    1)    {    	compilable	  [FE]  AssertionFailedError  	46	2	replace
203	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length!=  1)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length!=  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=  yArray.length  ||  xArray.length!=  1)  {	  if(xArray.length    ==    yArray.length    ||    xArray.length!=    1)    {    	compilable	  [FE]  AssertionFailedError  	46	2	replace
204	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length  ==  xArray.length  ||  xArray.length!=  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(yArray.length  ==  xArray.length  ||  xArray.length!=  1)  {	  if(xArray.length    ==    yArray.length    ||    xArray.length!=    1)    {    	compilable	  [FE]  AssertionFailedError  	46	3	replace
205	[BUG]  [BUGGY]  if(yArray.length  ==  xArray.length  ||  xArray.length!=  1)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length  ==  xArray.length  ||  xArray.length!=  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length  ==  xArray.length  ||  xArray.length!=  1)  {	  if(xArray.length    ==    yArray.length    ||    xArray.length!=    1)    {    	compilable	  [FE]  AssertionFailedError  	46	3	replace
206	[BUG]  [BUGGY]  if(yArray.length!=  xArray.length)  {  if(yArray.length!=  xArray.length)  {  [CE]  illegal  start  of  expression  [FE]    MathRuntimeException$4    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length!=  xArray.length)  {  if(yArray.length!=  xArray.length)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length!=    xArray.length)    {    if(yArray.length!=  xArray.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
207	[BUG]  [BUGGY]  if(yArray.length!=  xArray.length)  {  if(yArray.length  >=  xArray.length)  {  [CE]  illegal  start  of  expression  [FE]      MathRuntimeException$4    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length!=  xArray.length)  {  if(yArray.length  >=  xArray.length)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length!=    xArray.length)    {    if(yArray.length  >=  xArray.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
208	[BUG]  [BUGGY]  if(yArray.length!=  xArray.length)  {  if(xArray.length!=  xArray.length)  {  [CE]  illegal  start  of  expression  [FE]        MathRuntimeException$4    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length!=  xArray.length)  {  if(xArray.length!=  xArray.length)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length!=    xArray.length)    {    if(xArray.length!=  xArray.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
209	[BUG]  [BUGGY]  if(yArray.length!=  xArray.length)  {  if(yArray.length  ==  xArray.length)  {  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$4    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length!=  xArray.length)  {  if(yArray.length  ==  xArray.length)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length!=    xArray.length)    {    if(yArray.length  ==  xArray.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
210	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length  <  1)  {  if(xArray.length  ==  yArray.length  ||  xArray.length  <  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length  <  1)  {  if(xArray.length  ==  yArray.length  ||  xArray.length  <  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length    ==    yArray.length    ||    xArray.length    <    1)    {    if(xArray.length  ==  yArray.length  ||  xArray.length  <  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
211	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length  <  1)  {  if(xArray.length!=  yArray.length  ||  xArray.length  <  1)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length  <  1)  {  if(xArray.length!=  yArray.length  ||  xArray.length  <  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length    ==    yArray.length    ||    xArray.length    <    1)    {    if(xArray.length!=  yArray.length  ||  xArray.length  <  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
212	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length  <  1)  {  If(xArray.length  ==  yArray.length  ||  xArray.length  <  1)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length  <  1)  {  If(xArray.length  ==  yArray.length  ||  xArray.length  <  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length    ==    yArray.length    ||    xArray.length    <    1)    {    If(xArray.length  ==  yArray.length  ||  xArray.length  <  1)  {	  	non-compiled	[CE]  ';'  expected	43	None	add
213	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length  <  1)  {  if(xArray.length  ==  yArray.length  ||  xArray.length  >=  1)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length  <  1)  {  if(xArray.length  ==  yArray.length  ||  xArray.length  >=  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length    ==    yArray.length    ||    xArray.length    <    1)    {    if(xArray.length  ==  yArray.length  ||  xArray.length  >=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
214	[BUG]  [BUGGY]  if(yArray.length!=  xArray.length  ||  yArray.length  >  1)  {  if(yArray.length!=  xArray.length  ||  yArray.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length!=  xArray.length  ||  yArray.length  >  1)  {  if(yArray.length!=  xArray.length  ||  yArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length!=    xArray.length    ||    yArray.length    >    1)    {    if(yArray.length!=  xArray.length  ||  yArray.length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
215	[BUG]  [BUGGY]  if(yArray.length!=  xArray.length  ||  yArray.length  >  1)  {  if(xArray.length!=  xArray.length  ||  yArray.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length!=  xArray.length  ||  yArray.length  >  1)  {  if(xArray.length!=  xArray.length  ||  yArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length!=    xArray.length    ||    yArray.length    >    1)    {    if(xArray.length!=  xArray.length  ||  yArray.length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
216	[BUG]  [BUGGY]  if(yArray.length!=  xArray.length  ||  yArray.length  >  1)  {  if(yArray.length  >=  xArray.length  ||  yArray.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length!=  xArray.length  ||  yArray.length  >  1)  {  if(yArray.length  >=  xArray.length  ||  yArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length!=    xArray.length    ||    yArray.length    >    1)    {    if(yArray.length  >=  xArray.length  ||  yArray.length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
217	[BUG]  [BUGGY]  if(yArray.length!=  xArray.length  ||  yArray.length  >  1)  {  if(yArray.length  ==  xArray.length  ||  yArray.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length!=  xArray.length  ||  yArray.length  >  1)  {  if(yArray.length  ==  xArray.length  ||  yArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length!=    xArray.length    ||    yArray.length    >    1)    {    if(yArray.length  ==  xArray.length  ||  yArray.length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
218	[BUG]  [BUGGY]  double[]  xArray  =  xArray.getDataRef();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  xArray  =  xArray.getDataRef();  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =  xArray.getDataRef();	  double[]    xArray    =    regression.getDataRef();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
219	[BUG]  [BUGGY]  double[]  xArray  =  regression.getR();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  xArray  =  regression.getR();  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =  regression.getR();	  double[]    xArray    =    regression.getDataRef();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
220	[BUG]  [BUGGY]  double[]  xArray  =  yArray.getDataRef();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  xArray  =  yArray.getDataRef();  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =  yArray.getDataRef();	  double[]    xArray    =    regression.getDataRef();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
221	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix(xArray,  yArray);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix(xArray,  yArray);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix(xArray,  yArray);	  RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix(yArray);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
222	[BUG]  [BUGGY]  double[]  xArray  =  new  double[yArray.length  -  2];  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  xArray  =  new  double[yArray.length  -  2];  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =  new  double[yArray.length  -  2];	  double[]    xArray    =    new    double[yArray.length    -    1];    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
223	[BUG]  [BUGGY]  int  nVars  =  Math.max(regression.getR().computeValue(xArray),  yArray,  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  int  nVars  =  Math.max(regression.getR().computeValue(xArray),  yArray,  1);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  nVars  =  Math.max(regression.getR().computeValue(xArray),  yArray,  1);	  int    nVars    =    Math.max(regression.getR().computeValue(xArray),    yArray,    0);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
224	[BUG]  [BUGGY]  int  nVars  =  Math.max(regression.getR().computeValue(xArray),  yArray,  2);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  int  nVars  =  Math.max(regression.getR().computeValue(xArray),  yArray,  2);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  nVars  =  Math.max(regression.getR().computeValue(xArray),  yArray,  2);	  int    nVars    =    Math.max(regression.getR().computeValue(xArray),    yArray,    0);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
225	[BUG]  [BUGGY]  final  double[]  yArray  =(double[])yArray.clone();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  final  double[]  yArray  =(double[])yArray.clone();  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	final  double[]  yArray  =(double[])yArray.clone();	  final    double[]    xArray    =(double[])yArray.clone();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
226	[BUG]  [BUGGY]  final  int[]  xArray  =(int[])yArray.clone();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  final  int[]  xArray  =(int[])yArray.clone();  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	final  int[]  xArray  =(int[])yArray.clone();	  final    double[]    xArray    =(double[])yArray.clone();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
227	[BUG]  [BUGGY]  final  double[]  yArray  =(double[])xArray.clone();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  final  double[]  yArray  =(double[])xArray.clone();  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	final  double[]  yArray  =(double[])xArray.clone();	  final    double[]    xArray    =(double[])yArray.clone();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
228	[BUG]  [BUGGY]  RealMatrix[]  covarianceMatrix  =  getCovarianceMatrix(xArray,  yArray);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  RealMatrix[]  covarianceMatrix  =  getCovarianceMatrix(xArray,  yArray);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix[]  covarianceMatrix  =  getCovarianceMatrix(xArray,  yArray);	  RealMatrix    covarianceMatrix    =    getCovarianceMatrix(yArray,    xArray);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
229	[BUG]  [BUGGY]  RealMatrix  matrix  =  getCovarianceMatrix(xArray,  yArray);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  RealMatrix  matrix  =  getCovarianceMatrix(xArray,  yArray);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix  matrix  =  getCovarianceMatrix(xArray,  yArray);	  RealMatrix    covarianceMatrix    =    getCovarianceMatrix(yArray,    xArray);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
230	[BUG]  [BUGGY]  double[]  xArray  =  new  double[yArray.length  *  3];  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  xArray  =  new  double[yArray.length  *  3];  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =  new  double[yArray.length  *  3];	  double[]    xArray    =    new    double[yArray.length    +    3];    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
231	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length!=  yArray.length  &&  yArray.length  <  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(xArray.length!=  yArray.length  &&  yArray.length  <  1)  {	  if(yArray.length!=    xArray.length    &&    yArray.length    >    1)    {    	compilable	  [FE]  MathRuntimeException$4  	84	13	replace
232	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length  &&  yArray.length  <  1)  {  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length!=  yArray.length  &&  yArray.length  <  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=  yArray.length  &&  yArray.length  <  1)  {	  if(yArray.length!=    xArray.length    &&    yArray.length    >    1)    {    	compilable	  [FE]  MathRuntimeException$4  	84	13	replace
233	[BUG]  [BUGGY]  int  nVars  =  Math.max(regression.getR().computeValue(xArray,  yArray,  size),  0);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  int  nVars  =  Math.max(regression.getR().computeValue(xArray,  yArray,  size),  0);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  nVars  =  Math.max(regression.getR().computeValue(xArray,  yArray,  size),  0);	  int    nVars    =    Math.max(regression.getR().computeValue(xArray,    yArray,    size));    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
234	[BUG]  [BUGGY]  double[]  xArray  =  new  double[yArray.length],  yArray.length  +  1);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  xArray  =  new  double[yArray.length],  yArray.length  +  1);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =  new  double[yArray.length],  yArray.length  +  1);	  double[]    xArray    =    new    double[yArray.length],    yArray.length);    	non-compiled	[CE]  	114	None	replace
235	[BUG]  [BUGGY]  double[]  xArray  =  new  double[yArray.length],  yArray.length  -  1);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  xArray  =  new  double[yArray.length],  yArray.length  -  1);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =  new  double[yArray.length],  yArray.length  -  1);	  double[]    xArray    =    new    double[yArray.length],    yArray.length);    	non-compiled	[CE]  	114	None	replace
236	[BUG]  [BUGGY]  if(xArray.length  >=  yArray.length)  {  If(xArray.length  >=  yArray.length)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length  >=  yArray.length)  {  If(xArray.length  >=  yArray.length)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length    >=    yArray.length)    {    If(xArray.length  >=  yArray.length)  {	  	non-compiled	[CE]  ';'  expected	54	None	add
237	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length  ||  yArray.length  >  1)  {  If(xArray.length!=  yArray.length  ||  yArray.length  >  1)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length!=  yArray.length  ||  yArray.length  >  1)  {  If(xArray.length!=  yArray.length  ||  yArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=    yArray.length    ||    yArray.length    >    1)    {    If(xArray.length!=  yArray.length  ||  yArray.length  >  1)  {	  	non-compiled	[CE]  ';'  expected	85	None	add
238	[BUG]  [BUGGY]  double[]  yArray  =  new  double[yArray.length  -  1];  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  yArray  =  new  double[yArray.length  -  1];  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  yArray  =  new  double[yArray.length  -  1];	  double[]    yArray    =    new    double[yArray.length];    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
239	[BUG]  [BUGGY]  double[]  yArray  =  regression.computeDataRef(xArray,  yArray,  0);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  yArray  =  regression.computeDataRef(xArray,  yArray,  0);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  yArray  =  regression.computeDataRef(xArray,  yArray,  0);	  double[]    yArray    =    regression.computeDataRef(xArray,    yArray);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
240	[BUG]  [BUGGY]  Double[]  yArray  =  regression.computeDataRef(xArray,  yArray);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  Double[]  yArray  =  regression.computeDataRef(xArray,  yArray);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Double[]  yArray  =  regression.computeDataRef(xArray,  yArray);	  double[]    yArray    =    regression.computeDataRef(xArray,    yArray);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
241	[BUG]  [BUGGY]  double[]  xArray  =  regression.computeDataRef(xArray,  yArray);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  xArray  =  regression.computeDataRef(xArray,  yArray);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =  regression.computeDataRef(xArray,  yArray);	  double[]    yArray    =    regression.computeDataRef(xArray,    yArray);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
242	[BUG]  [BUGGY]  Double[]  xArray  =(double[])dataset.clone();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  Double[]  xArray  =(double[])dataset.clone();  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Double[]  xArray  =(double[])dataset.clone();	  Double[]    xArray    =(double[])regression.clone();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
243	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            MathRuntimeException$4      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length!=  0)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(yArray.length!=  0)  {	  if(xArray.length!=    yArray.length)    {    if(xArray.length    >>    yArray.length)    {    	compilable	  [FE]  AssertionFailedError  	17	3	replace
244	[BUG]  [BUGGY]  if(yArray.length!=  0)  {  [FE]  AssertionFailedError  [FE]            MathRuntimeException$4      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length!=  0)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length!=  0)  {	  if(xArray.length!=    yArray.length)    {    if(xArray.length    >>    yArray.length)    {    	compilable	  [FE]  AssertionFailedError  	17	3	replace
245	[BUG]  [BUGGY]  Regression  regression  =  new  Regression(yArray);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  Regression  regression  =  new  Regression(yArray);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  regression  =  new  Regression(yArray);	  Regression    regression    =    new    Regression();    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
246	[BUG]  [BUGGY]  Regression  <  double>  regression  =  yArray.removeDouble(yArray.length);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  Regression  <  double>  regression  =  yArray.removeDouble(yArray.length);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  <  double>  regression  =  yArray.removeDouble(yArray.length);	  Regression    <    double>    regression    =    yArray.removeDouble(xArray);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
247	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(yArray,  xArray,  yArray.length);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(yArray,  xArray,  yArray.length);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix  covarianceMatrix  =  getCovarianceMatrix(yArray,  xArray,  yArray.length);	  RealMatrix    covarianceMatrix    =    getCovarianceMatrix(yArray,    xArray);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
248	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length)  {  If(xArray.length  ==  yArray.length  ||  xArray.length  >  1)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length  ==  yArray.length)  {  If(xArray.length  ==  yArray.length  ||  xArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length  ==  yArray.length)  {  If(xArray.length  ==  yArray.length  ||  xArray.length  >  1)  {	  if(xArray.length    ==    yArray.length    ||    xArray.length    >    1)    {    If(xArray.length    ==    yArray.length    ||    xArray.length    >    1)    {    	non-compiled	[CE]  ';'  expected	30	None	replace
249	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length)  {  If(xArray.length  ==  yArray.length  ||  xArray.length  >  1)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length!=  yArray.length)  {  If(xArray.length  ==  yArray.length  ||  xArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=  yArray.length)  {  If(xArray.length  ==  yArray.length  ||  xArray.length  >  1)  {	  if(xArray.length    ==    yArray.length    ||    xArray.length    >    1)    {    If(xArray.length    ==    yArray.length    ||    xArray.length    >    1)    {    	non-compiled	[CE]  ';'  expected	30	None	replace
250	[BUG]  [BUGGY]  int  nVars  =  Math.max(regression.getR().computeValue(xArray,  yArray)-  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  int  nVars  =  Math.max(regression.getR().computeValue(xArray,  yArray)-  1);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  nVars  =  Math.max(regression.getR().computeValue(xArray,  yArray)-  1);	  int    nVars    =    Math.max(regression.getR().computeValue(xArray,    yArray),    0);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
251	[BUG]  [BUGGY]  Regression  <  double>  regression  =  regression.get(xArray.length);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  Regression  <  double>  regression  =  regression.get(xArray.length);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  <  double>  regression  =  regression.get(xArray.length);	  Regression    <    double>    regression    =    regression.remove(xArray.length);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
252	[BUG]  [BUGGY]  Regression  <  double>  regression  =  yArray.getReal();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  Regression  <  double>  regression  =  yArray.getReal();  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  <  double>  regression  =  yArray.getReal();	  Regression    <    double>    regression    =    yArray.getR();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
253	[BUG]  [BUGGY]  Regression  <  double>  regression  =  yArray.remove(xArray.length);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  Regression  <  double>  regression  =  yArray.remove(xArray.length);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  <  double>  regression  =  yArray.remove(xArray.length);	  Regression    <    double>    regression    =    yArray.getR();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
254	[BUG]  [BUGGY]  Regression  <  double>  regression  =  yArray.get(relative);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  Regression  <  double>  regression  =  yArray.get(relative);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  <  double>  regression  =  yArray.get(relative);	  Regression    <    double>    regression    =    yArray.removeDouble(relative);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
255	[BUG]  [BUGGY]  if(yArray.length!=  xArray.length)  {  If(yArray.length!=  xArray.length)  {  [CE]  ';'  expected  [FE]    MathRuntimeException$4    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length!=  xArray.length)  {  If(yArray.length!=  xArray.length)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length!=    xArray.length)    {    If(yArray.length!=  xArray.length)  {	  	non-compiled	[CE]  ';'  expected	50	None	add
256	[BUG]  [BUGGY]  if(yArray.length!=  xArray.length)  {  If(xArray.length!=  yArray.length  ||  xArray.length  ==  1)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length!=  xArray.length)  {  If(xArray.length!=  yArray.length  ||  xArray.length  ==  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length!=  xArray.length)  {  If(xArray.length!=  yArray.length  ||  xArray.length  ==  1)  {	  if(xArray.length!=    yArray.length    ||    xArray.length    >    1)    {    If(xArray.length!=    yArray.length    ||    xArray.length    >    1)    {    	non-compiled	[CE]  ';'  expected	62	None	replace
257	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length)  {  If(xArray.length!=  yArray.length  ||  xArray.length  >  1)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length  ==  yArray.length)  {  If(xArray.length!=  yArray.length  ||  xArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length  ==  yArray.length)  {  If(xArray.length!=  yArray.length  ||  xArray.length  >  1)  {	  if(xArray.length!=    yArray.length    ||    xArray.length    >    1)    {    If(xArray.length!=    yArray.length    ||    xArray.length    >    1)    {    	non-compiled	[CE]  ';'  expected	62	None	replace
258	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length  ||  yArray.length  >  1)  {  if(yArray.length  ==  xArray.length  ||  yArray.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length  ==  yArray.length  ||  yArray.length  >  1)  {  if(yArray.length  ==  xArray.length  ||  yArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length    ==    yArray.length    ||    yArray.length    >    1)    {    if(yArray.length  ==  xArray.length  ||  yArray.length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
259	[BUG]  [BUGGY]  if(yArray.length  ==  xArray.length  ||  xArray.length  >  1)  {  if(xArray.length  ==  yArray.length  ||  xArray.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length  ==  xArray.length  ||  xArray.length  >  1)  {  if(xArray.length  ==  yArray.length  ||  xArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length    ==    xArray.length    ||    xArray.length    >    1)    {    if(xArray.length  ==  yArray.length  ||  xArray.length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	112	None	add
260	[BUG]  [BUGGY]  int  nObs  =  Math.max(regression.getR().compareTo(yArray,  xArray));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  int  nObs  =  Math.max(regression.getR().compareTo(yArray,  xArray));  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  nObs  =  Math.max(regression.getR().compareTo(yArray,  xArray));	  int    nObs    =    Math.max(regression.getR().compareTo(xArray,    yArray));    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
261	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length  >  0)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(yArray.length  >  0)  {	  if(xArray.length    ==    yArray.length    ||    xArray.length    >    1)    {    if(xArray.length    ==    yArray.length    ||    xArray.length    >    1)    {    	compilable	  [FE]  AssertionFailedError  	29	3	replace
262	[BUG]  [BUGGY]  if(yArray.length  >  0)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length  >  0)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length  >  0)  {	  if(xArray.length    ==    yArray.length    ||    xArray.length    >    1)    {    if(xArray.length    ==    yArray.length    ||    xArray.length    >    1)    {    	compilable	  [FE]  AssertionFailedError  	29	3	replace
263	[BUG]  [BUGGY]  if(yArray.length!=  xArray.length  ||  yArray.length  >  1)  {  if(xArray.length!=  yArray.length  ||  yArray.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length!=  xArray.length  ||  yArray.length  >  1)  {  if(xArray.length!=  yArray.length  ||  yArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length!=    xArray.length    ||    yArray.length    >    1)    {    if(xArray.length!=  yArray.length  ||  yArray.length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
264	[BUG]  [BUGGY]  double[]  xArray  =(double[])compiler.clone();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  xArray  =(double[])compiler.clone();  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =(double[])compiler.clone();	  double[]    xArray    =(double[])variance.clone();    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
265	[BUG]  [BUGGY]  double[]  xArray  =  new  double[yArray.length  -  3];  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  xArray  =  new  double[yArray.length  -  3];  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =  new  double[yArray.length  -  3];	  double[]    xArray    =    new    double[yArray.length    -    1];    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
266	[BUG]  [BUGGY]  Regression  <  double>  regression  =  this.regression.computeSize(xArray,  yArray);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  Regression  <  double>  regression  =  this.regression.computeSize(xArray,  yArray);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  <  double>  regression  =  this.regression.computeSize(xArray,  yArray);	  Regression    <    double>    regression    =    this.regression.getR();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
267	[BUG]  [BUGGY]  RealMatrix  yArray  =  getCovarianceMatrix(yArray,  xArray);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  RealMatrix  yArray  =  getCovarianceMatrix(yArray,  xArray);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix  yArray  =  getCovarianceMatrix(yArray,  xArray);	  RealMatrix    yArray    =    getCovarianceMatrix(xArray,    yArray);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
268	[BUG]  [BUGGY]  Regression  <  double>  regression  =  this.regression.getDouble(xArray);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  Regression  <  double>  regression  =  this.regression.getDouble(xArray);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  <  double>  regression  =  this.regression.getDouble(xArray);	  Regression    <    double>    regression    =    this.regression.removeDouble(yArray);    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
269	[BUG]  [BUGGY]  Regression  <  double>  regression  =  this.regression.getDouble(yArray);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  Regression  <  double>  regression  =  this.regression.getDouble(yArray);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  <  double>  regression  =  this.regression.getDouble(yArray);	  Regression    <    double>    regression    =    this.regression.removeDouble(yArray);    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
270	[BUG]  [BUGGY]  double[]  yArray  =  new  double[yArray.length  *  1];  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  yArray  =  new  double[yArray.length  *  1];  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  yArray  =  new  double[yArray.length  *  1];	  double[]    yArray    =    new    double[yArray.length    +    1];    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
271	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length)  {  If(xArray.length!=  yArray.length  &&  yArray.length  >  1)  {  [CE]  ';'  expected  [FE]        MathRuntimeException$4      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length!=  yArray.length)  {  If(xArray.length!=  yArray.length  &&  yArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=  yArray.length)  {  If(xArray.length!=  yArray.length  &&  yArray.length  >  1)  {	  if(xArray.length!=    yArray.length    &&    yArray.length    >    1)    {    If(xArray.length!=    yArray.length    &&    yArray.length    >    1)    {    	non-compiled	[CE]  ';'  expected	96	None	replace
272	[BUG]  [BUGGY]  double[]  yArray  =  regression.getVars();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  yArray  =  regression.getVars();  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  yArray  =  regression.getVars();	  double[]    yArray    =    regression.getR();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
273	[BUG]  [BUGGY]  double[]  xArray  =(double[])regression.computeValue(xArray,  yArray);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  xArray  =(double[])regression.computeValue(xArray,  yArray);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =(double[])regression.computeValue(xArray,  yArray);	  double[]    xArray    =(double[])regression.toArray(xArray);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
274	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length!=  xArray.length  ||  yArray.length  ==  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(yArray.length!=  xArray.length  ||  yArray.length  ==  1)  {	  if(xArray.length!=    yArray.length    ||    xArray.length    ==    1)    {    	compilable	  [FE]  AssertionFailedError  	24	14	replace
275	[BUG]  [BUGGY]  if(yArray.length!=  xArray.length  ||  yArray.length  ==  1)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length!=  xArray.length  ||  yArray.length  ==  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length!=  xArray.length  ||  yArray.length  ==  1)  {	  if(xArray.length!=    yArray.length    ||    xArray.length    ==    1)    {    	compilable	  [FE]  AssertionFailedError  	24	14	replace
276	[BUG]  [BUGGY]  double[]  xArray  =(double[])yArray.toArray();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  xArray  =(double[])yArray.toArray();  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =(double[])yArray.toArray();	  double[]    xArray    =(double[])yArray.toArray(regression);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
277	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length!=  xArray.length  ||  yArray.length  <  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(yArray.length!=  xArray.length  ||  yArray.length  <  1)  {	  if(xArray.length!=    yArray.length    ||    xArray.length    <    1)    {    	compilable	  [FE]  MathRuntimeException$4  	22	13	replace
278	[BUG]  [BUGGY]  if(yArray.length!=  xArray.length  ||  yArray.length  <  1)  {  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length!=  xArray.length  ||  yArray.length  <  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length!=  xArray.length  ||  yArray.length  <  1)  {	  if(xArray.length!=    yArray.length    ||    xArray.length    <    1)    {    	compilable	  [FE]  MathRuntimeException$4  	22	13	replace
279	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix(yArray,  xArray);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix(yArray,  xArray);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix(yArray,  xArray);	  RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix(yArray);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
280	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(xArray,  yArray,  correlation);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(xArray,  yArray,  correlation);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix  covarianceMatrix  =  getCovarianceMatrix(xArray,  yArray,  correlation);	  RealMatrix    covarianceMatrix    =    getCovarianceMatrix(xArray,    yArray,    regression);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
281	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(xArray,  yArray,  replication);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(xArray,  yArray,  replication);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix  covarianceMatrix  =  getCovarianceMatrix(xArray,  yArray,  replication);	  RealMatrix    covarianceMatrix    =    getCovarianceMatrix(xArray,    yArray,    regression);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
282	[BUG]  [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  0,  yArray[i]);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  0,  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  0,  yArray[i]);  }	  for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    0,    yArray[i]);    }    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
283	[BUG]  [BUGGY]  double[]  xArray  =  regression.computeValue(xArray,  yArray);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  xArray  =  regression.computeValue(xArray,  yArray);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =  regression.computeValue(xArray,  yArray);	  double[]    xArray    =    regression.getDataRef();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
284	[BUG]  [BUGGY]  double[]  yArray  =  regression.getDataImpl();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  yArray  =  regression.getDataImpl();  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  yArray  =  regression.getDataImpl();	  double[]    yArray    =    regression.getData();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
285	[BUG]  [BUGGY]  double[]  xArray  =  new  double[yArray.length  *  4];  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  xArray  =  new  double[yArray.length  *  4];  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =  new  double[yArray.length  *  4];	  double[]    xArray    =    new    double[yArray.length    *    1];    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
286	[BUG]  [BUGGY]  final  double[]  xxArray  =(double[])yArray.clone();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  final  double[]  xxArray  =(double[])yArray.clone();  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	final  double[]  xxArray  =(double[])yArray.clone();	  final    double[]    xArray    =(double[])yArray.clone();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
287	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length  ==  yArray.length  ||  yArray.length  >=  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(xArray.length  ==  yArray.length  ||  yArray.length  >=  1)  {	  if(yArray.length    ==    xArray.length    ||    yArray.length    >    1)    {    	compilable	  [FE]  AssertionFailedError  	28	3	replace
288	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length  ||  yArray.length  >=  1)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length  ==  yArray.length  ||  yArray.length  >=  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length  ==  yArray.length  ||  yArray.length  >=  1)  {	  if(yArray.length    ==    xArray.length    ||    yArray.length    >    1)    {    	compilable	  [FE]  AssertionFailedError  	28	3	replace
289	[BUG]  [BUGGY]  Regression  <  double>  regression  =  yArray.get(regression);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  Regression  <  double>  regression  =  yArray.get(regression);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  <  double>  regression  =  yArray.get(regression);	  Regression    <    double>    regression    =    yArray.removeDouble(regression);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
290	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
291	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }	  for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
292	[BUG]  [BUGGY]  int  nVars  =  Math.max(regression.getN().computeValue(xArray,  yArray));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  int  nVars  =  Math.max(regression.getN().computeValue(xArray,  yArray));  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  nVars  =  Math.max(regression.getN().computeValue(xArray,  yArray));	  int    nVars    =    Math.max(regression.getR().computeValue(yArray,    xArray));    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
293	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    MathRuntimeException$4    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length  ==  yArray.length)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(yArray.length  ==  yArray.length)  {	  if(yArray.length!=    xArray.length)    {    	compilable	  [FE]  AssertionFailedError  	51	3	replace
294	[BUG]  [BUGGY]  if(yArray.length  ==  yArray.length)  {  [FE]  AssertionFailedError  [FE]    MathRuntimeException$4    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length  ==  yArray.length)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length  ==  yArray.length)  {	  if(yArray.length!=    xArray.length)    {    	compilable	  [FE]  AssertionFailedError  	51	3	replace
295	[BUG]  [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	for(int  i=0;  i  <  size;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	  for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
296	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  <  1)  {  if(xArray.length!=  yArray.length  ||  xArray.length  >=  1)  {  [CE]  illegal  start  of  expression  [FE]    MathRuntimeException$4    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  <  1)  {  if(xArray.length!=  yArray.length  ||  xArray.length  >=  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=    yArray.length    ||    xArray.length    <    1)    {    if(xArray.length!=  yArray.length  ||  xArray.length  >=  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
297	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  <  1)  {  if(xArray.length!=  yArray.length  ||  xArray.length  <  2)  {  [CE]  illegal  start  of  expression  [FE]      MathRuntimeException$4    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  <  1)  {  if(xArray.length!=  yArray.length  ||  xArray.length  <  2)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=    yArray.length    ||    xArray.length    <    1)    {    if(xArray.length!=  yArray.length  ||  xArray.length  <  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
298	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length  <  1)  {  if(xArray.length  ==  yArray.length  ||  xArray.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length  <  1)  {  if(xArray.length  ==  yArray.length  ||  xArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length    ==    yArray.length    ||    xArray.length    <    1)    {    if(xArray.length  ==  yArray.length  ||  xArray.length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
299	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length)  {  If(xArray.length  ==  yArray.length  &&  yArray.length  >  1)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length!=  yArray.length)  {  If(xArray.length  ==  yArray.length  &&  yArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=  yArray.length)  {  If(xArray.length  ==  yArray.length  &&  yArray.length  >  1)  {	  if(xArray.length    ==    yArray.length    &&    yArray.length    >    1)    {    If(xArray.length    ==    yArray.length    &&    yArray.length    >    1)    {    	non-compiled	[CE]  ';'  expected	81	None	replace
300	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length!=  1)  {  if(xArray.length  ==  yArray.length  ||  xArray.length!=  2)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length!=  1)  {  if(xArray.length  ==  yArray.length  ||  xArray.length!=  2)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length    ==    yArray.length    ||    xArray.length!=    1)    {    if(xArray.length  ==  yArray.length  ||  xArray.length!=  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
301	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length!=  1)  {  If(xArray.length  ==  yArray.length  ||  xArray.length!=  1)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length!=  1)  {  If(xArray.length  ==  yArray.length  ||  xArray.length!=  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length    ==    yArray.length    ||    xArray.length!=    1)    {    If(xArray.length  ==  yArray.length  ||  xArray.length!=  1)  {	  	non-compiled	[CE]  ';'  expected	45	None	add
302	[BUG]  [BUGGY]  int  nObs  =  Math.max(regression.getN().length,  xArray.length);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  int  nObs  =  Math.max(regression.getN().length,  xArray.length);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  nObs  =  Math.max(regression.getN().length,  xArray.length);	  int    nObs    =    Math.max(regression.getR().length,    xArray.length);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
303	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  ==  1)  {  if(xArray.length!=  yArray.length  ||  xArray.length  ==  2)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  ==  1)  {  if(xArray.length!=  yArray.length  ||  xArray.length  ==  2)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=    yArray.length    ||    xArray.length    ==    1)    {    if(xArray.length!=  yArray.length  ||  xArray.length  ==  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
304	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length  <  1)  {  if(xArray.length  ==  yArray.length  ||  xArray.length  <  2)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length  <  1)  {  if(xArray.length  ==  yArray.length  ||  xArray.length  <  2)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length    ==    yArray.length    ||    xArray.length    <    1)    {    if(xArray.length  ==  yArray.length  ||  xArray.length  <  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
305	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(yArray,  yArray);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(yArray,  yArray);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix  covarianceMatrix  =  getCovarianceMatrix(yArray,  yArray);	  RealMatrix    covarianceMatrix    =    getCovarianceMatrix(yArray,    xArray);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
306	[BUG]  [BUGGY]  double[]  xArray  =  new  double[xArray.length  *  yArray.length];  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  xArray  =  new  double[xArray.length  *  yArray.length];  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =  new  double[xArray.length  *  yArray.length];	  double[]    xArray    =    new    double[xArray.length];    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
307	[BUG]  [BUGGY]  int  nVars  =  Math.max(regression.getR().computeValue(yArray,  yArray));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  int  nVars  =  Math.max(regression.getR().computeValue(yArray,  yArray));  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  nVars  =  Math.max(regression.getR().computeValue(yArray,  yArray));	  int    nVars    =    Math.max(regression.getR().computeValue(yArray,    xArray));    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
308	[BUG]  [BUGGY]  RealMatrix[]  covarianceMatrix  =  getCovarianceMatrix(yArray);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  RealMatrix[]  covarianceMatrix  =  getCovarianceMatrix(yArray);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix[]  covarianceMatrix  =  getCovarianceMatrix(yArray);	  RealMatrix    covarianceMatrix    =    getCovarianceMatrix(yArray);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
309	[BUG]  [BUGGY]  RealMatrix  yArray  =  getCovarianceMatrix(yArray,  xArray.length);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  RealMatrix  yArray  =  getCovarianceMatrix(yArray,  xArray.length);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix  yArray  =  getCovarianceMatrix(yArray,  xArray.length);	  RealMatrix    yArray    =    getCovarianceMatrix(xArray,    yArray);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
310	[BUG]  [BUGGY]  RealMatrix  yArray  =  getCovarianceMatrix(regression,  xArray,  yArray);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  RealMatrix  yArray  =  getCovarianceMatrix(regression,  xArray,  yArray);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix  yArray  =  getCovarianceMatrix(regression,  xArray,  yArray);	  RealMatrix    yArray    =    getCovarianceMatrix(xArray,    yArray);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
311	[BUG]  [BUGGY]  RealMatrix  yArray  =  getCovarianceMatrix(covarianceMatrix,  yArray);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  RealMatrix  yArray  =  getCovarianceMatrix(covarianceMatrix,  yArray);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix  yArray  =  getCovarianceMatrix(covarianceMatrix,  yArray);	  RealMatrix    yArray    =    getCovarianceMatrix(xArray,    yArray);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
312	[BUG]  [BUGGY]  if(yArray.length  >  0)  {  If(xArray.length  ==  yArray.length  ||  xArray.length  >  1)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length  >  0)  {  If(xArray.length  ==  yArray.length  ||  xArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length  >  0)  {  If(xArray.length  ==  yArray.length  ||  xArray.length  >  1)  {	  if(xArray.length    ==    yArray.length    ||    xArray.length    >    1)    {    If(xArray.length    ==    yArray.length    ||    xArray.length    >    1)    {    	non-compiled	[CE]  ';'  expected	30	None	replace
313	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length)  {  If(xArray.length  ==  yArray.length  ||  xArray.length  ==  1)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length  ==  yArray.length)  {  If(xArray.length  ==  yArray.length  ||  xArray.length  ==  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length  ==  yArray.length)  {  If(xArray.length  ==  yArray.length  ||  xArray.length  ==  1)  {	  if(xArray.length    ==    yArray.length    ||    xArray.length    >    1)    {    If(xArray.length    ==    yArray.length    ||    xArray.length    >    1)    {    	non-compiled	[CE]  ';'  expected	30	None	replace
314	[BUG]  [BUGGY]  Regression  <  double>  regression  =  this.regression.getData();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  Regression  <  double>  regression  =  this.regression.getData();  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  <  double>  regression  =  this.regression.getData();	  Regression    <    double>    regression    =    this.regression.getR();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
315	[BUG]  [BUGGY]  if(yArray.length  >  size)  {  [CE]  cannot  find  symbol  size  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length  >  size)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length  >  size)  {	  if(yArray.length    ==    xArray.length    &&    yArray.length    >    1)    {    if(xArray.length    ==    yArray.length    &&    yArray.length    >    1)    {    	non-compiled	[CE]  cannot  find  symbol  size	42	None	replace
316	[BUG]  [BUGGY]  int  size  =  this.yArray.size();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  int  size  =  this.yArray.size();  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  size  =  this.yArray.size();	  int    size    =    yArray.size();    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
317	[BUG]  [BUGGY]  double[]  yArray  =  regression.computeDataRef(yArray,  xArray);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  yArray  =  regression.computeDataRef(yArray,  xArray);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  yArray  =  regression.computeDataRef(yArray,  xArray);	  double[]    yArray    =    regression.computeDataRef(xArray,    yArray);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
318	[BUG]  [BUGGY]  int  nVars  =  Math.max(regression.getR().computeValue(yArray,  xArray,  0));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  int  nVars  =  Math.max(regression.getR().computeValue(yArray,  xArray,  0));  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  nVars  =  Math.max(regression.getR().computeValue(yArray,  xArray,  0));	  int    nVars    =    Math.max(regression.getR().computeValue(xArray,    yArray,    0));    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
319	[BUG]  [BUGGY]  double[]  xArray  =  regression.getData();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  xArray  =  regression.getData();  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =  regression.getData();	  double[]    xArray    =    regression.getDataRef();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
320	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  <  1)  {  If(xArray.length!=  yArray.length  ||  xArray.length  <  1)  {  [CE]  ';'  expected  [FE]    MathRuntimeException$4    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  <  1)  {  If(xArray.length!=  yArray.length  ||  xArray.length  <  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=    yArray.length    ||    xArray.length    <    1)    {    If(xArray.length!=  yArray.length  ||  xArray.length  <  1)  {	  	non-compiled	[CE]  ';'  expected	21	None	add
321	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  dataset.getCovarianceMatrix();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  RealMatrix  covarianceMatrix  =  dataset.getCovarianceMatrix();  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix  covarianceMatrix  =  dataset.getCovarianceMatrix();	  RealMatrix    covarianceMatrix    =    outMatrix.getCovarianceMatrix();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
322	[BUG]  [BUGGY]  double[]  xArray  =(double[])yArray.toArray(xArray,  regression);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  xArray  =(double[])yArray.toArray(xArray,  regression);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =(double[])yArray.toArray(xArray,  regression);	  double[]    xArray    =(double[])regression.toArray(xArray,    yArray);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
323	[BUG]  [BUGGY]  Regression  <  double>  regression  =  this.yArray.removeDouble(relative);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  Regression  <  double>  regression  =  this.yArray.removeDouble(relative);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  <  double>  regression  =  this.yArray.removeDouble(relative);	  Regression    <    double>    regression    =    yArray.removeDouble(relative);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
324	[BUG]  [BUGGY]  if(yArray.length!=  xArray.length)  {  If(yArray.length!=  xArray.length  &&  yArray.length  >  1)  {  [CE]  ';'  expected  [FE]        MathRuntimeException$4      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length!=  xArray.length)  {  If(yArray.length!=  xArray.length  &&  yArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length!=  xArray.length)  {  If(yArray.length!=  xArray.length  &&  yArray.length  >  1)  {	  if(xArray.length!=    yArray.length    &&    yArray.length    >    1)    {    If(xArray.length!=    yArray.length    &&    yArray.length    >    1)    {    	non-compiled	[CE]  ';'  expected	96	None	replace
325	[BUG]  [BUGGY]  if(yArray.length  >=  xArray.length)  {  If(yArray.length!=  xArray.length  &&  yArray.length  >  1)  {  [CE]  ';'  expected  [FE]          MathRuntimeException$4      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length  >=  xArray.length)  {  If(yArray.length!=  xArray.length  &&  yArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length  >=  xArray.length)  {  If(yArray.length!=  xArray.length  &&  yArray.length  >  1)  {	  if(xArray.length!=    yArray.length    &&    yArray.length    >    1)    {    If(xArray.length!=    yArray.length    &&    yArray.length    >    1)    {    	non-compiled	[CE]  ';'  expected	96	None	replace
326	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length)  {  If(xArray.length!=  yArray.length)  {  [CE]  ';'  expected  [FE]        MathRuntimeException$4      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(xArray.length  ==  yArray.length)  {  If(xArray.length!=  yArray.length)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length  ==  yArray.length)  {  If(xArray.length!=  yArray.length)  {	  if(xArray.length!=    yArray.length)    {    If(xArray.length!=    yArray.length)    {    	non-compiled	[CE]  ';'  expected	103	None	replace
327	[BUG]  [BUGGY]  double[]  yArray  =  regression.getHeight();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  yArray  =  regression.getHeight();  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  yArray  =  regression.getHeight();	  double[]    yArray    =    regression.getR();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
328	[BUG]  [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    xArray[i]);    }    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
329	[BUG]  [BUGGY]  if(yArray.length  >  0)  {  If(xArray.length!=  yArray.length  ||  xArray.length  >  1)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length  >  0)  {  If(xArray.length!=  yArray.length  ||  xArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length  >  0)  {  If(xArray.length!=  yArray.length  ||  xArray.length  >  1)  {	  if(xArray.length!=    yArray.length    ||    xArray.length    >    1)    {    If(xArray.length!=    yArray.length    ||    xArray.length    >    1)    {    	non-compiled	[CE]  ';'  expected	62	None	replace
330	[BUG]  [BUGGY]  if(yArray.length  ==  xArray.length)  {  If(xArray.length!=  yArray.length  ||  xArray.length  >  1)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length  ==  xArray.length)  {  If(xArray.length!=  yArray.length  ||  xArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length  ==  xArray.length)  {  If(xArray.length!=  yArray.length  ||  xArray.length  >  1)  {	  if(xArray.length!=    yArray.length    ||    xArray.length    >    1)    {    If(xArray.length!=    yArray.length    ||    xArray.length    >    1)    {    	non-compiled	[CE]  ';'  expected	62	None	replace
331	[BUG]  [BUGGY]  if(yArray.length  ==  xArray.length  ||  yArray.length  >  1)  {  If(yArray.length  ==  xArray.length  ||  yArray.length  >  1)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length  ==  xArray.length  ||  yArray.length  >  1)  {  If(yArray.length  ==  xArray.length  ||  yArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length    ==    xArray.length    ||    yArray.length    >    1)    {    If(yArray.length  ==  xArray.length  ||  yArray.length  >  1)  {	  	non-compiled	[CE]  ';'  expected	27	None	add
332	[BUG]  [BUGGY]  int  nObs  =  Math.max(regression.getN().length,  yArray.length);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  int  nObs  =  Math.max(regression.getN().length,  yArray.length);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  nObs  =  Math.max(regression.getN().length,  yArray.length);	  int    nObs    =    Math.max(regression.getR().length,    xArray.length);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
333	[BUG]  [BUGGY]  Regression  <  double>  regression  =  this.xArray.getR();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  Regression  <  double>  regression  =  this.xArray.getR();  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  <  double>  regression  =  this.xArray.getR();	  Regression    <    double>    regression    =    xArray.getR();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
334	[BUG]  [BUGGY]  double[]  yArray  =  new  double[yArray.length  *  2];  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  yArray  =  new  double[yArray.length  *  2];  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  yArray  =  new  double[yArray.length  *  2];	  double[]    yArray    =    new    double[yArray.length];    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
335	[BUG]  [BUGGY]  Regression  regression  =  new  Regression(yArray.length);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  Regression  regression  =  new  Regression(yArray.length);  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  regression  =  new  Regression(yArray.length);	  Regression    regression    =    new    Regression();    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
336	[BUG]  [BUGGY]  if(yArray.length!=  xArray.length)  {  If(yArray.length  ==  xArray.length  &&  yArray.length  >  1)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length!=  xArray.length)  {  If(yArray.length  ==  xArray.length  &&  yArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length!=  xArray.length)  {  If(yArray.length  ==  xArray.length  &&  yArray.length  >  1)  {	  if(xArray.length    ==    yArray.length    &&    yArray.length    >    1)    {    If(xArray.length    ==    yArray.length    &&    yArray.length    >    1)    {    	non-compiled	[CE]  ';'  expected	81	None	replace
337	[BUG]  [BUGGY]  if(yArray.length  ==  xArray.length)  {  If(yArray.length  ==  xArray.length  &&  yArray.length  >  1)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length  ==  xArray.length)  {  If(yArray.length  ==  xArray.length  &&  yArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length  ==  xArray.length)  {  If(yArray.length  ==  xArray.length  &&  yArray.length  >  1)  {	  if(xArray.length    ==    yArray.length    &&    yArray.length    >    1)    {    If(xArray.length    ==    yArray.length    &&    yArray.length    >    1)    {    	non-compiled	[CE]  ';'  expected	81	None	replace
338	[BUG]  [BUGGY]  if(yArray.length  >  0)  {  If(xArray.length  ==  yArray.length  &&  yArray.length  >  1)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  if(yArray.length  >  0)  {  If(xArray.length  ==  yArray.length  &&  yArray.length  >  1)  {  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length  >  0)  {  If(xArray.length  ==  yArray.length  &&  yArray.length  >  1)  {	  if(xArray.length    ==    yArray.length    &&    yArray.length    >    1)    {    If(xArray.length    ==    yArray.length    &&    yArray.length    >    1)    {    	non-compiled	[CE]  ';'  expected	81	None	replace
339	[BUG]  [BUGGY]  final  double[]  xArray  =(double[])regression.clone();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  final  double[]  xArray  =(double[])regression.clone();  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	final  double[]  xArray  =(double[])regression.clone();	  final    double[]    xArray    =(double[])yArray.clone();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
340	[BUG]  [BUGGY]  final  double[]  xArray  =(double[])yArray.toArray();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  final  double[]  xArray  =(double[])yArray.toArray();  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	final  double[]  xArray  =(double[])yArray.toArray();	  final    double[]    xArray    =(double[])yArray.clone();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
341	[BUG]  [BUGGY]  double[]  yArray  =(double[])this.yArray.clone();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  yArray  =(double[])this.yArray.clone();  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  yArray  =(double[])this.yArray.clone();	  double[]    yArray    =(double[])yArray.clone();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
342	[BUG]  [BUGGY]  double[]  xxArray  =  new  double[xArray.length],  yArray.length);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  double[]  xxArray  =  new  double[xArray.length],  yArray.length);  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xxArray  =  new  double[xArray.length],  yArray.length);	  double[]    xArray    =    new    double[yArray.length],    yArray.length);    	non-compiled	[CE]  	114	None	replace
343	[BUG]  [BUGGY]  int  nVars  =  Math.max(regression.getR().computeValue(xArray,  yArray,  null));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  int  nVars  =  Math.max(regression.getR().computeValue(xArray,  yArray,  null));  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  nVars  =  Math.max(regression.getR().computeValue(xArray,  yArray,  null));	  int    nVars    =    Math.max(regression.getR().computeValue(xArray,    yArray,    size));    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
344	[BUG]  [BUGGY]  int  nVars  =  Math.max(regression.getR().computeValue(xArray,  yArray,  size  -  1));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  int  nVars  =  Math.max(regression.getR().computeValue(xArray,  yArray,  size  -  1));  [BUGGY]      if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  nVars  =  Math.max(regression.getR().computeValue(xArray,  yArray,  size  -  1));	  int    nVars    =    Math.max(regression.getR().computeValue(xArray,    yArray,    size));    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
345	[BUG]  [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [CE]  >  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	  for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i]);    }    	non-compiled	[CE]  >  expected	117	None	replace
346	[BUG]  [BUGGY]  int  nObs  =  Math.max(regression.getR().compareTo(yArray,  xArray.length));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();      [BUGGY]  int  nObs  =  Math.max(regression.getR().compareTo(yArray,  xArray.length));  [BUGGY]      for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  nObs  =  Math.max(regression.getR().compareTo(yArray,  xArray.length));	  int    nObs    =    Math.max(regression.getR().compareTo(xArray,    yArray));    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
