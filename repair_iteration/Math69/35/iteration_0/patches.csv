bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  [BUGGY]  if(xArray.length  ==  yArray.length  &&  yArray.length  >  1)  {  [BUGGY]  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(xArray.length  ==  yArray.length  &&  yArray.length  >  1)  {	if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  	compilable	  [FE]  AssertionFailedError  	70	2	replace
2	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length  &&  yArray.length  >  1)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  [BUGGY]  if(xArray.length  ==  yArray.length  &&  yArray.length  >  1)  {  [BUGGY]  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length  ==  yArray.length  &&  yArray.length  >  1)  {	if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  	compilable	  [FE]  AssertionFailedError  	70	2	replace
3	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]      AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  [BUGGY]  if(xArray.length!=  yArray.length  &&  yArray.length  >  1)  {  [BUGGY]  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(xArray.length!=  yArray.length  &&  yArray.length  >  1)  {	if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  	compilable	  [FE]  MathRuntimeException$4  	70	13	replace
4	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length  &&  yArray.length  >  1)  {  [FE]  MathRuntimeException$4  [FE]      AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  [BUGGY]  if(xArray.length!=  yArray.length  &&  yArray.length  >  1)  {  [BUGGY]  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=  yArray.length  &&  yArray.length  >  1)  {	if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  	compilable	  [FE]  MathRuntimeException$4  	70	13	replace
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length  >  1)  {  [BUGGY]  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(xArray.length  ==  yArray.length  ||  xArray.length  >  1)  {	if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  	compilable	  [FE]  AssertionFailedError  	70	3	replace
6	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length  >  1)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length  >  1)  {  [BUGGY]  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length  ==  yArray.length  ||  xArray.length  >  1)  {	if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  	compilable	  [FE]  AssertionFailedError  	70	3	replace
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  [BUGGY]  if(yArray.length  ==  xArray.length  &&  yArray.length  >  1)  {  [BUGGY]  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(yArray.length  ==  xArray.length  &&  yArray.length  >  1)  {	if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  	compilable	  [FE]  AssertionFailedError  	70	2	replace
8	[BUG]  [BUGGY]  if(yArray.length  ==  xArray.length  &&  yArray.length  >  1)  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  [BUGGY]  if(yArray.length  ==  xArray.length  &&  yArray.length  >  1)  {  [BUGGY]  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length  ==  xArray.length  &&  yArray.length  >  1)  {	if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  	compilable	  [FE]  AssertionFailedError  	70	2	replace
9	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  [BUGGY]    [BUGGY]  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	  	if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  	non-compiled	[CE]  illegal  start  of  type	70	None	replace
10	[BUG]  [BUGGY]    double[]  xArray  =(double[])yArray.clone();  [CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])  [FE]    AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  [BUGGY]    double[]  xArray  =(double[])yArray.clone();  [BUGGY]  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	    double[]  xArray  =(double[])yArray.clone();		non-compiled	[CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])	71	None	add
11	[BUG]  [BUGGY]    double[]  xArray  =(double[])regression.clone();  [CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])  [FE]      AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  [BUGGY]    double[]  xArray  =(double[])regression.clone();  [BUGGY]  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	    double[]  xArray  =(double[])regression.clone();		non-compiled	[CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])	71	None	add
12	[BUG]  [BUGGY]    double[]  xArray  =  new  double[yArray.length];  [CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])  [FE]        AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  [BUGGY]    double[]  xArray  =  new  double[yArray.length];  [BUGGY]  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	    double[]  xArray  =  new  double[yArray.length];		non-compiled	[CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])	71	None	add
13	[BUG]  [BUGGY]    double[]  xArray  =(double[])regression.toArray(yArray);  [CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])  [FE]          AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  [BUGGY]    double[]  xArray  =(double[])regression.toArray(yArray);  [BUGGY]  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	    double[]  xArray  =(double[])regression.toArray(yArray);		non-compiled	[CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])	71	None	add
14	[BUG]  [BUGGY]    double[]  xArray  =  new  double[yArray.length  +  1];  [CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])  [FE]            AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  [BUGGY]    double[]  xArray  =  new  double[yArray.length  +  1];  [BUGGY]  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	    double[]  xArray  =  new  double[yArray.length  +  1];		non-compiled	[CE]  variable  xArray  is  already  defined  in  method  correlation(double[],double[])	71	None	add
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  >  1)  {  [BUGGY]  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(xArray.length!=  yArray.length  ||  xArray.length  >  1)  {	if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  	compilable	  [FE]  AssertionFailedError  	70	2	replace
16	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  >  1)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  >  1)  {  [BUGGY]  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=  yArray.length  ||  xArray.length  >  1)  {	if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  	compilable	  [FE]  AssertionFailedError  	70	2	replace
17	[BUG]  [BUGGY]    Regression  <  double>  regression  =  regression.removeDouble(yArray);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  [BUGGY]    Regression  <  double>  regression  =  regression.removeDouble(yArray);  [BUGGY]  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	    Regression  <  double>  regression  =  regression.removeDouble(yArray);		non-compiled	[CE]  cannot  find  symbol	71	None	add
18	[BUG]  [BUGGY]    Regression  <  double>  regression  =  regression.getR();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  [BUGGY]    Regression  <  double>  regression  =  regression.getR();  [BUGGY]  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	    Regression  <  double>  regression  =  regression.getR();		non-compiled	[CE]  cannot  find  symbol	71	None	add
19	[BUG]  [BUGGY]    Regression  <  double>  regression  =  regression.removeDouble(xArray);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  [BUGGY]    Regression  <  double>  regression  =  regression.removeDouble(xArray);  [BUGGY]  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	    Regression  <  double>  regression  =  regression.removeDouble(xArray);		non-compiled	[CE]  cannot  find  symbol	71	None	add
20	[BUG]  [BUGGY]    double[]  yArray  =  regression.getDataRef();  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]          AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  [BUGGY]    double[]  yArray  =  regression.getDataRef();  [BUGGY]  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	    double[]  yArray  =  regression.getDataRef();		non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	71	None	add
21	[BUG]  [BUGGY]    RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  [BUGGY]    RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  [BUGGY]  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	    RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();		non-compiled	[CE]  cannot  find  symbol	71	None	add
22	[BUG]  [BUGGY]    int  nVars  =  Math.max(regression.getR().computeValue(xArray,  yArray));  [CE]  double  cannot  be  dereferenced  [FE]      AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  [BUGGY]    int  nVars  =  Math.max(regression.getR().computeValue(xArray,  yArray));  [BUGGY]  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	    int  nVars  =  Math.max(regression.getR().computeValue(xArray,  yArray));		non-compiled	[CE]  double  cannot  be  dereferenced	71	None	add
23	[BUG]  [BUGGY]    RealMatrix  covarianceMatrix  =  getCovarianceMatrix();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  [BUGGY]    RealMatrix  covarianceMatrix  =  getCovarianceMatrix();  [BUGGY]  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	    RealMatrix  covarianceMatrix  =  getCovarianceMatrix();		non-compiled	[CE]  cannot  find  symbol	71	None	add
24	[BUG]  [BUGGY]    RealMatrix  covarianceMatrix  =  getCovarianceMatrix(xArray,  yArray);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  [BUGGY]    RealMatrix  covarianceMatrix  =  getCovarianceMatrix(xArray,  yArray);  [BUGGY]  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	    RealMatrix  covarianceMatrix  =  getCovarianceMatrix(xArray,  yArray);		non-compiled	[CE]  cannot  find  symbol	71	None	add
25	[BUG]  [BUGGY]    int  nVars  =  Math.max(regression.getR().computeValue(xArray),  yArray);  [CE]  double  cannot  be  dereferenced  [FE]            AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  [BUGGY]    int  nVars  =  Math.max(regression.getR().computeValue(xArray),  yArray);  [BUGGY]  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	    int  nVars  =  Math.max(regression.getR().computeValue(xArray),  yArray);		non-compiled	[CE]  double  cannot  be  dereferenced	71	None	add
26	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  [BUGGY]  if(xArray.length!=  yArray.length)  {  [BUGGY]  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(xArray.length!=  yArray.length)  {	if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  	compilable	  [FE]  MathRuntimeException$4  	70	13	replace
27	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length)  {  [FE]  MathRuntimeException$4  [FE]    AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  [BUGGY]  if(xArray.length!=  yArray.length)  {  [BUGGY]  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=  yArray.length)  {	if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  	compilable	  [FE]  MathRuntimeException$4  	70	13	replace
