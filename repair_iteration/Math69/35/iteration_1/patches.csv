bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double[]  yArray  =(double[])regression.clone();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  double[]  yArray  =(double[])regression.clone();  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  yArray  =(double[])regression.clone();	      double[]    xArray    =(double[])regression.clone();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
2	[BUG]  [BUGGY]  Double[]  xArray  =(double[])regression.clone();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  Double[]  xArray  =(double[])regression.clone();  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Double[]  xArray  =(double[])regression.clone();	      double[]    xArray    =(double[])regression.clone();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
3	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(xArray,  yArray,  regression);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(xArray,  yArray,  regression);  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix  covarianceMatrix  =  getCovarianceMatrix(xArray,  yArray,  regression);	      RealMatrix    covarianceMatrix    =    getCovarianceMatrix(xArray,    yArray);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
4	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(yArray,  xArray);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(yArray,  xArray);  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix  covarianceMatrix  =  getCovarianceMatrix(yArray,  xArray);	      RealMatrix    covarianceMatrix    =    getCovarianceMatrix(xArray,    yArray);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
5	[BUG]  [BUGGY]  RealMatrix  yArray  =  getCovarianceMatrix(xArray,  yArray);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  RealMatrix  yArray  =  getCovarianceMatrix(xArray,  yArray);  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix  yArray  =  getCovarianceMatrix(xArray,  yArray);	      RealMatrix    covarianceMatrix    =    getCovarianceMatrix(xArray,    yArray);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
6	[BUG]  [BUGGY]  double[]  xArray  =(double[])yArray.toArray(regression);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  double[]  xArray  =(double[])yArray.toArray(regression);  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =(double[])yArray.toArray(regression);	      double[]    xArray    =(double[])regression.toArray(yArray);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
7	[BUG]  [BUGGY]  double[]  xArray  =(double[])regression.toArray(xArray);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  double[]  xArray  =(double[])regression.toArray(xArray);  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =(double[])regression.toArray(xArray);	      double[]    xArray    =(double[])regression.toArray(yArray);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
8	[BUG]  [BUGGY]  double[]  xArray  =(double[])regression.toArray(xArray,  yArray);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  double[]  xArray  =(double[])regression.toArray(xArray,  yArray);  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =(double[])regression.toArray(xArray,  yArray);	      double[]    xArray    =(double[])regression.toArray(yArray);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
9	[BUG]  [BUGGY]  double[]  yArray  =(double[])regression.toArray(yArray);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  double[]  yArray  =(double[])regression.toArray(yArray);  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  yArray  =(double[])regression.toArray(yArray);	      double[]    xArray    =(double[])regression.toArray(yArray);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
10	[BUG]  [BUGGY]  double[]  xArray  =  new  double[yArray.length  +  2];  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  double[]  xArray  =  new  double[yArray.length  +  2];  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =  new  double[yArray.length  +  2];	      double[]    xArray    =    new    double[yArray.length    +    1];    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
11	[BUG]  [BUGGY]  double[]  yArray  =  new  double[yArray.length  +  1];  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  double[]  yArray  =  new  double[yArray.length  +  1];  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  yArray  =  new  double[yArray.length  +  1];	      double[]    xArray    =    new    double[yArray.length    +    1];    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
12	[BUG]  [BUGGY]  double[]  xArray  =  new  double[xArray.length  +  1];  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  double[]  xArray  =  new  double[xArray.length  +  1];  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =  new  double[xArray.length  +  1];	      double[]    xArray    =    new    double[yArray.length    +    1];    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
13	[BUG]  [BUGGY]  int  nObs  =  Math.max(regression.getR().length,  xArray.length);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  int  nObs  =  Math.max(regression.getR().length,  xArray.length);  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  nObs  =  Math.max(regression.getR().length,  xArray.length);	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
14	[BUG]  [BUGGY]  int  nObs  =  Math.max(regression.getR().compareTo(xArray,  yArray));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  int  nObs  =  Math.max(regression.getR().compareTo(xArray,  yArray));  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  nObs  =  Math.max(regression.getR().compareTo(xArray,  yArray));	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
15	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length)  {  if(xArray.length!=  yArray.length)  {  [CE]  illegal  start  of  expression  [FE]    MathRuntimeException$4    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(xArray.length!=  yArray.length)  {  if(xArray.length!=  yArray.length)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=    yArray.length)    {    if(xArray.length!=  yArray.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
16	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length)  {  if(xArray.length  >=  yArray.length)  {  [CE]  illegal  start  of  expression  [FE]      MathRuntimeException$4    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(xArray.length!=  yArray.length)  {  if(xArray.length  >=  yArray.length)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=    yArray.length)    {    if(xArray.length  >=  yArray.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
17	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length)  {  if(xArray.length  >>  yArray.length)  {  [CE]  illegal  start  of  expression  [FE]        MathRuntimeException$4    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(xArray.length!=  yArray.length)  {  if(xArray.length  >>  yArray.length)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=    yArray.length)    {    if(xArray.length  >>  yArray.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
18	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length)  {  if(xArray.length  ==  yArray.length)  {  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$4    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(xArray.length!=  yArray.length)  {  if(xArray.length  ==  yArray.length)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=    yArray.length)    {    if(xArray.length  ==  yArray.length)  {	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
19	[BUG]  [BUGGY]  Regression  <  double>  regression  =  xArray.removeDouble(regression);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  Regression  <  double>  regression  =  xArray.removeDouble(regression);  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  <  double>  regression  =  xArray.removeDouble(regression);	      Regression    <    double>    regression    =    regression.removeDouble(xArray);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
20	[BUG]  [BUGGY]  Regression  <  double>  regression  =  yArray.removeDouble(xArray);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  Regression  <  double>  regression  =  yArray.removeDouble(xArray);  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  <  double>  regression  =  yArray.removeDouble(xArray);	      Regression    <    double>    regression    =    regression.removeDouble(xArray);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
21	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  <  1)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(xArray.length!=  yArray.length  ||  xArray.length  <  1)  {	  if(xArray.length!=    yArray.length    ||    xArray.length    >    1)    {    	compilable	  [FE]  MathRuntimeException$4  	16	13	replace
22	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  <  1)  {  [FE]  MathRuntimeException$4  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  <  1)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=  yArray.length  ||  xArray.length  <  1)  {	  if(xArray.length!=    yArray.length    ||    xArray.length    >    1)    {    	compilable	  [FE]  MathRuntimeException$4  	16	13	replace
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  ==  1)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(xArray.length!=  yArray.length  ||  xArray.length  ==  1)  {	  if(xArray.length!=    yArray.length    ||    xArray.length    >    1)    {    	compilable	  [FE]  AssertionFailedError  	16	14	replace
24	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  ==  1)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  ==  1)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=  yArray.length  ||  xArray.length  ==  1)  {	  if(xArray.length!=    yArray.length    ||    xArray.length    >    1)    {    	compilable	  [FE]  AssertionFailedError  	16	14	replace
25	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(xArray.length  ==  yArray.length  ||  yArray.length  >  1)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(xArray.length  ==  yArray.length  ||  yArray.length  >  1)  {	  if(xArray.length    ==    yArray.length    &&    yArray.length    >    1)    {    	compilable	  [FE]  AssertionFailedError  	2	3	replace
26	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length  ||  yArray.length  >  1)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(xArray.length  ==  yArray.length  ||  yArray.length  >  1)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length  ==  yArray.length  ||  yArray.length  >  1)  {	  if(xArray.length    ==    yArray.length    &&    yArray.length    >    1)    {    	compilable	  [FE]  AssertionFailedError  	2	3	replace
27	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(yArray.length  ==  xArray.length  ||  yArray.length  >  1)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(yArray.length  ==  xArray.length  ||  yArray.length  >  1)  {	  if(yArray.length    ==    xArray.length    &&    yArray.length    >    1)    {    	compilable	  [FE]  AssertionFailedError  	8	3	replace
28	[BUG]  [BUGGY]  if(yArray.length  ==  xArray.length  ||  yArray.length  >  1)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(yArray.length  ==  xArray.length  ||  yArray.length  >  1)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length  ==  xArray.length  ||  yArray.length  >  1)  {	  if(yArray.length    ==    xArray.length    &&    yArray.length    >    1)    {    	compilable	  [FE]  AssertionFailedError  	8	3	replace
29	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length  >  1)  {  if(xArray.length  ==  yArray.length  ||  xArray.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length  >  1)  {  if(xArray.length  ==  yArray.length  ||  xArray.length  >  1)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length    ==    yArray.length    ||    xArray.length    >    1)    {    if(xArray.length  ==  yArray.length  ||  xArray.length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
30	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length  >  1)  {  If(xArray.length  ==  yArray.length  ||  xArray.length  >  1)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length  >  1)  {  If(xArray.length  ==  yArray.length  ||  xArray.length  >  1)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length    ==    yArray.length    ||    xArray.length    >    1)    {    If(xArray.length  ==  yArray.length  ||  xArray.length  >  1)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
31	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length  >  1)  {  if(xArray.length!=  yArray.length  ||  xArray.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length  >  1)  {  if(xArray.length!=  yArray.length  ||  xArray.length  >  1)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length    ==    yArray.length    ||    xArray.length    >    1)    {    if(xArray.length!=  yArray.length  ||  xArray.length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
32	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length  >  1)  {  if(xArray.length  >=  yArray.length  ||  xArray.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length  >  1)  {  if(xArray.length  >=  yArray.length  ||  xArray.length  >  1)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length    ==    yArray.length    ||    xArray.length    >    1)    {    if(xArray.length  >=  yArray.length  ||  xArray.length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
33	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length  &&  yArray.length  >  1)  {  if(xArray.length!=  yArray.length  &&  yArray.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]    MathRuntimeException$4    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(xArray.length!=  yArray.length  &&  yArray.length  >  1)  {  if(xArray.length!=  yArray.length  &&  yArray.length  >  1)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=    yArray.length    &&    yArray.length    >    1)    {    if(xArray.length!=  yArray.length  &&  yArray.length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
34	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length  &&  yArray.length  >  1)  {  if(xArray.length  >=  yArray.length  &&  yArray.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]      MathRuntimeException$4    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(xArray.length!=  yArray.length  &&  yArray.length  >  1)  {  if(xArray.length  >=  yArray.length  &&  yArray.length  >  1)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=    yArray.length    &&    yArray.length    >    1)    {    if(xArray.length  >=  yArray.length  &&  yArray.length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
35	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length  &&  yArray.length  >  1)  {  if(xArray.length  ==  yArray.length  &&  yArray.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]        MathRuntimeException$4    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(xArray.length!=  yArray.length  &&  yArray.length  >  1)  {  if(xArray.length  ==  yArray.length  &&  yArray.length  >  1)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=    yArray.length    &&    yArray.length    >    1)    {    if(xArray.length  ==  yArray.length  &&  yArray.length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
36	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length  &&  yArray.length  >  1)  {  if(xArray.length  >>  yArray.length  &&  yArray.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$4    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(xArray.length!=  yArray.length  &&  yArray.length  >  1)  {  if(xArray.length  >>  yArray.length  &&  yArray.length  >  1)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=    yArray.length    &&    yArray.length    >    1)    {    if(xArray.length  >>  yArray.length  &&  yArray.length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
37	[BUG]  [BUGGY]  Regression  <  double>  regression  =  yArray.getR();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  Regression  <  double>  regression  =  yArray.getR();  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  <  double>  regression  =  yArray.getR();	      Regression    <    double>    regression    =    regression.getR();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
38	[BUG]  [BUGGY]  Regression  <  double>  regression  =  xArray.getR();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  Regression  <  double>  regression  =  xArray.getR();  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  <  double>  regression  =  xArray.getR();	      Regression    <    double>    regression    =    regression.getR();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
39	[BUG]  [BUGGY]  Regression  <  double>  regression  =  this.regression.getR();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  Regression  <  double>  regression  =  this.regression.getR();  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  <  double>  regression  =  this.regression.getR();	      Regression    <    double>    regression    =    regression.getR();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
40	[BUG]  [BUGGY]  if(yArray.length  ==  xArray.length  &&  yArray.length  >  1)  {  if(yArray.length  ==  xArray.length  &&  yArray.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(yArray.length  ==  xArray.length  &&  yArray.length  >  1)  {  if(yArray.length  ==  xArray.length  &&  yArray.length  >  1)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length    ==    xArray.length    &&    yArray.length    >    1)    {    if(yArray.length  ==  xArray.length  &&  yArray.length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
41	[BUG]  [BUGGY]  if(yArray.length  ==  xArray.length  &&  yArray.length  >  1)  {  if(xArray.length  ==  xArray.length  &&  yArray.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(yArray.length  ==  xArray.length  &&  yArray.length  >  1)  {  if(xArray.length  ==  xArray.length  &&  yArray.length  >  1)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length    ==    xArray.length    &&    yArray.length    >    1)    {    if(xArray.length  ==  xArray.length  &&  yArray.length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
42	[BUG]  [BUGGY]  if(yArray.length  ==  xArray.length  &&  yArray.length  >  1)  {  if(xArray.length  ==  yArray.length  &&  yArray.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(yArray.length  ==  xArray.length  &&  yArray.length  >  1)  {  if(xArray.length  ==  yArray.length  &&  yArray.length  >  1)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length    ==    xArray.length    &&    yArray.length    >    1)    {    if(xArray.length  ==  yArray.length  &&  yArray.length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
43	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length  <  1)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(xArray.length  ==  yArray.length  ||  xArray.length  <  1)  {	  if(xArray.length    ==    yArray.length    ||    xArray.length    >    1)    {    	compilable	  [FE]  AssertionFailedError  	6	3	replace
44	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length  <  1)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length  <  1)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length  ==  yArray.length  ||  xArray.length  <  1)  {	  if(xArray.length    ==    yArray.length    ||    xArray.length    >    1)    {    	compilable	  [FE]  AssertionFailedError  	6	3	replace
45	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length!=  1)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(xArray.length  ==  yArray.length  ||  xArray.length!=  1)  {	  if(xArray.length    ==    yArray.length    ||    xArray.length    >    1)    {    	compilable	  [FE]  AssertionFailedError  	6	3	replace
46	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length!=  1)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length!=  1)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length  ==  yArray.length  ||  xArray.length!=  1)  {	  if(xArray.length    ==    yArray.length    ||    xArray.length    >    1)    {    	compilable	  [FE]  AssertionFailedError  	6	3	replace
47	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(regression);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(regression);  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix  covarianceMatrix  =  getCovarianceMatrix(regression);	      RealMatrix    covarianceMatrix    =    getCovarianceMatrix();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
48	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(xArray);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(xArray);  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix  covarianceMatrix  =  getCovarianceMatrix(xArray);	      RealMatrix    covarianceMatrix    =    getCovarianceMatrix();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
49	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(outMatrix);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(outMatrix);  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix  covarianceMatrix  =  getCovarianceMatrix(outMatrix);	      RealMatrix    covarianceMatrix    =    getCovarianceMatrix();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
50	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(yArray.length!=  xArray.length)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(yArray.length!=  xArray.length)  {	  if(xArray.length!=    yArray.length)    {    	compilable	  [FE]  MathRuntimeException$4  	27	13	replace
51	[BUG]  [BUGGY]  if(yArray.length!=  xArray.length)  {  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(yArray.length!=  xArray.length)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length!=  xArray.length)  {	  if(xArray.length!=    yArray.length)    {    	compilable	  [FE]  MathRuntimeException$4  	27	13	replace
52	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      MathRuntimeException$4    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(xArray.length  ==  yArray.length)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(xArray.length  ==  yArray.length)  {	  if(xArray.length!=    yArray.length)    {    	compilable	  [FE]  AssertionFailedError  	27	3	replace
53	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length)  {  [FE]  AssertionFailedError  [FE]      MathRuntimeException$4    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(xArray.length  ==  yArray.length)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length  ==  yArray.length)  {	  if(xArray.length!=    yArray.length)    {    	compilable	  [FE]  AssertionFailedError  	27	3	replace
54	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        MathRuntimeException$4    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(xArray.length  >=  yArray.length)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(xArray.length  >=  yArray.length)  {	  if(xArray.length!=    yArray.length)    {    	compilable	  [FE]  AssertionFailedError  	27	3	replace
55	[BUG]  [BUGGY]  if(xArray.length  >=  yArray.length)  {  [FE]  AssertionFailedError  [FE]        MathRuntimeException$4    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(xArray.length  >=  yArray.length)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length  >=  yArray.length)  {	  if(xArray.length!=    yArray.length)    {    	compilable	  [FE]  AssertionFailedError  	27	3	replace
56	[BUG]  [BUGGY]  double[]  yArray  =  regression.getR();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  double[]  yArray  =  regression.getR();  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  yArray  =  regression.getR();	      double[]    yArray    =    regression.getDataRef();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
57	[BUG]  [BUGGY]  double[]  xArray  =  regression.getDataRef();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  double[]  xArray  =  regression.getDataRef();  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =  regression.getDataRef();	      double[]    yArray    =    regression.getDataRef();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
58	[BUG]  [BUGGY]  double[]  yArray  =  regression.getData();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  double[]  yArray  =  regression.getData();  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  yArray  =  regression.getData();	      double[]    yArray    =    regression.getDataRef();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
59	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  >  1)  {  if(xArray.length!=  yArray.length  ||  xArray.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  >  1)  {  if(xArray.length!=  yArray.length  ||  xArray.length  >  1)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=    yArray.length    ||    xArray.length    >    1)    {    if(xArray.length!=  yArray.length  ||  xArray.length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
60	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  >  1)  {  if(xArray.length  >=  yArray.length  ||  xArray.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  >  1)  {  if(xArray.length  >=  yArray.length  ||  xArray.length  >  1)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=    yArray.length    ||    xArray.length    >    1)    {    if(xArray.length  >=  yArray.length  ||  xArray.length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
61	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  >  1)  {  if(xArray.length  ==  yArray.length  ||  xArray.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  >  1)  {  if(xArray.length  ==  yArray.length  ||  xArray.length  >  1)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=    yArray.length    ||    xArray.length    >    1)    {    if(xArray.length  ==  yArray.length  ||  xArray.length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
62	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  >  1)  {  If(xArray.length!=  yArray.length  ||  xArray.length  >  1)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  >  1)  {  If(xArray.length!=  yArray.length  ||  xArray.length  >  1)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=    yArray.length    ||    xArray.length    >    1)    {    If(xArray.length!=  yArray.length  ||  xArray.length  >  1)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
63	[BUG]  [BUGGY]  Regression  <  double>  regression  =  yArray.removeDouble(regression);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  Regression  <  double>  regression  =  yArray.removeDouble(regression);  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  <  double>  regression  =  yArray.removeDouble(regression);	      Regression    <    double>    regression    =    regression.removeDouble(yArray);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
64	[BUG]  [BUGGY]  Regression  <  double>  regression  =  yArray.removeDouble(relative);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  Regression  <  double>  regression  =  yArray.removeDouble(relative);  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  <  double>  regression  =  yArray.removeDouble(relative);	      Regression    <    double>    regression    =    regression.removeDouble(yArray);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
65	[BUG]  [BUGGY]  double[]  yArray  =(double[])yArray.clone();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  double[]  yArray  =(double[])yArray.clone();  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  yArray  =(double[])yArray.clone();	      double[]    xArray    =(double[])yArray.clone();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
66	[BUG]  [BUGGY]  Double[]  xArray  =(double[])yArray.clone();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  Double[]  xArray  =(double[])yArray.clone();  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Double[]  xArray  =(double[])yArray.clone();	      double[]    xArray    =(double[])yArray.clone();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
67	[BUG]  [BUGGY]  final  double[]  xArray  =(double[])yArray.clone();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  final  double[]  xArray  =(double[])yArray.clone();  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	final  double[]  xArray  =(double[])yArray.clone();	      double[]    xArray    =(double[])yArray.clone();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
68	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  yArray.getCovarianceMatrix();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  RealMatrix  covarianceMatrix  =  yArray.getCovarianceMatrix();  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix  covarianceMatrix  =  yArray.getCovarianceMatrix();	      RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
69	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  outMatrix.getCovarianceMatrix();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  RealMatrix  covarianceMatrix  =  outMatrix.getCovarianceMatrix();  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix  covarianceMatrix  =  outMatrix.getCovarianceMatrix();	      RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
70	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix(yArray);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix(yArray);  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix(yArray);	      RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
71	[BUG]  [BUGGY]  int  nVars  =  Math.max(yArray.getR().computeValue(xArray,  yArray));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  int  nVars  =  Math.max(yArray.getR().computeValue(xArray,  yArray));  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  nVars  =  Math.max(yArray.getR().computeValue(xArray,  yArray));	      int    nVars    =    Math.max(regression.getR().computeValue(xArray,    yArray));    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
72	[BUG]  [BUGGY]  int  nVars  =  Math.max(regression.getR().computeValue(xArray,  yArray,  size));  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  int  nVars  =  Math.max(regression.getR().computeValue(xArray,  yArray,  size));  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  nVars  =  Math.max(regression.getR().computeValue(xArray,  yArray,  size));	      int    nVars    =    Math.max(regression.getR().computeValue(xArray,    yArray));    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
73	[BUG]  [BUGGY]  int  nVars  =  Math.max(regression.getR().computeValue(yArray,  xArray));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  int  nVars  =  Math.max(regression.getR().computeValue(yArray,  xArray));  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  nVars  =  Math.max(regression.getR().computeValue(yArray,  xArray));	      int    nVars    =    Math.max(regression.getR().computeValue(xArray,    yArray));    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
74	[BUG]  [BUGGY]  int  nVars  =  Math.max(yArray.getR().computeValue(xArray),  regression);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  int  nVars  =  Math.max(yArray.getR().computeValue(xArray),  regression);  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  nVars  =  Math.max(yArray.getR().computeValue(xArray),  regression);	      int    nVars    =    Math.max(regression.getR().computeValue(xArray),    yArray);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
75	[BUG]  [BUGGY]  int  nVars  =  Math.max(regression.getR().computeValue(xArray),  yArray,  0);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  int  nVars  =  Math.max(regression.getR().computeValue(xArray),  yArray,  0);  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  nVars  =  Math.max(regression.getR().computeValue(xArray),  yArray,  0);	      int    nVars    =    Math.max(regression.getR().computeValue(xArray),    yArray);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
76	[BUG]  [BUGGY]  double[]  xArray  =  new  double[xArray.length];  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  double[]  xArray  =  new  double[xArray.length];  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =  new  double[xArray.length];	      double[]    xArray    =    new    double[yArray.length];    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
77	[BUG]  [BUGGY]  double[]  yArray  =  new  double[yArray.length];  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  double[]  yArray  =  new  double[yArray.length];  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  yArray  =  new  double[yArray.length];	      double[]    xArray    =    new    double[yArray.length];    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
78	[BUG]  [BUGGY]  double[]  xArray  =  new  double[yArray.length  -  1];  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  double[]  xArray  =  new  double[yArray.length  -  1];  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =  new  double[yArray.length  -  1];	      double[]    xArray    =    new    double[yArray.length];    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
79	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length  &&  yArray.length  >  1)  {  if(xArray.length  ==  yArray.length  &&  yArray.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(xArray.length  ==  yArray.length  &&  yArray.length  >  1)  {  if(xArray.length  ==  yArray.length  &&  yArray.length  >  1)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length    ==    yArray.length    &&    yArray.length    >    1)    {    if(xArray.length  ==  yArray.length  &&  yArray.length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
80	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length  &&  yArray.length  >  1)  {  if(xArray.length!=  yArray.length  &&  yArray.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(xArray.length  ==  yArray.length  &&  yArray.length  >  1)  {  if(xArray.length!=  yArray.length  &&  yArray.length  >  1)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length    ==    yArray.length    &&    yArray.length    >    1)    {    if(xArray.length!=  yArray.length  &&  yArray.length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
81	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length  &&  yArray.length  >  1)  {  If(xArray.length  ==  yArray.length  &&  yArray.length  >  1)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(xArray.length  ==  yArray.length  &&  yArray.length  >  1)  {  If(xArray.length  ==  yArray.length  &&  yArray.length  >  1)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length    ==    yArray.length    &&    yArray.length    >    1)    {    If(xArray.length  ==  yArray.length  &&  yArray.length  >  1)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
82	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length  &&  yArray.length  >  1)  {  if(xArray.length  >=  yArray.length  &&  yArray.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(xArray.length  ==  yArray.length  &&  yArray.length  >  1)  {  if(xArray.length  >=  yArray.length  &&  yArray.length  >  1)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length    ==    yArray.length    &&    yArray.length    >    1)    {    if(xArray.length  >=  yArray.length  &&  yArray.length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
83	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(yArray.length!=  xArray.length  &&  yArray.length  >  1)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(yArray.length!=  xArray.length  &&  yArray.length  >  1)  {	  if(xArray.length!=    yArray.length    &&    yArray.length    >    1)    {    	compilable	  [FE]  MathRuntimeException$4  	4	13	replace
84	[BUG]  [BUGGY]  if(yArray.length!=  xArray.length  &&  yArray.length  >  1)  {  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(yArray.length!=  xArray.length  &&  yArray.length  >  1)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length!=  xArray.length  &&  yArray.length  >  1)  {	  if(xArray.length!=    yArray.length    &&    yArray.length    >    1)    {    	compilable	  [FE]  MathRuntimeException$4  	4	13	replace
85	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      MathRuntimeException$4    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(xArray.length!=  yArray.length  ||  yArray.length  >  1)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(xArray.length!=  yArray.length  ||  yArray.length  >  1)  {	  if(xArray.length!=    yArray.length    &&    yArray.length    >    1)    {    	compilable	  [FE]  AssertionFailedError  	4	2	replace
86	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length  ||  yArray.length  >  1)  {  [FE]  AssertionFailedError  [FE]      MathRuntimeException$4    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(xArray.length!=  yArray.length  ||  yArray.length  >  1)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=  yArray.length  ||  yArray.length  >  1)  {	  if(xArray.length!=    yArray.length    &&    yArray.length    >    1)    {    	compilable	  [FE]  AssertionFailedError  	4	2	replace
87	[BUG]  [BUGGY]  Regression  <  double>  regression  =  regression.remove(xArray.length);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  Regression  <  double>  regression  =  regression.remove(xArray.length);  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  <  double>  regression  =  regression.remove(xArray.length);	      Regression    <    double>    regression    =    regression.getR();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
88	[BUG]  [BUGGY]  double[]  xxArray  =(double[])yArray.clone();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  double[]  xxArray  =(double[])yArray.clone();  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xxArray  =(double[])yArray.clone();	      double[]    xArray    =(double[])yArray.clone();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
89	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(yArray.length!=  xArray.length  ||  yArray.length  >  1)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(yArray.length!=  xArray.length  ||  yArray.length  >  1)  {	  if(xArray.length!=    yArray.length    ||    xArray.length    >    1)    {    	compilable	  [FE]  AssertionFailedError  	16	2	replace
90	[BUG]  [BUGGY]  if(yArray.length!=  xArray.length  ||  yArray.length  >  1)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(yArray.length!=  xArray.length  ||  yArray.length  >  1)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length!=  xArray.length  ||  yArray.length  >  1)  {	  if(xArray.length!=    yArray.length    ||    xArray.length    >    1)    {    	compilable	  [FE]  AssertionFailedError  	16	2	replace
91	[BUG]  [BUGGY]  int  nVars  =  Math.max(regression.getR().computeValue(xArray,  yArray),  0);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  int  nVars  =  Math.max(regression.getR().computeValue(xArray,  yArray),  0);  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  nVars  =  Math.max(regression.getR().computeValue(xArray,  yArray),  0);	      int    nVars    =    Math.max(regression.getR().computeValue(xArray,    yArray));    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
92	[BUG]  [BUGGY]  int  nVars  =  Math.max(regression.getR().computeValue(xArray,  yArray,  0));  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  int  nVars  =  Math.max(regression.getR().computeValue(xArray,  yArray,  0));  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  nVars  =  Math.max(regression.getR().computeValue(xArray,  yArray,  0));	      int    nVars    =    Math.max(regression.getR().computeValue(xArray,    yArray));    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
93	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  >  1)  {  if(yArray.length!=  xArray.length  ||  xArray.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(xArray.length!=  yArray.length  ||  xArray.length  >  1)  {  if(yArray.length!=  xArray.length  ||  xArray.length  >  1)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=    yArray.length    ||    xArray.length    >    1)    {    if(yArray.length!=  xArray.length  ||  xArray.length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
94	[BUG]  [BUGGY]  double[]  yArray  =  regression.computeDataRef(xArray,  yArray);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  double[]  yArray  =  regression.computeDataRef(xArray,  yArray);  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  yArray  =  regression.computeDataRef(xArray,  yArray);	      double[]    yArray    =    regression.getDataRef();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
95	[BUG]  [BUGGY]  Regression  <  double>  regression  =  xArray.removeDouble(regex);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  Regression  <  double>  regression  =  xArray.removeDouble(regex);  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  <  double>  regression  =  xArray.removeDouble(regex);	      Regression    <    double>    regression    =    regression.removeDouble(xArray);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
96	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length  &&  yArray.length  >  1)  {  If(xArray.length!=  yArray.length  &&  yArray.length  >  1)  {  [CE]  ';'  expected  [FE]    MathRuntimeException$4    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(xArray.length!=  yArray.length  &&  yArray.length  >  1)  {  If(xArray.length!=  yArray.length  &&  yArray.length  >  1)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=    yArray.length    &&    yArray.length    >    1)    {    If(xArray.length!=  yArray.length  &&  yArray.length  >  1)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
97	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length  &&  yArray.length  >  1)  {  if(yArray.length  ==  xArray.length  &&  yArray.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(xArray.length  ==  yArray.length  &&  yArray.length  >  1)  {  if(yArray.length  ==  xArray.length  &&  yArray.length  >  1)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length    ==    yArray.length    &&    yArray.length    >    1)    {    if(yArray.length  ==  xArray.length  &&  yArray.length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
98	[BUG]  [BUGGY]  double[]  xArray  =  new  double[yArray.length  *  2];  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  double[]  xArray  =  new  double[yArray.length  *  2];  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =  new  double[yArray.length  *  2];	      double[]    xArray    =    new    double[yArray.length];    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
99	[BUG]  [BUGGY]  int  size  =  yArray.length;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  int  size  =  yArray.length;  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  size  =  yArray.length;	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
100	[BUG]  [BUGGY]  Regression  regression  =  new  Regression();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  Regression  regression  =  new  Regression();  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  regression  =  new  Regression();	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
101	[BUG]  [BUGGY]  double  size  =  regression.getSize();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  double  size  =  regression.getSize();  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double  size  =  regression.getSize();	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
102	[BUG]  [BUGGY]  int  size  =  yArray.size();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  int  size  =  yArray.size();  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	int  size  =  yArray.size();	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
103	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length)  {  If(xArray.length!=  yArray.length)  {  [CE]  ';'  expected  [FE]    MathRuntimeException$4    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(xArray.length!=  yArray.length)  {  If(xArray.length!=  yArray.length)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length!=    yArray.length)    {    If(xArray.length!=  yArray.length)  {	  	non-compiled	[CE]  ';'  expected	26	None	add
104	[BUG]  [BUGGY]  double[]  xArray  =(double[])variance.clone();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  double[]  xArray  =(double[])variance.clone();  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =(double[])variance.clone();	      double[]    xArray    =(double[])regression.clone();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
105	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length  >  1)  {  if(yArray.length  ==  xArray.length  ||  xArray.length  >  1)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(xArray.length  ==  yArray.length  ||  xArray.length  >  1)  {  if(yArray.length  ==  xArray.length  ||  xArray.length  >  1)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(xArray.length    ==    yArray.length    ||    xArray.length    >    1)    {    if(yArray.length  ==  xArray.length  ||  xArray.length  >  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
106	[BUG]  [BUGGY]  double[]  xArray  =  new  double[yArray.length  *  1];  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  double[]  xArray  =  new  double[yArray.length  *  1];  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =  new  double[yArray.length  *  1];	      double[]    xArray    =    new    double[yArray.length    +    1];    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
107	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix(outMatrix);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix(outMatrix);  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix(outMatrix);	      RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
108	[BUG]  [BUGGY]  Regression  <  double>  regression  =  this.regression.removeDouble(yArray);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  Regression  <  double>  regression  =  this.regression.removeDouble(yArray);  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  <  double>  regression  =  this.regression.removeDouble(yArray);	      Regression    <    double>    regression    =    regression.removeDouble(yArray);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
109	[BUG]  [BUGGY]  double[]  xArray  =  new  double[yArray.length  +  3];  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  double[]  xArray  =  new  double[yArray.length  +  3];  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =  new  double[yArray.length  +  3];	      double[]    xArray    =    new    double[yArray.length    +    1];    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
110	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(yArray);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  RealMatrix  covarianceMatrix  =  getCovarianceMatrix(yArray);  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	RealMatrix  covarianceMatrix  =  getCovarianceMatrix(yArray);	      RealMatrix    covarianceMatrix    =    getCovarianceMatrix();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
111	[BUG]  [BUGGY]  Regression  <  double>  regression  =  this.regression.removeDouble(xArray);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  Regression  <  double>  regression  =  this.regression.removeDouble(xArray);  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	Regression  <  double>  regression  =  this.regression.removeDouble(xArray);	      Regression    <    double>    regression    =    regression.removeDouble(xArray);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
112	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(yArray.length  ==  xArray.length  ||  xArray.length  >  1)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	add	if(yArray.length  ==  xArray.length  ||  xArray.length  >  1)  {	  if(xArray.length    ==    yArray.length    ||    xArray.length    >    1)    {    	compilable	  [FE]  AssertionFailedError  	6	3	replace
113	[BUG]  [BUGGY]  if(yArray.length  ==  xArray.length  ||  xArray.length  >  1)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  if(yArray.length  ==  xArray.length  ||  xArray.length  >  1)  {  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	if(yArray.length  ==  xArray.length  ||  xArray.length  >  1)  {	  if(xArray.length    ==    yArray.length    ||    xArray.length    >    1)    {    	compilable	  [FE]  AssertionFailedError  	6	3	replace
114	[BUG]  [BUGGY]  double[]  xArray  =  new  double[yArray.length],  yArray.length);  [CE]  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  double[]  xArray  =  new  double[yArray.length],  yArray.length);  [BUGGY]    if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	double[]  xArray  =  new  double[yArray.length],  yArray.length);	      double[]    xArray    =    new    double[yArray.length];    	non-compiled	[CE]  	12	None	replace
115	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
116	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  xArray[i]);  }	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
117	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i]);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i]);  }	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
118	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  0,  yArray[i]);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();    [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  0,  yArray[i]);  }  [BUGGY]    for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3779644730092272	226	226	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  0,  yArray[i]);  }	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
