bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getColumnDimension();  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int  nObs  =  covarianceMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int  nObs  =  covarianceMatrix.getColumnDimension();	  int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	76	None	replace
2	[BUG]  [BUGGY]  int  nObs  =  this.covarianceMatrix.getColumnDimension();  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int  nObs  =  this.covarianceMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int  nObs  =  this.covarianceMatrix.getColumnDimension();	  int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	76	None	replace
3	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  [CE]  cannot  find  symbol  dataMatrix  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int  nObs  =  dataMatrix.getColumnDimension();	  int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol  dataMatrix	76	None	replace
4	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  out[i][i]  =  new  double[nVars][nVars];  }  [CE]  cannot  find  symbol  out  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  out[i][i]  =  new  double[nVars][nVars];  }  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	for(int  i  =  0;  i  <  nVars;  i++)  {  out[i][i]  =  new  double[nVars][nVars];  }	  long[][]    out    =    new    long[nVars][nVars];    	non-compiled	[CE]  cannot  find  symbol  out	68	None	replace
5	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  int[][]  out  =  new  double[nVars][nVars];  }  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  int[][]  out  =  new  double[nVars][nVars];  }  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	for(int  i  =  0;  i  <  nVars;  i++)  {  int[][]  out  =  new  double[nVars][nVars];  }	  long[][]    out    =    new    long[nVars][nVars];    	non-compiled	[CE]  incompatible  types	68	None	replace
6	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  -  3][nVars];  double[][]  out  =  new  double[nVars  -  3][nVars];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  3][nVars];  double[][]  out  =  new  double[nVars  -  3][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars    -    3][nVars];    double[][]  out  =  new  double[nVars  -  3][nVars];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	15	None	add
7	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  -  3][nVars];  Double[][]  out  =  new  double[nVars  -  3][nVars];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  3][nVars];  Double[][]  out  =  new  double[nVars  -  3][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars    -    3][nVars];    Double[][]  out  =  new  double[nVars  -  3][nVars];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	15	None	add
8	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  -  3][nVars];  int  nVars  =  correlationMatrix.getRowDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  3][nVars];  int  nVars  =  correlationMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars    -    3][nVars];    int  nVars  =  correlationMatrix.getRowDimension();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	15	None	add
9	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  -  3][nVars];  int[][]  out  =  new  double[nVars  -  3][nVars];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  3][nVars];  int[][]  out  =  new  double[nVars  -  3][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars    -    3][nVars];    int[][]  out  =  new  double[nVars  -  3][nVars];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	15	None	add
10	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  -  3][nVars];  int  nVars  =  correlationMatrix.getColumnDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  3][nVars];  int  nVars  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars    -    3][nVars];    int  nVars  =  correlationMatrix.getColumnDimension();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	15	None	add
11	[BUG]  [BUGGY]  int[][]  out  =  new  int[1][nVars];  [CE]  possible  loss  of  precision  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int[][]  out  =  new  int[1][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int[][]  out  =  new  int[1][nVars];	  double[][]    out    =    new    double[1][nVars];    int[][]    out    =    new    double[1][nVars];    	non-compiled	[CE]  possible  loss  of  precision	8	None	replace
12	[BUG]  [BUGGY]  int[][]  out  =  new  int[2][nVars];  [CE]  possible  loss  of  precision  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int[][]  out  =  new  int[2][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int[][]  out  =  new  int[2][nVars];	  double[][]    out    =    new    double[1][nVars];    int[][]    out    =    new    double[1][nVars];    	non-compiled	[CE]  possible  loss  of  precision	8	None	replace
13	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  2][2];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	add	double[][]  out  =  new  double[nVars  -  2][2];	  double[][]    out    =    new    double[nVars    -    1][2];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	79	7	replace
14	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  -  2][2];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  2][2];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nVars  -  2][2];	  double[][]    out    =    new    double[nVars    -    1][2];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	79	7	replace
15	[BUG]  [BUGGY]  int  nVars  =  datasetMatrix.getNumberOfObservations();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int  nVars  =  datasetMatrix.getNumberOfObservations();  [BUGGY]      double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int  nVars  =  datasetMatrix.getNumberOfObservations();	  int    nVars    =    dataMatrix.getNumberOfObservations();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	56	None	replace
16	[BUG]  [BUGGY]  Double[][]  out  =  new  double[nObs][nVars];  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  Double[][]  out  =  new  double[nObs][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	Double[][]  out  =  new  double[nObs][nVars];	  double[][]    out    =    new    double[nObs][nVars];    Double[][]    out    =    new    double[nObs][nVars];    	non-compiled	[CE]  incompatible  types	19	None	replace
17	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars][1];  int  nVars  =  correlationMatrix.getNumberOfObservations();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars][1];  int  nVars  =  correlationMatrix.getNumberOfObservations();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nVars][1];  int  nVars  =  correlationMatrix.getNumberOfObservations();	  double[][]    out    =    new    double[nVars][0];    int    nVars    =    correlationMatrix.getNumberOfObservations();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	60	None	replace
18	[BUG]  [BUGGY]  int  numberOfObservations  =  correlationMatrix.getNumberOfObservations();  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int  numberOfObservations  =  correlationMatrix.getNumberOfObservations();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int  numberOfObservations  =  correlationMatrix.getNumberOfObservations();	  double[][]    out    =    new    double[1][nVars];    int    numberOfObservations    =    correlationMatrix.getNumberOfObservations();    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
19	[BUG]  [BUGGY]  double[][]  out  =  new  double[1][nVars];  int  numberOfObservations  =  covarianceMatrix.getNumberOfObservations();  [CE]  cannot  find  symbol  covarianceMatrix  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[1][nVars];  int  numberOfObservations  =  covarianceMatrix.getNumberOfObservations();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[1][nVars];  int  numberOfObservations  =  covarianceMatrix.getNumberOfObservations();	  double[][]    out    =    new    double[1][nVars];    int    numberOfObservations    =    correlationMatrix.getNumberOfObservations();    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	91	None	replace
20	[BUG]  [BUGGY]  double[][]  out  =  new  double[1][nVars];  int  numberOfObservations  =  dataMatrix.getNumberOfObservations();  [CE]  cannot  find  symbol  dataMatrix  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[1][nVars];  int  numberOfObservations  =  dataMatrix.getNumberOfObservations();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[1][nVars];  int  numberOfObservations  =  dataMatrix.getNumberOfObservations();	  double[][]    out    =    new    double[1][nVars];    int    numberOfObservations    =    correlationMatrix.getNumberOfObservations();    	non-compiled	[CE]  cannot  find  symbol  dataMatrix	91	None	replace
21	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  4][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	add	double[][]  out  =  new  double[nVars  -  4][nVars];	  double[][]    out    =    new    double[nVars    -    3][nVars];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	16	7	replace
22	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  -  4][nVars];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  4][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nVars  -  4][nVars];	  double[][]    out    =    new    double[nVars    -    3][nVars];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	16	7	replace
23	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs  -  1][nVars];  double[][]  out  =  new  double[nObs  -  1][nVars];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs  -  1][nVars];  double[][]  out  =  new  double[nObs  -  1][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nObs    -    1][nVars];    double[][]  out  =  new  double[nObs  -  1][nVars];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	25	None	add
24	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs  -  1][nVars];  int[][]  out  =  new  double[nObs  -  1][nVars];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs  -  1][nVars];  int[][]  out  =  new  double[nObs  -  1][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nObs    -    1][nVars];    int[][]  out  =  new  double[nObs  -  1][nVars];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	25	None	add
25	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs  -  1][nVars];  Double[][]  out  =  new  double[nObs  -  1][nVars];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs  -  1][nVars];  Double[][]  out  =  new  double[nObs  -  1][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nObs    -    1][nVars];    Double[][]  out  =  new  double[nObs  -  1][nVars];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	25	None	add
26	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs  -  1][nVars];  int  nObs  =  correlationMatrix.getColumnDimension();  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]          AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs  -  1][nVars];  int  nObs  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nObs    -    1][nVars];    int  nObs  =  correlationMatrix.getColumnDimension();	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	25	None	add
27	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs  -  1][nVars];  int  nObs  =  correlationMatrix.getRowDimension();  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]            AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs  -  1][nVars];  int  nObs  =  correlationMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nObs    -    1][nVars];    int  nObs  =  correlationMatrix.getRowDimension();	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	25	None	add
28	[BUG]  [BUGGY]  int[][]  out  =  new  int[nVars  -  1][nVars];  [CE]  possible  loss  of  precision  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int[][]  out  =  new  int[nVars  -  1][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int[][]  out  =  new  int[nVars  -  1][nVars];	  double[][]    out    =    new    double[nVars    -    1][nVars];    double[][]    out    =    new    double[nVars    -    1][nVars];    	non-compiled	[CE]  possible  loss  of  precision	62	None	replace
29	[BUG]  [BUGGY]  int  nVars  =  covarianceMatrix.getVar(nObs  -  1);  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int  nVars  =  covarianceMatrix.getVar(nObs  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int  nVars  =  covarianceMatrix.getVar(nObs  -  1);	  int    nVars    =    correlationMatrix.getVar(nObs    -    1);    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	95	None	replace
30	[BUG]  [BUGGY]  int  nVars  =  correlationMatrix.getVar(nVars  -  1);  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int  nVars  =  correlationMatrix.getVar(nVars  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int  nVars  =  correlationMatrix.getVar(nVars  -  1);	  int    nVars    =    correlationMatrix.getVar(nObs    -    1);    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	95	None	replace
31	[BUG]  [BUGGY]  int  nVars  =  dataMatrix.getVar(nObs  -  1);  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]                          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int  nVars  =  dataMatrix.getVar(nObs  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int  nVars  =  dataMatrix.getVar(nObs  -  1);	  int    nVars    =    correlationMatrix.getVar(nObs    -    1);    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	95	None	replace
32	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getRowDimension();  [CE]  cannot  find  symbol  out  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int  nObs  =  correlationMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int  nObs  =  correlationMatrix.getRowDimension();	  double[][]    out    =    new    double[nObs][nVars];    int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol  out	20	None	replace
33	[BUG]  [BUGGY]  Double[][]  out  =  new  Double[nObs][nVars];  [CE]  no  suitable  constructor  found  for  BlockRealMatrix(Double[][])  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  Double[][]  out  =  new  Double[nObs][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	Double[][]  out  =  new  Double[nObs][nVars];	  Double[][]    out    =    new    Double[nVars][nVars];    	non-compiled	[CE]  no  suitable  constructor  found  for  BlockRealMatrix(Double[][])	69	None	replace
34	[BUG]  [BUGGY]  double[][]  out  =  new  Double[nVars][nVars];  [CE]  incompatible  types  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  Double[nVars][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  Double[nVars][nVars];	  Double[][]    out    =    new    Double[nVars][nVars];    	non-compiled	[CE]  incompatible  types	69	None	replace
35	[BUG]  [BUGGY]  Double[][]  out  =  new  Double[nVars][0];  [CE]  no  suitable  constructor  found  for  BlockRealMatrix(Double[][])  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  Double[][]  out  =  new  Double[nVars][0];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	Double[][]  out  =  new  Double[nVars][0];	  Double[][]    out    =    new    Double[nVars][nVars];    	non-compiled	[CE]  no  suitable  constructor  found  for  BlockRealMatrix(Double[][])	69	None	replace
36	[BUG]  [BUGGY]  Double[][]  out  =  new  Double[nVars][nVars  -  1];  [CE]  no  suitable  constructor  found  for  BlockRealMatrix(Double[][])  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  Double[][]  out  =  new  Double[nVars][nVars  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	Double[][]  out  =  new  Double[nVars][nVars  -  1];	  Double[][]    out    =    new    Double[nVars][nVars];    	non-compiled	[CE]  no  suitable  constructor  found  for  BlockRealMatrix(Double[][])	69	None	replace
37	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs][nVars];  int  nObs  =  dataMatrix.getRowDimension();  [CE]  cannot  find  symbol  dataMatrix  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs][nVars];  int  nObs  =  dataMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nObs][nVars];  int  nObs  =  dataMatrix.getRowDimension();	  double[][]    out    =    new    double[nObs][nVars];    int    nObs    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  cannot  find  symbol  dataMatrix	21	None	replace
38	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs  -  1][0];  double[][]  out  =  new  double[nObs  -  1][0];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs  -  1][0];  double[][]  out  =  new  double[nObs  -  1][0];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nObs    -    1][0];    double[][]  out  =  new  double[nObs  -  1][0];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	43	None	add
39	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs  -  1][0];  Double[][]  out  =  new  double[nObs  -  1][0];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs  -  1][0];  Double[][]  out  =  new  double[nObs  -  1][0];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nObs    -    1][0];    Double[][]  out  =  new  double[nObs  -  1][0];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	43	None	add
40	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs  -  1][0];  int  nObs  =  correlationMatrix.getRowDimension();  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs  -  1][0];  int  nObs  =  correlationMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nObs    -    1][0];    int  nObs  =  correlationMatrix.getRowDimension();	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	43	None	add
41	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs  -  1][0];  int  nObs  =  correlationMatrix.getColumnDimension();  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs  -  1][0];  int  nObs  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nObs    -    1][0];    int  nObs  =  correlationMatrix.getColumnDimension();	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	43	None	add
42	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs  -  1][0];  int[][]  out  =  new  double[nObs  -  1][0];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs  -  1][0];  int[][]  out  =  new  double[nObs  -  1][0];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nObs    -    1][0];    int[][]  out  =  new  double[nObs  -  1][0];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	43	None	add
43	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  2][1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	add	double[][]  out  =  new  double[nVars  -  2][1];	  double[][]    out    =    new    double[nVars    -    2][0];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	84	7	replace
44	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  -  2][1];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  2][1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nVars  -  2][1];	  double[][]    out    =    new    double[nVars    -    2][0];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	84	7	replace
45	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  3][0];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	add	double[][]  out  =  new  double[nVars  -  3][0];	  double[][]    out    =    new    double[nVars    -    2][0];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	84	7	replace
46	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  -  3][0];  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  3][0];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nVars  -  3][0];	  double[][]    out    =    new    double[nVars    -    2][0];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	84	7	replace
47	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars];  int  nVars  =  correlationMatrix.getRowDimension();  [CE]  incompatible  types  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars];  int  nVars  =  correlationMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nVars];  int  nVars  =  correlationMatrix.getRowDimension();	  double[][]    out    =    new    double[nObs][nVars];    int    nVars    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  incompatible  types	89	None	replace
48	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[4][nVars  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	add	double[][]  out  =  new  double[4][nVars  -  1];	  double[][]    out    =    new    double[4][nVars];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	42	7	replace
49	[BUG]  [BUGGY]  double[][]  out  =  new  double[4][nVars  -  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[4][nVars  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[4][nVars  -  1];	  double[][]    out    =    new    double[4][nVars];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	42	7	replace
50	[BUG]  [BUGGY]  Double[][]  out  =  new  Double[nObs][0];  [CE]  no  suitable  constructor  found  for  BlockRealMatrix(Double[][])  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  Double[][]  out  =  new  Double[nObs][0];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	Double[][]  out  =  new  Double[nObs][0];	  int[][]    out    =    new    int[nObs][0];    	non-compiled	[CE]  no  suitable  constructor  found  for  BlockRealMatrix(Double[][])	47	None	replace
51	[BUG]  [BUGGY]  long[][]  out  =  new  long[nObs][0];  [CE]  possible  loss  of  precision  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  long[][]  out  =  new  long[nObs][0];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	long[][]  out  =  new  long[nObs][0];	  int[][]    out    =    new    int[nObs][0];    	non-compiled	[CE]  possible  loss  of  precision	47	None	replace
52	[BUG]  [BUGGY]  long[][]  out  =  new  long[nVars][0];  [CE]  possible  loss  of  precision  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  long[][]  out  =  new  long[nVars][0];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	long[][]  out  =  new  long[nVars][0];	  int[][]    out    =    new    int[nVars][0];    	non-compiled	[CE]  possible  loss  of  precision	24	None	replace
53	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs][1];  int  nObs  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	add	double[][]  out  =  new  double[nObs][1];  int  nObs  =  correlationMatrix.getColumnDimension();	  double[][]    out    =    new    double[nObs][0];    int    nObs    =    correlationMatrix.getColumnDimension();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	7	replace
54	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs][1];  int  nObs  =  correlationMatrix.getColumnDimension();  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs][1];  int  nObs  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nObs][1];  int  nObs  =  correlationMatrix.getColumnDimension();	  double[][]    out    =    new    double[nObs][0];    int    nObs    =    correlationMatrix.getColumnDimension();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	7	replace
55	[BUG]  [BUGGY]  int  nVars  =  covarianceMatrix.getVarCount()  -  1;  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int  nVars  =  covarianceMatrix.getVarCount()  -  1;  [BUGGY]      double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int  nVars  =  covarianceMatrix.getVarCount()  -  1;	  int    nVars    =    covarianceMatrix.getVarCount();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	48	None	replace
56	[BUG]  [BUGGY]  int  nVars  =  covarianceMatrix.getVarCount()  +  1;  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int  nVars  =  covarianceMatrix.getVarCount()  +  1;  [BUGGY]      double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int  nVars  =  covarianceMatrix.getVarCount()  +  1;	  int    nVars    =    covarianceMatrix.getVarCount();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	48	None	replace
57	[BUG]  [BUGGY]  double[][]  out  =  new  double[4][nVars];  double[][]  out  =  new  double[4][nVars];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[4][nVars];  double[][]  out  =  new  double[4][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[4][nVars];    double[][]  out  =  new  double[4][nVars];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	41	None	add
58	[BUG]  [BUGGY]  double[][]  out  =  new  double[4][nVars];  int  nVars  =  correlationMatrix.getRowDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[4][nVars];  int  nVars  =  correlationMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[4][nVars];    int  nVars  =  correlationMatrix.getRowDimension();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	41	None	add
59	[BUG]  [BUGGY]  double[][]  out  =  new  double[4][nVars];  Double[][]  out  =  new  double[4][nVars];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[4][nVars];  Double[][]  out  =  new  double[4][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[4][nVars];    Double[][]  out  =  new  double[4][nVars];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	41	None	add
60	[BUG]  [BUGGY]  double[][]  out  =  new  double[4][nVars];  int[][]  out  =  new  double[4][nVars];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[4][nVars];  int[][]  out  =  new  double[4][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[4][nVars];    int[][]  out  =  new  double[4][nVars];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	41	None	add
61	[BUG]  [BUGGY]  double[][]  out  =  new  double[4][nVars];  int  nVars  =  correlationMatrix.getNumberOfObservations();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[4][nVars];  int  nVars  =  correlationMatrix.getNumberOfObservations();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[4][nVars];    int  nVars  =  correlationMatrix.getNumberOfObservations();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	41	None	add
62	[BUG]  [BUGGY]  double[][]  out  =  new  double[1][nObs];  int  nVars  =  correlationMatrix.getRowDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[1][nObs];  int  nVars  =  correlationMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[1][nObs];  int  nVars  =  correlationMatrix.getRowDimension();	  double[][]    out    =    new    double[1][nVars];    int    nVars    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	103	None	replace
63	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs  -  1][nVars];  int  nVars  =  correlationMatrix.getRowDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs  -  1][nVars];  int  nVars  =  correlationMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nObs  -  1][nVars];  int  nVars  =  correlationMatrix.getRowDimension();	  double[][]    out    =    new    double[nVars    -    1][nVars];    int    nVars    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	96	None	replace
64	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs  -  1][nVars];  int  nVars  =  correlationMatrix.getColumnDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs  -  1][nVars];  int  nVars  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nObs  -  1][nVars];  int  nVars  =  correlationMatrix.getColumnDimension();	  double[][]    out    =    new    double[nVars    -    1][nVars];    int    nVars    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	96	None	replace
65	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  -  2][0];  double[][]  out  =  new  double[nVars  -  2][0];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  2][0];  double[][]  out  =  new  double[nVars  -  2][0];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars    -    2][0];    double[][]  out  =  new  double[nVars  -  2][0];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	83	None	add
66	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  -  2][0];  int  nVars  =  correlationMatrix.getRowDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  2][0];  int  nVars  =  correlationMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars    -    2][0];    int  nVars  =  correlationMatrix.getRowDimension();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	83	None	add
67	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  -  2][0];  Double[][]  out  =  new  double[nVars  -  2][0];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  2][0];  Double[][]  out  =  new  double[nVars  -  2][0];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars    -    2][0];    Double[][]  out  =  new  double[nVars  -  2][0];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	83	None	add
68	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  -  2][0];  int[][]  out  =  new  double[nVars  -  2][0];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  2][0];  int[][]  out  =  new  double[nVars  -  2][0];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars    -    2][0];    int[][]  out  =  new  double[nVars  -  2][0];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	83	None	add
69	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  -  2][0];  int  nVars  =  correlationMatrix.getColumnDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  2][0];  int  nVars  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars    -    2][0];    int  nVars  =  correlationMatrix.getColumnDimension();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	83	None	add
70	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  -  1][0];  int  nVars  =  correlationMatrix.getRowDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  1][0];  int  nVars  =  correlationMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nVars  -  1][0];  int  nVars  =  correlationMatrix.getRowDimension();	  double[][]    out    =    new    double[nVars    -    1][nVars];    int    nVars    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	63	None	replace
71	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  2][nObs];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	add	double[][]  out  =  new  double[nVars  -  2][nObs];	  double[][]    out    =    new    double[nObs    -    2][nVars];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	14	7	replace
72	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  -  2][nObs];  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  2][nObs];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nVars  -  2][nObs];	  double[][]    out    =    new    double[nObs    -    2][nVars];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	14	7	replace
73	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  1][nObs];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	add	double[][]  out  =  new  double[nVars  -  1][nObs];	  double[][]    out    =    new    double[nObs    -    2][nVars];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	14	7	replace
74	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  -  1][nObs];  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  1][nObs];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nVars  -  1][nObs];	  double[][]    out    =    new    double[nObs    -    2][nVars];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	14	7	replace
75	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  /  1][nVars];  double[][]  out  =  new  double[nVars  /  1][nVars];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  /  1][nVars];  double[][]  out  =  new  double[nVars  /  1][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars    /    1][nVars];    double[][]  out  =  new  double[nVars  /  1][nVars];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	99	None	add
76	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  /  1][nVars];  int  nVars  =  correlationMatrix.getRowDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  /  1][nVars];  int  nVars  =  correlationMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars    /    1][nVars];    int  nVars  =  correlationMatrix.getRowDimension();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	99	None	add
77	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  /  1][nVars];  int[][]  out  =  new  double[nVars  /  1][nVars];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  /  1][nVars];  int[][]  out  =  new  double[nVars  /  1][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars    /    1][nVars];    int[][]  out  =  new  double[nVars  /  1][nVars];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	99	None	add
78	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  /  1][nVars];  Double[][]  out  =  new  double[nVars  /  1][nVars];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]          AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  /  1][nVars];  Double[][]  out  =  new  double[nVars  /  1][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars    /    1][nVars];    Double[][]  out  =  new  double[nVars  /  1][nVars];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	99	None	add
79	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  /  1][nVars];  int  nVars  =  correlationMatrix.getColumnDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]            AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  /  1][nVars];  int  nVars  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars    /    1][nVars];    int  nVars  =  correlationMatrix.getColumnDimension();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	99	None	add
80	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs  -  2][1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	add	double[][]  out  =  new  double[nObs  -  2][1];	  double[][]    out    =    new    double[nObs    -    2][0];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	46	7	replace
81	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs  -  2][1];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs  -  2][1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nObs  -  2][1];	  double[][]    out    =    new    double[nObs    -    2][0];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	46	7	replace
82	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  -  1][1];  double[][]  out  =  new  double[nVars  -  1][1];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  1][1];  double[][]  out  =  new  double[nVars  -  1][1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars    -    1][1];    double[][]  out  =  new  double[nVars  -  1][1];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	80	None	add
83	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  -  1][1];  int  nVars  =  correlationMatrix.getRowDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  1][1];  int  nVars  =  correlationMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars    -    1][1];    int  nVars  =  correlationMatrix.getRowDimension();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	80	None	add
84	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  -  1][1];  Double[][]  out  =  new  double[nVars  -  1][1];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  1][1];  Double[][]  out  =  new  double[nVars  -  1][1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars    -    1][1];    Double[][]  out  =  new  double[nVars  -  1][1];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	80	None	add
85	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  -  1][1];  int[][]  out  =  new  double[nVars  -  1][1];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  1][1];  int[][]  out  =  new  double[nVars  -  1][1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars    -    1][1];    int[][]  out  =  new  double[nVars  -  1][1];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	80	None	add
86	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  -  1][1];  int  nVars  =  correlationMatrix.getColumnDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  1][1];  int  nVars  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars    -    1][1];    int  nVars  =  correlationMatrix.getColumnDimension();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	80	None	add
87	[BUG]  [BUGGY]  Double[][]  out  =  new  double[nVars  -  1][nVars];  [CE]  incompatible  types  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  Double[][]  out  =  new  double[nVars  -  1][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	Double[][]  out  =  new  double[nVars  -  1][nVars];	  double[][]    out    =    new    double[nVars    -    1][nVars];    Double[][]    out    =    new    double[nVars    -    1][nVars];    	non-compiled	[CE]  incompatible  types	65	None	replace
88	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars][1];  double[][]  out  =  new  double[nVars][1];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars][1];  double[][]  out  =  new  double[nVars][1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars][1];    double[][]  out  =  new  double[nVars][1];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	22	None	add
89	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars][1];  int  nVars  =  correlationMatrix.getRowDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars][1];  int  nVars  =  correlationMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars][1];    int  nVars  =  correlationMatrix.getRowDimension();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	22	None	add
90	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars][1];  int  nVars  =  correlationMatrix.getColumnDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars][1];  int  nVars  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars][1];    int  nVars  =  correlationMatrix.getColumnDimension();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	22	None	add
91	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars][1];  Double[][]  out  =  new  double[nVars][1];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars][1];  Double[][]  out  =  new  double[nVars][1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars][1];    Double[][]  out  =  new  double[nVars][1];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	22	None	add
92	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars][1];  int[][]  out  =  new  double[nVars][1];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars][1];  int[][]  out  =  new  double[nVars][1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars][1];    int[][]  out  =  new  double[nVars][1];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	22	None	add
93	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  -  1][0];  double[][]  out  =  new  double[nVars  -  1][0];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  1][0];  double[][]  out  =  new  double[nVars  -  1][0];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars    -    1][0];    double[][]  out  =  new  double[nVars  -  1][0];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	71	None	add
94	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  -  1][0];  Double[][]  out  =  new  double[nVars  -  1][0];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  1][0];  Double[][]  out  =  new  double[nVars  -  1][0];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars    -    1][0];    Double[][]  out  =  new  double[nVars  -  1][0];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	71	None	add
95	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  -  1][0];  int  nVars  =  correlationMatrix.getColumnDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  1][0];  int  nVars  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars    -    1][0];    int  nVars  =  correlationMatrix.getColumnDimension();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	71	None	add
96	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  -  1][0];  int[][]  out  =  new  double[nVars  -  1][0];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  1][0];  int[][]  out  =  new  double[nVars  -  1][0];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars    -    1][0];    int[][]  out  =  new  double[nVars  -  1][0];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	71	None	add
97	[BUG]  [BUGGY]  int[][]  out  =  new  int[nVars][nObs];  [CE]  possible  loss  of  precision  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int[][]  out  =  new  int[nVars][nObs];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int[][]  out  =  new  int[nVars][nObs];	  double[][]    out    =    new    double[nVars][nObs];    	non-compiled	[CE]  possible  loss  of  precision	28	None	replace
98	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars][nVars  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	add	double[][]  out  =  new  double[nVars][nVars  -  1];	  double[][]    out    =    new    double[nVars][nObs];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	28	7	replace
99	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars][nVars  -  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars][nVars  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nVars][nVars  -  1];	  double[][]    out    =    new    double[nVars][nObs];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	28	7	replace
100	[BUG]  [BUGGY]  Double[][]  out  =  new  double[1][nVars];  [CE]  incompatible  types  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  Double[][]  out  =  new  double[1][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	Double[][]  out  =  new  double[1][nVars];	  double[][]    out    =    new    double[1][nVars];    Double[][]    out    =    new    double[1][nVars];    	non-compiled	[CE]  incompatible  types	10	None	replace
101	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs  -  2][nVars];  int  nVars  =  correlationMatrix.getRowDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs  -  2][nVars];  int  nVars  =  correlationMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nObs  -  2][nVars];  int  nVars  =  correlationMatrix.getRowDimension();	  double[][]    out    =    new    double[nVars    -    2][nVars];    int    nVars    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	31	None	replace
102	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs  -  2][nVars];  int  nVars  =  correlationMatrix.getColumnDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs  -  2][nVars];  int  nVars  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nObs  -  2][nVars];  int  nVars  =  correlationMatrix.getColumnDimension();	  double[][]    out    =    new    double[nVars    -    2][nVars];    int    nVars    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	31	None	replace
103	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars];  int  nObs  =  correlationMatrix.getColumnDimension();  [CE]  incompatible  types  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars];  int  nObs  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nVars];  int  nObs  =  correlationMatrix.getColumnDimension();	  double[][]    out    =    new    double[nObs][nVars];    int    nVars    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  incompatible  types	110	None	replace
104	[BUG]  [BUGGY]  int  nVars  =  tDistribution.getRowDimension()  +  1;  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int  nVars  =  tDistribution.getRowDimension()  +  1;  [BUGGY]      double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int  nVars  =  tDistribution.getRowDimension()  +  1;	  int    nVars    =    tDistribution.getRowDimension();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	11	None	replace
105	[BUG]  [BUGGY]  long[][]  out  =  new  long[nObs][nVars];  [CE]  possible  loss  of  precision  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  long[][]  out  =  new  long[nObs][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	long[][]  out  =  new  long[nObs][nVars];	  int[][]    out    =    new    int[nObs][nVars];    	non-compiled	[CE]  possible  loss  of  precision	70	None	replace
106	[BUG]  [BUGGY]  float[][]  out  =  new  float[nObs][nVars];  [CE]  possible  loss  of  precision  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  float[][]  out  =  new  float[nObs][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	float[][]  out  =  new  float[nObs][nVars];	  int[][]    out    =    new    int[nObs][nVars];    	non-compiled	[CE]  possible  loss  of  precision	70	None	replace
107	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs  -  1][nVars];  int  nVars  =  correlationMatrix.getNumberOfObservations();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs  -  1][nVars];  int  nVars  =  correlationMatrix.getNumberOfObservations();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nObs  -  1][nVars];  int  nVars  =  correlationMatrix.getNumberOfObservations();	  double[][]    out    =    new    double[nVars    -    1][nVars];    int    nVars    =    correlationMatrix.getNumberOfObservations();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	66	None	replace
108	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  -  1][0];  int  nVars  =  correlationMatrix.getNumberOfObservations();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  1][0];  int  nVars  =  correlationMatrix.getNumberOfObservations();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nVars  -  1][0];  int  nVars  =  correlationMatrix.getNumberOfObservations();	  double[][]    out    =    new    double[nVars    -    1][nVars];    int    nVars    =    correlationMatrix.getNumberOfObservations();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	66	None	replace
109	[BUG]  [BUGGY]  int[][]  out  =  new  double[nVars][0];  [CE]  incompatible  types  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int[][]  out  =  new  double[nVars][0];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int[][]  out  =  new  double[nVars][0];	  double[][]    out    =    new    double[nVars][0];    int[][]    out    =    new    double[nVars][0];    	non-compiled	[CE]  incompatible  types	59	None	replace
110	[BUG]  [BUGGY]  int[][]  out  =  new  int[nVars  -  2][nVars];  [CE]  possible  loss  of  precision  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int[][]  out  =  new  int[nVars  -  2][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int[][]  out  =  new  int[nVars  -  2][nVars];	  double[][]    out    =    new    double[nVars    -    2][nVars];    int[][]    out    =    new    double[nVars    -    2][nVars];    	non-compiled	[CE]  possible  loss  of  precision	32	None	replace
111	[BUG]  [BUGGY]  int[][]  out  =  new  double[nVars  -  2][nVars];  [CE]  incompatible  types  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int[][]  out  =  new  double[nVars  -  2][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int[][]  out  =  new  double[nVars  -  2][nVars];	  double[][]    out    =    new    double[nVars    -    2][nVars];    int[][]    out    =    new    double[nVars    -    2][nVars];    	non-compiled	[CE]  incompatible  types	32	None	replace
112	[BUG]  [BUGGY]  int[][]  out  =  new  double[nVars  -  1][nVars];  [CE]  incompatible  types  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int[][]  out  =  new  double[nVars  -  1][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int[][]  out  =  new  double[nVars  -  1][nVars];	  double[][]    out    =    new    double[nVars    -    2][nVars];    int[][]    out    =    new    double[nVars    -    2][nVars];    	non-compiled	[CE]  incompatible  types	32	None	replace
113	[BUG]  [BUGGY]  int  numberOfObservations  =  covarianceMatrix.getColumnDimension();  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int  numberOfObservations  =  covarianceMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int  numberOfObservations  =  covarianceMatrix.getColumnDimension();	  int    numberOfObservations    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	94	None	replace
114	[BUG]  [BUGGY]  int  numberOfObservations  =  tDistribution.getColumnDimension();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int  numberOfObservations  =  tDistribution.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int  numberOfObservations  =  tDistribution.getColumnDimension();	  int    numberOfObservations    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
115	[BUG]  [BUGGY]  int  numberOfObservations  =  this.covarianceMatrix.getColumnDimension();  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int  numberOfObservations  =  this.covarianceMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int  numberOfObservations  =  this.covarianceMatrix.getColumnDimension();	  int    numberOfObservations    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	94	None	replace
116	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs  -  2][0];  double[][]  out  =  new  double[nObs  -  2][0];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs  -  2][0];  double[][]  out  =  new  double[nObs  -  2][0];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nObs    -    2][0];    double[][]  out  =  new  double[nObs  -  2][0];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	45	None	add
117	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs  -  2][0];  Double[][]  out  =  new  double[nObs  -  2][0];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs  -  2][0];  Double[][]  out  =  new  double[nObs  -  2][0];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nObs    -    2][0];    Double[][]  out  =  new  double[nObs  -  2][0];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	45	None	add
118	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs  -  2][0];  int[][]  out  =  new  double[nObs  -  2][0];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs  -  2][0];  int[][]  out  =  new  double[nObs  -  2][0];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nObs    -    2][0];    int[][]  out  =  new  double[nObs  -  2][0];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	45	None	add
119	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs  -  2][0];  int  nVars  =  correlationMatrix.getRowDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs  -  2][0];  int  nVars  =  correlationMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nObs    -    2][0];    int  nVars  =  correlationMatrix.getRowDimension();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	45	None	add
120	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs  -  2][0];  int  nObs  =  correlationMatrix.getRowDimension();  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs  -  2][0];  int  nObs  =  correlationMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nObs    -    2][0];    int  nObs  =  correlationMatrix.getRowDimension();	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	45	None	add
121	[BUG]  [BUGGY]  double[][]  out  =  new  double[2][nVars];  double[][]  out  =  new  double[2][nVars];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[2][nVars];  double[][]  out  =  new  double[2][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[2][nVars];    double[][]  out  =  new  double[2][nVars];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	37	None	add
122	[BUG]  [BUGGY]  double[][]  out  =  new  double[2][nVars];  int  nVars  =  correlationMatrix.getRowDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[2][nVars];  int  nVars  =  correlationMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[2][nVars];    int  nVars  =  correlationMatrix.getRowDimension();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	37	None	add
123	[BUG]  [BUGGY]  double[][]  out  =  new  double[2][nVars];  int[][]  out  =  new  double[2][nVars];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[2][nVars];  int[][]  out  =  new  double[2][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[2][nVars];    int[][]  out  =  new  double[2][nVars];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	37	None	add
124	[BUG]  [BUGGY]  double[][]  out  =  new  double[2][nVars];  Double[][]  out  =  new  double[2][nVars];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[2][nVars];  Double[][]  out  =  new  double[2][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[2][nVars];    Double[][]  out  =  new  double[2][nVars];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	37	None	add
125	[BUG]  [BUGGY]  double[][]  out  =  new  double[2][nVars];  int  nVars  =  correlationMatrix.getNumberOfObservations();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[2][nVars];  int  nVars  =  correlationMatrix.getNumberOfObservations();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[2][nVars];    int  nVars  =  correlationMatrix.getNumberOfObservations();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	37	None	add
126	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  -  1][2];  double[][]  out  =  new  double[nVars  -  1][2];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  1][2];  double[][]  out  =  new  double[nVars  -  1][2];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars    -    1][2];    double[][]  out  =  new  double[nVars  -  1][2];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	78	None	add
127	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  -  1][2];  int  nVars  =  correlationMatrix.getRowDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  1][2];  int  nVars  =  correlationMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars    -    1][2];    int  nVars  =  correlationMatrix.getRowDimension();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	78	None	add
128	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  -  1][2];  Double[][]  out  =  new  double[nVars  -  1][2];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  1][2];  Double[][]  out  =  new  double[nVars  -  1][2];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars    -    1][2];    Double[][]  out  =  new  double[nVars  -  1][2];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	78	None	add
129	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  -  1][2];  int  nVars  =  correlationMatrix.getColumnDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  1][2];  int  nVars  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars    -    1][2];    int  nVars  =  correlationMatrix.getColumnDimension();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	78	None	add
130	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  -  1][2];  int[][]  out  =  new  double[nVars  -  1][2];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  1][2];  int[][]  out  =  new  double[nVars  -  1][2];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars    -    1][2];    int[][]  out  =  new  double[nVars  -  1][2];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	78	None	add
131	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getEntryCount();  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int  nObs  =  correlationMatrix.getEntryCount();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int  nObs  =  correlationMatrix.getEntryCount();	  double[][]    out    =    new    double[nObs][0];    int    nObs    =    correlationMatrix.getEntryCount();    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
132	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs][0];  int  nObs  =  covarianceMatrix.getEntryCount();  [CE]  cannot  find  symbol  covarianceMatrix  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs][0];  int  nObs  =  covarianceMatrix.getEntryCount();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nObs][0];  int  nObs  =  covarianceMatrix.getEntryCount();	  double[][]    out    =    new    double[nObs][0];    int    nObs    =    correlationMatrix.getEntryCount();    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	88	None	replace
133	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs][0];  int  nObs  =  dataMatrix.getEntryCount();  [CE]  cannot  find  symbol  dataMatrix  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs][0];  int  nObs  =  dataMatrix.getEntryCount();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nObs][0];  int  nObs  =  dataMatrix.getEntryCount();	  double[][]    out    =    new    double[nObs][0];    int    nObs    =    correlationMatrix.getEntryCount();    	non-compiled	[CE]  cannot  find  symbol  dataMatrix	88	None	replace
134	[BUG]  [BUGGY]  int  nVars  =  tDistribution.getNumberOfObservations();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int  nVars  =  tDistribution.getNumberOfObservations();  [BUGGY]      double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int  nVars  =  tDistribution.getNumberOfObservations();	  int    nVars    =    tDistribution.getRangeOfObservations();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	74	None	replace
135	[BUG]  [BUGGY]  double[][]  out  =  new  double[1][nObs];  int  nVars  =  correlationMatrix.getNumberOfObservations();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[1][nObs];  int  nVars  =  correlationMatrix.getNumberOfObservations();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[1][nObs];  int  nVars  =  correlationMatrix.getNumberOfObservations();	  double[][]    out    =    new    double[1][nVars];    int    nVars    =    correlationMatrix.getNumberOfObservations();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	9	None	replace
136	[BUG]  [BUGGY]  double[][]  out  =  new  double[1][nVars];  int  nVars  =  dataMatrix.getNumberOfObservations();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[1][nVars];  int  nVars  =  dataMatrix.getNumberOfObservations();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[1][nVars];  int  nVars  =  dataMatrix.getNumberOfObservations();	  double[][]    out    =    new    double[1][nVars];    int    nVars    =    correlationMatrix.getNumberOfObservations();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	9	None	replace
137	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[3][nVars  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	add	double[][]  out  =  new  double[3][nVars  -  1];	  double[][]    out    =    new    double[3][nVars];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	87	7	replace
138	[BUG]  [BUGGY]  double[][]  out  =  new  double[3][nVars  -  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[3][nVars  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[3][nVars  -  1];	  double[][]    out    =    new    double[3][nVars];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	87	7	replace
139	[BUG]  [BUGGY]  double[][]  out  =  new  double[1][nVars  -  1];  double[][]  out  =  new  double[1][nVars  -  1];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[1][nVars  -  1];  double[][]  out  =  new  double[1][nVars  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[1][nVars    -    1];    double[][]  out  =  new  double[1][nVars  -  1];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	35	None	add
140	[BUG]  [BUGGY]  double[][]  out  =  new  double[1][nVars  -  1];  Double[][]  out  =  new  double[1][nVars  -  1];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[1][nVars  -  1];  Double[][]  out  =  new  double[1][nVars  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[1][nVars    -    1];    Double[][]  out  =  new  double[1][nVars  -  1];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	35	None	add
141	[BUG]  [BUGGY]  double[][]  out  =  new  double[1][nVars  -  1];  int  nVars  =  correlationMatrix.getRowDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[1][nVars  -  1];  int  nVars  =  correlationMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[1][nVars    -    1];    int  nVars  =  correlationMatrix.getRowDimension();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	35	None	add
142	[BUG]  [BUGGY]  double[][]  out  =  new  double[1][nVars  -  1];  int[][]  out  =  new  double[1][nVars  -  1];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[1][nVars  -  1];  int[][]  out  =  new  double[1][nVars  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[1][nVars    -    1];    int[][]  out  =  new  double[1][nVars  -  1];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	35	None	add
143	[BUG]  [BUGGY]  double[][]  out  =  new  double[1][nVars  -  1];  int  nVars  =  correlationMatrix.getNumberOfObservations();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[1][nVars  -  1];  int  nVars  =  correlationMatrix.getNumberOfObservations();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[1][nVars    -    1];    int  nVars  =  correlationMatrix.getNumberOfObservations();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	35	None	add
144	[BUG]  [BUGGY]  int  nVars  =  this.covarianceMatrix.getVarCount()  -  1;  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int  nVars  =  this.covarianceMatrix.getVarCount()  -  1;  [BUGGY]      double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int  nVars  =  this.covarianceMatrix.getVarCount()  -  1;	  int    nVars    =    this.covarianceMatrix.getVarCount();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	50	None	replace
145	[BUG]  [BUGGY]  int  nVars  =  covarianceMatrix.getNumberOfObservations()  +  1;  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int  nVars  =  covarianceMatrix.getNumberOfObservations()  +  1;  [BUGGY]      double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int  nVars  =  covarianceMatrix.getNumberOfObservations()  +  1;	  int    nVars    =    covarianceMatrix.getNumberOfObservations();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	54	None	replace
146	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs][0];  int  nVars  =  dataMatrix.getNumberOfObservations();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs][0];  int  nVars  =  dataMatrix.getNumberOfObservations();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nObs][0];  int  nVars  =  dataMatrix.getNumberOfObservations();	  double[][]    out    =    new    double[nObs][0];    int    nVars    =    correlationMatrix.getNumberOfObservations();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	107	None	replace
147	[BUG]  [BUGGY]  Double[][]  out  =  new  double[nVars  -  2][nVars];  [CE]  incompatible  types  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  Double[][]  out  =  new  double[nVars  -  2][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	Double[][]  out  =  new  double[nVars  -  2][nVars];	  double[][]    out    =    new    double[nVars    -    2][nVars];    Double[][]    out    =    new    double[nVars    -    2][nVars];    	non-compiled	[CE]  incompatible  types	33	None	replace
148	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs  -  1][nVars  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	add	double[][]  out  =  new  double[nObs  -  1][nVars  +  1];	  double[][]    out    =    new    double[nObs    -    1][nVars];    	compilable	  [FE]  AssertionFailedError  	26	5	replace
149	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs  -  1][nVars  +  1];  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs  -  1][nVars  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nObs  -  1][nVars  +  1];	  double[][]    out    =    new    double[nObs    -    1][nVars];    	compilable	  [FE]  AssertionFailedError  	26	5	replace
150	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[2][nVars  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	add	double[][]  out  =  new  double[2][nVars  -  1];	  double[][]    out    =    new    double[1][nVars    -    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	36	7	replace
151	[BUG]  [BUGGY]  double[][]  out  =  new  double[2][nVars  -  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[2][nVars  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[2][nVars  -  1];	  double[][]    out    =    new    double[1][nVars    -    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	36	7	replace
152	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[1][nVars  -  2];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	add	double[][]  out  =  new  double[1][nVars  -  2];	  double[][]    out    =    new    double[1][nVars    -    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	36	7	replace
153	[BUG]  [BUGGY]  double[][]  out  =  new  double[1][nVars  -  2];  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[1][nVars  -  2];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[1][nVars  -  2];	  double[][]    out    =    new    double[1][nVars    -    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	36	7	replace
154	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs  -  1];  [CE]  incompatible  types  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nObs  -  1];	  double[][]    out    =    new    double[1][nVars    -    1];    	non-compiled	[CE]  incompatible  types	36	None	replace
155	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[2][nVars  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	add	double[][]  out  =  new  double[2][nVars  +  1];	  double[][]    out    =    new    double[1][nVars    +    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	40	7	replace
156	[BUG]  [BUGGY]  double[][]  out  =  new  double[2][nVars  +  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[2][nVars  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[2][nVars  +  1];	  double[][]    out    =    new    double[1][nVars    +    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	40	7	replace
157	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[1][nVars  *  1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	add	double[][]  out  =  new  double[1][nVars  *  1];	  double[][]    out    =    new    double[1][nVars    +    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	40	7	replace
158	[BUG]  [BUGGY]  double[][]  out  =  new  double[1][nVars  *  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[1][nVars  *  1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[1][nVars  *  1];	  double[][]    out    =    new    double[1][nVars    +    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	40	7	replace
159	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[1][nVars  /  1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	add	double[][]  out  =  new  double[1][nVars  /  1];	  double[][]    out    =    new    double[1][nVars    +    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	40	7	replace
160	[BUG]  [BUGGY]  double[][]  out  =  new  double[1][nVars  /  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[1][nVars  /  1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[1][nVars  /  1];	  double[][]    out    =    new    double[1][nVars    +    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	40	7	replace
161	[BUG]  [BUGGY]  Double[][]  out  =  new  double[nVars][0];  [CE]  incompatible  types  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  Double[][]  out  =  new  double[nVars][0];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	Double[][]  out  =  new  double[nVars][0];	  double[][]    out    =    new    double[nObs][0];    Double[][]    out    =    new    double[nObs][0];    	non-compiled	[CE]  incompatible  types	5	None	replace
162	[BUG]  [BUGGY]  double[][]  out  =  new  double[3][nVars];  double[][]  out  =  new  double[3][nVars];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[3][nVars];  double[][]  out  =  new  double[3][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[3][nVars];    double[][]  out  =  new  double[3][nVars];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	86	None	add
163	[BUG]  [BUGGY]  double[][]  out  =  new  double[3][nVars];  int[][]  out  =  new  double[3][nVars];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[3][nVars];  int[][]  out  =  new  double[3][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[3][nVars];    int[][]  out  =  new  double[3][nVars];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	86	None	add
164	[BUG]  [BUGGY]  double[][]  out  =  new  double[3][nVars];  int  nVars  =  correlationMatrix.getRowDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[3][nVars];  int  nVars  =  correlationMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[3][nVars];    int  nVars  =  correlationMatrix.getRowDimension();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	86	None	add
165	[BUG]  [BUGGY]  double[][]  out  =  new  double[3][nVars];  Double[][]  out  =  new  double[3][nVars];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[3][nVars];  Double[][]  out  =  new  double[3][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[3][nVars];    Double[][]  out  =  new  double[3][nVars];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	86	None	add
166	[BUG]  [BUGGY]  double[][]  out  =  new  double[3][nVars];  int  nVars  =  correlationMatrix.getNumberOfObservations();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[3][nVars];  int  nVars  =  correlationMatrix.getNumberOfObservations();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[3][nVars];    int  nVars  =  correlationMatrix.getNumberOfObservations();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	86	None	add
167	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  /  2][nVars];  double[][]  out  =  new  double[nVars  /  2][nVars];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  /  2][nVars];  double[][]  out  =  new  double[nVars  /  2][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars    /    2][nVars];    double[][]  out  =  new  double[nVars  /  2][nVars];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	108	None	add
168	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  /  2][nVars];  Double[][]  out  =  new  double[nVars  /  2][nVars];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  /  2][nVars];  Double[][]  out  =  new  double[nVars  /  2][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars    /    2][nVars];    Double[][]  out  =  new  double[nVars  /  2][nVars];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	108	None	add
169	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  /  2][nVars];  int[][]  out  =  new  double[nVars  /  2][nVars];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  /  2][nVars];  int[][]  out  =  new  double[nVars  /  2][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars    /    2][nVars];    int[][]  out  =  new  double[nVars  /  2][nVars];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	108	None	add
170	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  /  2][nVars];  int  nVars  =  correlationMatrix.getRowDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  /  2][nVars];  int  nVars  =  correlationMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars    /    2][nVars];    int  nVars  =  correlationMatrix.getRowDimension();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	108	None	add
171	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  /  2][nVars];  int  nVars  =  correlationMatrix.getNumberOfObservations();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  /  2][nVars];  int  nVars  =  correlationMatrix.getNumberOfObservations();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars    /    2][nVars];    int  nVars  =  correlationMatrix.getNumberOfObservations();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	108	None	add
172	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars][2];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	add	double[][]  out  =  new  double[nVars][2];	  double[][]    out    =    new    double[nVars][1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	7	replace
173	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars][2];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars][2];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nVars][2];	  double[][]    out    =    new    double[nVars][1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	7	replace
174	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs  -  2][nVars];  int  nVars  =  correlationMatrix.getNumberOfObservations();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs  -  2][nVars];  int  nVars  =  correlationMatrix.getNumberOfObservations();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nObs  -  2][nVars];  int  nVars  =  correlationMatrix.getNumberOfObservations();	  double[][]    out    =    new    double[nVars    -    2][nVars];    int    nVars    =    correlationMatrix.getNumberOfObservations();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	34	None	replace
175	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  *  1][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	add	double[][]  out  =  new  double[nVars  *  1][nVars];	  double[][]    out    =    new    double[nVars    /    1][nVars];    	compilable	  [FE]  AssertionFailedError  	100	2	replace
176	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  *  1][nVars];  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  *  1][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nVars  *  1][nVars];	  double[][]    out    =    new    double[nVars    /    1][nVars];    	compilable	  [FE]  AssertionFailedError  	100	2	replace
177	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs  /  2][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	add	double[][]  out  =  new  double[nObs  /  2][nVars];	  double[][]    out    =    new    double[nVars    /    1][nVars];    	compilable	  [FE]  AssertionFailedError  	100	5	replace
178	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs  /  2][nVars];  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs  /  2][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nObs  /  2][nVars];	  double[][]    out    =    new    double[nVars    /    1][nVars];    	compilable	  [FE]  AssertionFailedError  	100	5	replace
179	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars][nObs];  double[][]  out  =  new  double[nVars][nObs];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars][nObs];  double[][]  out  =  new  double[nVars][nObs];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars][nObs];    double[][]  out  =  new  double[nVars][nObs];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	27	None	add
180	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars][nObs];  int[][]  out  =  new  double[nVars][nObs];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars][nObs];  int[][]  out  =  new  double[nVars][nObs];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars][nObs];    int[][]  out  =  new  double[nVars][nObs];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	27	None	add
181	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars][nObs];  Double[][]  out  =  new  double[nVars][nObs];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars][nObs];  Double[][]  out  =  new  double[nVars][nObs];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars][nObs];    Double[][]  out  =  new  double[nVars][nObs];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	27	None	add
182	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars][nObs];  int  nVars  =  correlationMatrix.getRowDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]          AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars][nObs];  int  nVars  =  correlationMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars][nObs];    int  nVars  =  correlationMatrix.getRowDimension();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	27	None	add
183	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars][nObs];  int  nObs  =  correlationMatrix.getColumnDimension();  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]            AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars][nObs];  int  nObs  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars][nObs];    int  nObs  =  correlationMatrix.getColumnDimension();	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	27	None	add
184	[BUG]  [BUGGY]  int[][]  out  =  new  int[1][nVars];  int[][]  out  =  new  int[2][nVars];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int[][]  out  =  new  int[1][nVars];  int[][]  out  =  new  int[2][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int[][]  out  =  new  int[1][nVars];  int[][]  out  =  new  int[2][nVars];	  double[][]    out    =    new    double[1][nVars];    double[][]    out    =    new    double[2][nVars];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	104	None	replace
185	[BUG]  [BUGGY]  int[][]  out  =  new  int[1][nVars];  int[][]  out  =  new  double[2][nVars];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int[][]  out  =  new  int[1][nVars];  int[][]  out  =  new  double[2][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int[][]  out  =  new  int[1][nVars];  int[][]  out  =  new  double[2][nVars];	  double[][]    out    =    new    double[1][nVars];    double[][]    out    =    new    double[2][nVars];    	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	104	None	replace
186	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  *  2][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	add	double[][]  out  =  new  double[nVars  *  2][nVars];	  double[][]    out    =    new    double[nVars    /    2][nVars];    	compilable	  [FE]  AssertionFailedError  	109	5	replace
187	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  *  2][nVars];  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  *  2][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nVars  *  2][nVars];	  double[][]    out    =    new    double[nVars    /    2][nVars];    	compilable	  [FE]  AssertionFailedError  	109	5	replace
188	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  /  2][0];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	add	double[][]  out  =  new  double[nVars  /  2][0];	  double[][]    out    =    new    double[nVars    /    2][nVars];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	109	7	replace
189	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  /  2][0];  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  /  2][0];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nVars  /  2][0];	  double[][]    out    =    new    double[nVars    /    2][nVars];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	109	7	replace
190	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  /  2][nVars  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	add	double[][]  out  =  new  double[nVars  /  2][nVars  +  1];	  double[][]    out    =    new    double[nVars    /    2][nVars];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	109	7	replace
191	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  /  2][nVars  +  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  /  2][nVars  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nVars  /  2][nVars  +  1];	  double[][]    out    =    new    double[nVars    /    2][nVars];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	109	7	replace
192	[BUG]  [BUGGY]  int  nVars  =  dataMatrix.getColumnDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int  nVars  =  dataMatrix.getColumnDimension();  [BUGGY]      double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int  nVars  =  dataMatrix.getColumnDimension();	  int    nVars    =    dataMatrix.getRowDimension();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	53	None	replace
193	[BUG]  [BUGGY]  double[][]  out  =  new  double[1][nVars  +  1];  double[][]  out  =  new  double[1][nVars  +  1];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[1][nVars  +  1];  double[][]  out  =  new  double[1][nVars  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[1][nVars    +    1];    double[][]  out  =  new  double[1][nVars  +  1];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	39	None	add
194	[BUG]  [BUGGY]  double[][]  out  =  new  double[1][nVars  +  1];  int  nVars  =  correlationMatrix.getRowDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[1][nVars  +  1];  int  nVars  =  correlationMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[1][nVars    +    1];    int  nVars  =  correlationMatrix.getRowDimension();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	39	None	add
195	[BUG]  [BUGGY]  double[][]  out  =  new  double[1][nVars  +  1];  Double[][]  out  =  new  double[1][nVars  +  1];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[1][nVars  +  1];  Double[][]  out  =  new  double[1][nVars  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[1][nVars    +    1];    Double[][]  out  =  new  double[1][nVars  +  1];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	39	None	add
196	[BUG]  [BUGGY]  double[][]  out  =  new  double[1][nVars  +  1];  int[][]  out  =  new  double[1][nVars  +  1];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[1][nVars  +  1];  int[][]  out  =  new  double[1][nVars  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[1][nVars    +    1];    int[][]  out  =  new  double[1][nVars  +  1];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	39	None	add
197	[BUG]  [BUGGY]  double[][]  out  =  new  double[1][nVars  +  1];  int  nVars  =  correlationMatrix.getNumberOfObservations();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[1][nVars  +  1];  int  nVars  =  correlationMatrix.getNumberOfObservations();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[1][nVars    +    1];    int  nVars  =  correlationMatrix.getNumberOfObservations();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	39	None	add
198	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs  -  1][1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	add	double[][]  out  =  new  double[nObs  -  1][1];	  double[][]    out    =    new    double[nObs    -    1][0];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	44	7	replace
199	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs  -  1][1];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs  -  1][1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nObs  -  1][1];	  double[][]    out    =    new    double[nObs    -    1][0];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	44	7	replace
200	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs  -  2][nVars];  double[][]  out  =  new  double[nObs  -  2][nVars];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs  -  2][nVars];  double[][]  out  =  new  double[nObs  -  2][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nObs    -    2][nVars];    double[][]  out  =  new  double[nObs  -  2][nVars];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	13	None	add
201	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs  -  2][nVars];  int[][]  out  =  new  double[nObs  -  2][nVars];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs  -  2][nVars];  int[][]  out  =  new  double[nObs  -  2][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nObs    -    2][nVars];    int[][]  out  =  new  double[nObs  -  2][nVars];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	13	None	add
202	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs  -  2][nVars];  Double[][]  out  =  new  double[nObs  -  2][nVars];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs  -  2][nVars];  Double[][]  out  =  new  double[nObs  -  2][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nObs    -    2][nVars];    Double[][]  out  =  new  double[nObs  -  2][nVars];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	13	None	add
203	[BUG]  [BUGGY]  int  nVars  =  datasetMatrix.getRangeOfObservations();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int  nVars  =  datasetMatrix.getRangeOfObservations();  [BUGGY]      double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int  nVars  =  datasetMatrix.getRangeOfObservations();	  int    nVars    =    dataMatrix.getRangeOfObservations();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	82	None	replace
204	[BUG]  [BUGGY]  int  nVars  =  dataMatrix.getVarCount()  -  1;  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int  nVars  =  dataMatrix.getVarCount()  -  1;  [BUGGY]      double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int  nVars  =  dataMatrix.getVarCount()  -  1;	  int    nVars    =    dataMatrix.getVarCount();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	51	None	replace
205	[BUG]  [BUGGY]  int  nVars  =  datasetMatrix.getVarCount();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int  nVars  =  datasetMatrix.getVarCount();  [BUGGY]      double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int  nVars  =  datasetMatrix.getVarCount();	  int    nVars    =    dataMatrix.getVarCount();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	51	None	replace
206	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs][1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	add	double[][]  out  =  new  double[nObs][1];	  double[][]    out    =    new    double[nObs][0];    double[][]    out    =    new    double[nObs][0];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	7	replace
207	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs][1];  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs][1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nObs][1];	  double[][]    out    =    new    double[nObs][0];    double[][]    out    =    new    double[nObs][0];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	7	replace
208	[BUG]  [BUGGY]  long[][]  out  =  new  long[nVars][nVars  -  1];  [CE]  possible  loss  of  precision  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  long[][]  out  =  new  long[nVars][nVars  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	long[][]  out  =  new  long[nVars][nVars  -  1];	  int[][]    out    =    new    int[nVars][nVars    -    1];    	non-compiled	[CE]  possible  loss  of  precision	93	None	replace
209	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  -  1];  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nVars  -  1];	  double[][]    out    =    new    double[nVars];    	non-compiled	[CE]  incompatible  types	29	None	replace
210	[BUG]  [BUGGY]  int[][]  out  =  new  int[nVars];  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int[][]  out  =  new  int[nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int[][]  out  =  new  int[nVars];	  double[][]    out    =    new    double[nVars];    	non-compiled	[CE]  incompatible  types	29	None	replace
211	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  +  1];  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nVars  +  1];	  double[][]    out    =    new    double[nVars];    	non-compiled	[CE]  incompatible  types	29	None	replace
212	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  -  2];  [CE]  incompatible  types  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  2];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nVars  -  2];	  double[][]    out    =    new    double[nVars];    	non-compiled	[CE]  incompatible  types	29	None	replace
213	[BUG]  [BUGGY]  int[][]  out  =  new  double[nObs][nVars];  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int[][]  out  =  new  double[nObs][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int[][]  out  =  new  double[nObs][nVars];	  double[][]    out    =    new    double[nObs][nVars];    int[][]    out    =    new    double[nObs][nVars];    	non-compiled	[CE]  incompatible  types	18	None	replace
214	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars];  int  nObs  =  correlationMatrix.getRowDimension();  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars];  int  nObs  =  correlationMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nVars];  int  nObs  =  correlationMatrix.getRowDimension();	  double[][]    out    =    new    double[nObs][nVars];    int    nObs    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  incompatible  types	21	None	replace
215	[BUG]  [BUGGY]  int[][]  out  =  new  double[nObs][0];  [CE]  incompatible  types  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int[][]  out  =  new  double[nObs][0];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int[][]  out  =  new  double[nObs][0];	  double[][]    out    =    new    double[nObs][0];    int[][]    out    =    new    double[nObs][0];    	non-compiled	[CE]  incompatible  types	4	None	replace
216	[BUG]  [BUGGY]  int  nVars  =  matrix.getRangeOfObservations();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int  nVars  =  matrix.getRangeOfObservations();  [BUGGY]      double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int  nVars  =  matrix.getRangeOfObservations();	  int    nVars    =    covarianceMatrix.getRangeOfObservations();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	73	None	replace
217	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  3][1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	add	double[][]  out  =  new  double[nVars  -  3][1];	  double[][]    out    =    new    double[nVars    -    1][1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	81	7	replace
218	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  -  3][1];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  3][1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nVars  -  3][1];	  double[][]    out    =    new    double[nVars    -    1][1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	81	7	replace
219	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  -  3][nVars];  int  nVars  =  correlationMatrix.getNumberOfObservations();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  3][nVars];  int  nVars  =  correlationMatrix.getNumberOfObservations();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars    -    3][nVars];    int  nVars  =  correlationMatrix.getNumberOfObservations();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	15	None	add
220	[BUG]  [BUGGY]  int  nVars  =  this.covarianceMatrix.getNumberOfObservations()  +  1;  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int  nVars  =  this.covarianceMatrix.getNumberOfObservations()  +  1;  [BUGGY]      double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int  nVars  =  this.covarianceMatrix.getNumberOfObservations()  +  1;	  int    nVars    =    this.covarianceMatrix.getNumberOfObservations();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	55	None	replace
221	[BUG]  [BUGGY]  double[][]  out  =  new  double[2][nVars];  int  numberOfObservations  =  correlationMatrix.getNumberOfObservations();  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[2][nVars];  int  numberOfObservations  =  correlationMatrix.getNumberOfObservations();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[2][nVars];    int  numberOfObservations  =  correlationMatrix.getNumberOfObservations();	  	non-compiled	[CE]  cannot  find  symbol	37	None	add
222	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  /  2][nVars];  int  nVars  =  correlationMatrix.getColumnDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  /  2][nVars];  int  nVars  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars    /    2][nVars];    int  nVars  =  correlationMatrix.getColumnDimension();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	108	None	add
223	[BUG]  [BUGGY]  int  nVars  =  tDistribution.getRangeOfParameters();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int  nVars  =  tDistribution.getRangeOfParameters();  [BUGGY]      double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int  nVars  =  tDistribution.getRangeOfParameters();	  int    nVars    =    tDistribution.getRangeOfObservations();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	74	None	replace
224	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs][nVars  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	add	double[][]  out  =  new  double[nObs][nVars  -  1];	  double[][]    out    =    new    double[nObs][nVars];    Double[][]    out    =    new    double[nObs][nVars];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	7	replace
225	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs][nVars  -  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs][nVars  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nObs][nVars  -  1];	  double[][]    out    =    new    double[nObs][nVars];    Double[][]    out    =    new    double[nObs][nVars];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	19	7	replace
226	[BUG]  [BUGGY]  float[][]  out  =  new  float[nObs][0];  [CE]  possible  loss  of  precision  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  float[][]  out  =  new  float[nObs][0];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	float[][]  out  =  new  float[nObs][0];	  int[][]    out    =    new    int[nObs][0];    	non-compiled	[CE]  possible  loss  of  precision	47	None	replace
227	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars];  int  nVars  =  correlationMatrix.getColumnDimension();  [CE]  incompatible  types  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars];  int  nVars  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nVars];  int  nVars  =  correlationMatrix.getColumnDimension();	  double[][]    out    =    new    double[nObs][nVars];    int    nVars    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  incompatible  types	89	None	replace
228	[BUG]  [BUGGY]  float[][]  out  =  new  double[nVars][nVars];  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  float[][]  out  =  new  double[nVars][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	float[][]  out  =  new  double[nVars][nVars];	  float[][]    out    =    new    float[nVars][nVars];    	non-compiled	[CE]  incompatible  types	92	None	replace
229	[BUG]  [BUGGY]  double[][]  out  =  new  double[4][nVars];  int  numberOfObservations  =  correlationMatrix.getNumberOfObservations();  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[4][nVars];  int  numberOfObservations  =  correlationMatrix.getNumberOfObservations();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[4][nVars];    int  numberOfObservations  =  correlationMatrix.getNumberOfObservations();	  	non-compiled	[CE]  cannot  find  symbol	41	None	add
230	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs  -  2][0];  int  nObs  =  correlationMatrix.getColumnDimension();  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs  -  2][0];  int  nObs  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nObs    -    2][0];    int  nObs  =  correlationMatrix.getColumnDimension();	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	45	None	add
231	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars][nObs];  int  nVars  =  correlationMatrix.getColumnDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars][nObs];  int  nVars  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars][nObs];    int  nVars  =  correlationMatrix.getColumnDimension();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	27	None	add
232	[BUG]  [BUGGY]  double[][]  out  =  new  double[3][nVars];  int  numberOfObservations  =  correlationMatrix.getNumberOfObservations();  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[3][nVars];  int  numberOfObservations  =  correlationMatrix.getNumberOfObservations();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[3][nVars];    int  numberOfObservations  =  correlationMatrix.getNumberOfObservations();	  	non-compiled	[CE]  cannot  find  symbol	86	None	add
233	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  /  3][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	add	double[][]  out  =  new  double[nVars  /  3][nVars];	  double[][]    out    =    new    double[nVars    /    2][nVars];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	109	7	replace
234	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  /  3][nVars];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  /  3][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nVars  /  3][nVars];	  double[][]    out    =    new    double[nVars    /    2][nVars];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	109	7	replace
235	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs][0];  int  nVars  =  correlationMatrix.getEntryCount();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs][0];  int  nVars  =  correlationMatrix.getEntryCount();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nObs][0];  int  nVars  =  correlationMatrix.getEntryCount();	  double[][]    out    =    new    double[nObs][0];    int    nObs    =    correlationMatrix.getEntryCount();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	88	None	replace
236	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs  -  1][0];  int  nObs  -  1][0];  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs  -  1][0];  int  nObs  -  1][0];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nObs    -    1][0];    int  nObs  -  1][0];	  	non-compiled	[CE]  ';'  expected	43	None	add
237	[BUG]  [BUGGY]  double[][]  out  =  new  double[2][nVars];  int  nVars  =  correlationMatrix.getColumnDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[2][nVars];  int  nVars  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[2][nVars];  int  nVars  =  correlationMatrix.getColumnDimension();	  double[][]    out    =    new    double[1][nVars];    int    nVars    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	103	None	replace
238	[BUG]  [BUGGY]  double[][]  out  =  new  double[1][nObs];  int  nVars  =  correlationMatrix.getColumnDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[1][nObs];  int  nVars  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[1][nObs];  int  nVars  =  correlationMatrix.getColumnDimension();	  double[][]    out    =    new    double[1][nVars];    int    nVars    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	103	None	replace
239	[BUG]  [BUGGY]  float[][]  out  =  new  float[nVars][nVars  -  1];  [CE]  possible  loss  of  precision  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  float[][]  out  =  new  float[nVars][nVars  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	float[][]  out  =  new  float[nVars][nVars  -  1];	  int[][]    out    =    new    int[nVars][nVars    -    1];    	non-compiled	[CE]  possible  loss  of  precision	93	None	replace
240	[BUG]  [BUGGY]  int  nVars  =  correlationMatrix.getNumberOfObservations()  *  1;  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int  nVars  =  correlationMatrix.getNumberOfObservations()  *  1;  [BUGGY]      double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int  nVars  =  correlationMatrix.getNumberOfObservations()  *  1;	  int    nVars    =    correlationMatrix.getNumberOfObservations()    +    1;    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	102	None	replace
241	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars][1];  double[][]  out  =  new  double[nVars][0];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars][1];  double[][]  out  =  new  double[nVars][0];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars][1];    double[][]  out  =  new  double[nVars][0];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	22	None	add
242	[BUG]  [BUGGY]  double[][]  out  =  new  double[1][nVars  +  1];  int  numberOfObservations  =  correlationMatrix.getNumberOfObservations();  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[1][nVars  +  1];  int  numberOfObservations  =  correlationMatrix.getNumberOfObservations();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[1][nVars    +    1];    int  numberOfObservations  =  correlationMatrix.getNumberOfObservations();	  	non-compiled	[CE]  cannot  find  symbol	39	None	add
243	[BUG]  [BUGGY]  double[][]  out  =  new  double[1][nVars  +  1];  int  nVars  =  correlationMatrix.getColumnDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[1][nVars  +  1];  int  nVars  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[1][nVars    +    1];    int  nVars  =  correlationMatrix.getColumnDimension();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	39	None	add
244	[BUG]  [BUGGY]  int[][]  out  =  new  double[1][nVars];  [CE]  incompatible  types  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int[][]  out  =  new  double[1][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int[][]  out  =  new  double[1][nVars];	  double[][]    out    =    new    double[1][nVars];    int[][]    out    =    new    double[1][nVars];    	non-compiled	[CE]  incompatible  types	8	None	replace
245	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs][1];  int  nVars  =  correlationMatrix.getNumberOfObservations();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs][1];  int  nVars  =  correlationMatrix.getNumberOfObservations();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nObs][1];  int  nVars  =  correlationMatrix.getNumberOfObservations();	  double[][]    out    =    new    double[nObs][0];    int    nVars    =    correlationMatrix.getNumberOfObservations();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	107	None	replace
246	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  -  2][0];  int  nVars  =  correlationMatrix.getNumberOfObservations();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  2][0];  int  nVars  =  correlationMatrix.getNumberOfObservations();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nVars  -  2][0];  int  nVars  =  correlationMatrix.getNumberOfObservations();	  double[][]    out    =    new    double[nVars    -    2][nVars];    int    nVars    =    correlationMatrix.getNumberOfObservations();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	34	None	replace
247	[BUG]  [BUGGY]  float[][]  out  =  new  float[nVars][0];  [CE]  possible  loss  of  precision  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  float[][]  out  =  new  float[nVars][0];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	float[][]  out  =  new  float[nVars][0];	  int[][]    out    =    new    int[nVars][0];    	non-compiled	[CE]  possible  loss  of  precision	24	None	replace
248	[BUG]  [BUGGY]  int  nVars  =  matrix.getColumnDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int  nVars  =  matrix.getColumnDimension();  [BUGGY]      double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int  nVars  =  matrix.getColumnDimension();	  int    nVars    =    covarianceMatrix.getColumnDimension();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	52	None	replace
249	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  -  1][0];  int  nVars  -  1][0];  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  1][0];  int  nVars  -  1][0];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars    -    1][0];    int  nVars  -  1][0];	  	non-compiled	[CE]  ';'  expected	71	None	add
250	[BUG]  [BUGGY]  Double[][]  out  =  new  Double[nVars  -  1][nVars];  [CE]  no  suitable  constructor  found  for  BlockRealMatrix(Double[][])  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  Double[][]  out  =  new  Double[nVars  -  1][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	Double[][]  out  =  new  Double[nVars  -  1][nVars];	  Double[][]    out    =    new    Double[nVars][nVars];    	non-compiled	[CE]  no  suitable  constructor  found  for  BlockRealMatrix(Double[][])	69	None	replace
251	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs  -  2][nVars];  int  nObs  =  correlationMatrix.getColumnDimension();  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs  -  2][nVars];  int  nObs  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nObs    -    2][nVars];    int  nObs  =  correlationMatrix.getColumnDimension();	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	13	None	add
252	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs  -  2][nVars];  int  nObs  =  correlationMatrix.getRowDimension();  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs  -  2][nVars];  int  nObs  =  correlationMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nObs    -    2][nVars];    int  nObs  =  correlationMatrix.getRowDimension();	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	13	None	add
253	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars][0];  int  nObs  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	add	double[][]  out  =  new  double[nVars][0];  int  nObs  =  correlationMatrix.getColumnDimension();	  double[][]    out    =    new    double[nObs][0];    int    nObs    =    correlationMatrix.getColumnDimension();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	7	replace
254	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars][0];  int  nObs  =  correlationMatrix.getColumnDimension();  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars][0];  int  nObs  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nVars][0];  int  nObs  =  correlationMatrix.getColumnDimension();	  double[][]    out    =    new    double[nObs][0];    int    nObs    =    correlationMatrix.getColumnDimension();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	7	replace
255	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars][0];  int  nObs  =  correlationMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	add	double[][]  out  =  new  double[nVars][0];  int  nObs  =  correlationMatrix.getRowDimension();	  double[][]    out    =    new    double[nObs][0];    int    nObs    =    correlationMatrix.getColumnDimension();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	7	replace
256	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars][0];  int  nObs  =  correlationMatrix.getRowDimension();  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars][0];  int  nObs  =  correlationMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nVars][0];  int  nObs  =  correlationMatrix.getRowDimension();	  double[][]    out    =    new    double[nObs][0];    int    nObs    =    correlationMatrix.getColumnDimension();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	7	replace
257	[BUG]  [BUGGY]  double[][]  out  =  new  double[1][nVars];  int  numberOfObservations  =  matrix.getNumberOfObservations();  [CE]  cannot  find  symbol  matrix  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[1][nVars];  int  numberOfObservations  =  matrix.getNumberOfObservations();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[1][nVars];  int  numberOfObservations  =  matrix.getNumberOfObservations();	  double[][]    out    =    new    double[1][nVars];    int    numberOfObservations    =    correlationMatrix.getNumberOfObservations();    	non-compiled	[CE]  cannot  find  symbol  matrix	91	None	replace
258	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  /  4][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	add	double[][]  out  =  new  double[nVars  /  4][nVars];	  double[][]    out    =    new    double[nVars    /    1][nVars];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	100	7	replace
259	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  /  4][nVars];  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  /  4][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nVars  /  4][nVars];	  double[][]    out    =    new    double[nVars    /    1][nVars];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	100	7	replace
260	[BUG]  [BUGGY]  int  nVars  =  matrix.getNumberOfObservations();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int  nVars  =  matrix.getNumberOfObservations();  [BUGGY]      double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int  nVars  =  matrix.getNumberOfObservations();	  int    nVars    =    covarianceMatrix.getNumberOfObservations();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	54	None	replace
261	[BUG]  [BUGGY]  int[][]  out  =  new  int[nObs][nVars  -  1];  [CE]  possible  loss  of  precision  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int[][]  out  =  new  int[nObs][nVars  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int[][]  out  =  new  int[nObs][nVars  -  1];	  int[][]    out    =    new    int[nObs][nVars];    	non-compiled	[CE]  possible  loss  of  precision	70	None	replace
262	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  *  nObs];  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  *  nObs];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nVars  *  nObs];	  double[][]    out    =    new    double[nVars];    	non-compiled	[CE]  incompatible  types	29	None	replace
263	[BUG]  [BUGGY]  double[][]  out  =  new  double[1][nVars  -  1];  int  numberOfObservations  =  correlationMatrix.getNumberOfObservations();  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[1][nVars  -  1];  int  numberOfObservations  =  correlationMatrix.getNumberOfObservations();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[1][nVars    -    1];    int  numberOfObservations  =  correlationMatrix.getNumberOfObservations();	  	non-compiled	[CE]  cannot  find  symbol	35	None	add
264	[BUG]  [BUGGY]  double[][]  out  =  new  double[1][nVars  -  1];  int  nVars  =  correlationMatrix.getColumnDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[1][nVars  -  1];  int  nVars  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[1][nVars    -    1];    int  nVars  =  correlationMatrix.getColumnDimension();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	35	None	add
265	[BUG]  [BUGGY]  double[][]  out  =  new  double[4][nVars];  int  nVars  =  correlationMatrix.getColumnDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[4][nVars];  int  nVars  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[4][nVars];    int  nVars  =  correlationMatrix.getColumnDimension();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	41	None	add
266	[BUG]  [BUGGY]  double[][]  out  =  new  double[4][nVars];  double[][]  out  =  new  double[5][nVars];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[4][nVars];  double[][]  out  =  new  double[5][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[4][nVars];    double[][]  out  =  new  double[5][nVars];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	41	None	add
267	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  -  1][0];  for(int  i  =  0;  i  <  nVars;  i++)  {  double[][]  out  =  new  double[nVars  -  1][0];  }  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  -  1][0];  for(int  i  =  0;  i  <  nVars;  i++)  {  double[][]  out  =  new  double[nVars  -  1][0];  }  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars    -    1][0];    for(int  i  =  0;  i  <  nVars;  i++)  {  double[][]  out  =  new  double[nVars  -  1][0];  }	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	71	None	add
268	[BUG]  [BUGGY]  int  nVars  =  correlationMatrix.getVar(nObs  -  1,  nVars);  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int  nVars  =  correlationMatrix.getVar(nObs  -  1,  nVars);  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int  nVars  =  correlationMatrix.getVar(nObs  -  1,  nVars);	  int    nVars    =    correlationMatrix.getVar(nObs    -    1);    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	95	None	replace
269	[BUG]  [BUGGY]  int  nVars  =  correlationMatrix.getVar(nObs  -  1  -  2);  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int  nVars  =  correlationMatrix.getVar(nObs  -  1  -  2);  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int  nVars  =  correlationMatrix.getVar(nObs  -  1  -  2);	  int    nVars    =    correlationMatrix.getVar(nObs    -    1);    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	95	None	replace
270	[BUG]  [BUGGY]  int  nVars  =  correlationMatrix.getVar(nObs  -  1  -  1);  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]                          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int  nVars  =  correlationMatrix.getVar(nObs  -  1  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int  nVars  =  correlationMatrix.getVar(nObs  -  1  -  1);	  int    nVars    =    correlationMatrix.getVar(nObs    -    1);    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	95	None	replace
271	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  /  1][nVars];  double[][]  out  =  new  double[nVars  /  2][nVars];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  /  1][nVars];  double[][]  out  =  new  double[nVars  /  2][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars    /    1][nVars];    double[][]  out  =  new  double[nVars  /  2][nVars];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	99	None	add
272	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs  -  2][0];  int  nVars  =  correlationMatrix.getColumnDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs  -  2][0];  int  nVars  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nObs    -    2][0];    int  nVars  =  correlationMatrix.getColumnDimension();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	45	None	add
273	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs  -  2][0];  int  nVars  =  correlationMatrix.getNumberOfObservations();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs  -  2][0];  int  nVars  =  correlationMatrix.getNumberOfObservations();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nObs    -    2][0];    int  nVars  =  correlationMatrix.getNumberOfObservations();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	45	None	add
274	[BUG]  [BUGGY]  double[][]  out  =  new  double[1][0];  int  nVars  =  correlationMatrix.getNumberOfObservations();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[1][0];  int  nVars  =  correlationMatrix.getNumberOfObservations();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[1][0];  int  nVars  =  correlationMatrix.getNumberOfObservations();	  double[][]    out    =    new    double[1][nVars];    int    nVars    =    correlationMatrix.getNumberOfObservations();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	9	None	replace
275	[BUG]  [BUGGY]  int  nVars  =  covarianceMatrix.getNumberOfObservations()  -  1;  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int  nVars  =  covarianceMatrix.getNumberOfObservations()  -  1;  [BUGGY]      double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int  nVars  =  covarianceMatrix.getNumberOfObservations()  -  1;	  int    nVars    =    covarianceMatrix.getNumberOfObservations();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	54	None	replace
276	[BUG]  [BUGGY]  double[][]  out  =  new  double[1][0];  int  nVars  =  correlationMatrix.getColumnDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[1][0];  int  nVars  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[1][0];  int  nVars  =  correlationMatrix.getColumnDimension();	  double[][]    out    =    new    double[1][nVars];    int    nVars    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	103	None	replace
277	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars][4];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	add	double[][]  out  =  new  double[nVars][4];	  double[][]    out    =    new    double[nVars][1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	7	replace
278	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars][4];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars][4];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nVars][4];	  double[][]    out    =    new    double[nVars][1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	7	replace
279	[BUG]  [BUGGY]  int  nVars  =  tDistribution.getVarianceDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int  nVars  =  tDistribution.getVarianceDimension();  [BUGGY]      double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int  nVars  =  tDistribution.getVarianceDimension();	  int    nVars    =    tDistribution.getColumnDimension();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	67	None	replace
280	[BUG]  [BUGGY]  double[][]  out  =  new  double[3][nVars];  int  nVars  =  correlationMatrix.getColumnDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[3][nVars];  int  nVars  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[3][nVars];    int  nVars  =  correlationMatrix.getColumnDimension();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	86	None	add
281	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars][1];  double[][]  out  =  new  double[nVars][2];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars][1];  double[][]  out  =  new  double[nVars][2];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nVars][1];    double[][]  out  =  new  double[nVars][2];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	22	None	add
282	[BUG]  [BUGGY]  double[][]  out  =  new  double[1][nVars  +  1];  double[][]  out  =  new  double[2][nVars  +  1];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[1][nVars  +  1];  double[][]  out  =  new  double[2][nVars  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[1][nVars    +    1];    double[][]  out  =  new  double[2][nVars  +  1];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	39	None	add
283	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs  -  1][0];  int  nVars  =  correlationMatrix.getRowDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs  -  1][0];  int  nVars  =  correlationMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nObs    -    1][0];    int  nVars  =  correlationMatrix.getRowDimension();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	43	None	add
284	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs  -  1][0];  int  nVars  =  correlationMatrix.getColumnDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nObs  -  1][0];  int  nVars  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[nObs    -    1][0];    int  nVars  =  correlationMatrix.getColumnDimension();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	43	None	add
285	[BUG]  [BUGGY]  double[][]  out  =  new  double[1][nVars  -  1];  double[][]  out  =  new  double[2][nVars  -  1];  [CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[1][nVars  -  1];  double[][]  out  =  new  double[2][nVars  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]    out    =    new    double[1][nVars    -    1];    double[][]  out  =  new  double[2][nVars  -  1];	  	non-compiled	[CE]  variable  out  is  already  defined  in  method  getCorrelationPValues()	35	None	add
286	[BUG]  [BUGGY]  double[][]  out  =  new  double[1][0];  int  nVars  =  correlationMatrix.getRowDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[1][0];  int  nVars  =  correlationMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[1][0];  int  nVars  =  correlationMatrix.getRowDimension();	  double[][]    out    =    new    double[1][nVars];    int    nVars    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	7	None	replace
287	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  *  nVars][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	add	double[][]  out  =  new  double[nVars  *  nVars][nVars];	  double[][]    out    =    new    double[nVars    /    1][nVars];    	compilable	  [FE]  AssertionFailedError  	100	5	replace
288	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  *  nVars][nVars];  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  *  nVars][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nVars  *  nVars][nVars];	  double[][]    out    =    new    double[nVars    /    1][nVars];    	compilable	  [FE]  AssertionFailedError  	100	5	replace
289	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  *  nVars];  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  *  nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nVars  *  nVars];	  double[][]    out    =    new    double[nVars];    	non-compiled	[CE]  incompatible  types	29	None	replace
290	[BUG]  [BUGGY]  int[][]  out  =  new  double[nVars][nObs];  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int[][]  out  =  new  double[nVars][nObs];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int[][]  out  =  new  double[nVars][nObs];	  double[][]    out    =    new    double[nObs][nVars];    int[][]    out    =    new    double[nObs][nVars];    	non-compiled	[CE]  incompatible  types	18	None	replace
291	[BUG]  [BUGGY]  double[][]  out  =  new  double[1][nVars];  int  numberOfObservations  =  this.covarianceMatrix.getNumberOfObservations();  [CE]  cannot  find  symbol  covarianceMatrix  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[1][nVars];  int  numberOfObservations  =  this.covarianceMatrix.getNumberOfObservations();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[1][nVars];  int  numberOfObservations  =  this.covarianceMatrix.getNumberOfObservations();	  double[][]    out    =    new    double[1][nVars];    int    numberOfObservations    =    correlationMatrix.getNumberOfObservations();    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	91	None	replace
292	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  /  2][1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	add	double[][]  out  =  new  double[nVars  /  2][1];	  double[][]    out    =    new    double[nVars    /    2][nVars];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	109	7	replace
293	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  /  2][1];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars  /  2][1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nVars  /  2][1];	  double[][]    out    =    new    double[nVars    /    2][nVars];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	109	7	replace
294	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  double[][]  out  =  new  double[nVars][nVars];  }  [CE]  cannot  find  symbol  out  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  double[][]  out  =  new  double[nVars][nVars];  }  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	for(int  i  =  0;  i  <  nVars;  i++)  {  double[][]  out  =  new  double[nVars][nVars];  }	  long[][]    out    =    new    long[nVars][nVars];    	non-compiled	[CE]  cannot  find  symbol  out	68	None	replace
295	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  int  out  =  new  double[nVars][nVars];  }  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  int  out  =  new  double[nVars][nVars];  }  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	for(int  i  =  0;  i  <  nVars;  i++)  {  int  out  =  new  double[nVars][nVars];  }	  long[][]    out    =    new    long[nVars][nVars];    	non-compiled	[CE]  incompatible  types	68	None	replace
296	[BUG]  [BUGGY]  int  nVars  =  correlationMatrix.getVarianceDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int  nVars  =  correlationMatrix.getVarianceDimension();  [BUGGY]      double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int  nVars  =  correlationMatrix.getVarianceDimension();	  int    nVars    =    covarianceMatrix.getColumnDimension();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	52	None	replace
297	[BUG]  [BUGGY]  int[][]  out  =  new  double[2][nVars];  [CE]  incompatible  types  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int[][]  out  =  new  double[2][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int[][]  out  =  new  double[2][nVars];	  double[][]    out    =    new    double[1][nVars];    int[][]    out    =    new    double[1][nVars];    	non-compiled	[CE]  incompatible  types	8	None	replace
298	[BUG]  [BUGGY]  int  nVars  =  tDistribution.getRangeOfObservations()  +  1;  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  int  nVars  =  tDistribution.getRangeOfObservations()  +  1;  [BUGGY]      double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	int  nVars  =  tDistribution.getRangeOfObservations()  +  1;	  int    nVars    =    tDistribution.getRangeOfObservations();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	74	None	replace
299	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars][0];  int  nVars  =  dataMatrix.getNumberOfObservations();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();      [BUGGY]  double[][]  out  =  new  double[nVars][0];  int  nVars  =  dataMatrix.getNumberOfObservations();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	163	163	2	replace	double[][]  out  =  new  double[nVars][0];  int  nVars  =  dataMatrix.getNumberOfObservations();	  double[][]    out    =    new    double[nVars][0];    int    nVars    =    correlationMatrix.getNumberOfObservations();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	60	None	replace
