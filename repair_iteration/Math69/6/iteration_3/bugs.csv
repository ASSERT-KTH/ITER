bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  i  =  0;  i  <  nObs;  i++)  {  [CE]  >  expected  [FE]            MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  i  =  0;  i  <  nObs;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  i  =  0;  i  <  nObs;  i++)  {	  for(int    i    =    0;    i    <    nObs;    i++)    {    int    i    =    0;    i    <    nObs;    i++)    {    	non-compiled	[CE]  >  expected	48	None	replace
2	[BUG]  [BUGGY]  [FE]  MatrixIndexException  [FE]              MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  1;  i  <  nObs;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	add	for(int  i  =  1;  i  <  nObs;  i++)  {	  for(int    i    =    0;    i    <    nObs;    i++)    {    int    i    =    0;    i    <    nObs;    i++)    {    	compilable	  [FE]  MatrixIndexException  	48	7	replace
3	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  nObs;  i++)  {  [FE]  MatrixIndexException  [FE]              MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  1;  i  <  nObs;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  1;  i  <  nObs;  i++)  {	  for(int    i    =    0;    i    <    nObs;    i++)    {    int    i    =    0;    i    <    nObs;    i++)    {    	compilable	  [FE]  MatrixIndexException  	48	7	replace
4	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars  -  1;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	add	for(int  i  =  0;  i  <  nVars  -  1;  i++)  {	  for(int    i    =    0;    i    <    nObs    -    1;    i++)    {    	compilable	  [FE]  AssertionFailedError  	43	6	replace
5	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars  -  1;  i++)  {  [FE]  AssertionFailedError  [FE]    MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars  -  1;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nVars  -  1;  i++)  {	  for(int    i    =    0;    i    <    nObs    -    1;    i++)    {    	compilable	  [FE]  AssertionFailedError  	43	6	replace
6	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs.length  -  1;  i++)  {  [CE]  int  cannot  be  dereferenced  [FE]      MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs.length  -  1;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nObs.length  -  1;  i++)  {	  for(int    i    =    0;    i    <    nObs    -    1;    i++)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	43	None	replace
7	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getRowDimension();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  dataMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  dataMatrix.getRowDimension();	  int    nObs    =    covarianceMatrix.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
8	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getRowDimension();  Integer  nObs  =  correlationMatrix.getRowDimension();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  correlationMatrix.getRowDimension();  Integer  nObs  =  correlationMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  correlationMatrix.getRowDimension();  Integer  nObs  =  correlationMatrix.getRowDimension();	          int    nObs    =    correlationMatrix.getRowDimension();    Int    nObs    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
9	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getRowDimension();  Integer  nObs  =  dataMatrix.getRowDimension();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  dataMatrix.getRowDimension();  Integer  nObs  =  dataMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  dataMatrix.getRowDimension();  Integer  nObs  =  dataMatrix.getRowDimension();	          int    nObs    =    correlationMatrix.getRowDimension();    Int    nObs    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
10	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getColumnDimension();  Int  nObs  =  correlationMatrix.getRowDimension();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  correlationMatrix.getColumnDimension();  Int  nObs  =  correlationMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  correlationMatrix.getColumnDimension();  Int  nObs  =  correlationMatrix.getRowDimension();	          int    nObs    =    correlationMatrix.getRowDimension();    Int    nObs    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
11	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  nVars;  i++)  {  [CE]  '.class'  expected  [FE]        MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  For(int  i  =  0;  i  <  nVars;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	For(int  i  =  0;  i  <  nVars;  i++)  {	  for(int    i    =    0;    i    <    nObs;    i++)    {    for(int    i    =    0;    i    <    nObs;    i++)    {    	non-compiled	[CE]  '.class'  expected	46	None	replace
12	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getNumberOfObservations()  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  covarianceMatrix.getNumberOfObservations()  +  1;  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  covarianceMatrix.getNumberOfObservations()  +  1;	  int    nObs    =    covarianceMatrix.getNumberOfObservations();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
13	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  nObs;  i++)  {  for(int  i  =  2;  i  <  nObs;  i++)  {  [CE]  illegal  start  of  expression  [FE]    MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  2;  i  <  nObs;  i++)  {  for(int  i  =  2;  i  <  nObs;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    2;    i    <    nObs;    i++)    {    for(int  i  =  2;  i  <  nObs;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
14	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  nObs;  i++)  {  int  i  =  2;  i  <  nObs;  i++)  {  [CE]  >  expected  [FE]      MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  2;  i  <  nObs;  i++)  {  int  i  =  2;  i  <  nObs;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    2;    i    <    nObs;    i++)    {    int  i  =  2;  i  <  nObs;  i++)  {	  	non-compiled	[CE]  >  expected	67	None	add
15	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  nObs;  i++)  {  For(int  i  =  2;  i  <  nObs;  i++)  {  [CE]  '.class'  expected  [FE]        MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  2;  i  <  nObs;  i++)  {  For(int  i  =  2;  i  <  nObs;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    2;    i    <    nObs;    i++)    {    For(int  i  =  2;  i  <  nObs;  i++)  {	  	non-compiled	[CE]  '.class'  expected	67	None	add
16	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  nObs;  i++)  {  (int  i  =  2;  i  <  nObs;  i++)  {  [CE]  ')'  expected  [FE]          MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  2;  i  <  nObs;  i++)  {  (int  i  =  2;  i  <  nObs;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    2;    i    <    nObs;    i++)    {    (int  i  =  2;  i  <  nObs;  i++)  {	  	non-compiled	[CE]  ')'  expected	67	None	add
17	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  -  1;  i++)  {  for(int  i  =  0;  i  <  nObs  -  1;  i++)  {  [CE]  illegal  start  of  expression  [FE]    MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs  -  1;  i++)  {  for(int  i  =  0;  i  <  nObs  -  1;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nObs    -    1;    i++)    {    for(int  i  =  0;  i  <  nObs  -  1;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
18	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  -  1;  i++)  {  int  i  =  0;  i  <  nObs  -  1;  i++)  {  [CE]  >  expected  [FE]      MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs  -  1;  i++)  {  int  i  =  0;  i  <  nObs  -  1;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nObs    -    1;    i++)    {    int  i  =  0;  i  <  nObs  -  1;  i++)  {	  	non-compiled	[CE]  >  expected	42	None	add
19	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  -  1;  i++)  {  For(int  i  =  0;  i  <  nObs  -  1;  i++)  {  [CE]  '.class'  expected  [FE]        MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs  -  1;  i++)  {  For(int  i  =  0;  i  <  nObs  -  1;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nObs    -    1;    i++)    {    For(int  i  =  0;  i  <  nObs  -  1;  i++)  {	  	non-compiled	[CE]  '.class'  expected	42	None	add
20	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  -  1;  i++)  {  int  nObs  =  0;  i  <  nObs  -  1;  i++)  {  [CE]  >  expected  [FE]          MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs  -  1;  i++)  {  int  nObs  =  0;  i  <  nObs  -  1;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nObs    -    1;    i++)    {    int  nObs  =  0;  i  <  nObs  -  1;  i++)  {	  	non-compiled	[CE]  >  expected	42	None	add
21	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  -  1;  i++)  {  for(int  i  =  0;  i  <  nobs  -  1;  i++)  {  [CE]  illegal  start  of  expression  [FE]            MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs  -  1;  i++)  {  for(int  i  =  0;  i  <  nobs  -  1;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nObs    -    1;    i++)    {    for(int  i  =  0;  i  <  nobs  -  1;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
22	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars.length-1;  i++)  {  [CE]  int  cannot  be  dereferenced  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars.length-1;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nVars.length-1;  i++)  {	  for(int    i    =    0;    i    <    nVars.length;    i++)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	34	None	replace
23	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars,  nObs.length;  i++)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars,  nObs.length;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nVars,  nObs.length;  i++)  {	  for(int    i    =    0;    i    <    nObs,    nVars.length;    i++)    {    	non-compiled	[CE]  ';'  expected	33	None	replace
24	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs,  nVars.length  -  1;  i++)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs,  nVars.length  -  1;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nObs,  nVars.length  -  1;  i++)  {	  for(int    i    =    0;    i    <    nObs,    nVars.length;    i++)    {    	non-compiled	[CE]  ';'  expected	33	None	replace
25	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs,  nVars.length  -  2;  i++)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs,  nVars.length  -  2;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nObs,  nVars.length  -  2;  i++)  {	  for(int    i    =    0;    i    <    nObs,    nVars.length;    i++)    {    	non-compiled	[CE]  ';'  expected	33	None	replace
26	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars.length,  nObs.length;  i++)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars.length,  nObs.length;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nVars.length,  nObs.length;  i++)  {	  for(int    i    =    0;    i    <    nObs,    nVars.length;    i++)    {    	non-compiled	[CE]  ';'  expected	33	None	replace
27	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  nVars.length;  i++)  {  [CE]  '.class'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  For(int  i  =  0;  i  <  nVars.length;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	For(int  i  =  0;  i  <  nVars.length;  i++)  {	  For(int    i    =    0;    i    <    nObs.length;    i++)    {    	non-compiled	[CE]  '.class'  expected	62	None	replace
28	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  nObs.length  -  2;  i++)  {  [CE]  '.class'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  For(int  i  =  0;  i  <  nObs.length  -  2;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	For(int  i  =  0;  i  <  nObs.length  -  2;  i++)  {	  For(int    i    =    0;    i    <    nObs.length;    i++)    {    	non-compiled	[CE]  '.class'  expected	62	None	replace
29	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  nObs.length  -  1;  i++)  {  [CE]  '.class'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  For(int  i  =  0;  i  <  nObs.length  -  1;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	For(int  i  =  0;  i  <  nObs.length  -  1;  i++)  {	  For(int    i    =    0;    i    <    nObs.length;    i++)    {    	non-compiled	[CE]  '.class'  expected	62	None	replace
30	[BUG]  [BUGGY]  For(int  i  =  1;  i  <  nObs.length;  i++)  {  [CE]  '.class'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  For(int  i  =  1;  i  <  nObs.length;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	For(int  i  =  1;  i  <  nObs.length;  i++)  {	  For(int    i    =    0;    i    <    nObs.length;    i++)    {    	non-compiled	[CE]  '.class'  expected	62	None	replace
31	[BUG]  [BUGGY]  int  nVars  =  covarianceMatrix.getNumberOfObservations()  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nVars  =  covarianceMatrix.getNumberOfObservations()  +  1;  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nVars  =  covarianceMatrix.getNumberOfObservations()  +  1;	  int    nVars    =    covarianceMatrix.getNumberOfObservations();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
32	[BUG]  [BUGGY]  int  nObs  =  datasetMatrix.getNumberOfObservations();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  datasetMatrix.getNumberOfObservations();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  datasetMatrix.getNumberOfObservations();	  int    nObs    =    dataMatrix.getNumberOfObservations();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
33	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getRowDimension();  double[][]  out  =  new  double[nVars][nVars];  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  covarianceMatrix.getRowDimension();  double[][]  out  =  new  double[nVars][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  covarianceMatrix.getRowDimension();  double[][]  out  =  new  double[nVars][nVars];	  int    nObs    =    covarianceMatrix.getColumnDimension();    double[][]    out    =    new    double[nVars][nVars];    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
34	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nobs;  i++)  {  [CE]  cannot  find  symbol  nobs  [FE]        MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nobs;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nobs;  i++)  {	  for(int    i    =    0;    i    <    nObs;    i++)    {    for(int    i    =    0;    i    <    nobs;    i++)    {    	non-compiled	[CE]  cannot  find  symbol  nobs	65	None	replace
35	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getRowDimension();  out[0][0]  =  0d;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  dataMatrix.getRowDimension();  out[0][0]  =  0d;  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  dataMatrix.getRowDimension();  out[0][0]  =  0d;	  int    nObs    =    dataMatrix.getColumnDimension();    out[0][0]    =    0d;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
36	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getColumnDimension();  Integer  nObs  =  correlationMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  correlationMatrix.getColumnDimension();  Integer  nObs  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  correlationMatrix.getColumnDimension();  Integer  nObs  =  correlationMatrix.getColumnDimension();	          int    nObs    =    correlationMatrix.getColumnDimension();    Int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
37	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  Integer  nObs  =  dataMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  Integer  nObs  =  dataMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  dataMatrix.getColumnDimension();  Integer  nObs  =  dataMatrix.getColumnDimension();	          int    nObs    =    correlationMatrix.getColumnDimension();    Int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
38	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getColumnDimension();  Integer  nObs  =  correlationMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  covarianceMatrix.getColumnDimension();  Integer  nObs  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  covarianceMatrix.getColumnDimension();  Integer  nObs  =  correlationMatrix.getColumnDimension();	          int    nObs    =    correlationMatrix.getColumnDimension();    Int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
39	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  (int  i  =  0;  i  <  nObs;  i++)  {  [CE]  ')'  expected  [FE]              MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  (int  i  =  0;  i  <  nObs;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nVars;  i++)  {  (int  i  =  0;  i  <  nObs;  i++)  {	  for(int    i    =    0;    i    <    nObs;    i++)    {    (int    i    =    0;    i    <    nObs;    i++)    {    	non-compiled	[CE]  ')'  expected	49	None	replace
40	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  int  i  =  0;  i  <  nObs;  i++)  {  [CE]  >  expected  [FE]                MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  int  i  =  0;  i  <  nObs;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nVars;  i++)  {  int  i  =  0;  i  <  nObs;  i++)  {	  for(int    i    =    0;    i    <    nObs;    i++)    {    (int    i    =    0;    i    <    nObs;    i++)    {    	non-compiled	[CE]  >  expected	49	None	replace
41	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  2;  i  <  nVars;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	add	for(int  i  =  2;  i  <  nVars;  i++)  {	  for(int    i    =    2;    i    <    nObs;    i++)    {    	compilable	  [FE]  AssertionFailedError  	68	6	replace
42	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  nVars;  i++)  {  [FE]  AssertionFailedError  [FE]    MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  2;  i  <  nVars;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  2;  i  <  nVars;  i++)  {	  for(int    i    =    2;    i    <    nObs;    i++)    {    	compilable	  [FE]  AssertionFailedError  	68	6	replace
43	[BUG]  [BUGGY]  [FE]  MatrixIndexException  [FE]    MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs  +  3;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	add	for(int  i  =  0;  i  <  nObs  +  3;  i++)  {	  for(int    i    =    0;    i    <    nObs    +    2;    i++)    {    	compilable	  [FE]  MatrixIndexException  	19	7	replace
44	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  +  3;  i++)  {  [FE]  MatrixIndexException  [FE]    MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs  +  3;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nObs  +  3;  i++)  {	  for(int    i    =    0;    i    <    nObs    +    2;    i++)    {    	compilable	  [FE]  MatrixIndexException  	19	7	replace
45	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getObjDimension();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  covarianceMatrix.getObjDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  covarianceMatrix.getObjDimension();	  int    nObs    =    correlationMatrix.getObjDimension();    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
46	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getObjDimension();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  dataMatrix.getObjDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  dataMatrix.getObjDimension();	  int    nObs    =    correlationMatrix.getObjDimension();    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
47	[BUG]  [BUGGY]  int  nObs  =  this.covarianceMatrix.getObjDimension();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  this.covarianceMatrix.getObjDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  this.covarianceMatrix.getObjDimension();	  int    nObs    =    correlationMatrix.getObjDimension();    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
48	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getRowDimension();  double[][]  out  =  new  double[nVars][nVars];  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  dataMatrix.getRowDimension();  double[][]  out  =  new  double[nVars][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  dataMatrix.getRowDimension();  double[][]  out  =  new  double[nVars][nVars];	  int    nObs    =    dataMatrix.getColumnDimension();    double[][]    out    =    new    double[nVars][nVars];    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
49	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getRowDimension();  out[0][0]  =  0d;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  covarianceMatrix.getRowDimension();  out[0][0]  =  0d;  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  covarianceMatrix.getRowDimension();  out[0][0]  =  0d;	  int    nObs    =    covarianceMatrix.getColumnDimension();    out[0][0]    =    0d;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
50	[BUG]  [BUGGY]  out[0][0]  =  0d;  out[1][0]  =  0d;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  out[0][0]  =  0d;  out[1][0]  =  0d;  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	out[0][0]  =  0d;  out[1][0]  =  0d;	          int    nObs    =    correlationMatrix.getColumnDimension();    out[0][0]    =    0d;    int    nObs    =    correlationMatrix.getColumnDimension();    out[1][0]    =    0d;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
51	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getColumnDimension();  out[0][0]  =  0;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  covarianceMatrix.getColumnDimension();  out[0][0]  =  0;  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  covarianceMatrix.getColumnDimension();  out[0][0]  =  0;	  int    nObs    =    correlationMatrix.getColumnDimension();    out[0][0]    =    0;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
52	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  out[0][0]  =  0;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  out[0][0]  =  0;  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  dataMatrix.getColumnDimension();  out[0][0]  =  0;	  int    nObs    =    correlationMatrix.getColumnDimension();    out[0][0]    =    0;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
53	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getRowDimension();  out[0][0]  =  0;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  correlationMatrix.getRowDimension();  out[0][0]  =  0;  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  correlationMatrix.getRowDimension();  out[0][0]  =  0;	  int    nObs    =    correlationMatrix.getColumnDimension();    out[0][0]    =    0;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
54	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars  -  2;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	add	for(int  i  =  0;  i  <  nVars  -  2;  i++)  {	  for(int    i    =    0;    i    <    nObs    -    2;    i++)    {    	compilable	  [FE]  AssertionFailedError  	45	6	replace
55	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars  -  2;  i++)  {  [FE]  AssertionFailedError  [FE]    MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars  -  2;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nVars  -  2;  i++)  {	  for(int    i    =    0;    i    <    nObs    -    2;    i++)    {    	compilable	  [FE]  AssertionFailedError  	45	6	replace
56	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getRowDimension();  int  nObs  =  dataMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  dataMatrix.getRowDimension();  int  nObs  =  dataMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  dataMatrix.getRowDimension();  int  nObs  =  dataMatrix.getColumnDimension();	          int    nObs    =    correlationMatrix.getRowDimension();    int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
57	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getRowDimension();  int  nObs  =  correlationMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  covarianceMatrix.getRowDimension();  int  nObs  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  covarianceMatrix.getRowDimension();  int  nObs  =  correlationMatrix.getColumnDimension();	          int    nObs    =    correlationMatrix.getRowDimension();    int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
58	[BUG]  [BUGGY]  int  nObs  =  this.covarianceMatrix.getRowDimension();  int  nObs  =  this.covarianceMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  this.covarianceMatrix.getRowDimension();  int  nObs  =  this.covarianceMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  this.covarianceMatrix.getRowDimension();  int  nObs  =  this.covarianceMatrix.getColumnDimension();	          int    nObs    =    correlationMatrix.getRowDimension();    int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
59	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  [CE]  illegal  start  of  expression  [FE]    MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nObs    +    1;    i++)    {    for(int  i  =  0;  i  <  nObs  +  1;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
60	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  int  i  =  0;  i  <  nObs  +  1;  i++)  {  [CE]  >  expected  [FE]      MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  int  i  =  0;  i  <  nObs  +  1;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nObs    +    1;    i++)    {    int  i  =  0;  i  <  nObs  +  1;  i++)  {	  	non-compiled	[CE]  >  expected	14	None	add
61	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  For(int  i  =  0;  i  <  nObs  +  1;  i++)  {  [CE]  '.class'  expected  [FE]        MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  For(int  i  =  0;  i  <  nObs  +  1;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nObs    +    1;    i++)    {    For(int  i  =  0;  i  <  nObs  +  1;  i++)  {	  	non-compiled	[CE]  '.class'  expected	14	None	add
62	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  (int  i  =  0;  i  <  nObs  +  1;  i++)  {  [CE]  ')'  expected  [FE]          MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  (int  i  =  0;  i  <  nObs  +  1;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nObs    +    1;    i++)    {    (int  i  =  0;  i  <  nObs  +  1;  i++)  {	  	non-compiled	[CE]  ')'  expected	14	None	add
63	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  int  nObs  =  nObs  +  1;  i++)  {  [CE]  ';'  expected  [FE]            MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  int  nObs  =  nObs  +  1;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nObs    +    1;    i++)    {    int  nObs  =  nObs  +  1;  i++)  {	  	non-compiled	[CE]  ';'  expected	14	None	add
64	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getEntryCount();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  covarianceMatrix.getEntryCount();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  covarianceMatrix.getEntryCount();	  int    nObs    =    correlationMatrix.getEntryCount();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
65	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getEntryCount();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  dataMatrix.getEntryCount();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  dataMatrix.getEntryCount();	  int    nObs    =    correlationMatrix.getEntryCount();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
66	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getEntryCount()  -  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  correlationMatrix.getEntryCount()  -  1;  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  correlationMatrix.getEntryCount()  -  1;	  int    nObs    =    correlationMatrix.getEntryCount();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
67	[BUG]  [BUGGY]  int  nObs  =  this.covarianceMatrix.getEntryCount();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  this.covarianceMatrix.getEntryCount();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  this.covarianceMatrix.getEntryCount();	  int    nObs    =    correlationMatrix.getEntryCount();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
68	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  nObs;  i++)  {  [CE]  '.class'  expected  [FE]          MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  For(int  i  =  0;  i  <  nObs;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	For(int  i  =  0;  i  <  nObs;  i++)  {	  for(int    i    =    0;    i    <    nObs;    i++)    {    For(int    i    =    0;    i    <    nObs;    i++)    {    	non-compiled	[CE]  '.class'  expected	47	None	replace
69	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getDoubleDimension();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  covarianceMatrix.getDoubleDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  covarianceMatrix.getDoubleDimension();	  int    nObs    =    correlationMatrix.getDoubleDimension();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
70	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getDoubleDimension();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  dataMatrix.getDoubleDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  dataMatrix.getDoubleDimension();	  int    nObs    =    correlationMatrix.getDoubleDimension();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
71	[BUG]  [BUGGY]  int  nObs  =  this.covarianceMatrix.getDoubleDimension();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  this.covarianceMatrix.getDoubleDimension();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  this.covarianceMatrix.getDoubleDimension();	  int    nObs    =    correlationMatrix.getDoubleDimension();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
72	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getDoubleDimension();  out[0][0]  =  0d;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  dataMatrix.getDoubleDimension();  out[0][0]  =  0d;  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  dataMatrix.getDoubleDimension();  out[0][0]  =  0d;	  int    nObs    =    correlationMatrix.getDoubleDimension();    out[0][0]    =    0d;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
73	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getDoubleDimension();  out[0][0]  =  0d;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  covarianceMatrix.getDoubleDimension();  out[0][0]  =  0d;  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  covarianceMatrix.getDoubleDimension();  out[0][0]  =  0d;	  int    nObs    =    correlationMatrix.getDoubleDimension();    out[0][0]    =    0d;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
74	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getDoubleDimension();  out[0][0]  =  0d  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  correlationMatrix.getDoubleDimension();  out[0][0]  =  0d  +  1;  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  correlationMatrix.getDoubleDimension();  out[0][0]  =  0d  +  1;	  int    nObs    =    correlationMatrix.getDoubleDimension();    out[0][0]    =    0d;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
75	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs,  i);  out[i][j]  =  0d;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs,  i);  out[i][j]  =  0d;  }  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nVars;  i++)  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs,  i);  out[i][j]  =  0d;  }	  for(int    i    =    0;    i    <    nObs;    i++)    {    TDistribution    tDistribution    =    new    TDistributionImpl(nObs,    i);    out[i][j]    =    0d;    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
76	[BUG]  [BUGGY]  int  i  =  0;  i  <  nObs;  i++)  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs,  i);  out[i][j]  =  0d;  }  [CE]  >  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  i  =  0;  i  <  nObs;  i++)  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs,  i);  out[i][j]  =  0d;  }  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  i  =  0;  i  <  nObs;  i++)  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs,  i);  out[i][j]  =  0d;  }	  for(int    i    =    0;    i    <    nObs;    i++)    {    TDistribution    tDistribution    =    new    TDistributionImpl(nObs,    i);    out[i][j]    =    0d;    }    	non-compiled	[CE]  >  expected	50	None	replace
77	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs,  i);  out[i][j]  =  0  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs,  i);  out[i][j]  =  0  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nVars;  i++)  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs,  i);  out[i][j]  =  0	  for(int    i    =    0;    i    <    nObs;    i++)    {    TDistribution    tDistribution    =    new    TDistributionImpl(nObs,    i);    out[i][j]    =    0d;    }    	non-compiled	[CE]  ';'  expected	50	None	replace
78	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs,  i);  out[i][j]  =  0d  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs,  i);  out[i][j]  =  0d  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nVars;  i++)  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs,  i);  out[i][j]  =  0d	  for(int    i    =    0;    i    <    nObs;    i++)    {    TDistribution    tDistribution    =    new    TDistributionImpl(nObs,    i);    out[i][j]    =    0d;    }    	non-compiled	[CE]  ';'  expected	50	None	replace
79	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  (int  i  =  0;  i  <  nVars  +  1;  i++)  {  [CE]  ')'  expected  [FE]        MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  (int  i  =  0;  i  <  nVars  +  1;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  (int  i  =  0;  i  <  nVars  +  1;  i++)  {	  for(int    i    =    0;    i    <    nVars    +    1;    i++)    {    (int    i    =    0;    i    <    nVars    +    1;    i++)    {    	non-compiled	[CE]  ')'  expected	54	None	replace
80	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  (int  i  =  0;  i  <  nVars  +  2;  i++)  {  [CE]  ')'  expected  [FE]          MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  (int  i  =  0;  i  <  nVars  +  2;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  (int  i  =  0;  i  <  nVars  +  2;  i++)  {	  for(int    i    =    0;    i    <    nVars    +    1;    i++)    {    (int    i    =    0;    i    <    nVars    +    1;    i++)    {    	non-compiled	[CE]  ')'  expected	54	None	replace
81	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  +  2;  i++)  {  (int  i  =  0;  i  <  nVars  +  2;  i++)  {  [CE]  ')'  expected  [FE]            MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs  +  2;  i++)  {  (int  i  =  0;  i  <  nVars  +  2;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nObs  +  2;  i++)  {  (int  i  =  0;  i  <  nVars  +  2;  i++)  {	  for(int    i    =    0;    i    <    nVars    +    1;    i++)    {    (int    i    =    0;    i    <    nVars    +    1;    i++)    {    	non-compiled	[CE]  ')'  expected	54	None	replace
82	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  -  2;  i++)  {  for(int  i  =  0;  i  <  nObs  -  2;  i++)  {  [CE]  illegal  start  of  expression  [FE]    MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs  -  2;  i++)  {  for(int  i  =  0;  i  <  nObs  -  2;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nObs    -    2;    i++)    {    for(int  i  =  0;  i  <  nObs  -  2;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
83	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  -  2;  i++)  {  int  i  =  0;  i  <  nObs  -  2;  i++)  {  [CE]  >  expected  [FE]      MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs  -  2;  i++)  {  int  i  =  0;  i  <  nObs  -  2;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nObs    -    2;    i++)    {    int  i  =  0;  i  <  nObs  -  2;  i++)  {	  	non-compiled	[CE]  >  expected	44	None	add
84	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  -  2;  i++)  {  For(int  i  =  0;  i  <  nObs  -  2;  i++)  {  [CE]  '.class'  expected  [FE]        MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs  -  2;  i++)  {  For(int  i  =  0;  i  <  nObs  -  2;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nObs    -    2;    i++)    {    For(int  i  =  0;  i  <  nObs  -  2;  i++)  {	  	non-compiled	[CE]  '.class'  expected	44	None	add
85	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  -  2;  i++)  {  (int  i  =  0;  i  <  nObs  -  2;  i++)  {  [CE]  ')'  expected  [FE]          MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs  -  2;  i++)  {  (int  i  =  0;  i  <  nObs  -  2;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nObs    -    2;    i++)    {    (int  i  =  0;  i  <  nObs  -  2;  i++)  {	  	non-compiled	[CE]  ')'  expected	44	None	add
86	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  -  2;  i++)  {  for(int  i  =  0;  i  <  nobs  -  2;  i++)  {  [CE]  illegal  start  of  expression  [FE]            MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs  -  2;  i++)  {  for(int  i  =  0;  i  <  nobs  -  2;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nObs    -    2;    i++)    {    for(int  i  =  0;  i  <  nobs  -  2;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
87	[BUG]  [BUGGY]  Integer  nObs  =  correlationMatrix.getColumnDimension();  out[0][0]  =  0d;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  Integer  nObs  =  correlationMatrix.getColumnDimension();  out[0][0]  =  0d;  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	Integer  nObs  =  correlationMatrix.getColumnDimension();  out[0][0]  =  0d;	          int    nObs    =    correlationMatrix.getColumnDimension();    out[0][0]    =    0d;    Integer    nObs    =    correlationMatrix.getColumnDimension();    out[0][0]    =    0d;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
88	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars  +  1);  [CE]  cannot  find  symbol  relativeMatrix  [FE]          MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars  +  1);	  for(int    i    =    0;    i    <    nVars    +    1;    i++)    {    ((    RealMatrix)relativeMatrix).getEntry(i,    nVars    +    1);    	non-compiled	[CE]  cannot  find  symbol  relativeMatrix	55	None	replace
89	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars  +  1);  }  [CE]  illegal  start  of  type  [FE]            MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars  +  1);  }  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars  +  1);  }	  for(int    i    =    0;    i    <    nVars    +    1;    i++)    {    ((    RealMatrix)relativeMatrix).getEntry(i,    nVars    +    1);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
90	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars  +  2;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars  +  1);  [CE]  cannot  find  symbol  relativeMatrix  [FE]              MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars  +  2;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nVars  +  2;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars  +  1);	  for(int    i    =    0;    i    <    nVars    +    1;    i++)    {    ((    RealMatrix)relativeMatrix).getEntry(i,    nVars    +    1);    	non-compiled	[CE]  cannot  find  symbol  relativeMatrix	55	None	replace
91	[BUG]  [BUGGY]  int  nVars  =  datasetMatrix.getNumberOfObservations();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nVars  =  datasetMatrix.getNumberOfObservations();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nVars  =  datasetMatrix.getNumberOfObservations();	  int    nVars    =    dataMatrix.getNumberOfObservations();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
92	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  if(nObs  >  0)  {  for(int  i  =  0;  i  <  nObs;  i++)  {  }  [CE]  illegal  start  of  expression  [FE]        MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  if(nObs  >  0)  {  for(int  i  =  0;  i  <  nObs;  i++)  {  }  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nVars;  i++)  {  if(nObs  >  0)  {  for(int  i  =  0;  i  <  nObs;  i++)  {  }	  for(int    i    =    0;    i    <    nObs;    i++)    {    if(nObs    >    0)    {    for(int    i    =    0;    i    <    nObs;    i++)    {    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
93	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  if(nVars  >  0)  {  for(int  i  =  0;  i  <  nVars;  i++)  {  }  [CE]  illegal  start  of  expression  [FE]          MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  if(nVars  >  0)  {  for(int  i  =  0;  i  <  nVars;  i++)  {  }  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nVars;  i++)  {  if(nVars  >  0)  {  for(int  i  =  0;  i  <  nVars;  i++)  {  }	  for(int    i    =    0;    i    <    nObs;    i++)    {    if(nObs    >    0)    {    for(int    i    =    0;    i    <    nObs;    i++)    {    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
94	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  if(nObs  >  1)  {  for(int  i  =  0;  i  <  nObs;  i++)  {  }  [CE]  illegal  start  of  expression  [FE]            MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  if(nObs  >  1)  {  for(int  i  =  0;  i  <  nObs;  i++)  {  }  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nVars;  i++)  {  if(nObs  >  1)  {  for(int  i  =  0;  i  <  nObs;  i++)  {  }	  for(int    i    =    0;    i    <    nObs;    i++)    {    if(nObs    >    0)    {    for(int    i    =    0;    i    <    nObs;    i++)    {    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
95	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  nVars;  i++)  {  if(nObs  >  0)  {  for(int  i  =  0;  i  <  nObs;  i++)  {  }  [CE]  '.class'  expected  [FE]              MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  For(int  i  =  0;  i  <  nVars;  i++)  {  if(nObs  >  0)  {  for(int  i  =  0;  i  <  nObs;  i++)  {  }  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	For(int  i  =  0;  i  <  nVars;  i++)  {  if(nObs  >  0)  {  for(int  i  =  0;  i  <  nObs;  i++)  {  }	  for(int    i    =    0;    i    <    nObs;    i++)    {    if(nObs    >    0)    {    for(int    i    =    0;    i    <    nObs;    i++)    {    }    	non-compiled	[CE]  '.class'  expected	76	None	replace
96	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getEntryDimension();  out[0][0]  =  0d;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  dataMatrix.getEntryDimension();  out[0][0]  =  0d;  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  dataMatrix.getEntryDimension();  out[0][0]  =  0d;	  int    nObs    =    correlationMatrix.getEntryDimension();    out[0][0]    =    0d;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
97	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getEntryDimension();  out[0][0]  =  0d;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  covarianceMatrix.getEntryDimension();  out[0][0]  =  0d;  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  covarianceMatrix.getEntryDimension();  out[0][0]  =  0d;	  int    nObs    =    correlationMatrix.getEntryDimension();    out[0][0]    =    0d;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
98	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getEntryDimension();  out[0][0]  =  0d  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  correlationMatrix.getEntryDimension();  out[0][0]  =  0d  +  1;  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  correlationMatrix.getEntryDimension();  out[0][0]  =  0d  +  1;	  int    nObs    =    correlationMatrix.getEntryDimension();    out[0][0]    =    0d;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
99	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  nVars  +  1;  i++)  {  [CE]  '.class'  expected  [FE]            MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  For(int  i  =  0;  i  <  nVars  +  1;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	For(int  i  =  0;  i  <  nVars  +  1;  i++)  {	  for(int    i    =    0;    i    <    nVars    +    1;    i++)    {    For(int    i    =    0;    i    <    nVars    +    1;    i++)    {    	non-compiled	[CE]  '.class'  expected	31	None	replace
100	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  nObs  +  1;  i++)  {  [CE]  '.class'  expected  [FE]              MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  For(int  i  =  0;  i  <  nObs  +  1;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	For(int  i  =  0;  i  <  nObs  +  1;  i++)  {	  for(int    i    =    0;    i    <    nVars    +    1;    i++)    {    For(int    i    =    0;    i    <    nVars    +    1;    i++)    {    	non-compiled	[CE]  '.class'  expected	31	None	replace
101	[BUG]  [BUGGY]  int  i  =  0;  i  <  nVars  +  1;  i++)  {  [CE]  >  expected  [FE]          MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  i  =  0;  i  <  nVars  +  1;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  i  =  0;  i  <  nVars  +  1;  i++)  {	  for(int    i    =    0;    i    <    nVars    +    1;    i++)    {    int    i    =    0;    i    <    nVars    +    1;    i++)    {    	non-compiled	[CE]  >  expected	30	None	replace
102	[BUG]  [BUGGY]  int  numberOfObservations  =  covarianceMatrix.getNumberOfObservations();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  numberOfObservations  =  covarianceMatrix.getNumberOfObservations();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  numberOfObservations  =  covarianceMatrix.getNumberOfObservations();	  int    numberOfObservations    =    correlationMatrix.getNumberOfObservations();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
103	[BUG]  [BUGGY]  int  numberOfObservations  =  correlationMatrix.getNumberOfObservations()  -  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  numberOfObservations  =  correlationMatrix.getNumberOfObservations()  -  1;  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  numberOfObservations  =  correlationMatrix.getNumberOfObservations()  -  1;	  int    numberOfObservations    =    correlationMatrix.getNumberOfObservations();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
104	[BUG]  [BUGGY]  int  numberOfObservations  =  dataMatrix.getNumberOfObservations();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  numberOfObservations  =  dataMatrix.getNumberOfObservations();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  numberOfObservations  =  dataMatrix.getNumberOfObservations();	  int    numberOfObservations    =    correlationMatrix.getNumberOfObservations();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
105	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars);  [CE]  cannot  find  symbol  relativeMatrix  [FE]            MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars);	  for(int    i    =    0;    i    <    nVars    +    1;    i++)    {    ((    RealMatrix)relativeMatrix).getEntry(i,    nVars);    	non-compiled	[CE]  cannot  find  symbol  relativeMatrix	56	None	replace
106	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars);  }  [CE]  illegal  start  of  type  [FE]              MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars);  }  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars);  }	  for(int    i    =    0;    i    <    nVars    +    1;    i++)    {    ((    RealMatrix)relativeMatrix).getEntry(i,    nVars);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
107	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars  +  2;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars);  [CE]  cannot  find  symbol  relativeMatrix  [FE]                MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars  +  2;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nVars  +  2;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars);	  for(int    i    =    0;    i    <    nVars    +    1;    i++)    {    ((    RealMatrix)relativeMatrix).getEntry(i,    nVars);    	non-compiled	[CE]  cannot  find  symbol  relativeMatrix	56	None	replace
108	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars  +  1;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  covarianceMatrix);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                  MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars  +  1;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  covarianceMatrix);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nVars  +  1;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  covarianceMatrix);	  for(int    i    =    0;    i    <    nVars    +    1;    i++)    {    ((    RealMatrix)relativeMatrix).getEntry(i,    nVars);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	56	None	replace
109	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  int  nVars  =  dataMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  int  nVars  =  dataMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  dataMatrix.getColumnDimension();  int  nVars  =  dataMatrix.getColumnDimension();	          int    nObs    =    correlationMatrix.getColumnDimension();    int    nVars    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
110	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getColumnDimension();  int  nVars  =  correlationMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  covarianceMatrix.getColumnDimension();  int  nVars  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  covarianceMatrix.getColumnDimension();  int  nVars  =  correlationMatrix.getColumnDimension();	          int    nObs    =    correlationMatrix.getColumnDimension();    int    nVars    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
111	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getColumnDimension();  int  nVars  =  correlationMatrix.getRowDimension();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  correlationMatrix.getColumnDimension();  int  nVars  =  correlationMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  correlationMatrix.getColumnDimension();  int  nVars  =  correlationMatrix.getRowDimension();	          int    nObs    =    correlationMatrix.getColumnDimension();    int    nVars    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
112	[BUG]  [BUGGY]  double[][]  out  =  new  double[nObs][nVars];  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  double[][]  out  =  new  double[nObs][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	double[][]  out  =  new  double[nObs][nVars];	  double[][]    out    =    new    double[nVars][nVars];    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
113	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars][0];  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  double[][]  out  =  new  double[nVars][0];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	double[][]  out  =  new  double[nVars][0];	  double[][]    out    =    new    double[nVars][nVars];    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
114	[BUG]  [BUGGY]  int[][]  out  =  new  int[nVars][nVars];  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int[][]  out  =  new  int[nVars][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int[][]  out  =  new  int[nVars][nVars];	  double[][]    out    =    new    double[nVars][nVars];    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
115	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars][nObs];  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  double[][]  out  =  new  double[nVars][nObs];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	double[][]  out  =  new  double[nVars][nObs];	  double[][]    out    =    new    double[nVars][nVars];    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
116	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getRowDimension();  int  nVars  =  dataMatrix.getRowDimension();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  dataMatrix.getRowDimension();  int  nVars  =  dataMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  dataMatrix.getRowDimension();  int  nVars  =  dataMatrix.getRowDimension();	          int    nObs    =    correlationMatrix.getRowDimension();    int    nVars    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
117	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars  +  2;  i++)  {  for(int  i  =  0;  i  <  nVars  +  2;  i++)  {  [CE]  illegal  start  of  expression  [FE]    MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars  +  2;  i++)  {  for(int  i  =  0;  i  <  nVars  +  2;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nVars    +    2;    i++)    {    for(int  i  =  0;  i  <  nVars  +  2;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
118	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars  +  2;  i++)  {  int  i  =  0;  i  <  nVars  +  2;  i++)  {  [CE]  >  expected  [FE]      MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars  +  2;  i++)  {  int  i  =  0;  i  <  nVars  +  2;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nVars    +    2;    i++)    {    int  i  =  0;  i  <  nVars  +  2;  i++)  {	  	non-compiled	[CE]  >  expected	16	None	add
119	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars  +  2;  i++)  {  For(int  i  =  0;  i  <  nVars  +  2;  i++)  {  [CE]  '.class'  expected  [FE]        MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars  +  2;  i++)  {  For(int  i  =  0;  i  <  nVars  +  2;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nVars    +    2;    i++)    {    For(int  i  =  0;  i  <  nVars  +  2;  i++)  {	  	non-compiled	[CE]  '.class'  expected	16	None	add
120	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars  +  2;  i++)  {  (int  i  =  0;  i  <  nVars  +  2;  i++)  {  [CE]  ')'  expected  [FE]          MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars  +  2;  i++)  {  (int  i  =  0;  i  <  nVars  +  2;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nVars    +    2;    i++)    {    (int  i  =  0;  i  <  nVars  +  2;  i++)  {	  	non-compiled	[CE]  ')'  expected	16	None	add
121	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars  +  2;  i++)  {  for(int  i  =  0;  i  <  nVars  +  1;  i++)  {  [CE]  illegal  start  of  expression  [FE]            MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars  +  2;  i++)  {  for(int  i  =  0;  i  <  nVars  +  1;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nVars    +    2;    i++)    {    for(int  i  =  0;  i  <  nVars  +  1;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
122	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getRowDimension();  int  nVars  =  dataMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  dataMatrix.getRowDimension();  int  nVars  =  dataMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  dataMatrix.getRowDimension();  int  nVars  =  dataMatrix.getColumnDimension();	          int    nObs    =    correlationMatrix.getRowDimension();    int    nVars    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
123	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getRowDimension();  int  nVars  =  correlationMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  covarianceMatrix.getRowDimension();  int  nVars  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  covarianceMatrix.getRowDimension();  int  nVars  =  correlationMatrix.getColumnDimension();	          int    nObs    =    correlationMatrix.getRowDimension();    int    nVars    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
124	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  +  2;  i++)  {  for(int  i  =  0;  i  <  nObs  +  2;  i++)  {  [CE]  illegal  start  of  expression  [FE]    MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs  +  2;  i++)  {  for(int  i  =  0;  i  <  nObs  +  2;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nObs    +    2;    i++)    {    for(int  i  =  0;  i  <  nObs  +  2;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
125	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  +  2;  i++)  {  int  i  =  0;  i  <  nObs  +  2;  i++)  {  [CE]  >  expected  [FE]      MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs  +  2;  i++)  {  int  i  =  0;  i  <  nObs  +  2;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nObs    +    2;    i++)    {    int  i  =  0;  i  <  nObs  +  2;  i++)  {	  	non-compiled	[CE]  >  expected	18	None	add
126	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  +  2;  i++)  {  For(int  i  =  0;  i  <  nObs  +  2;  i++)  {  [CE]  '.class'  expected  [FE]        MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs  +  2;  i++)  {  For(int  i  =  0;  i  <  nObs  +  2;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nObs    +    2;    i++)    {    For(int  i  =  0;  i  <  nObs  +  2;  i++)  {	  	non-compiled	[CE]  '.class'  expected	18	None	add
127	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  +  2;  i++)  {  (int  i  =  0;  i  <  nObs  +  2;  i++)  {  [CE]  ')'  expected  [FE]          MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs  +  2;  i++)  {  (int  i  =  0;  i  <  nObs  +  2;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nObs    +    2;    i++)    {    (int  i  =  0;  i  <  nObs  +  2;  i++)  {	  	non-compiled	[CE]  ')'  expected	18	None	add
128	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  +  2;  i++)  {  int  nObs  =  0;  i  <  nObs  +  2;  i++)  {  [CE]  >  expected  [FE]            MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs  +  2;  i++)  {  int  nObs  =  0;  i  <  nObs  +  2;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nObs    +    2;    i++)    {    int  nObs  =  0;  i  <  nObs  +  2;  i++)  {	  	non-compiled	[CE]  >  expected	18	None	add
129	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getColumnDimension();  out[1][0]  =  0d;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  correlationMatrix.getColumnDimension();  out[1][0]  =  0d;  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  correlationMatrix.getColumnDimension();  out[1][0]  =  0d;	          int    nObs    =    correlationMatrix.getColumnDimension();    out[0][0]    =    0d;    int    nObs    =    correlationMatrix.getRowDimension();    out[0][0]    =    0d;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
130	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  int  i  =  0;  i  <  nObs;  i++)  {  }  [CE]  >  expected  [FE]            MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  int  i  =  0;  i  <  nObs;  i++)  {  }  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nVars;  i++)  {  int  i  =  0;  i  <  nObs;  i++)  {  }	  for(int    i    =    0;    i    <    nObs;    i++)    {    int    i    =    0;    i    <    nObs;    i++)    {    	non-compiled	[CE]  >  expected	48	None	replace
131	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getRowDimension();  double[][]  out  =  new  double[nVars][0];  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  correlationMatrix.getRowDimension();  double[][]  out  =  new  double[nVars][0];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  correlationMatrix.getRowDimension();  double[][]  out  =  new  double[nVars][0];	  int    nObs    =    correlationMatrix.getRowDimension();    double[][]    out    =    new    double[nVars][nVars];    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
132	[BUG]  [BUGGY]  int  numberOfObservations  =  this.covarianceMatrix.getNumberOfObservations();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  numberOfObservations  =  this.covarianceMatrix.getNumberOfObservations();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  numberOfObservations  =  this.covarianceMatrix.getNumberOfObservations();	  int    numberOfObservations    =    correlationMatrix.getNumberOfObservations();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
133	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  nObs;  i++)  {  for(int  i  =  2;  i  <  nobs;  i++)  {  [CE]  illegal  start  of  expression  [FE]    MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  2;  i  <  nObs;  i++)  {  for(int  i  =  2;  i  <  nobs;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    2;    i    <    nObs;    i++)    {    for(int  i  =  2;  i  <  nobs;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
134	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars  +  2;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars);  }  [CE]  illegal  start  of  type  [FE]            MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars  +  2;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars);  }  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nVars  +  2;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars);  }	  for(int    i    =    0;    i    <    nVars    +    1;    i++)    {    ((    RealMatrix)relativeMatrix).getEntry(i,    nVars);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
135	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getRowDimension();  int  nVars  =  correlationMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  dataMatrix.getRowDimension();  int  nVars  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  dataMatrix.getRowDimension();  int  nVars  =  correlationMatrix.getColumnDimension();	          int    nObs    =    correlationMatrix.getRowDimension();    int    nVars    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
136	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  if(nObs  >  0)  {  [CE]  illegal  start  of  expression  [FE]        MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  if(nObs  >  0)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nVars;  i++)  {  if(nObs  >  0)  {	  for(int    i    =    0;    i    <    nObs;    i++)    {    if(nObs    >    0)    {    for(int    i    =    0;    i    <    nObs;    i++)    {    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
137	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  if(nObs  >  0)  {  }  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	add	for(int  i  =  0;  i  <  nVars;  i++)  {  if(nObs  >  0)  {  }	  for(int    i    =    0;    i    <    nObs;    i++)    {    if(nObs    >    0)    {    for(int    i    =    0;    i    <    nObs;    i++)    {    }    	compilable	  [FE]  AssertionFailedError  	76	2	replace
138	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  if(nObs  >  0)  {  }  [FE]  AssertionFailedError  [FE]          MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  if(nObs  >  0)  {  }  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nVars;  i++)  {  if(nObs  >  0)  {  }	  for(int    i    =    0;    i    <    nObs;    i++)    {    if(nObs    >    0)    {    for(int    i    =    0;    i    <    nObs;    i++)    {    }    	compilable	  [FE]  AssertionFailedError  	76	2	replace
139	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  if(nObs  >  0)  {  out[i][i]  =  0d;  }  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	add	for(int  i  =  0;  i  <  nVars;  i++)  {  if(nObs  >  0)  {  out[i][i]  =  0d;  }	  for(int    i    =    0;    i    <    nObs;    i++)    {    if(nObs    >    0)    {    for(int    i    =    0;    i    <    nObs;    i++)    {    }    	compilable	  [FE]  AssertionFailedError  	76	2	replace
140	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  if(nObs  >  0)  {  out[i][i]  =  0d;  }  [FE]  AssertionFailedError  [FE]            MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  if(nObs  >  0)  {  out[i][i]  =  0d;  }  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nVars;  i++)  {  if(nObs  >  0)  {  out[i][i]  =  0d;  }	  for(int    i    =    0;    i    <    nObs;    i++)    {    if(nObs    >    0)    {    for(int    i    =    0;    i    <    nObs;    i++)    {    }    	compilable	  [FE]  AssertionFailedError  	76	2	replace
141	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  +  2;  i++)  {  for(int  i  =  0;  i  <  nobs  +  2;  i++)  {  [CE]  illegal  start  of  expression  [FE]    MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs  +  2;  i++)  {  for(int  i  =  0;  i  <  nobs  +  2;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nObs    +    2;    i++)    {    for(int  i  =  0;  i  <  nobs  +  2;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
142	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars  -  1][nVars];  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  double[][]  out  =  new  double[nVars  -  1][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	double[][]  out  =  new  double[nVars  -  1][nVars];	  double[][]    out    =    new    double[nVars][nVars];    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
143	[BUG]  [BUGGY]  double[][]  out  =  new  double[1][nVars];  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  double[][]  out  =  new  double[1][nVars];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	double[][]  out  =  new  double[1][nVars];	  double[][]    out    =    new    double[nVars][nVars];    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
144	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfObservations;  i++)  {  [CE]  cannot  find  symbol  numberOfObservations  [FE]        MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  numberOfObservations;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  numberOfObservations;  i++)  {	  for(int    i    =    0;    i    <    nObs;    i++)    {    for(int    i    =    0;    i    <    nobs;    i++)    {    	non-compiled	[CE]  cannot  find  symbol  numberOfObservations	65	None	replace
145	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  Int  nObs  =  correlationMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  Int  nObs  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  dataMatrix.getColumnDimension();  Int  nObs  =  correlationMatrix.getColumnDimension();	          int    nObs    =    correlationMatrix.getColumnDimension();    Int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
146	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getColumnDimension();  Int  nObs  =  correlationMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  covarianceMatrix.getColumnDimension();  Int  nObs  =  correlationMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  covarianceMatrix.getColumnDimension();  Int  nObs  =  correlationMatrix.getColumnDimension();	          int    nObs    =    correlationMatrix.getColumnDimension();    Int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
147	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  Int  nObs  =  dataMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  Int  nObs  =  dataMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  dataMatrix.getColumnDimension();  Int  nObs  =  dataMatrix.getColumnDimension();	          int    nObs    =    correlationMatrix.getColumnDimension();    Int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
148	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  out.length;  i++)  {  [CE]  '.class'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  For(int  i  =  0;  i  <  out.length;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	For(int  i  =  0;  i  <  out.length;  i++)  {	  For(int    i    =    0;    i    <    nObs.length;    i++)    {    	non-compiled	[CE]  '.class'  expected	62	None	replace
149	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getRowDimension();  Int  nObs  =  correlationMatrix.getRowDimension();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  dataMatrix.getRowDimension();  Int  nObs  =  correlationMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  dataMatrix.getRowDimension();  Int  nObs  =  correlationMatrix.getRowDimension();	          int    nObs    =    correlationMatrix.getRowDimension();    Int    nObs    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
150	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getRowDimension();  Int  nObs  =  dataMatrix.getRowDimension();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  dataMatrix.getRowDimension();  Int  nObs  =  dataMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  dataMatrix.getRowDimension();  Int  nObs  =  dataMatrix.getRowDimension();	          int    nObs    =    correlationMatrix.getRowDimension();    Int    nObs    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
151	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getRowDimension();  out[0][0]  =  0d;  Integer  nObs  =  correlationMatrix.getColumnDimension();  out[0][0]  =  0d;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  correlationMatrix.getRowDimension();  out[0][0]  =  0d;  Integer  nObs  =  correlationMatrix.getColumnDimension();  out[0][0]  =  0d;  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  correlationMatrix.getRowDimension();  out[0][0]  =  0d;  Integer  nObs  =  correlationMatrix.getColumnDimension();  out[0][0]  =  0d;	          int    nObs    =    correlationMatrix.getColumnDimension();    out[0][0]    =    0d;    Integer    nObs    =    correlationMatrix.getColumnDimension();    out[0][0]    =    0d;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
152	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  out[0][0]  =  0d;  Integer  nObs  =  dataMatrix.getColumnDimension();  out[0][0]  =  0d;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  out[0][0]  =  0d;  Integer  nObs  =  dataMatrix.getColumnDimension();  out[0][0]  =  0d;  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  dataMatrix.getColumnDimension();  out[0][0]  =  0d;  Integer  nObs  =  dataMatrix.getColumnDimension();  out[0][0]  =  0d;	          int    nObs    =    correlationMatrix.getColumnDimension();    out[0][0]    =    0d;    Integer    nObs    =    correlationMatrix.getColumnDimension();    out[0][0]    =    0d;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
153	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getRowDimension();  out[0][0]  =  0d;  Integer  nObs  =  correlationMatrix.getColumnDimension();  out[0][0]  =  0  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  correlationMatrix.getRowDimension();  out[0][0]  =  0d;  Integer  nObs  =  correlationMatrix.getColumnDimension();  out[0][0]  =  0  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  correlationMatrix.getRowDimension();  out[0][0]  =  0d;  Integer  nObs  =  correlationMatrix.getColumnDimension();  out[0][0]  =  0	          int    nObs    =    correlationMatrix.getColumnDimension();    out[0][0]    =    0d;    Integer    nObs    =    correlationMatrix.getColumnDimension();    out[0][0]    =    0d;    	non-compiled	[CE]  ';'  expected	23	None	replace
154	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getRowDimension();  out[0][0]  =  0d  +  1;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  correlationMatrix.getRowDimension();  out[0][0]  =  0d  +  1;  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  correlationMatrix.getRowDimension();  out[0][0]  =  0d  +  1;	  int    nObs    =    correlationMatrix.getRowDimension();    out[0][0]    =    0d;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
155	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars  +  2;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars  +  2);  [CE]  cannot  find  symbol  relativeMatrix  [FE]          MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars  +  2;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars  +  2);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nVars  +  2;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars  +  2);	  for(int    i    =    0;    i    <    nVars    +    1;    i++)    {    ((    RealMatrix)relativeMatrix).getEntry(i,    nVars    +    1);    	non-compiled	[CE]  cannot  find  symbol  relativeMatrix	55	None	replace
156	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars  +  1;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars  +  1);  }  [CE]  illegal  start  of  type  [FE]            MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars  +  1;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars  +  1);  }  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nVars  +  1;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars  +  1);  }	  for(int    i    =    0;    i    <    nVars    +    1;    i++)    {    ((    RealMatrix)relativeMatrix).getEntry(i,    nVars    +    1);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
157	[BUG]  [BUGGY]  int  nVars  =  datasetMatrix.getRowDimension();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nVars  =  datasetMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nVars  =  datasetMatrix.getRowDimension();	  int    nVars    =    dataMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
158	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][0];  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][0];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  dataMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][0];	  int    nObs    =    dataMatrix.getColumnDimension();    double[][]    out    =    new    double[nVars][nVars];    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
159	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  int  nObs  =  dataMatrix.getRowDimension();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  int  nObs  =  dataMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  dataMatrix.getColumnDimension();  int  nObs  =  dataMatrix.getRowDimension();	          int    nObs    =    correlationMatrix.getColumnDimension();    int    nObs    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
160	[BUG]  [BUGGY]  int  nObs  =  this.covarianceMatrix.getColumnDimension();  int  nObs  =  this.covarianceMatrix.getRowDimension();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  this.covarianceMatrix.getColumnDimension();  int  nObs  =  this.covarianceMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  this.covarianceMatrix.getColumnDimension();  int  nObs  =  this.covarianceMatrix.getRowDimension();	          int    nObs    =    correlationMatrix.getColumnDimension();    int    nObs    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
161	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getColumnDimension();  int  nObs  =  correlationMatrix.getRowDimension();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  covarianceMatrix.getColumnDimension();  int  nObs  =  correlationMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  covarianceMatrix.getColumnDimension();  int  nObs  =  correlationMatrix.getRowDimension();	          int    nObs    =    correlationMatrix.getColumnDimension();    int    nObs    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
162	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  (int  i  =  0;  i  <  nVars  +  1;  i++)  {  [CE]  ')'  expected  [FE]        MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  (int  i  =  0;  i  <  nVars  +  1;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nVars;  i++)  {  (int  i  =  0;  i  <  nVars  +  1;  i++)  {	  for(int    i    =    0;    i    <    nVars    +    1;    i++)    {    (int    i    =    0;    i    <    nVars    +    1;    i++)    {    	non-compiled	[CE]  ')'  expected	54	None	replace
163	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getDoubleDimension();  out[1][0]  =  0d;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  correlationMatrix.getDoubleDimension();  out[1][0]  =  0d;  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  correlationMatrix.getDoubleDimension();  out[1][0]  =  0d;	  int    nObs    =    correlationMatrix.getDoubleDimension();    out[0][0]    =    0d;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
164	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  ((  RealMatrix)relativeMatrix).getCorrelationPValues();  [CE]  illegal  start  of  expression  [FE]    MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  ((  RealMatrix)relativeMatrix).getCorrelationPValues();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nObs    +    1;    i++)    {    ((  RealMatrix)relativeMatrix).getCorrelationPValues();	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
165	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  ((  RealMatrix)relativeMatrix).getCorrelationPValues(out);  [CE]  illegal  start  of  expression  [FE]      MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  ((  RealMatrix)relativeMatrix).getCorrelationPValues(out);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nObs    +    1;    i++)    {    ((  RealMatrix)relativeMatrix).getCorrelationPValues(out);	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
166	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  -  2;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nObs  -  2);  [CE]  illegal  start  of  expression  [FE]    MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs  -  2;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nObs  -  2);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nObs    -    2;    i++)    {    ((  RealMatrix)relativeMatrix).getEntry(i,  nObs  -  2);	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
167	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  -  2;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nObs);  [CE]  illegal  start  of  expression  [FE]      MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs  -  2;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nObs);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nObs    -    2;    i++)    {    ((  RealMatrix)relativeMatrix).getEntry(i,  nObs);	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
168	[BUG]  [BUGGY]  [FE]  MatrixIndexException  [FE]    MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  2;  i  <  nObs  -  1;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	add	for(int  i  =  2;  i  <  nObs  -  1;  i++)  {	  for(int    i    =    0;    i    <    nObs    -    1;    i++)    {    	compilable	  [FE]  MatrixIndexException  	43	7	replace
169	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  nObs  -  1;  i++)  {  [FE]  MatrixIndexException  [FE]    MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  2;  i  <  nObs  -  1;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  2;  i  <  nObs  -  1;  i++)  {	  for(int    i    =    0;    i    <    nObs    -    1;    i++)    {    	compilable	  [FE]  MatrixIndexException  	43	7	replace
170	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars  +  2;  i++)  {  Math.abs(out[i][i]  *  tDistribution.cumulativeProbability(t));  [CE]  illegal  start  of  expression  [FE]    MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars  +  2;  i++)  {  Math.abs(out[i][i]  *  tDistribution.cumulativeProbability(t));  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nVars    +    2;    i++)    {    Math.abs(out[i][i]  *  tDistribution.cumulativeProbability(t));	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
171	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars  +  2;  i++)  {  Math.abs(out[i][i]  *  tDistribution.cumulativeProbability(t)));  [CE]  ';'  expected  [FE]      MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars  +  2;  i++)  {  Math.abs(out[i][i]  *  tDistribution.cumulativeProbability(t)));  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nVars    +    2;    i++)    {    Math.abs(out[i][i]  *  tDistribution.cumulativeProbability(t)));	  	non-compiled	[CE]  ';'  expected	16	None	add
172	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  int  i  =  0;  i  <  nVars  +  1;  i++)  {  [CE]  >  expected  [FE]          MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  int  i  =  0;  i  <  nVars  +  1;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  int  i  =  0;  i  <  nVars  +  1;  i++)  {	  for(int    i    =    0;    i    <    nVars    +    1;    i++)    {    int    i    =    0;    i    <    nVars    +    1;    i++)    {    	non-compiled	[CE]  >  expected	30	None	replace
173	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  int  i  =  0;  i  <  nVars  +  2;  i++)  {  [CE]  >  expected  [FE]            MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  int  i  =  0;  i  <  nVars  +  2;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  int  i  =  0;  i  <  nVars  +  2;  i++)  {	  for(int    i    =    0;    i    <    nVars    +    1;    i++)    {    int    i    =    0;    i    <    nVars    +    1;    i++)    {    	non-compiled	[CE]  >  expected	30	None	replace
174	[BUG]  [BUGGY]  out[0][0]  =  0d;  int  nObs  =  correlationMatrix.getColumnDimension();  out[1][0]  =  0d;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  out[0][0]  =  0d;  int  nObs  =  correlationMatrix.getColumnDimension();  out[1][0]  =  0d;  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	out[0][0]  =  0d;  int  nObs  =  correlationMatrix.getColumnDimension();  out[1][0]  =  0d;	          int    nObs    =    correlationMatrix.getColumnDimension();    out[0][0]    =    0d;    int    nObs    =    correlationMatrix.getColumnDimension();    out[1][0]    =    0d;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
175	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getRowDimension();  out[0][0]  =  0d;  int  nObs  =  correlationMatrix.getColumnDimension();  out[1][0]  =  0d;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  correlationMatrix.getRowDimension();  out[0][0]  =  0d;  int  nObs  =  correlationMatrix.getColumnDimension();  out[1][0]  =  0d;  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  correlationMatrix.getRowDimension();  out[0][0]  =  0d;  int  nObs  =  correlationMatrix.getColumnDimension();  out[1][0]  =  0d;	          int    nObs    =    correlationMatrix.getColumnDimension();    out[0][0]    =    0d;    int    nObs    =    correlationMatrix.getColumnDimension();    out[1][0]    =    0d;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
176	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs;  i++)  {  (int  i  =  0;  i  <  nVars;  i++)  {  [CE]  ')'  expected  [FE]              MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs;  i++)  {  (int  i  =  0;  i  <  nVars;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nObs;  i++)  {  (int  i  =  0;  i  <  nVars;  i++)  {	  for(int    i    =    0;    i    <    nObs;    i++)    {    (int    i    =    0;    i    <    nObs;    i++)    {    	non-compiled	[CE]  ')'  expected	49	None	replace
177	[BUG]  [BUGGY]  int  i  =  0;  i  <  nVars;  i++)  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs,  i);  out[i][j]  =  0d;  }  [CE]  >  expected  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  i  =  0;  i  <  nVars;  i++)  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs,  i);  out[i][j]  =  0d;  }  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  i  =  0;  i  <  nVars;  i++)  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs,  i);  out[i][j]  =  0d;  }	  for(int    i    =    0;    i    <    nObs;    i++)    {    TDistribution    tDistribution    =    new    TDistributionImpl(nObs,    i);    out[i][j]    =    0d;    }    	non-compiled	[CE]  >  expected	50	None	replace
178	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  -  1;  i++)  {  ((  RealMatrix)relativeMatrix).getCorrelationPValues();  [CE]  illegal  start  of  expression  [FE]    MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs  -  1;  i++)  {  ((  RealMatrix)relativeMatrix).getCorrelationPValues();  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nObs    -    1;    i++)    {    ((  RealMatrix)relativeMatrix).getCorrelationPValues();	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
179	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  -  1;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nObs  -  1);  [CE]  illegal  start  of  expression  [FE]      MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs  -  1;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nObs  -  1);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nObs    -    1;    i++)    {    ((  RealMatrix)relativeMatrix).getEntry(i,  nObs  -  1);	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
180	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  -  1;  i++)  {  for(int  i  =  0;  i  <  nObs.length  -  1;  i++)  {  [CE]  illegal  start  of  expression  [FE]        MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs  -  1;  i++)  {  for(int  i  =  0;  i  <  nObs.length  -  1;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nObs    -    1;    i++)    {    for(int  i  =  0;  i  <  nObs.length  -  1;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
181	[BUG]  [BUGGY]  int  nObs  =  this.covarianceMatrix.getColumnDimension();  int  nVars  =  this.covarianceMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  this.covarianceMatrix.getColumnDimension();  int  nVars  =  this.covarianceMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  this.covarianceMatrix.getColumnDimension();  int  nVars  =  this.covarianceMatrix.getColumnDimension();	          int    nObs    =    correlationMatrix.getColumnDimension();    int    nVars    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
182	[BUG]  [BUGGY]  int  nObs  =  this.covarianceMatrix.getColumnDimension();  Int  nObs  =  this.covarianceMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  this.covarianceMatrix.getColumnDimension();  Int  nObs  =  this.covarianceMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  this.covarianceMatrix.getColumnDimension();  Int  nObs  =  this.covarianceMatrix.getColumnDimension();	          int    nObs    =    correlationMatrix.getColumnDimension();    Int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
183	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars][1];  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  double[][]  out  =  new  double[nVars][1];  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	double[][]  out  =  new  double[nVars][1];	  double[][]    out    =    new    double[nVars][nVars];    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
184	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars  +  1;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars);  }  [CE]  illegal  start  of  type  [FE]            MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars  +  1;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars);  }  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nVars  +  1;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars);  }	  for(int    i    =    0;    i    <    nVars    +    1;    i++)    {    ((    RealMatrix)relativeMatrix).getEntry(i,    nVars);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
185	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars  +  1;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars,  nObs);  }  [CE]  illegal  start  of  type  [FE]              MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars  +  1;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars,  nObs);  }  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nVars  +  1;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars,  nObs);  }	  for(int    i    =    0;    i    <    nVars    +    1;    i++)    {    ((    RealMatrix)relativeMatrix).getEntry(i,    nVars);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
186	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars  +  1;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars,  nObs);  [CE]  cannot  find  symbol  relativeMatrix  [FE]                MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars  +  1;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars,  nObs);  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nVars  +  1;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars,  nObs);	  for(int    i    =    0;    i    <    nVars    +    1;    i++)    {    ((    RealMatrix)relativeMatrix).getEntry(i,    nVars);    	non-compiled	[CE]  cannot  find  symbol  relativeMatrix	56	None	replace
187	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars  +  1;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars  +  2);  }  [CE]  illegal  start  of  type  [FE]          MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars  +  1;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars  +  2);  }  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nVars  +  1;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars  +  2);  }	  for(int    i    =    0;    i    <    nVars    +    1;    i++)    {    ((    RealMatrix)relativeMatrix).getEntry(i,    nVars    +    1);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
188	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars  +  2;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars  +  2);  }  [CE]  illegal  start  of  type  [FE]            MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars  +  2;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars  +  2);  }  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nVars  +  2;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars  +  2);  }	  for(int    i    =    0;    i    <    nVars    +    1;    i++)    {    ((    RealMatrix)relativeMatrix).getEntry(i,    nVars    +    1);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
189	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars  +  2;  i++)  {  for(int  j  =  0;  i  <  nVars  +  2;  i++)  {  [CE]  illegal  start  of  expression  [FE]    MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars  +  2;  i++)  {  for(int  j  =  0;  i  <  nVars  +  2;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nVars    +    2;    i++)    {    for(int  j  =  0;  i  <  nVars  +  2;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
190	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getNumberOfObservations()  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  covarianceMatrix.getNumberOfObservations()  -  1;  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  covarianceMatrix.getNumberOfObservations()  -  1;	  int    nObs    =    covarianceMatrix.getNumberOfObservations();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
191	[BUG]  [BUGGY]  int  i  =  0;  i  <  nVars;  i++)  {  [CE]  >  expected  [FE]            MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  i  =  0;  i  <  nVars;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  i  =  0;  i  <  nVars;  i++)  {	  for(int    i    =    0;    i    <    nObs;    i++)    {    int    i    =    0;    i    <    nObs;    i++)    {    	non-compiled	[CE]  >  expected	48	None	replace
192	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getEntryCount()  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  correlationMatrix.getEntryCount()  +  1;  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  correlationMatrix.getEntryCount()  +  1;	  int    nObs    =    correlationMatrix.getEntryCount();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
193	[BUG]  [BUGGY]  For(int  i  =  2;  i  <  nObs.length;  i++)  {  [CE]  '.class'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  For(int  i  =  2;  i  <  nObs.length;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	For(int  i  =  2;  i  <  nObs.length;  i++)  {	  For(int    i    =    0;    i    <    nObs.length;    i++)    {    	non-compiled	[CE]  '.class'  expected	62	None	replace
194	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  int  j  =  0;  i  <  nObs  +  1;  i++)  {  [CE]  >  expected  [FE]    MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  int  j  =  0;  i  <  nObs  +  1;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nObs    +    1;    i++)    {    int  j  =  0;  i  <  nObs  +  1;  i++)  {	  	non-compiled	[CE]  >  expected	14	None	add
195	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  -  1;  i++)  {  int  j  =  0;  i  <  nObs  -  1;  i++)  {  [CE]  >  expected  [FE]    MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs  -  1;  i++)  {  int  j  =  0;  i  <  nObs  -  1;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nObs    -    1;    i++)    {    int  j  =  0;  i  <  nObs  -  1;  i++)  {	  	non-compiled	[CE]  >  expected	42	None	add
196	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  -  1;  i++)  {  for(int  j  =  0;  i  <  nObs  -  1;  i++)  {  [CE]  illegal  start  of  expression  [FE]      MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs  -  1;  i++)  {  for(int  j  =  0;  i  <  nObs  -  1;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nObs    -    1;    i++)    {    for(int  j  =  0;  i  <  nObs  -  1;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
197	[BUG]  [BUGGY]  int  nVars  =  correlationMatrix.getNumberOfObservations()  *  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nVars  =  correlationMatrix.getNumberOfObservations()  *  1;  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nVars  =  correlationMatrix.getNumberOfObservations()  *  1;	  int    nVars    =    correlationMatrix.getNumberOfObservations()    +    1;    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
198	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  if(nObs  >  0)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	add	for(int  i  =  0;  i  <  nVars;  i++)  {  if(nObs  >  0)  {  break;  }	  for(int    i    =    0;    i    <    nObs;    i++)    {    if(nObs    >    0)    {    for(int    i    =    0;    i    <    nObs;    i++)    {    }    	compilable	  [FE]  AssertionFailedError  	76	6	replace
199	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  if(nObs  >  0)  {  break;  }  [FE]  AssertionFailedError  [FE]        MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  if(nObs  >  0)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nVars;  i++)  {  if(nObs  >  0)  {  break;  }	  for(int    i    =    0;    i    <    nObs;    i++)    {    if(nObs    >    0)    {    for(int    i    =    0;    i    <    nObs;    i++)    {    }    	compilable	  [FE]  AssertionFailedError  	76	6	replace
200	[BUG]  [BUGGY]  int  numberOfObservations  =  correlationMatrix.getNumberOfObservations()  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  numberOfObservations  =  correlationMatrix.getNumberOfObservations()  +  1;  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  numberOfObservations  =  correlationMatrix.getNumberOfObservations()  +  1;	  int    numberOfObservations    =    correlationMatrix.getNumberOfObservations();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
201	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObservations;  i++)  {  [CE]  cannot  find  symbol  nObservations  [FE]        MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObservations;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nObservations;  i++)  {	  for(int    i    =    0;    i    <    nObs;    i++)    {    for(int    i    =    0;    i    <    nobs;    i++)    {    	non-compiled	[CE]  cannot  find  symbol  nObservations	65	None	replace
202	[BUG]  [BUGGY]  Int  nObs  =  correlationMatrix.getColumnDimension();  out[0][0]  =  0d;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  Int  nObs  =  correlationMatrix.getColumnDimension();  out[0][0]  =  0d;  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	Int  nObs  =  correlationMatrix.getColumnDimension();  out[0][0]  =  0d;	          int    nObs    =    correlationMatrix.getColumnDimension();    out[0][0]    =    0d;    Int    nObs    =    correlationMatrix.getColumnDimension();    out[0][0]    =    0d;    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
203	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  int  nVars  =  correlationMatrix.getRowDimension();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  int  nVars  =  correlationMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  dataMatrix.getColumnDimension();  int  nVars  =  correlationMatrix.getRowDimension();	          int    nObs    =    correlationMatrix.getRowDimension();    int    nVars    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
204	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getRowDimension();  Int  nObs  =  correlationMatrix.getRowDimension();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  covarianceMatrix.getRowDimension();  Int  nObs  =  correlationMatrix.getRowDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  covarianceMatrix.getRowDimension();  Int  nObs  =  correlationMatrix.getRowDimension();	          int    nObs    =    correlationMatrix.getRowDimension();    Int    nObs    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
205	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  -  2;  i++)  {  for(int  j  =  0;  i  <  nObs  -  2;  i++)  {  [CE]  illegal  start  of  expression  [FE]    MatrixIndexException    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs  -  2;  i++)  {  for(int  j  =  0;  i  <  nObs  -  2;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nObs    -    2;    i++)    {    for(int  j  =  0;  i  <  nObs  -  2;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
206	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getDoubleDimension();  out[0][1]  =  0d;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  correlationMatrix.getDoubleDimension();  out[0][1]  =  0d;  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  correlationMatrix.getDoubleDimension();  out[0][1]  =  0d;	  int    nObs    =    correlationMatrix.getDoubleDimension();    out[0][0]    =    0d;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
207	[BUG]  [BUGGY]  int  nObs  =  this.covarianceMatrix.getRowDimension();  int  nVars  =  this.covarianceMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  this.covarianceMatrix.getRowDimension();  int  nVars  =  this.covarianceMatrix.getColumnDimension();  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  this.covarianceMatrix.getRowDimension();  int  nVars  =  this.covarianceMatrix.getColumnDimension();	          int    nObs    =    correlationMatrix.getRowDimension();    int    nVars    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
208	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getColumnDimension();  Integer  nObs  =  correlationMatrix.getColumnDimension();  out[0][0]  =  0d;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  correlationMatrix.getColumnDimension();  Integer  nObs  =  correlationMatrix.getColumnDimension();  out[0][0]  =  0d;  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  correlationMatrix.getColumnDimension();  Integer  nObs  =  correlationMatrix.getColumnDimension();  out[0][0]  =  0d;	          int    nObs    =    correlationMatrix.getColumnDimension();    out[0][0]    =    0d;    Integer    nObs    =    correlationMatrix.getColumnDimension();    out[0][0]    =    0d;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
209	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs;  i++)  {  TDistribution  tDistribution  =  new  TDistributionImpl(nVars,  i);  out[i][j]  =  0d;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nObs;  i++)  {  TDistribution  tDistribution  =  new  TDistributionImpl(nVars,  i);  out[i][j]  =  0d;  }  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nObs;  i++)  {  TDistribution  tDistribution  =  new  TDistributionImpl(nVars,  i);  out[i][j]  =  0d;  }	  for(int    i    =    0;    i    <    nObs;    i++)    {    TDistribution    tDistribution    =    new    TDistributionImpl(nObs,    i);    out[i][j]    =    0d;    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
210	[BUG]  [BUGGY]  if(nObs  >  0)  {  for(int  i  =  0;  i  <  nObs;  i++)  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs,  i);  out[i][j]  =  0  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  if(nObs  >  0)  {  for(int  i  =  0;  i  <  nObs;  i++)  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs,  i);  out[i][j]  =  0  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	if(nObs  >  0)  {  for(int  i  =  0;  i  <  nObs;  i++)  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs,  i);  out[i][j]  =  0	  for(int    i    =    0;    i    <    nObs;    i++)    {    TDistribution    tDistribution    =    new    TDistributionImpl(nObs,    i);    out[i][j]    =    0d;    }    	non-compiled	[CE]  ';'  expected	50	None	replace
211	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  int  i  =  0;  i  <  nVars  +  1;  i++)  {  [CE]  >  expected  [FE]          MatrixIndexException      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  for(int  i  =  0;  i  <  nVars;  i++)  {  int  i  =  0;  i  <  nVars  +  1;  i++)  {  [BUGGY]      for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nVars;  i++)  {  int  i  =  0;  i  <  nVars  +  1;  i++)  {	  for(int    i    =    0;    i    <    nVars    +    1;    i++)    {    int    i    =    0;    i    <    nVars    +    1;    i++)    {    	non-compiled	[CE]  >  expected	30	None	replace
212	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getEntryDimension();  out[0][1]  =  0d;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];      [BUGGY]  int  nObs  =  correlationMatrix.getEntryDimension();  out[0][1]  =  0d;  [BUGGY]      for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  correlationMatrix.getEntryDimension();  out[0][1]  =  0d;	  int    nObs    =    correlationMatrix.getEntryDimension();    out[0][0]    =    0d;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
