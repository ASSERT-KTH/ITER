bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]      int  nObs  =  correlationMatrix.getRowDimension();  int  nObs  =  correlationMatrix.getRowDimension();  [CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]      int  nObs  =  correlationMatrix.getRowDimension();  int  nObs  =  correlationMatrix.getRowDimension();  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	        int    nObs    =    correlationMatrix.getRowDimension();    int  nObs  =  correlationMatrix.getRowDimension();	  	non-compiled	[CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()	7	None	add
2	[BUG]  [BUGGY]      int  nObs  =  correlationMatrix.getRowDimension();  int  nObs  =  correlationMatrix.getColumnDimension();  [CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]      int  nObs  =  correlationMatrix.getRowDimension();  int  nObs  =  correlationMatrix.getColumnDimension();  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	        int    nObs    =    correlationMatrix.getRowDimension();    int  nObs  =  correlationMatrix.getColumnDimension();	  	non-compiled	[CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()	7	None	add
3	[BUG]  [BUGGY]      int  nObs  =  correlationMatrix.getRowDimension();  Int  nObs  =  correlationMatrix.getRowDimension();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]      int  nObs  =  correlationMatrix.getRowDimension();  Int  nObs  =  correlationMatrix.getRowDimension();  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	        int    nObs    =    correlationMatrix.getRowDimension();    Int  nObs  =  correlationMatrix.getRowDimension();	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
4	[BUG]  [BUGGY]      int  nObs  =  correlationMatrix.getRowDimension();  int  nVars  =  correlationMatrix.getRowDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]          AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]      int  nObs  =  correlationMatrix.getRowDimension();  int  nVars  =  correlationMatrix.getRowDimension();  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	        int    nObs    =    correlationMatrix.getRowDimension();    int  nVars  =  correlationMatrix.getRowDimension();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	7	None	add
5	[BUG]  [BUGGY]  double[][]  out  =  new  double[nVars][nVars];  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  double[][]  out  =  new  double[nVars][nVars];  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	double[][]  out  =  new  double[nVars][nVars];	      int    nObs    =    correlationMatrix.getColumnDimension();    double[][]    out    =    new    double[nVars][nVars];    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
6	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  int  nObs  =  covarianceMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  covarianceMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];	      int    nObs    =    correlationMatrix.getColumnDimension();    double[][]    out    =    new    double[nVars][nVars];    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
7	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  dataMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];	      int    nObs    =    correlationMatrix.getColumnDimension();    double[][]    out    =    new    double[nVars][nVars];    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
8	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getRowDimension();  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  int  nObs  =  covarianceMatrix.getRowDimension();  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  covarianceMatrix.getRowDimension();	      int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
9	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  int  nObs  =  covarianceMatrix.getColumnDimension();  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  covarianceMatrix.getColumnDimension();	      int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
10	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  dataMatrix.getColumnDimension();	      int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
11	[BUG]  [BUGGY]  int  nVars  =  covarianceMatrix.getNumberOfObservations();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  int  nVars  =  covarianceMatrix.getNumberOfObservations();  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nVars  =  covarianceMatrix.getNumberOfObservations();	      int    nVars    =    correlationMatrix.getNumberOfObservations();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
12	[BUG]  [BUGGY]  int  nVars  =  dataMatrix.getNumberOfObservations();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  int  nVars  =  dataMatrix.getNumberOfObservations();  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nVars  =  dataMatrix.getNumberOfObservations();	      int    nVars    =    correlationMatrix.getNumberOfObservations();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
13	[BUG]  [BUGGY]  int  nVars  =  this.covarianceMatrix.getNumberOfObservations();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  int  nVars  =  this.covarianceMatrix.getNumberOfObservations();  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nVars  =  this.covarianceMatrix.getNumberOfObservations();	      int    nVars    =    correlationMatrix.getNumberOfObservations();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
14	[BUG]  [BUGGY]  [FE]  MatrixIndexException  [FE]    MatrixIndexException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	add	for(int  i  =  0;  i  <  nObs  +  1;  i++)  {	  for(int    i    =    0;    i    <    nVars    +    1;    i++)    {    	compilable	  [FE]  MatrixIndexException  	16	7	replace
15	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  [FE]  MatrixIndexException  [FE]    MatrixIndexException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  for(int  i  =  0;  i  <  nObs  +  1;  i++)  {  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nObs  +  1;  i++)  {	  for(int    i    =    0;    i    <    nVars    +    1;    i++)    {    	compilable	  [FE]  MatrixIndexException  	16	7	replace
16	[BUG]  [BUGGY]  [FE]  MatrixIndexException  [FE]      MatrixIndexException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  for(int  i  =  0;  i  <  nVars  +  2;  i++)  {  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	add	for(int  i  =  0;  i  <  nVars  +  2;  i++)  {	  for(int    i    =    0;    i    <    nVars    +    1;    i++)    {    	compilable	  [FE]  MatrixIndexException  	16	7	replace
17	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars  +  2;  i++)  {  [FE]  MatrixIndexException  [FE]      MatrixIndexException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  for(int  i  =  0;  i  <  nVars  +  2;  i++)  {  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nVars  +  2;  i++)  {	  for(int    i    =    0;    i    <    nVars    +    1;    i++)    {    	compilable	  [FE]  MatrixIndexException  	16	7	replace
18	[BUG]  [BUGGY]  [FE]  MatrixIndexException  [FE]        MatrixIndexException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  for(int  i  =  0;  i  <  nObs  +  2;  i++)  {  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	add	for(int  i  =  0;  i  <  nObs  +  2;  i++)  {	  for(int    i    =    0;    i    <    nVars    +    1;    i++)    {    	compilable	  [FE]  MatrixIndexException  	16	7	replace
19	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  +  2;  i++)  {  [FE]  MatrixIndexException  [FE]        MatrixIndexException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  for(int  i  =  0;  i  <  nObs  +  2;  i++)  {  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nObs  +  2;  i++)  {	  for(int    i    =    0;    i    <    nVars    +    1;    i++)    {    	compilable	  [FE]  MatrixIndexException  	16	7	replace
20	[BUG]  [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  out[0][0]  =  0d;  int  nObs  =  correlationMatrix.getColumnDimension();  out[0][0]  =  0d;  [CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  out[0][0]  =  0d;  int  nObs  =  correlationMatrix.getColumnDimension();  out[0][0]  =  0d;  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	        int    nObs    =    correlationMatrix.getColumnDimension();    out[0][0]    =    0d;    int  nObs  =  correlationMatrix.getColumnDimension();  out[0][0]  =  0d;	  	non-compiled	[CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()	13	None	add
21	[BUG]  [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  out[0][0]  =  0d;  int  nObs  =  correlationMatrix.getRowDimension();  out[0][0]  =  0d;  [CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  out[0][0]  =  0d;  int  nObs  =  correlationMatrix.getRowDimension();  out[0][0]  =  0d;  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	        int    nObs    =    correlationMatrix.getColumnDimension();    out[0][0]    =    0d;    int  nObs  =  correlationMatrix.getRowDimension();  out[0][0]  =  0d;	  	non-compiled	[CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()	13	None	add
22	[BUG]  [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  out[0][0]  =  0d;  int  nObs  =  correlationMatrix.getColumnDimension();  out[1][0]  =  0d;  [CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  out[0][0]  =  0d;  int  nObs  =  correlationMatrix.getColumnDimension();  out[1][0]  =  0d;  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	        int    nObs    =    correlationMatrix.getColumnDimension();    out[0][0]    =    0d;    int  nObs  =  correlationMatrix.getColumnDimension();  out[1][0]  =  0d;	  	non-compiled	[CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()	13	None	add
23	[BUG]  [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  out[0][0]  =  0d;  Integer  nObs  =  correlationMatrix.getColumnDimension();  out[0][0]  =  0d;  [CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()  [FE]          AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  out[0][0]  =  0d;  Integer  nObs  =  correlationMatrix.getColumnDimension();  out[0][0]  =  0d;  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	        int    nObs    =    correlationMatrix.getColumnDimension();    out[0][0]    =    0d;    Integer  nObs  =  correlationMatrix.getColumnDimension();  out[0][0]  =  0d;	  	non-compiled	[CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()	13	None	add
24	[BUG]  [BUGGY]  int  nObs  =  this.covarianceMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  int  nObs  =  this.covarianceMatrix.getColumnDimension();  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  this.covarianceMatrix.getColumnDimension();	      int    nObs    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
25	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getRowDimension();  out[0][0]  =  0d;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  int  nObs  =  correlationMatrix.getRowDimension();  out[0][0]  =  0d;  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  correlationMatrix.getRowDimension();  out[0][0]  =  0d;	      int    nObs    =    correlationMatrix.getColumnDimension();    out[0][0]    =    0d;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
26	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  out[0][0]  =  0d;  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  out[0][0]  =  0d;  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  dataMatrix.getColumnDimension();  out[0][0]  =  0d;	      int    nObs    =    correlationMatrix.getColumnDimension();    out[0][0]    =    0d;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
27	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getColumnDimension();  out[0][0]  =  0;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  int  nObs  =  correlationMatrix.getColumnDimension();  out[0][0]  =  0;  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  correlationMatrix.getColumnDimension();  out[0][0]  =  0;	      int    nObs    =    correlationMatrix.getColumnDimension();    out[0][0]    =    0d;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
28	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getColumnDimension();  out[0][0]  =  0d;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  int  nObs  =  covarianceMatrix.getColumnDimension();  out[0][0]  =  0d;  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  covarianceMatrix.getColumnDimension();  out[0][0]  =  0d;	      int    nObs    =    correlationMatrix.getColumnDimension();    out[0][0]    =    0d;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
29	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars  +  1;  i++)  {  for(int  i  =  0;  i  <  nVars  +  1;  i++)  {  [CE]  illegal  start  of  expression  [FE]    MatrixIndexException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  for(int  i  =  0;  i  <  nVars  +  1;  i++)  {  for(int  i  =  0;  i  <  nVars  +  1;  i++)  {  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nVars    +    1;    i++)    {    for(int  i  =  0;  i  <  nVars  +  1;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
30	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars  +  1;  i++)  {  int  i  =  0;  i  <  nVars  +  1;  i++)  {  [CE]  >  expected  [FE]      MatrixIndexException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  for(int  i  =  0;  i  <  nVars  +  1;  i++)  {  int  i  =  0;  i  <  nVars  +  1;  i++)  {  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nVars    +    1;    i++)    {    int  i  =  0;  i  <  nVars  +  1;  i++)  {	  	non-compiled	[CE]  >  expected	15	None	add
31	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars  +  1;  i++)  {  For(int  i  =  0;  i  <  nVars  +  1;  i++)  {  [CE]  '.class'  expected  [FE]        MatrixIndexException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  for(int  i  =  0;  i  <  nVars  +  1;  i++)  {  For(int  i  =  0;  i  <  nVars  +  1;  i++)  {  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nVars    +    1;    i++)    {    For(int  i  =  0;  i  <  nVars  +  1;  i++)  {	  	non-compiled	[CE]  '.class'  expected	15	None	add
32	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars  +  1;  i++)  {  for(int  i  =  0;  i  <  nVars  +  1)  {  [CE]  ';'  expected  [FE]          MatrixIndexException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  for(int  i  =  0;  i  <  nVars  +  1;  i++)  {  for(int  i  =  0;  i  <  nVars  +  1)  {  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nVars    +    1;    i++)    {    for(int  i  =  0;  i  <  nVars  +  1)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
33	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs,  nVars.length;  i++)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  for(int  i  =  0;  i  <  nObs,  nVars.length;  i++)  {  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nObs,  nVars.length;  i++)  {	  for(int    i    =    0;    i    <    nObs.length;    i++)    {    	non-compiled	[CE]  ';'  expected	3	None	replace
34	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars.length;  i++)  {  [CE]  int  cannot  be  dereferenced  [FE]            AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  for(int  i  =  0;  i  <  nVars.length;  i++)  {  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nVars.length;  i++)  {	  for(int    i    =    0;    i    <    nObs.length;    i++)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	3	None	replace
35	[BUG]  [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  int  nObs  =  correlationMatrix.getColumnDimension();  [CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  int  nObs  =  correlationMatrix.getColumnDimension();  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	        int    nObs    =    correlationMatrix.getColumnDimension();    int  nObs  =  correlationMatrix.getColumnDimension();	  	non-compiled	[CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()	5	None	add
36	[BUG]  [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  int  nObs  =  correlationMatrix.getRowDimension();  [CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  int  nObs  =  correlationMatrix.getRowDimension();  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	        int    nObs    =    correlationMatrix.getColumnDimension();    int  nObs  =  correlationMatrix.getRowDimension();	  	non-compiled	[CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()	5	None	add
37	[BUG]  [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  int  nObs  =  covarianceMatrix.getColumnDimension();  [CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  int  nObs  =  covarianceMatrix.getColumnDimension();  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	        int    nObs    =    correlationMatrix.getColumnDimension();    int  nObs  =  covarianceMatrix.getColumnDimension();	  	non-compiled	[CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()	5	None	add
38	[BUG]  [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  Int  nObs  =  correlationMatrix.getColumnDimension();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  Int  nObs  =  correlationMatrix.getColumnDimension();  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	        int    nObs    =    correlationMatrix.getColumnDimension();    Int  nObs  =  correlationMatrix.getColumnDimension();	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
39	[BUG]  [BUGGY]  int  nVars  =  covarianceMatrix.getRowDimension();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  int  nVars  =  covarianceMatrix.getRowDimension();  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nVars  =  covarianceMatrix.getRowDimension();	      int    nVars    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
40	[BUG]  [BUGGY]  int  nVars  =  covarianceMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  int  nVars  =  covarianceMatrix.getColumnDimension();  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nVars  =  covarianceMatrix.getColumnDimension();	      int    nVars    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
41	[BUG]  [BUGGY]  int  nVars  =  dataMatrix.getRowDimension();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  int  nVars  =  dataMatrix.getRowDimension();  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nVars  =  dataMatrix.getRowDimension();	      int    nVars    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
42	[BUG]  [BUGGY]  [FE]  MatrixIndexException  [FE]    MatrixIndexException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  for(int  i  =  0;  i  <  nObs  -  1;  i++)  {  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	add	for(int  i  =  0;  i  <  nObs  -  1;  i++)  {	  for(int    i    =    0;    i    <    nObs;    i++)    {    	compilable	  [FE]  MatrixIndexException  	2	7	replace
43	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  -  1;  i++)  {  [FE]  MatrixIndexException  [FE]    MatrixIndexException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  for(int  i  =  0;  i  <  nObs  -  1;  i++)  {  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nObs  -  1;  i++)  {	  for(int    i    =    0;    i    <    nObs;    i++)    {    	compilable	  [FE]  MatrixIndexException  	2	7	replace
44	[BUG]  [BUGGY]  [FE]  MatrixIndexException  [FE]      MatrixIndexException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  for(int  i  =  0;  i  <  nObs  -  2;  i++)  {  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	add	for(int  i  =  0;  i  <  nObs  -  2;  i++)  {	  for(int    i    =    0;    i    <    nObs;    i++)    {    	compilable	  [FE]  MatrixIndexException  	2	7	replace
45	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs  -  2;  i++)  {  [FE]  MatrixIndexException  [FE]      MatrixIndexException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  for(int  i  =  0;  i  <  nObs  -  2;  i++)  {  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nObs  -  2;  i++)  {	  for(int    i    =    0;    i    <    nObs;    i++)    {    	compilable	  [FE]  MatrixIndexException  	2	7	replace
46	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs;  i++)  {  for(int  i  =  0;  i  <  nObs;  i++)  {  [CE]  illegal  start  of  expression  [FE]    MatrixIndexException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  for(int  i  =  0;  i  <  nObs;  i++)  {  for(int  i  =  0;  i  <  nObs;  i++)  {  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nObs;    i++)    {    for(int  i  =  0;  i  <  nObs;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
47	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs;  i++)  {  For(int  i  =  0;  i  <  nObs;  i++)  {  [CE]  '.class'  expected  [FE]      MatrixIndexException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  for(int  i  =  0;  i  <  nObs;  i++)  {  For(int  i  =  0;  i  <  nObs;  i++)  {  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nObs;    i++)    {    For(int  i  =  0;  i  <  nObs;  i++)  {	  	non-compiled	[CE]  '.class'  expected	1	None	add
48	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs;  i++)  {  int  i  =  0;  i  <  nObs;  i++)  {  [CE]  >  expected  [FE]        MatrixIndexException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  for(int  i  =  0;  i  <  nObs;  i++)  {  int  i  =  0;  i  <  nObs;  i++)  {  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nObs;    i++)    {    int  i  =  0;  i  <  nObs;  i++)  {	  	non-compiled	[CE]  >  expected	1	None	add
49	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs;  i++)  {  (int  i  =  0;  i  <  nObs;  i++)  {  [CE]  ')'  expected  [FE]          MatrixIndexException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  for(int  i  =  0;  i  <  nObs;  i++)  {  (int  i  =  0;  i  <  nObs;  i++)  {  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nObs;    i++)    {    (int  i  =  0;  i  <  nObs;  i++)  {	  	non-compiled	[CE]  ')'  expected	1	None	add
50	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs;  i++)  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs,  i);  out[i][j]  =  0d;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  for(int  i  =  0;  i  <  nObs;  i++)  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs,  i);  out[i][j]  =  0d;  }  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  0;  i  <  nObs;  i++)  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs,  i);  out[i][j]  =  0d;  }	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
51	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getNumberOfObservations();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  int  nObs  =  covarianceMatrix.getNumberOfObservations();  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  covarianceMatrix.getNumberOfObservations();	      int    nObs    =    correlationMatrix.getNumberOfObservations();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
52	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getNumberOfObservations();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  int  nObs  =  dataMatrix.getNumberOfObservations();  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  dataMatrix.getNumberOfObservations();	      int    nObs    =    correlationMatrix.getNumberOfObservations();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
53	[BUG]  [BUGGY]  int  nObs  =  this.covarianceMatrix.getNumberOfObservations();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  int  nObs  =  this.covarianceMatrix.getNumberOfObservations();  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  this.covarianceMatrix.getNumberOfObservations();	      int    nObs    =    correlationMatrix.getNumberOfObservations();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
54	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars  +  1;  i++)  {  (int  i  =  0;  i  <  nVars  +  1;  i++)  {  [CE]  ')'  expected  [FE]    MatrixIndexException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  for(int  i  =  0;  i  <  nVars  +  1;  i++)  {  (int  i  =  0;  i  <  nVars  +  1;  i++)  {  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nVars    +    1;    i++)    {    (int  i  =  0;  i  <  nVars  +  1;  i++)  {	  	non-compiled	[CE]  ')'  expected	15	None	add
55	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars  +  1;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars  +  1);  [CE]  illegal  start  of  expression  [FE]      MatrixIndexException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  for(int  i  =  0;  i  <  nVars  +  1;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars  +  1);  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nVars    +    1;    i++)    {    ((  RealMatrix)relativeMatrix).getEntry(i,  nVars  +  1);	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
56	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars  +  1;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars);  [CE]  illegal  start  of  expression  [FE]        MatrixIndexException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  for(int  i  =  0;  i  <  nVars  +  1;  i++)  {  ((  RealMatrix)relativeMatrix).getEntry(i,  nVars);  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nVars    +    1;    i++)    {    ((  RealMatrix)relativeMatrix).getEntry(i,  nVars);	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
57	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getRowDimension();  double[][]  out  =  new  double[nVars][nVars];  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  int  nObs  =  correlationMatrix.getRowDimension();  double[][]  out  =  new  double[nVars][nVars];  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  correlationMatrix.getRowDimension();  double[][]  out  =  new  double[nVars][nVars];	      int    nObs    =    correlationMatrix.getColumnDimension();    double[][]    out    =    new    double[nVars][nVars];    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
58	[BUG]  [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  int  nVars  =  correlationMatrix.getColumnDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  int  nVars  =  correlationMatrix.getColumnDimension();  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	        int    nObs    =    correlationMatrix.getColumnDimension();    int  nVars  =  correlationMatrix.getColumnDimension();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	5	None	add
59	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getDoubleDimension();  out[0][0]  =  0d;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  int  nObs  =  correlationMatrix.getDoubleDimension();  out[0][0]  =  0d;  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  correlationMatrix.getDoubleDimension();  out[0][0]  =  0d;	      int    nObs    =    correlationMatrix.getColumnDimension();    out[0][0]    =    0d;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
60	[BUG]  [BUGGY]  int  nVars  =  this.covarianceMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  int  nVars  =  this.covarianceMatrix.getColumnDimension();  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nVars  =  this.covarianceMatrix.getColumnDimension();	      int    nVars    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
61	[BUG]  [BUGGY]  int  nVars  =  dataMatrix.getColumnDimension();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  int  nVars  =  dataMatrix.getColumnDimension();  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nVars  =  dataMatrix.getColumnDimension();	      int    nVars    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
62	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  nObs.length;  i++)  {  [CE]  '.class'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  For(int  i  =  0;  i  <  nObs.length;  i++)  {  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	For(int  i  =  0;  i  <  nObs.length;  i++)  {	  for(int    i    =    0;    i    <    nObs.length;    i++)    {    	non-compiled	[CE]  '.class'  expected	3	None	replace
63	[BUG]  [BUGGY]  int  numberOfObservations  =  correlationMatrix.getNumberOfObservations();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  int  numberOfObservations  =  correlationMatrix.getNumberOfObservations();  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  numberOfObservations  =  correlationMatrix.getNumberOfObservations();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
64	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getEntryCount();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  int  nObs  =  correlationMatrix.getEntryCount();  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  correlationMatrix.getEntryCount();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
65	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs;  i++)  {  for(int  i  =  0;  i  <  nobs;  i++)  {  [CE]  illegal  start  of  expression  [FE]    MatrixIndexException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  for(int  i  =  0;  i  <  nObs;  i++)  {  for(int  i  =  0;  i  <  nobs;  i++)  {  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nObs;    i++)    {    for(int  i  =  0;  i  <  nobs;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
66	[BUG]  [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  out[0][0]  =  0d;  int  nVars  =  correlationMatrix.getColumnDimension();  out[0][0]  =  0d;  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  out[0][0]  =  0d;  int  nVars  =  correlationMatrix.getColumnDimension();  out[0][0]  =  0d;  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	        int    nObs    =    correlationMatrix.getColumnDimension();    out[0][0]    =    0d;    int  nVars  =  correlationMatrix.getColumnDimension();  out[0][0]  =  0d;	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	13	None	add
67	[BUG]  [BUGGY]  [FE]  MatrixIndexException  [FE]    MatrixIndexException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  for(int  i  =  2;  i  <  nObs;  i++)  {  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	add	for(int  i  =  2;  i  <  nObs;  i++)  {	  for(int    i    =    0;    i    <    nObs;    i++)    {    	compilable	  [FE]  MatrixIndexException  	2	7	replace
68	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  nObs;  i++)  {  [FE]  MatrixIndexException  [FE]    MatrixIndexException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  for(int  i  =  2;  i  <  nObs;  i++)  {  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int  i  =  2;  i  <  nObs;  i++)  {	  for(int    i    =    0;    i    <    nObs;    i++)    {    	compilable	  [FE]  MatrixIndexException  	2	7	replace
69	[BUG]  [BUGGY]  int  nObs  =  this.covarianceMatrix.getRowDimension();  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  int  nObs  =  this.covarianceMatrix.getRowDimension();  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  this.covarianceMatrix.getRowDimension();	      int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
70	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getObjDimension();  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  int  nObs  =  correlationMatrix.getObjDimension();  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  correlationMatrix.getObjDimension();	      int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
71	[BUG]  [BUGGY]      int  nObs  =  correlationMatrix.getRowDimension();  int  nVars  =  correlationMatrix.getColumnDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]      int  nObs  =  correlationMatrix.getRowDimension();  int  nVars  =  correlationMatrix.getColumnDimension();  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	        int    nObs    =    correlationMatrix.getRowDimension();    int  nVars  =  correlationMatrix.getColumnDimension();	  	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	7	None	add
72	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nVars  +  1;  i++)  {  for(int  j  =  0;  i  <  nVars  +  1;  i++)  {  [CE]  illegal  start  of  expression  [FE]    MatrixIndexException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  for(int  i  =  0;  i  <  nVars  +  1;  i++)  {  for(int  j  =  0;  i  <  nVars  +  1;  i++)  {  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nVars    +    1;    i++)    {    for(int  j  =  0;  i  <  nVars  +  1;  i++)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
73	[BUG]  [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  out[0][0]  =  0d;  Int  nObs  =  correlationMatrix.getColumnDimension();  out[0][0]  =  0d;  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]      int  nObs  =  correlationMatrix.getColumnDimension();  out[0][0]  =  0d;  Int  nObs  =  correlationMatrix.getColumnDimension();  out[0][0]  =  0d;  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	        int    nObs    =    correlationMatrix.getColumnDimension();    out[0][0]    =    0d;    Int  nObs  =  correlationMatrix.getColumnDimension();  out[0][0]  =  0d;	  	non-compiled	[CE]  cannot  find  symbol	13	None	add
74	[BUG]  [BUGGY]  int  nVars  =  this.covarianceMatrix.getRowDimension();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  int  nVars  =  this.covarianceMatrix.getRowDimension();  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nVars  =  this.covarianceMatrix.getRowDimension();	      int    nVars    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
75	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getDoubleDimension();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  int  nObs  =  correlationMatrix.getDoubleDimension();  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  correlationMatrix.getDoubleDimension();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
76	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nObs;  i++)  {  if(nObs  >  0)  {  for(int  i  =  0;  i  <  nObs;  i++)  {  }  [CE]  illegal  start  of  expression  [FE]    MatrixIndexException    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  for(int  i  =  0;  i  <  nObs;  i++)  {  if(nObs  >  0)  {  for(int  i  =  0;  i  <  nObs;  i++)  {  }  [BUGGY]    for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	for(int    i    =    0;    i    <    nObs;    i++)    {    if(nObs  >  0)  {  for(int  i  =  0;  i  <  nObs;  i++)  {  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
77	[BUG]  [BUGGY]  int  nVars  =  correlationMatrix.getNumberOfObservations()  +  1;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  int  nVars  =  correlationMatrix.getNumberOfObservations()  +  1;  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nVars  =  correlationMatrix.getNumberOfObservations()  +  1;	      int    nVars    =    correlationMatrix.getNumberOfObservations();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
78	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getEntryDimension();  out[0][0]  =  0d;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];    [BUGGY]  int  nObs  =  correlationMatrix.getEntryDimension();  out[0][0]  =  0d;  [BUGGY]    for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);  double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	164	164	2	replace	int  nObs  =  correlationMatrix.getEntryDimension();  out[0][0]  =  0d;	      int    nObs    =    correlationMatrix.getColumnDimension();    out[0][0]    =    0d;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
