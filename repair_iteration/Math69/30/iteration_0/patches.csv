bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  regression.compareTo(xArray[i],  yArray[i]);  [CE]  cannot  find  symbol  i  [FE]    AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]  return  regression.compareTo(xArray[i],  yArray[i]);  [BUGGY]  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	return  regression.compareTo(xArray[i],  yArray[i]);	return  regression.getR();  	non-compiled	[CE]  cannot  find  symbol  i	60	None	replace
2	[BUG]  [BUGGY]  return  regression.compareTo(yArray[i],  yArray[i]);  [CE]  cannot  find  symbol  i  [FE]      AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]  return  regression.compareTo(yArray[i],  yArray[i]);  [BUGGY]  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	return  regression.compareTo(yArray[i],  yArray[i]);	return  regression.getR();  	non-compiled	[CE]  cannot  find  symbol  i	60	None	replace
3	[BUG]  [BUGGY]  return  regression.compareTo(yArray[i]);  [CE]  cannot  find  symbol  i  [FE]        AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]  return  regression.compareTo(yArray[i]);  [BUGGY]  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	return  regression.compareTo(yArray[i]);	return  regression.getR();  	non-compiled	[CE]  cannot  find  symbol  i	60	None	replace
4	[BUG]  [BUGGY]  return  regression.compareTo(yArray[i],  xArray[i]);  [CE]  cannot  find  symbol  i  [FE]          AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]  return  regression.compareTo(yArray[i],  xArray[i]);  [BUGGY]  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	return  regression.compareTo(yArray[i],  xArray[i]);	return  regression.getR();  	non-compiled	[CE]  cannot  find  symbol  i	60	None	replace
5	[BUG]  [BUGGY]    [CE]  missing  return  statement  [FE]            AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]    [BUGGY]  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	  	return  regression.getR();  	non-compiled	[CE]  missing  return  statement	60	None	replace
6	[BUG]  [BUGGY]    for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  [CE]  unclosed  string  literal  [FE]    AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  [BUGGY]  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	    for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid		non-compiled	[CE]  unclosed  string  literal	61	None	add
7	[BUG]  [BUGGY]    for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  [CE]  unclosed  string  literal  [FE]      AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  [BUGGY]  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	    for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid		non-compiled	[CE]  unclosed  string  literal	61	None	add
8	[BUG]  [BUGGY]    for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]        AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "  [BUGGY]  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	    for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "		non-compiled	[CE]  unclosed  string  literal	61	None	add
9	[BUG]  [BUGGY]    for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions  [CE]  unclosed  string  literal  [FE]          AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions  [BUGGY]  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	    for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions		non-compiled	[CE]  unclosed  string  literal	61	None	add
10	[BUG]  [BUGGY]    for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions  [CE]  unclosed  string  literal  [FE]            AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions  [BUGGY]  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	    for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions		non-compiled	[CE]  unclosed  string  literal	61	None	add
11	[BUG]  [BUGGY]    for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatrix.  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatrix.  [BUGGY]  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	    for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatrix.		non-compiled	[CE]  <identifier>  expected	61	None	add
12	[BUG]  [BUGGY]    for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covarianceMatrix.  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covarianceMatrix.  [BUGGY]  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	    for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covarianceMatrix.		non-compiled	[CE]  <identifier>  expected	61	None	add
13	[BUG]  [BUGGY]    for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covarianceMatrix.  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covarianceMatrix.  [BUGGY]  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	    for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covarianceMatrix.		non-compiled	[CE]  <identifier>  expected	61	None	add
14	[BUG]  [BUGGY]    for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatrix.equals(  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatrix.equals(  [BUGGY]  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	    for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatrix.equals(		non-compiled	[CE]  illegal  start  of  expression	61	None	add
15	[BUG]  [BUGGY]    for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation  [CE]  ';'  expected  [FE]            AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation  [BUGGY]  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	    for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation		non-compiled	[CE]  ';'  expected	61	None	add
16	[BUG]  [BUGGY]    for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }  [CE]  'else'  without  'if'  [FE]    AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }  [BUGGY]  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	    for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }		non-compiled	[CE]  'else'  without  'if'	61	None	add
17	[BUG]  [BUGGY]    for(int  i=0;  i  <  yArray.length;  i++)  {  double  size[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [CE]  'else'  without  'if'  [FE]      AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i  <  yArray.length;  i++)  {  double  size[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [BUGGY]  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	    for(int  i=0;  i  <  yArray.length;  i++)  {  double  size[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }		non-compiled	[CE]  'else'  without  'if'	61	None	add
18	[BUG]  [BUGGY]    for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  [CE]  'else'  without  'if'  [FE]        AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  [BUGGY]  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	    for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }		non-compiled	[CE]  'else'  without  'if'	61	None	add
19	[BUG]  [BUGGY]    for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions. "  +  size);  }  [CE]  'else'  without  'if'  [FE]          AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]    for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions. "  +  size);  }  [BUGGY]  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	    for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions. "  +  size);  }		non-compiled	[CE]  'else'  without  'if'	61	None	add
20	[BUG]  [BUGGY]    double  size  =  regression.getSize();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError  [CONTEXT]  public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]    double  size  =  regression.getSize();  [BUGGY]  return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(   "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	    double  size  =  regression.getSize();		non-compiled	[CE]  cannot  find  symbol	61	None	add
