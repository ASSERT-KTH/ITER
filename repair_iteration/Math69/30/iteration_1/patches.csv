bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(	      for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size!=    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
2	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.   "  +  size);  }  [CE]  'else'  without  'if'  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.   "  +  size);  }  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.   "  +  size);  }	      for(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    array    dimensions.   "    +    size);    }    	non-compiled	[CE]  'else'  without  'if'	19	None	replace
3	[BUG]  [BUGGY]  For(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.   "  +  size);  }  [CE]  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  For(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.   "  +  size);  }  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	For(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.   "  +  size);  }	      for(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    array    dimensions.   "    +    size);    }    	non-compiled	[CE]  	19	None	replace
4	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.  [CE]  unclosed  string  literal  [FE]                  AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.	      for(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    array    dimensions.   "    +    size);    }    	non-compiled	[CE]  unclosed  string  literal	19	None	replace
5	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  [CE]  'else'  without  'if'  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }	      for(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    return    size;    }    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
6	[BUG]  [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  [CE]  >  expected  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }	      for(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    return    size;    }    	non-compiled	[CE]  >  expected	18	None	replace
7	[BUG]  [BUGGY]  int  j=0;  j  <  yArray.length;  j++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  [CE]  >  expected  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  int  j=0;  j  <  yArray.length;  j++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	int  j=0;  j  <  yArray.length;  j++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }	      for(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    return    size;    }    	non-compiled	[CE]  >  expected	18	None	replace
8	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null)    {    return    correlation    	non-compiled	[CE]  ';'  expected	15	None	replace
9	[BUG]  [BUGGY]  for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null)    {    return    correlation    	non-compiled	[CE]  ';'  expected	15	None	replace
10	[BUG]  [BUGGY]  For(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation  [CE]  '.class'  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  For(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	For(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null)    {    return    correlation    	non-compiled	[CE]  '.class'  expected	15	None	replace
11	[BUG]  [BUGGY]  return  regression.compareTo(xArray[i]);  [CE]  cannot  find  symbol  i  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  return  regression.compareTo(xArray[i]);  [BUGGY]    }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	return  regression.compareTo(xArray[i]);	  return    regression.compareTo(yArray[i]);    	non-compiled	[CE]  cannot  find  symbol  i	3	None	replace
12	[BUG]  [BUGGY]  if(regression!=  null)  {  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  if(regression!=  null)  {  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]    }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	if(regression!=  null)  {  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
13	[BUG]  [BUGGY]  if(regression!=  null)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  if(regression!=  null)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]    }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	if(regression!=  null)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
14	[BUG]  [BUGGY]  if(regression!=  null)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  if(regression!=  null)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]    }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	if(regression!=  null)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
15	[BUG]  [BUGGY]  if(regression!=  null)  {  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  if(regression!=  null)  {  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i]);  }  [BUGGY]    }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	if(regression!=  null)  {  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i]);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
16	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatrix.equals(  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatrix.equals(  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatrix.equals(	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    covarianceMatrix.equals(    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
17	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatrix.equals(  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatrix.equals(  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatrix.equals(	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    covarianceMatrix.equals(    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
18	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    covarianceMatrix.equals(    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
19	[BUG]  [BUGGY]  return  regression.compareTo(yArray[0],  yArray[0]);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  return  regression.compareTo(yArray[0],  yArray[0]);  [BUGGY]    }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	return  regression.compareTo(yArray[0],  yArray[0]);	  return    regression.compareTo(yArray[i],    xArray[i]);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
20	[BUG]  [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  double  size[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [CE]  'else'  without  'if'  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  double  size[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  size;  i++)  {  double  size[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }	      for(int    i=0;    i    <    yArray.length;    i++)    {    double    size[]    =    getSize();    for(int    i=0;    i    <    size;    i++)    {    regression.addData(yArray[i],    size[i]);    }    	non-compiled	[CE]  'else'  without  'if'	17	None	replace
21	[BUG]  [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  double[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  double[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  size;  i++)  {  double[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }	      for(int    i=0;    i    <    yArray.length;    i++)    {    double    size[]    =    getSize();    for(int    i=0;    i    <    size;    i++)    {    regression.addData(yArray[i],    size[i]);    }    	non-compiled	[CE]  not  a  statement	17	None	replace
22	[BUG]  [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  double  size[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(xArray[i],  size[i]);  }  [CE]  'else'  without  'if'  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  double  size[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(xArray[i],  size[i]);  }  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  size;  i++)  {  double  size[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(xArray[i],  size[i]);  }	      for(int    i=0;    i    <    yArray.length;    i++)    {    double    size[]    =    getSize();    for(int    i=0;    i    <    size;    i++)    {    regression.addData(yArray[i],    size[i]);    }    	non-compiled	[CE]  'else'  without  'if'	17	None	replace
23	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    covarianceMatrix.    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
24	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatrix.  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatrix.  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatrix.	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    covarianceMatrix.    	non-compiled	[CE]  <identifier>  expected	11	None	replace
25	[BUG]  [BUGGY]  For(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  [CE]  '.class'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  For(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	For(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    covarianceMatrix.    	non-compiled	[CE]  '.class'  expected	11	None	replace
26	[BUG]  [BUGGY]  return  regression.compareTo(xArray[i],  yArray[i].doubleValue());  [CE]  cannot  find  symbol  i  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  return  regression.compareTo(xArray[i],  yArray[i].doubleValue());  [BUGGY]    }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	return  regression.compareTo(xArray[i],  yArray[i].doubleValue());	  return    regression.compareTo(xArray[i],    yArray[i]);    	non-compiled	[CE]  cannot  find  symbol  i	1	None	replace
27	[BUG]  [BUGGY]  return  regression.compareTo(xArray[i],  yArray[i]  +  size);  [CE]  cannot  find  symbol  i  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  return  regression.compareTo(xArray[i],  yArray[i]  +  size);  [BUGGY]    }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	return  regression.compareTo(xArray[i],  yArray[i]  +  size);	  return    regression.compareTo(xArray[i],    yArray[i]);    	non-compiled	[CE]  cannot  find  symbol  i	1	None	replace
28	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "	      for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size!=    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "    	non-compiled	[CE]  unclosed  string  literal	8	None	replace
29	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "	      for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size!=    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "    	non-compiled	[CE]  unclosed  string  literal	8	None	replace
30	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covariance  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covariance  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covariance	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null)    {    return    covarianceMatrix.    	non-compiled	[CE]  ';'  expected	12	None	replace
31	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covarianceM  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covarianceM  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covarianceM	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null)    {    return    covarianceMatrix.    	non-compiled	[CE]  ';'  expected	12	None	replace
32	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null)    {    return    covarianceMatrix.    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
33	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covariance  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covariance  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covariance	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null)    {    return    covarianceMatrix.    	non-compiled	[CE]  ';'  expected	12	None	replace
34	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException(  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException(  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException(	      for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size    ==    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
35	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "In  [CE]  unclosed  string  literal  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "In  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "In	      for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size    ==    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    	non-compiled	[CE]  unclosed  string  literal	7	None	replace
36	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix    ==    null    ||    covarianceMatrix.    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
37	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix    ==    null    ||    covarianceMatrix.    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
38	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covarianceMatrix.  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covarianceMatrix.  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covarianceMatrix.	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix    ==    null    ||    covarianceMatrix.    	non-compiled	[CE]  <identifier>  expected	13	None	replace
39	[BUG]  [BUGGY]  For(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  [CE]  '.class'  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  For(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	For(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix    ==    null    ||    covarianceMatrix.    	non-compiled	[CE]  '.class'  expected	13	None	replace
40	[BUG]  [BUGGY]  return  regression.compareTo(yArray[i],  yArray[i].doubleValue());  [CE]  cannot  find  symbol  i  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  return  regression.compareTo(yArray[i],  yArray[i].doubleValue());  [BUGGY]    }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	return  regression.compareTo(yArray[i],  yArray[i].doubleValue());	  return    regression.compareTo(yArray[i],    yArray[i]);    	non-compiled	[CE]  cannot  find  symbol  i	2	None	replace
41	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }  [CE]  'else'  without  'if'  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }	      for(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
42	[BUG]  [BUGGY]  For(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }  [CE]  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  For(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	For(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }	      for(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	16	None	replace
43	[BUG]  [BUGGY]  double  size  =  yArray.getSize();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  double  size  =  yArray.getSize();  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	double  size  =  yArray.getSize();	      double    size    =    regression.getSize();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
44	[BUG]  [BUGGY]  double  size  =  xArray.getSize();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  double  size  =  xArray.getSize();  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	double  size  =  xArray.getSize();	      double    size    =    regression.getSize();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
45	[BUG]  [BUGGY]  double  size  =  this.regression.getSize();  [CE]  cannot  find  symbol  regression  [FE]                    AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  double  size  =  this.regression.getSize();  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	double  size  =  this.regression.getSize();	      double    size    =    regression.getSize();    	non-compiled	[CE]  cannot  find  symbol  regression	20	None	replace
46	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "In  [CE]  unclosed  string  literal  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "In  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "In	      for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size!=    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    array    dimensions    	non-compiled	[CE]  unclosed  string  literal	9	None	replace
47	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  Double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }  [CE]  'else'  without  'if'  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  Double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  Double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }	      for(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
48	[BUG]  [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  [CE]  'else'  without  'if'  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=1;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }	      for(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    return    size;    }    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
49	[BUG]  [BUGGY]  double  size  =  regression.computeSize(xArray,  yArray.length);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  double  size  =  regression.computeSize(xArray,  yArray.length);  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	double  size  =  regression.computeSize(xArray,  yArray.length);	      double    size    =    regression.getSize();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
50	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double  size[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [CE]  'else'  without  'if'  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double  size[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  double  size[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }	      for(int    i=0;    i    <    yArray.length;    i++)    {    double    size[]    =    getSize();    for(int    i=0;    i    <    size;    i++)    {    regression.addData(yArray[i],    size[i]);    }    	non-compiled	[CE]  'else'  without  'if'	17	None	replace
51	[BUG]  [BUGGY]  for(int  i=0;  i  <  sizeArray.length;  i++)  {  double  size[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [CE]  'else'  without  'if'  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  sizeArray.length;  i++)  {  double  size[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  sizeArray.length;  i++)  {  double  size[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }	      for(int    i=0;    i    <    yArray.length;    i++)    {    double    size[]    =    getSize();    for(int    i=0;    i    <    size;    i++)    {    regression.addData(yArray[i],    size[i]);    }    	non-compiled	[CE]  'else'  without  'if'	17	None	replace
52	[BUG]  [BUGGY]  for(int  i=0;  i  <  size.length;  i++)  {  double  size[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [CE]  'else'  without  'if'  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  size.length;  i++)  {  double  size[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  size.length;  i++)  {  double  size[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }	      for(int    i=0;    i    <    yArray.length;    i++)    {    double    size[]    =    getSize();    for(int    i=0;    i    <    size;    i++)    {    regression.addData(yArray[i],    size[i]);    }    	non-compiled	[CE]  'else'  without  'if'	17	None	replace
53	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covari  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covari  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covari	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null)    {    return    covarianceMatrix.    	non-compiled	[CE]  ';'  expected	12	None	replace
54	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createInvalidArray  dimensions  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createInvalidArray  dimensions  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createInvalidArray  dimensions	      for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size    ==    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    array    dimensions    	non-compiled	[CE]  ';'  expected	10	None	replace
55	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  return  regression.getR();  }  [CE]  'else'  without  'if'  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  return  regression.getR();  }  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  return  regression.getR();  }	      for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size!=    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    array    dimensions    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
56	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createInvalidArray  dimensions  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createInvalidArray  dimensions  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createInvalidArray  dimensions	      for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size!=    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    array    dimensions    	non-compiled	[CE]  ';'  expected	9	None	replace
57	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(	      for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size!=    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
58	[BUG]  [BUGGY]  for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    covarianceMatrix.    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
59	[BUG]  [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=1;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    covarianceMatrix.    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
60	[BUG]  [BUGGY]  for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix    ==    null    ||    covarianceMatrix.    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
61	[BUG]  [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=1;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix    ==    null    ||    covarianceMatrix.    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
62	[BUG]  [BUGGY]  return  regression.compareTo(xArray[0],  yArray[0]);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  return  regression.compareTo(xArray[0],  yArray[0]);  [BUGGY]    }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	return  regression.compareTo(xArray[0],  yArray[0]);	  return    regression.compareTo(xArray[i],    yArray[i]);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
63	[BUG]  [BUGGY]  return  regression.compareTo(xArray[yArray[i],  yArray[i]);  [CE]  ']'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  return  regression.compareTo(xArray[yArray[i],  yArray[i]);  [BUGGY]    }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	return  regression.compareTo(xArray[yArray[i],  yArray[i]);	  return    regression.compareTo(xArray[i],    yArray[i]);    	non-compiled	[CE]  ']'  expected	1	None	replace
64	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  matrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  matrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  matrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null)    {    return    correlation    	non-compiled	[CE]  ';'  expected	15	None	replace
65	[BUG]  [BUGGY]  if(regression!=  null)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  if(regression!=  null)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i]);  }  [BUGGY]    }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	if(regression!=  null)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i]);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
66	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.   "  +  size  [CE]  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.   "  +  size  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.   "  +  size	      for(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    array    dimensions.   "    +    size);    }    	non-compiled	[CE]  	19	None	replace
67	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covariance  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covariance  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covariance	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    covarianceMatrix.equals(    	non-compiled	[CE]  ')'  expected	14	None	replace
68	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  co  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  co  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  co	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    covarianceMatrix.equals(    	non-compiled	[CE]  ')'  expected	14	None	replace
69	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covarianceMa  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covarianceMa  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covarianceMa	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix    ==    null    ||    covarianceMatrix.    	non-compiled	[CE]  ')'  expected	13	None	replace
70	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covarianceMatri  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covarianceMatri  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covarianceMatri	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix    ==    null    ||    covarianceMatrix.    	non-compiled	[CE]  ')'  expected	13	None	replace
71	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covariance  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covariance  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covariance	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix    ==    null    ||    covarianceMatrix.    	non-compiled	[CE]  ')'  expected	13	None	replace
72	[BUG]  [BUGGY]  return  regression.compareTo(xArray[i],  yArray[i],  yArray[i]);  [CE]  cannot  find  symbol  i  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  return  regression.compareTo(xArray[i],  yArray[i],  yArray[i]);  [BUGGY]    }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	return  regression.compareTo(xArray[i],  yArray[i],  yArray[i]);	  return    regression.compareTo(xArray[i],    yArray[i]);    	non-compiled	[CE]  cannot  find  symbol  i	1	None	replace
73	[BUG]  [BUGGY]  if(yArray.length  ==  yArray.length)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  if(yArray.length  ==  yArray.length)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  }  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	if(yArray.length  ==  yArray.length)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  }	      for(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    return    size;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
74	[BUG]  [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null)    {    return    correlation    	non-compiled	[CE]  ';'  expected	15	None	replace
75	[BUG]  [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }	      for(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "   ");    }    	non-compiled	[CE]  >  expected	16	None	replace
76	[BUG]  [BUGGY]  if(yArray.length  ==  yArray.length)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }  [CE]  'else'  without  'if'  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  if(yArray.length  ==  yArray.length)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	if(yArray.length  ==  yArray.length)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }	      for(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
77	[BUG]  [BUGGY]  return  regression.compareTo(yArray[i],  yArray[i].length);  [CE]  cannot  find  symbol  i  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  return  regression.compareTo(yArray[i],  yArray[i].length);  [BUGGY]    }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	return  regression.compareTo(yArray[i],  yArray[i].length);	  return    regression.compareTo(yArray[i],    yArray[i]);    	non-compiled	[CE]  cannot  find  symbol  i	2	None	replace
78	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions  }  [CE]  unclosed  string  literal  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions  }  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions  }	      for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size!=    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    array    dimensions    	non-compiled	[CE]  unclosed  string  literal	9	None	replace
79	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions  [CE]  unclosed  string  literal  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions	      for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size!=    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    array    dimensions    	non-compiled	[CE]  unclosed  string  literal	9	None	replace
80	[BUG]  [BUGGY]  double  size  =  regression.computeSize(yArray.length);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  double  size  =  regression.computeSize(yArray.length);  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	double  size  =  regression.computeSize(yArray.length);	      double    size    =    regression.getSize();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
81	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions  [CE]  unclosed  string  literal  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions	      for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size    ==    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    array    dimensions    	non-compiled	[CE]  unclosed  string  literal	10	None	replace
82	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions  }  [CE]  unclosed  string  literal  [FE]                  AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions  }  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions  }	      for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size    ==    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    array    dimensions    	non-compiled	[CE]  unclosed  string  literal	10	None	replace
83	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  [CE]  unclosed  string  literal  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid	      for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size!=    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    	non-compiled	[CE]  unclosed  string  literal	6	None	replace
84	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  [CE]  unclosed  string  literal  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid	      for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size!=    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    	non-compiled	[CE]  unclosed  string  literal	6	None	replace
85	[BUG]  [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.   "  +  size);  }  [CE]  >  expected  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.   "  +  size);  }  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.   "  +  size);  }	      for(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    array    dimensions.   "    +    size);    }    	non-compiled	[CE]  >  expected	19	None	replace
86	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatri  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatri  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatri	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    covarianceMatrix.equals(    	non-compiled	[CE]  ')'  expected	14	None	replace
87	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatri  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatri  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatri	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    covarianceMatrix.equals(    	non-compiled	[CE]  ')'  expected	14	None	replace
88	[BUG]  [BUGGY]  double[]  elements  =  getSize();  for(int  i=0;  i  <  elements.length;  i++)  {  regression.addData(yArray[i],  elements[i]);  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  double[]  elements  =  getSize();  for(int  i=0;  i  <  elements.length;  i++)  {  regression.addData(yArray[i],  elements[i]);  }  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	double[]  elements  =  getSize();  for(int  i=0;  i  <  elements.length;  i++)  {  regression.addData(yArray[i],  elements[i]);  }	      for(int    i=0;    i    <    yArray.length;    i++)    {    double    size[]    =    getSize();    for(int    i=0;    i    <    size;    i++)    {    regression.addData(yArray[i],    size[i]);    }    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
89	[BUG]  [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  double[]  yArray  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [CE]  'else'  without  'if'  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  double[]  yArray  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  size;  i++)  {  double[]  yArray  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }	      for(int    i=0;    i    <    yArray.length;    i++)    {    double    size[]    =    getSize();    for(int    i=0;    i    <    size;    i++)    {    regression.addData(yArray[i],    size[i]);    }    	non-compiled	[CE]  'else'  without  'if'	17	None	replace
90	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covarianceMa  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covarianceMa  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covarianceMa	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null)    {    return    covarianceMatrix.    	non-compiled	[CE]  ';'  expected	12	None	replace
91	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  [CE]  unclosed  string  literal  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid	      for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size    ==    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    	non-compiled	[CE]  unclosed  string  literal	7	None	replace
92	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  [CE]  unclosed  string  literal  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid	      for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size    ==    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    	non-compiled	[CE]  unclosed  string  literal	7	None	replace
93	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]            AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "	      for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size!=    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "    	non-compiled	[CE]  unclosed  string  literal	8	None	replace
94	[BUG]  [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "  [CE]  >  expected  [FE]              AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "	      for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size!=    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "    	non-compiled	[CE]  >  expected	8	None	replace
95	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceM  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceM  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceM	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    covarianceMatrix.    	non-compiled	[CE]  ')'  expected	11	None	replace
96	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMa  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }    [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMa  [BUGGY]    return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(     "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements   ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMa	      for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    covarianceMatrix.    	non-compiled	[CE]  ')'  expected	11	None	replace
