bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMa  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMa  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMa	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    covarianceMa    	non-compiled	[CE]  ')'  expected	96	None	replace
2	[BUG]  [BUGGY]  for(int  i=0;  i  <  size.length;  i++)  {  double[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  size.length;  i++)  {  double[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  size.length;  i++)  {  double[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }	  for(int    i=0;    i    <    size.length;    i++)    {    double    size[]    =    getSize();    for(int    i=0;    i    <    size;    i++)    {    regression.addData(yArray[i],    size[i]);    }    	non-compiled	[CE]  not  a  statement	52	None	replace
3	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null)  {  return  covariance  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null)  {  return  covariance  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null)  {  return  covariance	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null)    {    return    covariance    	non-compiled	[CE]  ';'  expected	30	None	replace
4	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.create  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.create  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.create	  for(int    i=0;    i    <    xArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size!=    0)    {    throw    MathRuntimeException.createIllegalArgumentException(    	non-compiled	[CE]  ';'  expected	57	None	replace
5	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
6	[BUG]  [BUGGY]  double  size  =  yArray.computeSize(regression.length);  [CE]  cannot  find  symbol  length  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  double  size  =  yArray.computeSize(regression.length);  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	double  size  =  yArray.computeSize(regression.length);	  double    size    =    regression.computeSize(yArray.length);    	non-compiled	[CE]  cannot  find  symbol  length	80	None	replace
7	[BUG]  [BUGGY]  double  size  =  regression.computeSize(xArray.length);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  double  size  =  regression.computeSize(xArray.length);  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	double  size  =  regression.computeSize(xArray.length);	  double    size    =    regression.computeSize(yArray.length);    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
8	[BUG]  [BUGGY]  double  size  =  yArray.computeSize(relative.length);  [CE]  cannot  find  symbol  relative  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  double  size  =  yArray.computeSize(relative.length);  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	double  size  =  yArray.computeSize(relative.length);	  double    size    =    regression.computeSize(yArray.length);    	non-compiled	[CE]  cannot  find  symbol  relative	80	None	replace
9	[BUG]  [BUGGY]  return  regression.compareTo(yArray[i],  xArray[i]  +  size);  [CE]  cannot  find  symbol  i  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  return  regression.compareTo(yArray[i],  xArray[i]  +  size);  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	return  regression.compareTo(yArray[i],  xArray[i]  +  size);	  return    regression.compareTo(xArray[i],    yArray[i]    +    size);    	non-compiled	[CE]  cannot  find  symbol  i	27	None	replace
10	[BUG]  [BUGGY]  return  regression.compareTo(xArray[i],  yArray[i]  +  xArray.length);  [CE]  cannot  find  symbol  i  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  return  regression.compareTo(xArray[i],  yArray[i]  +  xArray.length);  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	return  regression.compareTo(xArray[i],  yArray[i]  +  xArray.length);	  return    regression.compareTo(xArray[i],    yArray[i]    +    size);    	non-compiled	[CE]  cannot  find  symbol  i	27	None	replace
11	[BUG]  [BUGGY]  return  regression.compareTo(xArray[i],  yArray[i]  *  size);  [CE]  cannot  find  symbol  i  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  return  regression.compareTo(xArray[i],  yArray[i]  *  size);  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	return  regression.compareTo(xArray[i],  yArray[i]  *  size);	  return    regression.compareTo(xArray[i],    yArray[i]    +    size);    	non-compiled	[CE]  cannot  find  symbol  i	27	None	replace
12	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(xArray[i],  size[i]);  }  [CE]  'else'  without  'if'  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(xArray[i],  size[i]);  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double  size[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(xArray[i],  size[i]);  }	  for(int    i=0;    i    <    xArray.length;    i++)    {    double    size[]    =    getSize();    for(int    i=0;    i    <    size;    i++)    {    regression.addData(yArray[i],    size[i]);    }    	non-compiled	[CE]  'else'  without  'if'	50	None	replace
13	[BUG]  [BUGGY]  For(int  i=0;  i  <  xArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  For(int  i=0;  i  <  xArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	For(int  i=0;  i  <  xArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }	  For(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	42	None	replace
14	[BUG]  [BUGGY]  double  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  [CE]  >  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  double  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	double  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }	  int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    return    size;    }    	non-compiled	[CE]  >  expected	6	None	replace
15	[BUG]  [BUGGY]  int  i=0;  i  <  xArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  [CE]  >  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  int  i=0;  i  <  xArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	int  i=0;  i  <  xArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }	  int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    return    size;    }    	non-compiled	[CE]  >  expected	6	None	replace
16	[BUG]  [BUGGY]  int  i=1;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  [CE]  >  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  int  i=1;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	int  i=1;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }	  int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    return    size;    }    	non-compiled	[CE]  >  expected	6	None	replace
17	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  return  regression.getR();  }  [CE]  'else'  without  'if'  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  return  regression.getR();  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  return  regression.getR();  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size!=    0)    {    return    regression.getR();    }    	non-compiled	[CE]  'else'  without  'if'	55	None	replace
18	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  >=  0)  {  return  regression.getR();  }  [CE]  'else'  without  'if'  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  >=  0)  {  return  regression.getR();  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  >=  0)  {  return  regression.getR();  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size!=    0)    {    return    regression.getR();    }    	non-compiled	[CE]  'else'  without  'if'	55	None	replace
19	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  return  regression.getR();  }  [CE]  'else'  without  'if'  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  return  regression.getR();  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  return  regression.getR();  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size!=    0)    {    return    regression.getR();    }    	non-compiled	[CE]  'else'  without  'if'	55	None	replace
20	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.   "  +  size  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.   "  +  size  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.   "  +  size	  for(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    array    dimensions.       "    +    size    	non-compiled	[CE]  	66	None	replace
21	[BUG]  [BUGGY]  for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  matrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  matrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  matrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    matrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null)    {    return    correlation    	non-compiled	[CE]  ';'  expected	64	None	replace
22	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  matrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  matrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  matrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    matrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null)    {    return    correlation    	non-compiled	[CE]  ';'  expected	64	None	replace
23	[BUG]  [BUGGY]  For(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  matrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation  [CE]  '.class'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  For(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  matrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	For(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  matrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    matrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null)    {    return    correlation    	non-compiled	[CE]  '.class'  expected	64	None	replace
24	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix(yArray);  if(covarianceMatrix!=  null  ||  covarianceMatrix.  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix(yArray);  if(covarianceMatrix!=  null  ||  covarianceMatrix.  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix(yArray);  if(covarianceMatrix!=  null  ||  covarianceMatrix.	  RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    covarianceMatrix.    	non-compiled	[CE]  <identifier>  expected	24	None	replace
25	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  regression.getR();  if(covarianceMatrix!=  null  ||  covarianceMatrix.  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  RealMatrix  covarianceMatrix  =  regression.getR();  if(covarianceMatrix!=  null  ||  covarianceMatrix.  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	RealMatrix  covarianceMatrix  =  regression.getR();  if(covarianceMatrix!=  null  ||  covarianceMatrix.	  RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    covarianceMatrix.    	non-compiled	[CE]  <identifier>  expected	24	None	replace
26	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  yArray.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatrix.  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  RealMatrix  covarianceMatrix  =  yArray.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatrix.  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	RealMatrix  covarianceMatrix  =  yArray.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatrix.	  RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    covarianceMatrix.    	non-compiled	[CE]  <identifier>  expected	24	None	replace
27	[BUG]  [BUGGY]  For(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  '.class'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  For(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	For(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  if(regression!=    null)    {    for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    	non-compiled	[CE]  '.class'  expected	14	None	replace
28	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  missing  return  statement  [FE]                          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  if(regression!=    null)    {    for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    	non-compiled	[CE]  missing  return  statement	14	None	replace
29	[BUG]  [BUGGY]  For(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [CE]  '.class'  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  For(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	For(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	  if(regression!=    null)    {    for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    	non-compiled	[CE]  '.class'  expected	14	None	replace
30	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [CE]  missing  return  statement  [FE]                              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	  if(regression!=    null)    {    for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    	non-compiled	[CE]  missing  return  statement	14	None	replace
31	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covariance!=  ')'  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covariance!=  ')'  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covariance!=  ')'	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix    ==    null    ||    covariance    	non-compiled	[CE]  ')'  expected	71	None	replace
32	[BUG]  [BUGGY]  return  regression.compareTo(yArray[i],  xArray[i],  yArray[i]);  [CE]  cannot  find  symbol  i  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  return  regression.compareTo(yArray[i],  xArray[i],  yArray[i]);  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	return  regression.compareTo(yArray[i],  xArray[i],  yArray[i]);	  return    regression.compareTo(xArray[i],    yArray[i],    yArray[i]);    	non-compiled	[CE]  cannot  find  symbol  i	72	None	replace
33	[BUG]  [BUGGY]  return  regression.compareTo(xArray[i],  yArray[i],  xArray[i]);  [CE]  cannot  find  symbol  i  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  return  regression.compareTo(xArray[i],  yArray[i],  xArray[i]);  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	return  regression.compareTo(xArray[i],  yArray[i],  xArray[i]);	  return    regression.compareTo(xArray[i],    yArray[i],    yArray[i]);    	non-compiled	[CE]  cannot  find  symbol  i	72	None	replace
34	[BUG]  [BUGGY]  return  regression.compareTo(xArray[i],  yArray[i],  yArray[j]);  [CE]  cannot  find  symbol  i  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  return  regression.compareTo(xArray[i],  yArray[i],  yArray[j]);  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	return  regression.compareTo(xArray[i],  yArray[i],  yArray[j]);	  return    regression.compareTo(xArray[i],    yArray[i],    yArray[i]);    	non-compiled	[CE]  cannot  find  symbol  i	72	None	replace
35	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size!=    0)    {    throw    MathRuntimeException.createIllegalArgumentException(    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
36	[BUG]  [BUGGY]  return  regression.compareTo(yArray[i],  xArray[i].doubleValue());  [CE]  cannot  find  symbol  i  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  return  regression.compareTo(yArray[i],  xArray[i].doubleValue());  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	return  regression.compareTo(yArray[i],  xArray[i].doubleValue());	  return    regression.compareTo(yArray[i],    yArray[i].doubleValue());    	non-compiled	[CE]  cannot  find  symbol  i	40	None	replace
37	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||	  For(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix    ==    null    ||    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
38	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  [CE]  unclosed  string  literal  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(yArray[i]);    if(size!=    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    	non-compiled	[CE]  unclosed  string  literal	83	None	replace
39	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double  size[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(xArray[i],  size[i]);  }  [CE]  'else'  without  'if'  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double  size[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(xArray[i],  size[i]);  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  double  size[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(xArray[i],  size[i]);  }	  for(int    i=0;    i    <    size;    i++)    {    double    size[]    =    getSize();    for(int    i=0;    i    <    size;    i++)    {    regression.addData(xArray[i],    size[i]);    }    	non-compiled	[CE]  'else'  without  'if'	22	None	replace
40	[BUG]  [BUGGY]  double  size[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(xArray[i],  size[i]);  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  double  size[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(xArray[i],  size[i]);  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	double  size[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(xArray[i],  size[i]);  }	  for(int    i=0;    i    <    size;    i++)    {    double    size[]    =    getSize();    for(int    i=0;    i    <    size;    i++)    {    regression.addData(xArray[i],    size[i]);    }    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
41	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix(yArray);  if(covarianceMatrix  ==  null  ||  covarianceMatrix.  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix(yArray);  if(covarianceMatrix  ==  null  ||  covarianceMatrix.  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix(yArray);  if(covarianceMatrix  ==  null  ||  covarianceMatrix.	  RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix    ==    null    ||    covarianceMatrix.    	non-compiled	[CE]  <identifier>  expected	38	None	replace
42	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  regression.getR();  if(covarianceMatrix  ==  null  ||  covarianceMatrix.  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  RealMatrix  covarianceMatrix  =  regression.getR();  if(covarianceMatrix  ==  null  ||  covarianceMatrix.  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	RealMatrix  covarianceMatrix  =  regression.getR();  if(covarianceMatrix  ==  null  ||  covarianceMatrix.	  RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix    ==    null    ||    covarianceMatrix.    	non-compiled	[CE]  <identifier>  expected	38	None	replace
43	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [CE]  missing  return  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	  if(regression!=    null)    {    for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    	non-compiled	[CE]  missing  return  statement	13	None	replace
44	[BUG]  [BUGGY]  vice.addData(xArray[i],  yArray[i]);  [CE]  cannot  find  symbol  i  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  vice.addData(xArray[i],  yArray[i]);  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	vice.addData(xArray[i],  yArray[i]);	  if(regression!=    null)    {    for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    	non-compiled	[CE]  cannot  find  symbol  i	13	None	replace
45	[BUG]  [BUGGY]  return  regression.compareTo(xArray[i],  yArray[i].length);  [CE]  cannot  find  symbol  i  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  return  regression.compareTo(xArray[i],  yArray[i].length);  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	return  regression.compareTo(xArray[i],  yArray[i].length);	  return    regression.compareTo(yArray[i],    yArray[i].length);    	non-compiled	[CE]  cannot  find  symbol  i	77	None	replace
46	[BUG]  [BUGGY]  return  regression.compareTo(yArray[i],  xArray[i].length);  [CE]  cannot  find  symbol  i  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  return  regression.compareTo(yArray[i],  xArray[i].length);  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	return  regression.compareTo(yArray[i],  xArray[i].length);	  return    regression.compareTo(yArray[i],    yArray[i].length);    	non-compiled	[CE]  cannot  find  symbol  i	77	None	replace
47	[BUG]  [BUGGY]  double  size  =  yArray.computeSize(xArray,  regression.length);  [CE]  cannot  find  symbol  length  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  double  size  =  yArray.computeSize(xArray,  regression.length);  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	double  size  =  yArray.computeSize(xArray,  regression.length);	  double    size    =    regression.computeSize(xArray,    yArray.length);    	non-compiled	[CE]  cannot  find  symbol  length	49	None	replace
48	[BUG]  [BUGGY]  double  size  =  regression.computeSize(yArray,  xArray.length);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  double  size  =  regression.computeSize(yArray,  xArray.length);  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	double  size  =  regression.computeSize(yArray,  xArray.length);	  double    size    =    regression.computeSize(xArray,    yArray.length);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
49	[BUG]  [BUGGY]  double  size  =  xArray.computeSize(regression,  yArray.length);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  double  size  =  xArray.computeSize(regression,  yArray.length);  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	double  size  =  xArray.computeSize(regression,  yArray.length);	  double    size    =    regression.computeSize(xArray,    yArray.length);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
50	[BUG]  [BUGGY]  for(int  i=1;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=1;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=1;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||	  for(int    i=1;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix    ==    null    ||    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
51	[BUG]  [BUGGY]  if(xArray.length  ==  yArray.length)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  if(xArray.length  ==  yArray.length)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	if(xArray.length  ==  yArray.length)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "	  if(yArray.length    ==    yArray.length)    {    for(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "   ");    }    	non-compiled	[CE]  unclosed  string  literal	76	None	replace
52	[BUG]  [BUGGY]  if(yArray.length  ==  yArray.length)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  if(yArray.length  ==  yArray.length)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	if(yArray.length  ==  yArray.length)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "	  if(yArray.length    ==    yArray.length)    {    for(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "   ");    }    	non-compiled	[CE]  unclosed  string  literal	76	None	replace
53	[BUG]  [BUGGY]  if(xArray.length!=  yArray.length)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  if(xArray.length!=  yArray.length)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	if(xArray.length!=  yArray.length)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "	  if(yArray.length    ==    yArray.length)    {    for(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "   ");    }    	non-compiled	[CE]  unclosed  string  literal	76	None	replace
54	[BUG]  [BUGGY]  For(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i]);  }  [CE]  '.class'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  For(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i]);  }  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	For(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i]);  }	  if(regression!=    null)    {    for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i]);    }    	non-compiled	[CE]  '.class'  expected	65	None	replace
55	[BUG]  [BUGGY]  return  regression.compareTo(xArray[i],  yArray[i]  +  1);  [CE]  cannot  find  symbol  i  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  return  regression.compareTo(xArray[i],  yArray[i]  +  1);  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	return  regression.compareTo(xArray[i],  yArray[i]  +  1);	  return    regression.compareTo(xArray[yArray[i],    yArray[i]);    	non-compiled	[CE]  cannot  find  symbol  i	63	None	replace
56	[BUG]  [BUGGY]  For(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i]);  }  [CE]  '.class'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  For(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i]);  }  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	For(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i]);  }	  if(regression!=    null)    {    for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i]);    }    	non-compiled	[CE]  '.class'  expected	15	None	replace
57	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i]);  }  [CE]  no  suitable  method  found  for  addData(double)  [FE]                            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i]);  }  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i]);  }	  if(regression!=    null)    {    for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i]);    }    	non-compiled	[CE]  no  suitable  method  found  for  addData(double)	15	None	replace
58	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "In  [CE]  unclosed  string  literal  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "In  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "In	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size    ==    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "In    	non-compiled	[CE]  unclosed  string  literal	35	None	replace
59	[BUG]  [BUGGY]  if(yArray.length  ==  xArray.length)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  if(yArray.length  ==  xArray.length)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	if(yArray.length  ==  xArray.length)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  }	  if(yArray.length    ==    yArray.length)    {    for(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    return    size;    }    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
60	[BUG]  [BUGGY]  if(yArray.length!=  xArray.length)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  if(yArray.length!=  xArray.length)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	if(yArray.length!=  xArray.length)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  }	  if(yArray.length    ==    yArray.length)    {    for(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    return    size;    }    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
61	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions  [CE]  unclosed  string  literal  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(yArray[i]);    if(size    ==    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    array    dimensions    	non-compiled	[CE]  unclosed  string  literal	81	None	replace
62	[BUG]  [BUGGY]  double  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }  [CE]  >  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  double  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	double  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }	  int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "   ");    }    	non-compiled	[CE]  >  expected	75	None	replace
63	[BUG]  [BUGGY]  long  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }  [CE]  >  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  long  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	long  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }	  int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "   ");    }    	non-compiled	[CE]  >  expected	75	None	replace
64	[BUG]  [BUGGY]  int  i=0;  i  <  xArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }  [CE]  >  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  int  i=0;  i  <  xArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	int  i=0;  i  <  xArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }	  int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "   ");    }    	non-compiled	[CE]  >  expected	75	None	replace
65	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions  [CE]  unclosed  string  literal  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(yArray[i]);    if(size!=    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    array    dimensions    	non-compiled	[CE]  unclosed  string  literal	79	None	replace
66	[BUG]  [BUGGY]  double  size  =  xArray.length.getSize();  [CE]  int  cannot  be  dereferenced  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  double  size  =  xArray.length.getSize();  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	double  size  =  xArray.length.getSize();	  double    size    =    xArray.getSize();    	non-compiled	[CE]  int  cannot  be  dereferenced	44	None	replace
67	[BUG]  [BUGGY]  double  size  =  xArray.getSize()  +  1;  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  double  size  =  xArray.getSize()  +  1;  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	double  size  =  xArray.getSize()  +  1;	  double    size    =    xArray.getSize();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
68	[BUG]  [BUGGY]  For(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  For(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	For(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.	  For(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    array    dimensions.       "    +    size);    }    	non-compiled	[CE]  	3	None	replace
69	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.create  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.create  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.create	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size    ==    0)    {    throw    MathRuntimeException.createIllegalArgumentException(    	non-compiled	[CE]  ';'  expected	34	None	replace
70	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException(  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException(  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException(	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size    ==    0)    {    throw    MathRuntimeException.createIllegalArgumentException(    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
71	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException(  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException(  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException(	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size    ==    0)    {    throw    MathRuntimeException.createIllegalArgumentException(    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
72	[BUG]  [BUGGY]  double  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.   "  +  size);  }  [CE]  >  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  double  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.   "  +  size);  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	double  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.   "  +  size);  }	  int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    array    dimensions.       "    +    size);    }    	non-compiled	[CE]  >  expected	85	None	replace
73	[BUG]  [BUGGY]  double  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.  [CE]  >  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  double  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	double  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.	  int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    array    dimensions.       "    +    size);    }    	non-compiled	[CE]  >  expected	85	None	replace
74	[BUG]  [BUGGY]  long  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.   "  +  size);  }  [CE]  >  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  long  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.   "  +  size);  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	long  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.   "  +  size);  }	  int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    array    dimensions.       "    +    size);    }    	non-compiled	[CE]  >  expected	85	None	replace
75	[BUG]  [BUGGY]  For(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  [CE]  '.class'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  For(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	For(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||	  for(int    i=0;    i    <    xArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix    ==    null    ||    	non-compiled	[CE]  '.class'  expected	37	None	replace
76	[BUG]  [BUGGY]  double  size[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  double  size[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	double  size[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }	  for(int    i=0;    i    <    size;    i++)    {    double    size[]    =    getSize();    for(int    i=0;    i    <    size;    i++)    {    regression.addData(yArray[i],    size[i]);    }    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
77	[BUG]  [BUGGY]  final  int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "  [CE]  >  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  final  int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	final  int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "	  int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size!=    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "    	non-compiled	[CE]  >  expected	94	None	replace
78	[BUG]  [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(  [CE]  >  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(	  int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size!=    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "    	non-compiled	[CE]  >  expected	94	None	replace
79	[BUG]  [BUGGY]  final  int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(  [CE]  >  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  final  int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	final  int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(	  int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size!=    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "    	non-compiled	[CE]  >  expected	94	None	replace
80	[BUG]  [BUGGY]  for(int  i=1;  i  <  xArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  [CE]  'else'  without  'if'  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=1;  i  <  xArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=1;  i  <  xArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }	  for(int    i=1;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    return    size;    }    	non-compiled	[CE]  'else'  without  'if'	48	None	replace
81	[BUG]  [BUGGY]  For(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  '.class'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  For(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	For(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  if(regression!=    null)    {    for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    	non-compiled	[CE]  '.class'  expected	12	None	replace
82	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  missing  return  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  if(regression!=    null)    {    for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    	non-compiled	[CE]  missing  return  statement	12	None	replace
83	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceM  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceM  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceM	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    covarianceM    	non-compiled	[CE]  ')'  expected	95	None	replace
84	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation	  For(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null)    {    return    correlation    	non-compiled	[CE]  ';'  expected	10	None	replace
85	[BUG]  [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  double[]  yArray  =  getSize();  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [CE]  'else'  without  'if'  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  double[]  yArray  =  getSize();  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  size;  i++)  {  double[]  yArray  =  getSize();  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  size[i]);  }	  for(int    i=0;    i    <    size;    i++)    {    double[]    yArray    =    getSize();    for(int    i=0;    i    <    size;    i++)    {    regression.addData(yArray[i],    size[i]);    }    	non-compiled	[CE]  'else'  without  'if'	89	None	replace
86	[BUG]  [BUGGY]  double[]  yArray  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  double[]  yArray  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	double[]  yArray  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }	  for(int    i=0;    i    <    size;    i++)    {    double[]    yArray    =    getSize();    for(int    i=0;    i    <    size;    i++)    {    regression.addData(yArray[i],    size[i]);    }    	non-compiled	[CE]  variable  yArray  is  already  defined  in  method  correlation(double[],double[])	89	None	replace
87	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  yArray  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [CE]  'else'  without  'if'  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  yArray  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  yArray  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }	  for(int    i=0;    i    <    size;    i++)    {    double[]    yArray    =    getSize();    for(int    i=0;    i    <    size;    i++)    {    regression.addData(yArray[i],    size[i]);    }    	non-compiled	[CE]  'else'  without  'if'	89	None	replace
88	[BUG]  [BUGGY]  int  i=0;  i  <  size;  i++)  {  double[]  yArray  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [CE]  >  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  int  i=0;  i  <  size;  i++)  {  double[]  yArray  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	int  i=0;  i  <  size;  i++)  {  double[]  yArray  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }	  for(int    i=0;    i    <    size;    i++)    {    double[]    yArray    =    getSize();    for(int    i=0;    i    <    size;    i++)    {    regression.addData(yArray[i],    size[i]);    }    	non-compiled	[CE]  >  expected	89	None	replace
89	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  &&  covarianceMatrix.equals(  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  &&  covarianceMatrix.equals(  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  &&  covarianceMatrix.equals(	  RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    covarianceMatrix.equals(    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
90	[BUG]  [BUGGY]  if(regression.getR()!=  null)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatrix.equals(  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  if(regression.getR()!=  null)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatrix.equals(  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	if(regression.getR()!=  null)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatrix.equals(	  RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    covarianceMatrix.equals(    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
91	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covarianceMatrix.equals(  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covarianceMatrix.equals(  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covarianceMatrix.equals(	  RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    covarianceMatrix.equals(    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
92	[BUG]  [BUGGY]  double  size  =  this.regression.getSize()  +  1;  [CE]  cannot  find  symbol  regression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  double  size  =  this.regression.getSize()  +  1;  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	double  size  =  this.regression.getSize()  +  1;	  double    size    =    this.regression.getSize();    	non-compiled	[CE]  cannot  find  symbol  regression	45	None	replace
93	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(yArray[i]);    if(size!=    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "    	non-compiled	[CE]  unclosed  string  literal	93	None	replace
94	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
95	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null)  {  return  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null)  {  return	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
96	[BUG]  [BUGGY]  For(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  [CE]  '.class'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  For(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	For(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null)    {    return    	non-compiled	[CE]  '.class'  expected	32	None	replace
97	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  co  ==  return  regression.getR();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  co  ==  return  regression.getR();  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  co  ==  return  regression.getR();  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    co    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
98	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  co  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  co  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  co	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    co    	non-compiled	[CE]  ')'  expected	68	None	replace
99	[BUG]  [BUGGY]  double  size  =  yArray[i].getSize();  [CE]  cannot  find  symbol  i  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  double  size  =  yArray[i].getSize();  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	double  size  =  yArray[i].getSize();	  double    size    =    yArray.getSize();    	non-compiled	[CE]  cannot  find  symbol  i	43	None	replace
100	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.  [CE]  unclosed  string  literal  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.	  for(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    array    dimensions.    	non-compiled	[CE]  unclosed  string  literal	4	None	replace
101	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions. ");  }  [CE]  'else'  without  'if'  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions. ");  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions. ");  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    array    dimensions.    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
102	[BUG]  [BUGGY]  int  j=0;  j  <  yArray.length;  j++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.  [CE]  >  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  int  j=0;  j  <  yArray.length;  j++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	int  j=0;  j  <  yArray.length;  j++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.	  for(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    array    dimensions.    	non-compiled	[CE]  >  expected	4	None	replace
103	[BUG]  [BUGGY]  for(int  i=0;  i  <  sizeArray.length;  i++)  {  double[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  sizeArray.length;  i++)  {  double[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  sizeArray.length;  i++)  {  double[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }	  for(int    i=0;    i    <    sizeArray.length;    i++)    {    double    size[]    =    getSize();    for(int    i=0;    i    <    size;    i++)    {    regression.addData(yArray[i],    size[i]);    }    	non-compiled	[CE]  not  a  statement	51	None	replace
104	[BUG]  [BUGGY]  return  regression.compareTo(yArray[0],  xArray[0]);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  return  regression.compareTo(yArray[0],  xArray[0]);  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	return  regression.compareTo(yArray[0],  xArray[0]);	  return    regression.compareTo(xArray[0],    yArray[0]);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
105	[BUG]  [BUGGY]  return  regression.compareTo(xArray[0],  yArray[1]);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  return  regression.compareTo(xArray[0],  yArray[1]);  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	return  regression.compareTo(xArray[0],  yArray[1]);	  return    regression.compareTo(xArray[0],    yArray[0]);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
106	[BUG]  [BUGGY]  return  regression.compareTo(xArray[0],  yArray[0],  yArray[1]);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  return  regression.compareTo(xArray[0],  yArray[0],  yArray[1]);  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	return  regression.compareTo(xArray[0],  yArray[0],  yArray[1]);	  return    regression.compareTo(xArray[0],    yArray[0]);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
107	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createInvalidArray  dimensions  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createInvalidArray  dimensions  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createInvalidArray  dimensions	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size    ==    0)    {    throw    MathRuntimeException.createInvalidArray    dimensions    	non-compiled	[CE]  ';'  expected	54	None	replace
108	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createInvalid  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createInvalid  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createInvalid	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size    ==    0)    {    throw    MathRuntimeException.createInvalidArray    dimensions    	non-compiled	[CE]  ';'  expected	54	None	replace
109	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createInvalidArray  dimensions  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createInvalidArray  dimensions  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createInvalidArray  dimensions	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size    ==    0)    {    throw    MathRuntimeException.createInvalidArray    dimensions    	non-compiled	[CE]  ';'  expected	54	None	replace
110	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }	  for(int    i=0;    i    <    size;    i++)    {    double[]    =    getSize();    for(int    i=0;    i    <    size;    i++)    {    regression.addData(yArray[i],    size[i]);    }    	non-compiled	[CE]  not  a  statement	21	None	replace
111	[BUG]  [BUGGY]  int  size  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  int  size  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	int  size  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }	  for(int    i=0;    i    <    size;    i++)    {    double[]    =    getSize();    for(int    i=0;    i    <    size;    i++)    {    regression.addData(yArray[i],    size[i]);    }    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
112	[BUG]  [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  double[]  =  getSize();  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  double[]  =  getSize();  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  size;  i++)  {  double[]  =  getSize();  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  size[i]);  }	  for(int    i=0;    i    <    size;    i++)    {    double[]    =    getSize();    for(int    i=0;    i    <    size;    i++)    {    regression.addData(yArray[i],    size[i]);    }    	non-compiled	[CE]  not  a  statement	21	None	replace
113	[BUG]  [BUGGY]  return  regression.compareTo(xArray[i],  yArray[i].doubleValue()  +  1);  [CE]  cannot  find  symbol  i  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  return  regression.compareTo(xArray[i],  yArray[i].doubleValue()  +  1);  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	return  regression.compareTo(xArray[i],  yArray[i].doubleValue()  +  1);	  return    regression.compareTo(xArray[i],    yArray[i].doubleValue());    	non-compiled	[CE]  cannot  find  symbol  i	26	None	replace
114	[BUG]  [BUGGY]  return  regression.compareTo(yArray[0],  yArray[1]);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  return  regression.compareTo(yArray[0],  yArray[1]);  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	return  regression.compareTo(yArray[0],  yArray[1]);	  return    regression.compareTo(yArray[0],    yArray[0]);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
115	[BUG]  [BUGGY]  int[]  elements  =  getSize();  for(int  i=0;  i  <  elements.length;  i++)  {  regression.addData(yArray[i],  elements[i]);  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  int[]  elements  =  getSize();  for(int  i=0;  i  <  elements.length;  i++)  {  regression.addData(yArray[i],  elements[i]);  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	int[]  elements  =  getSize();  for(int  i=0;  i  <  elements.length;  i++)  {  regression.addData(yArray[i],  elements[i]);  }	  double[]    elements    =    getSize();    for(int    i=0;    i    <    elements.length;    i++)    {    regression.addData(yArray[i],    elements[i]);    }    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
116	[BUG]  [BUGGY]  double  j=0;  j  <  yArray.length;  j++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  [CE]  >  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  double  j=0;  j  <  yArray.length;  j++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	double  j=0;  j  <  yArray.length;  j++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }	  int    j=0;    j    <    yArray.length;    j++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    return    size;    }    	non-compiled	[CE]  >  expected	7	None	replace
117	[BUG]  [BUGGY]  int  j=0;  j  <  xArray.length;  j++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  [CE]  >  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  int  j=0;  j  <  xArray.length;  j++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	int  j=0;  j  <  xArray.length;  j++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }	  int    j=0;    j    <    yArray.length;    j++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    return    size;    }    	non-compiled	[CE]  >  expected	7	None	replace
118	[BUG]  [BUGGY]  int  j=0;  j  <  yArray.length;  j++)  {  double  size  =  regression.getSize();  [CE]  >  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  int  j=0;  j  <  yArray.length;  j++)  {  double  size  =  regression.getSize();  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	int  j=0;  j  <  yArray.length;  j++)  {  double  size  =  regression.getSize();	  int    j=0;    j    <    yArray.length;    j++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    return    size;    }    	non-compiled	[CE]  >  expected	7	None	replace
119	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  Double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }  [CE]  'else'  without  'if'  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  Double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  Double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    Double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'else'  without  'if'	47	None	replace
120	[BUG]  [BUGGY]  For(int  i=0;  i  <  yArray.length;  i++)  {  Double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  For(int  i=0;  i  <  yArray.length;  i++)  {  Double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	For(int  i=0;  i  <  yArray.length;  i++)  {  Double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    Double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	47	None	replace
121	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null)  {  return  correlation  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null)  {  return  correlation  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null)  {  return  correlation	  for(int    i=0;    i    <    xArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null)    {    return    correlation    	non-compiled	[CE]  ';'  expected	8	None	replace
122	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  [CE]  unclosed  string  literal  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(yArray[i]);    if(size    ==    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    	non-compiled	[CE]  unclosed  string  literal	91	None	replace
123	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covari  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covari  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covari	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null)    {    return    covari    	non-compiled	[CE]  ';'  expected	53	None	replace
124	[BUG]  [BUGGY]  for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covari  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covari  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covari	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null)    {    return    covari    	non-compiled	[CE]  ';'  expected	53	None	replace
125	[BUG]  [BUGGY]  For(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covari  [CE]  '.class'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  For(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covari  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	For(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covari	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null)    {    return    covari    	non-compiled	[CE]  '.class'  expected	53	None	replace
126	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covarianceM  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covarianceM  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covarianceM	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null)    {    return    covarianceM    	non-compiled	[CE]  ';'  expected	31	None	replace
127	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  >=  0)  {  throw  MathRuntimeException.createInvalidArray  dimensions  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  >=  0)  {  throw  MathRuntimeException.createInvalidArray  dimensions  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  >=  0)  {  throw  MathRuntimeException.createInvalidArray  dimensions	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size!=    0)    {    throw    MathRuntimeException.createInvalidArray    dimensions    	non-compiled	[CE]  ';'  expected	56	None	replace
128	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createInvalidArray  dimensions  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createInvalidArray  dimensions  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createInvalidArray  dimensions	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size!=    0)    {    throw    MathRuntimeException.createInvalidArray    dimensions    	non-compiled	[CE]  ';'  expected	56	None	replace
129	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size    ==    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "    	non-compiled	[CE]  unclosed  string  literal	28	None	replace
130	[BUG]  [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  return  regression.getR();  }  [CE]  'else'  without  'if'  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  return  regression.getR();  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=1;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  return  regression.getR();  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size!=    0)    {    return    regression.getR();    }    	non-compiled	[CE]  'else'  without  'if'	55	None	replace
131	[BUG]  [BUGGY]  return  regression.compareTo(yArray[0],  yArray[0].doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  return  regression.compareTo(yArray[0],  yArray[0].doubleValue());  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	return  regression.compareTo(yArray[0],  yArray[0].doubleValue());	  return    regression.compareTo(yArray[i],    yArray[i].doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	40	None	replace
132	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createInvalid  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createInvalid  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createInvalid	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size!=    0)    {    throw    MathRuntimeException.createInvalidArray    dimensions    	non-compiled	[CE]  ';'  expected	56	None	replace
133	[BUG]  [BUGGY]  regression.addData(yArray[i],  yArray[i]);  [CE]  cannot  find  symbol  i  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  regression.addData(yArray[i],  yArray[i]);  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	regression.addData(yArray[i],  yArray[i]);	  if(regression!=    null)    {    for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    	non-compiled	[CE]  cannot  find  symbol  i	12	None	replace
134	[BUG]  [BUGGY]  regression  =  regression.addData(yArray[i],  yArray[i]);  [CE]  cannot  find  symbol  i  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  regression  =  regression.addData(yArray[i],  yArray[i]);  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	regression  =  regression.addData(yArray[i],  yArray[i]);	  if(regression!=    null)    {    for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    	non-compiled	[CE]  cannot  find  symbol  i	12	None	replace
135	[BUG]  [BUGGY]  regression  =  regression.addData(xArray[i],  yArray[i]);  [CE]  cannot  find  symbol  i  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  regression  =  regression.addData(xArray[i],  yArray[i]);  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	regression  =  regression.addData(xArray[i],  yArray[i]);	  if(regression!=    null)    {    for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    	non-compiled	[CE]  cannot  find  symbol  i	12	None	replace
136	[BUG]  [BUGGY]  regression.addData(xArray[i],  yArray[i]);  [CE]  cannot  find  symbol  i  [FE]                          AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  regression.addData(xArray[i],  yArray[i]);  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	regression.addData(xArray[i],  yArray[i]);	  if(regression!=    null)    {    for(int    i=0;    i    <    xArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    	non-compiled	[CE]  cannot  find  symbol  i	12	None	replace
137	[BUG]  [BUGGY]  return  regression.compareTo(xArray[0],  yArray[0],  yArray[0]);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  return  regression.compareTo(xArray[0],  yArray[0],  yArray[0]);  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	return  regression.compareTo(xArray[0],  yArray[0],  yArray[0]);	  return    regression.compareTo(xArray[i],    yArray[i],    yArray[i]);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
138	[BUG]  [BUGGY]  for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covari  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covari  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covari	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix    ==    null    ||    covarianceMatri    	non-compiled	[CE]  ')'  expected	70	None	replace
139	[BUG]  [BUGGY]  double  size  =  yArray.getSize()  +  1;  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  double  size  =  yArray.getSize()  +  1;  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	double  size  =  yArray.getSize()  +  1;	  double    size    =    yArray.getSize();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
140	[BUG]  [BUGGY]  for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceM  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceM  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceM	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    covarianceM    	non-compiled	[CE]  ')'  expected	95	None	replace
141	[BUG]  [BUGGY]  for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null)    {    return    covari    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
142	[BUG]  [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covari  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covari  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=1;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covari	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null)    {    return    covari    	non-compiled	[CE]  ';'  expected	53	None	replace
143	[BUG]  [BUGGY]  for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covariance  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covariance  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covariance	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    covariance    	non-compiled	[CE]  ')'  expected	67	None	replace
144	[BUG]  [BUGGY]  int  i=1;  yArray.length  =  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  int  i=1;  yArray.length  =  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	int  i=1;  yArray.length  =  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }	  for(int    i=1;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    return    size;    }    	non-compiled	[CE]  ';'  expected	48	None	replace
145	[BUG]  [BUGGY]  int  i=0;  yArray.length  =  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  int  i=0;  yArray.length  =  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	int  i=0;  yArray.length  =  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }	  int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    return    size;    }    	non-compiled	[CE]  ';'  expected	6	None	replace
146	[BUG]  [BUGGY]  for(int  i=1;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=1;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=1;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||	  for(int    i=1;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
147	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null	  for(int    i=1;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    	non-compiled	[CE]  ')'  expected	59	None	replace
148	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
149	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  Double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.   "  +  size  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  Double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.   "  +  size  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  Double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.   "  +  size	  for(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    array    dimensions.       "    +    size    	non-compiled	[CE]  	66	None	replace
150	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(	  for(int    i=0;    i    <    xArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size!=    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
151	[BUG]  [BUGGY]  if(regression!=  null)  {  if(yArray.length  ==  yArray.length)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  if(regression!=  null)  {  if(yArray.length  ==  yArray.length)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	if(regression!=  null)  {  if(yArray.length  ==  yArray.length)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException	  if(yArray.length    ==    yArray.length)    {    for(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	76	None	replace
152	[BUG]  [BUGGY]  if(yArray.length  ==  yArray.length)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  if(yArray.length  ==  yArray.length)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	if(yArray.length  ==  yArray.length)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException	  if(yArray.length    ==    yArray.length)    {    for(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	76	None	replace
153	[BUG]  [BUGGY]  for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  co  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  co  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  co	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    co    	non-compiled	[CE]  ')'  expected	68	None	replace
154	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  co!=  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  co!=  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  co!=	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    co    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
155	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size    ==    0)    {    throw    MathRuntimeException.createIllegalArgumentException(    	non-compiled	[CE]  ';'  expected	34	None	replace
156	[BUG]  [BUGGY]  for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covariance  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covariance  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covariance	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null)    {    return    covarianceMa    	non-compiled	[CE]  ';'  expected	90	None	replace
157	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException(  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException(  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException(	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(yArray[i]);    if(size    ==    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
158	[BUG]  [BUGGY]  regression.addData(yArray[i]);  [CE]  cannot  find  symbol  i  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  regression.addData(yArray[i]);  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	regression.addData(yArray[i]);	  if(regression!=    null)    {    for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i]);    }    	non-compiled	[CE]  cannot  find  symbol  i	65	None	replace
159	[BUG]  [BUGGY]  regression  =  regression.addData(yArray[i]);  [CE]  cannot  find  symbol  i  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  regression  =  regression.addData(yArray[i]);  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	regression  =  regression.addData(yArray[i]);	  if(regression!=    null)    {    for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i]);    }    	non-compiled	[CE]  cannot  find  symbol  i	65	None	replace
160	[BUG]  [BUGGY]  return  regression.compareTo(xArray[yArray.length]);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  return  regression.compareTo(xArray[yArray.length]);  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	return  regression.compareTo(xArray[yArray.length]);	  return    regression.compareTo(xArray[i]);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
161	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  outMatrix.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatrix.  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  RealMatrix  covarianceMatrix  =  outMatrix.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatrix.  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	RealMatrix  covarianceMatrix  =  outMatrix.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatrix.	  RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    covarianceMatrix.    	non-compiled	[CE]  <identifier>  expected	24	None	replace
162	[BUG]  [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix    ==    null    ||    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
163	[BUG]  [BUGGY]  return  regression.compareTo(xArray[i],  yArray[i]  +  yArray.length);  [CE]  cannot  find  symbol  i  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  return  regression.compareTo(xArray[i],  yArray[i]  +  yArray.length);  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	return  regression.compareTo(xArray[i],  yArray[i]  +  yArray.length);	  return    regression.compareTo(xArray[i],    yArray[i]    +    size);    	non-compiled	[CE]  cannot  find  symbol  i	27	None	replace
164	[BUG]  [BUGGY]  double  i=0;  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  double  i=0;  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	double  i=0;  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }	  int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	75	None	replace
165	[BUG]  [BUGGY]  int  i=0;  yArray.length  =  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  int  i=0;  yArray.length  =  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	int  i=0;  yArray.length  =  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }	  int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	75	None	replace
166	[BUG]  [BUGGY]  if(regression!=  null)  {  int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }  [CE]  >  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  if(regression!=  null)  {  int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	if(regression!=  null)  {  int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }	  int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "   ");    }    	non-compiled	[CE]  >  expected	75	None	replace
167	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  return  regression.getR();  }  [CE]  'else'  without  'if'  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  return  regression.getR();  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  return  regression.getR();  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size    ==    0)    {    throw    MathRuntimeException.createInvalidArray    dimensions    	non-compiled	[CE]  'else'  without  'if'	54	None	replace
168	[BUG]  [BUGGY]  int  j=1;  j  <  yArray.length;  j++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  [CE]  >  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  int  j=1;  j  <  yArray.length;  j++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	int  j=1;  j  <  yArray.length;  j++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }	  int    j=0;    j    <    yArray.length;    j++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    return    size;    }    	non-compiled	[CE]  >  expected	7	None	replace
169	[BUG]  [BUGGY]  For(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  [CE]  '.class'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  For(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	For(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||	  For(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix    ==    null    ||    	non-compiled	[CE]  '.class'  expected	39	None	replace
170	[BUG]  [BUGGY]  if(yArray.length  ==  0)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  if(yArray.length  ==  0)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	if(yArray.length  ==  0)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  }	  if(yArray.length    ==    yArray.length)    {    for(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    return    size;    }    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
171	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  Double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  [CE]  'else'  without  'if'  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  Double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  Double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }	  if(yArray.length    ==    yArray.length)    {    for(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    return    size;    }    }    	non-compiled	[CE]  'else'  without  'if'	73	None	replace
172	[BUG]  [BUGGY]  Double  size  =  yArray.getSize();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  Double  size  =  yArray.getSize();  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	Double  size  =  yArray.getSize();	  double    size    =    xArray.getSize();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
173	[BUG]  [BUGGY]  double  size  =  xxArray.getSize();  [CE]  cannot  find  symbol  xxArray  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  double  size  =  xxArray.getSize();  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	double  size  =  xxArray.getSize();	  double    size    =    xArray.getSize();    	non-compiled	[CE]  cannot  find  symbol  xxArray	44	None	replace
174	[BUG]  [BUGGY]  return  regression.compareTo(xArray[0],  yArray[0].doubleValue());  [CE]  double  cannot  be  dereferenced  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  return  regression.compareTo(xArray[0],  yArray[0].doubleValue());  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	return  regression.compareTo(xArray[0],  yArray[0].doubleValue());	  return    regression.compareTo(xArray[i],    yArray[i].doubleValue());    	non-compiled	[CE]  double  cannot  be  dereferenced	26	None	replace
175	[BUG]  [BUGGY]  return  regression.compareTo(xArray[yArray[i],  yArray[i].doubleValue());  [CE]  ']'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  return  regression.compareTo(xArray[yArray[i],  yArray[i].doubleValue());  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	return  regression.compareTo(xArray[yArray[i],  yArray[i].doubleValue());	  return    regression.compareTo(xArray[i],    yArray[i].doubleValue());    	non-compiled	[CE]  ']'  expected	26	None	replace
176	[BUG]  [BUGGY]  for(int  i=0;  i  <  data.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  data.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  data.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||	  for(int    i=0;    i    <    outMatrix.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
177	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  outMatrix.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covarianceMatrix.  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  RealMatrix  covarianceMatrix  =  outMatrix.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covarianceMatrix.  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	RealMatrix  covarianceMatrix  =  outMatrix.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covarianceMatrix.	  RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix    ==    null    ||    covarianceMatrix.    	non-compiled	[CE]  <identifier>  expected	38	None	replace
178	[BUG]  [BUGGY]  RealMatrix  covarianceMatrix  =  yArray.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covarianceMatrix.  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  RealMatrix  covarianceMatrix  =  yArray.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covarianceMatrix.  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	RealMatrix  covarianceMatrix  =  yArray.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covarianceMatrix.	  RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix    ==    null    ||    covarianceMatrix.    	non-compiled	[CE]  <identifier>  expected	38	None	replace
179	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  regression.getR();  }  [CE]  'else'  without  'if'  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  regression.getR();  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  regression.getR();  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    array    dimensions.    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
180	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions  [CE]  unclosed  string  literal  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions	  for(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    array    dimensions.    	non-compiled	[CE]  unclosed  string  literal	4	None	replace
181	[BUG]  [BUGGY]  double  size  =  regression.computeSize(yArray.length,  yArray.length);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  double  size  =  regression.computeSize(yArray.length,  yArray.length);  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	double  size  =  regression.computeSize(yArray.length,  yArray.length);	  double    size    =    regression.computeSize(yArray.length);    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
182	[BUG]  [BUGGY]  regression.addData(yArray[0],  yArray[1]);  [CE]  missing  return  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  regression.addData(yArray[0],  yArray[1]);  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	regression.addData(yArray[0],  yArray[1]);	  if(regression!=    null)    {    for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    	non-compiled	[CE]  missing  return  statement	14	None	replace
183	[BUG]  [BUGGY]  for(int  i=0;  i  <  nVars;  i++)  {  double  size[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [CE]  'else'  without  'if'  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  nVars;  i++)  {  double  size[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  nVars;  i++)  {  double  size[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }	  for(int    i=0;    i    <    size;    i++)    {    double    size[]    =    getSize();    for(int    i=0;    i    <    size;    i++)    {    regression.addData(yArray[i],    size[i]);    }    	non-compiled	[CE]  'else'  without  'if'	20	None	replace
184	[BUG]  [BUGGY]  return  regression.compareTo(xArray[yArray[i],  yArray[i]  +  size);  [CE]  ']'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  return  regression.compareTo(xArray[yArray[i],  yArray[i]  +  size);  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	return  regression.compareTo(xArray[yArray[i],  yArray[i]  +  size);	  return    regression.compareTo(xArray[yArray[i],    yArray[i]);    	non-compiled	[CE]  ']'  expected	63	None	replace
185	[BUG]  [BUGGY]  double[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  double[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	double[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }	  for(int    i=0;    i    <    size;    i++)    {    double[]    =    getSize();    for(int    i=0;    i    <    size;    i++)    {    regression.addData(yArray[i],    size[i]);    }    	non-compiled	[CE]  not  a  statement	21	None	replace
186	[BUG]  [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
187	[BUG]  [BUGGY]  For(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  [CE]  '.class'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  For(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	For(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||	  For(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    	non-compiled	[CE]  '.class'  expected	25	None	replace
188	[BUG]  [BUGGY]  int  i=1;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(  [CE]  >  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  int  i=1;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	int  i=1;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(	  int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size!=    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "    	non-compiled	[CE]  >  expected	94	None	replace
189	[BUG]  [BUGGY]  int  i=1;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "  [CE]  >  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  int  i=1;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	int  i=1;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "	  int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size!=    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "    	non-compiled	[CE]  >  expected	94	None	replace
190	[BUG]  [BUGGY]  int  i=1;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.create  [CE]  >  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  int  i=1;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.create  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	int  i=1;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.create	  int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size!=    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "    	non-compiled	[CE]  >  expected	94	None	replace
191	[BUG]  [BUGGY]  int  i=1;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException  [CE]  >  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  int  i=1;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	int  i=1;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException	  int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size!=    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "    	non-compiled	[CE]  >  expected	94	None	replace
192	[BUG]  [BUGGY]  for(int  i=1;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=1;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=1;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||	  for(int    i=1;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix    ==    null    ||    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
193	[BUG]  [BUGGY]  double  i=0;  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.   "  +  size);  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  double  i=0;  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.   "  +  size);  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	double  i=0;  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.   "  +  size);  }	  int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    array    dimensions.       "    +    size);    }    	non-compiled	[CE]  not  a  statement	85	None	replace
194	[BUG]  [BUGGY]  int  i=0;  yArray.length  =  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.   "  +  size);  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  int  i=0;  yArray.length  =  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.   "  +  size);  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	int  i=0;  yArray.length  =  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.   "  +  size);  }	  int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    array    dimensions.       "    +    size);    }    	non-compiled	[CE]  	85	None	replace
195	[BUG]  [BUGGY]  double  i=0;  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  double  i=0;  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	double  i=0;  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.	  int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    array    dimensions.       "    +    size);    }    	non-compiled	[CE]  not  a  statement	85	None	replace
196	[BUG]  [BUGGY]  int  i=0;  yArray.length  =  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  int  i=0;  yArray.length  =  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	int  i=0;  yArray.length  =  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.	  int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    array    dimensions.       "    +    size);    }    	non-compiled	[CE]  	85	None	replace
197	[BUG]  [BUGGY]  if(regression!=  null)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatrix.equals(  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  if(regression!=  null)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatrix.equals(  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	if(regression!=  null)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatrix.equals(	  RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    covarianceMatrix.equals(    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
198	[BUG]  [BUGGY]  int  size  =  getSize();  for(int  i=0;  i  <  elements.length;  i++)  {  regression.addData(yArray[i],  size);  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  int  size  =  getSize();  for(int  i=0;  i  <  elements.length;  i++)  {  regression.addData(yArray[i],  size);  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	int  size  =  getSize();  for(int  i=0;  i  <  elements.length;  i++)  {  regression.addData(yArray[i],  size);  }	  double[]    elements    =    getSize();    for(int    i=0;    i    <    elements.length;    i++)    {    regression.addData(yArray[i],    elements[i]);    }    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
199	[BUG]  [BUGGY]  int  size  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  int  size  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	int  size  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  double[]    elements    =    getSize();    for(int    i=0;    i    <    elements.length;    i++)    {    regression.addData(yArray[i],    elements[i]);    }    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
200	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covariance!=  '  [CE]  illegal  line  end  in  character  literal  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covariance!=  '  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covariance!=  '	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix    ==    null    ||    covariance    	non-compiled	[CE]  illegal  line  end  in  character  literal	71	None	replace
201	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double  size[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]	  for(int    i=0;    i    <    xArray.length;    i++)    {    double    size[]    =    getSize();    for(int    i=0;    i    <    size;    i++)    {    regression.addData(yArray[i],    size[i]);    }    	non-compiled	[CE]  ')'  expected	50	None	replace
202	[BUG]  [BUGGY]  double  size  =  this.covarianceMatrix.getSize();  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  double  size  =  this.covarianceMatrix.getSize();  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	double  size  =  this.covarianceMatrix.getSize();	  double    size    =    this.regression.getSize();    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	45	None	replace
203	[BUG]  [BUGGY]  for(int  i=0;  i  <  nVars;  i++)  {  double  size[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(xArray[i],  size[i]);  }  [CE]  'else'  without  'if'  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  nVars;  i++)  {  double  size[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(xArray[i],  size[i]);  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  nVars;  i++)  {  double  size[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(xArray[i],  size[i]);  }	  for(int    i=0;    i    <    size;    i++)    {    double    size[]    =    getSize();    for(int    i=0;    i    <    size;    i++)    {    regression.addData(xArray[i],    size[i]);    }    	non-compiled	[CE]  'else'  without  'if'	22	None	replace
204	[BUG]  [BUGGY]  double  size  =  yArray.computeSize(regression,  xArray.length);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  double  size  =  yArray.computeSize(regression,  xArray.length);  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	double  size  =  yArray.computeSize(regression,  xArray.length);	  double    size    =    regression.computeSize(xArray,    yArray.length);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
205	[BUG]  [BUGGY]  for(int  i=1;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=1;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=1;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation	  for(int    i=0;    i    <    xArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null)    {    return    correlation    	non-compiled	[CE]  ';'  expected	8	None	replace
206	[BUG]  [BUGGY]  for(int  i=0;  i  <  data.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  data.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  data.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||	  for(int    i=0;    i    <    outMatrix.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix    ==    null    ||    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
207	[BUG]  [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  RealMatrix  matrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=1;  i  <  yArray.length;  i++)  {  RealMatrix  matrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=1;  i  <  yArray.length;  i++)  {  RealMatrix  matrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    matrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null)    {    return    correlation    	non-compiled	[CE]  ';'  expected	64	None	replace
208	[BUG]  [BUGGY]  For(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation  [CE]  '.class'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  For(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	For(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation	  For(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null)    {    return    correlation    	non-compiled	[CE]  '.class'  expected	10	None	replace
209	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions  }  [CE]  unclosed  string  literal  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(yArray[i]);    if(size!=    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    array    dimensions    	non-compiled	[CE]  unclosed  string  literal	79	None	replace
210	[BUG]  [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covarianceM  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covarianceM  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covarianceM	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null)    {    return    covarianceM    	non-compiled	[CE]  ';'  expected	31	None	replace
211	[BUG]  [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covariance  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covariance  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covariance	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null)    {    return    covariance    	non-compiled	[CE]  ';'  expected	30	None	replace
212	[BUG]  [BUGGY]  if(regression.getR()!=  null)  {  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  if(regression.getR()!=  null)  {  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	if(regression.getR()!=  null)  {  for(int  i=0;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||	  for(int    i=0;    i    <    xArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    covarianceMatrix.equals(    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
213	[BUG]  [BUGGY]  if(regression!=  null)  {  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  if(regression!=  null)  {  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	if(regression!=  null)  {  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  if(regression!=    null)    {    for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i],    yArray[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
214	[BUG]  [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceM  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceM  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceM	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    covarianceM    	non-compiled	[CE]  ')'  expected	95	None	replace
215	[BUG]  [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
216	[BUG]  [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(  [CE]  >  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(	  for(int    i=0;    i    <    xArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size!=    0)    {    throw    MathRuntimeException.createIllegalArgumentException(    	non-compiled	[CE]  >  expected	57	None	replace
217	[BUG]  [BUGGY]  if(yArray.length  ==  0)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  if(yArray.length  ==  0)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	if(yArray.length  ==  0)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||	  For(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix    ==    null    ||    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
218	[BUG]  [BUGGY]  for(int  i=0;  i  <  nVars;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  nVars;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  nVars;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation	  for(int    i=0;    i    <    size;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null)    {    return    correlation    	non-compiled	[CE]  ';'  expected	74	None	replace
219	[BUG]  [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covarianceMa  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covarianceMa  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covarianceMa	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix    ==    null    ||    covarianceMa    	non-compiled	[CE]  ')'  expected	69	None	replace
220	[BUG]  [BUGGY]  for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covarianceMa  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covarianceMa  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  outMatrix.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covarianceMa	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix    ==    null    ||    covarianceMa    	non-compiled	[CE]  ')'  expected	69	None	replace
221	[BUG]  [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.create  [CE]  >  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.create  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.create	  int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size!=    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "    	non-compiled	[CE]  >  expected	94	None	replace
222	[BUG]  [BUGGY]  int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "  [CE]  >  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "	  int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size!=    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "    	non-compiled	[CE]  >  expected	94	None	replace
223	[BUG]  [BUGGY]  return  regression.compareTo(yArray[i],  yArray[i].value());  [CE]  cannot  find  symbol  i  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  return  regression.compareTo(yArray[i],  yArray[i].value());  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	return  regression.compareTo(yArray[i],  yArray[i].value());	  return    regression.compareTo(yArray[i],    yArray[i].doubleValue());    	non-compiled	[CE]  cannot  find  symbol  i	40	None	replace
224	[BUG]  [BUGGY]  int  j=0;  j  <  nVars;  j++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  [CE]  >  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  int  j=0;  j  <  nVars;  j++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	int  j=0;  j  <  nVars;  j++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }	  int    j=0;    j    <    yArray.length;    j++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    return    size;    }    	non-compiled	[CE]  >  expected	7	None	replace
225	[BUG]  [BUGGY]  int  size  =  getSize();  for(int  i=0;  i  <  elements.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  int  size  =  getSize();  for(int  i=0;  i  <  elements.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	int  size  =  getSize();  for(int  i=0;  i  <  elements.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  double[]    elements    =    getSize();    for(int    i=0;    i    <    elements.length;    i++)    {    regression.addData(yArray[i],    elements[i]);    }    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
226	[BUG]  [BUGGY]  double[]  elements  =  getElements();  for(int  i=0;  i  <  elements.length;  i++)  {  regression.addData(yArray[i],  elements[i]);  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  double[]  elements  =  getElements();  for(int  i=0;  i  <  elements.length;  i++)  {  regression.addData(yArray[i],  elements[i]);  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	double[]  elements  =  getElements();  for(int  i=0;  i  <  elements.length;  i++)  {  regression.addData(yArray[i],  elements[i]);  }	  double[]    elements    =    getSize();    for(int    i=0;    i    <    elements.length;    i++)    {    regression.addData(yArray[i],    elements[i]);    }    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
227	[BUG]  [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatri  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatri  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatri	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    covarianceMatri    	non-compiled	[CE]  ')'  expected	86	None	replace
228	[BUG]  [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMa  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMa  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMa	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    covarianceMa    	non-compiled	[CE]  ')'  expected	96	None	replace
229	[BUG]  [BUGGY]  for(int  i=0;  i  <  size.length;  i++)  {  double[]  yArray  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  'else'  without  'if'  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  size.length;  i++)  {  double[]  yArray  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  size.length;  i++)  {  double[]  yArray  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  for(int    i=0;    i    <    size.length;    i++)    {    double    size[]    =    getSize();    for(int    i=0;    i    <    size;    i++)    {    regression.addData(yArray[i],    size[i]);    }    	non-compiled	[CE]  'else'  without  'if'	52	None	replace
230	[BUG]  [BUGGY]  for(int  i=0;  i  <  size.length;  i++)  {  double[]  yArray  =  getSize();  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  size.length;  i++)  {  double[]  yArray  =  getSize();  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  size.length;  i++)  {  double[]  yArray  =  getSize();  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[	  for(int    i=0;    i    <    size.length;    i++)    {    double    size[]    =    getSize();    for(int    i=0;    i    <    size;    i++)    {    regression.addData(yArray[i],    size[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
231	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "In  [CE]  unclosed  string  literal  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "In  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "In	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size!=    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "In    	non-compiled	[CE]  unclosed  string  literal	46	None	replace
232	[BUG]  [BUGGY]  return  regression.compareTo(xArray[i],  yArray[i].intValue());  [CE]  cannot  find  symbol  i  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  return  regression.compareTo(xArray[i],  yArray[i].intValue());  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	return  regression.compareTo(xArray[i],  yArray[i].intValue());	  return    regression.compareTo(xArray[i],    yArray[i].doubleValue());    	non-compiled	[CE]  cannot  find  symbol  i	26	None	replace
233	[BUG]  [BUGGY]  return  regression.compareTo(xArray[i],  yArray[i].value());  [CE]  cannot  find  symbol  i  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  return  regression.compareTo(xArray[i],  yArray[i].value());  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	return  regression.compareTo(xArray[i],  yArray[i].value());	  return    regression.compareTo(xArray[i],    yArray[i].doubleValue());    	non-compiled	[CE]  cannot  find  symbol  i	26	None	replace
234	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix[]  matrix  =  regression.getR();  if(covarianceMatrix!=  null)  {  return  correlation  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix[]  matrix  =  regression.getR();  if(covarianceMatrix!=  null)  {  return  correlation  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix[]  matrix  =  regression.getR();  if(covarianceMatrix!=  null)  {  return  correlation	  For(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null)    {    return    correlation    	non-compiled	[CE]  ';'  expected	10	None	replace
235	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions  }  [CE]  unclosed  string  literal  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size    ==    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    array    dimensions    }    	non-compiled	[CE]  unclosed  string  literal	82	None	replace
236	[BUG]  [BUGGY]  int  i=0;  j  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }  [CE]  >  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  int  i=0;  j  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	int  i=0;  j  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }	  int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "   ");    }    	non-compiled	[CE]  >  expected	75	None	replace
237	[BUG]  [BUGGY]  &&  yArray.length  >  0)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  &&  yArray.length  >  0)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	&&  yArray.length  >  0)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid	  for(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    array    dimensions.       "    +    size    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
238	[BUG]  [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.   "  +  size  [CE]  >  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.   "  +  size  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.   "  +  size	  for(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    array    dimensions.       "    +    size    	non-compiled	[CE]  >  expected	66	None	replace
239	[BUG]  [BUGGY]  &&  yArray.length  >  1)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  &&  yArray.length  >  1)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	&&  yArray.length  >  1)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.	  for(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    array    dimensions.       "    +    size    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
240	[BUG]  [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covariance!=  ')'  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covariance!=  ')'  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covariance!=  ')'	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix    ==    null    ||    covariance    	non-compiled	[CE]  ')'  expected	71	None	replace
241	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covariance!=  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covariance!=  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covariance!=	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix    ==    null    ||    covariance    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
242	[BUG]  [BUGGY]  int  i=1;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.   "  +  size);  }  [CE]  >  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  int  i=1;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.   "  +  size);  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	int  i=1;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.   "  +  size);  }	  int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    array    dimensions.       "    +    size);    }    	non-compiled	[CE]  >  expected	85	None	replace
243	[BUG]  [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [CE]  cannot  find  symbol  size  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }	  for(int    i=0;    i    <    size;    i++)    {    double[]    =    getSize();    for(int    i=0;    i    <    size;    i++)    {    regression.addData(yArray[i],    size[i]);    }    	non-compiled	[CE]  cannot  find  symbol  size	21	None	replace
244	[BUG]  [BUGGY]  if(yArray.length  ==  yArray.length)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  [CE]  unclosed  string  literal  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  if(yArray.length  ==  yArray.length)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	if(yArray.length  ==  yArray.length)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid	  for(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    array    dimensions.    	non-compiled	[CE]  unclosed  string  literal	4	None	replace
245	[BUG]  [BUGGY]  if(yArray.length  ==  yArray.length)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.  [CE]  unclosed  string  literal  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  if(yArray.length  ==  yArray.length)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	if(yArray.length  ==  yArray.length)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.	  for(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    array    dimensions.    	non-compiled	[CE]  unclosed  string  literal	4	None	replace
246	[BUG]  [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "  [CE]  >  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(yArray[i]);    if(size!=    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "    	non-compiled	[CE]  >  expected	93	None	replace
247	[BUG]  [BUGGY]  return  regression.compareTo(xArray[i],  yArray[i],  yArray[i].doubleValue());  [CE]  cannot  find  symbol  i  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  return  regression.compareTo(xArray[i],  yArray[i],  yArray[i].doubleValue());  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	return  regression.compareTo(xArray[i],  yArray[i],  yArray[i].doubleValue());	  return    regression.compareTo(xArray[i],    yArray[i],    yArray[i]);    	non-compiled	[CE]  cannot  find  symbol  i	72	None	replace
248	[BUG]  [BUGGY]  return  regression.compareTo(y[i],  xArray[i],  yArray[i]);  [CE]  cannot  find  symbol  y  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  return  regression.compareTo(y[i],  xArray[i],  yArray[i]);  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	return  regression.compareTo(y[i],  xArray[i],  yArray[i]);	  return    regression.compareTo(xArray[i],    yArray[i],    yArray[i]);    	non-compiled	[CE]  cannot  find  symbol  y	72	None	replace
249	[BUG]  [BUGGY]  if(yArray.length  ==  0)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  if(yArray.length  ==  0)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	if(yArray.length  ==  0)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||	  For(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
250	[BUG]  [BUGGY]  if(yArray.length  ==  0)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  if(yArray.length  ==  0)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	if(yArray.length  ==  0)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null	  For(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    	non-compiled	[CE]  ')'  expected	25	None	replace
251	[BUG]  [BUGGY]  if(regression!=  null)  {  For(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.   "  +  size);  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  if(regression!=  null)  {  For(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.   "  +  size);  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	if(regression!=  null)  {  For(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.   "  +  size);  }	  For(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    array    dimensions.       "    +    size);    }    	non-compiled	[CE]  	3	None	replace
252	[BUG]  [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covariance!=  ')'  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covariance!=  ')'  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covariance!=  ')'	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    covariance    	non-compiled	[CE]  ')'  expected	67	None	replace
253	[BUG]  [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  double[]  yArray  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  'else'  without  'if'  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  double[]  yArray  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  size;  i++)  {  double[]  yArray  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  for(int    i=0;    i    <    xArray.length;    i++)    {    double    size[]    =    getSize();    for(int    i=0;    i    <    size;    i++)    {    regression.addData(yArray[i],    size[i]);    }    	non-compiled	[CE]  'else'  without  'if'	50	None	replace
254	[BUG]  [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  Double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }  [CE]  >  expected  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  Double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	int  i=0;  i  <  yArray.length;  i++)  {  Double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    Double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "   ");    }    	non-compiled	[CE]  >  expected	47	None	replace
255	[BUG]  [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covarianceMatri  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covarianceMatri  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covarianceMatri	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix    ==    null    ||    covarianceMatri    	non-compiled	[CE]  ')'  expected	70	None	replace
256	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covarianceM  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covarianceM  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix  ==  null  ||  covarianceM	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix    ==    null    ||    covarianceMatri    	non-compiled	[CE]  ')'  expected	70	None	replace
257	[BUG]  [BUGGY]  if(regression.getCovarianceMatrix()!=  null)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatrix.equals(  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  if(regression.getCovarianceMatrix()!=  null)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatrix.equals(  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	if(regression.getCovarianceMatrix()!=  null)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatrix.equals(	  RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    covarianceMatrix.equals(    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
258	[BUG]  [BUGGY]  if(relative.getCovarianceMatrix()!=  null)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatrix.equals(  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  if(relative.getCovarianceMatrix()!=  null)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatrix.equals(  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	if(relative.getCovarianceMatrix()!=  null)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatrix.equals(	  RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    covarianceMatrix.equals(    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
259	[BUG]  [BUGGY]  for(int  i=1;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=1;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=1;  i  <  xArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||	  for(int    i=1;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
260	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "  }  [CE]  unclosed  string  literal  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "  }	  for(int    i=0;    i    <    xArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size!=    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "    	non-compiled	[CE]  unclosed  string  literal	29	None	replace
261	[BUG]  [BUGGY]  for(int  i=0;  i  <  length;  i++)  {  double  size[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [CE]  'else'  without  'if'  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  length;  i++)  {  double  size[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  length;  i++)  {  double  size[]  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }	  for(int    i=0;    i    <    size;    i++)    {    double    size[]    =    getSize();    for(int    i=0;    i    <    size;    i++)    {    regression.addData(yArray[i],    size[i]);    }    	non-compiled	[CE]  'else'  without  'if'	20	None	replace
262	[BUG]  [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  double[]  yArray  =  getSize();  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  'else'  without  'if'  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  double[]  yArray  =  getSize();  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  size;  i++)  {  double[]  yArray  =  getSize();  for(int  i=0;  i  <  yArray.length;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  for(int    i=0;    i    <    size;    i++)    {    double    size[]    =    getSize();    for(int    i=0;    i    <    size;    i++)    {    regression.addData(yArray[i],    size[i]);    }    	non-compiled	[CE]  'else'  without  'if'	20	None	replace
263	[BUG]  [BUGGY]  double  size  =  yArray.size();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  double  size  =  yArray.size();  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	double  size  =  yArray.size();	  double    size    =    yArray.getSize();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
264	[BUG]  [BUGGY]  double  size  =  yArray.length;  [CE]  missing  return  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  double  size  =  yArray.length;  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	double  size  =  yArray.length;	  double    size    =    yArray.getSize();    	non-compiled	[CE]  missing  return  statement	43	None	replace
265	[BUG]  [BUGGY]  for(int  i=0;  i  <  sizeArray.length;  i++)  {  double[]  yArray  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [CE]  'else'  without  'if'  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  sizeArray.length;  i++)  {  double[]  yArray  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  sizeArray.length;  i++)  {  double[]  yArray  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  yArray[i]);  }	  for(int    i=0;    i    <    sizeArray.length;    i++)    {    double    size[]    =    getSize();    for(int    i=0;    i    <    size;    i++)    {    regression.addData(yArray[i],    size[i]);    }    	non-compiled	[CE]  'else'  without  'if'	51	None	replace
266	[BUG]  [BUGGY]  return  regression.compareTo(yArray[0],  xArray[1]);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  return  regression.compareTo(yArray[0],  xArray[1]);  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	return  regression.compareTo(yArray[0],  xArray[1]);	  return    regression.compareTo(xArray[0],    yArray[0]);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
267	[BUG]  [BUGGY]  if(yArray.length!=  yArray.length)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  if(yArray.length!=  yArray.length)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	if(yArray.length!=  yArray.length)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "	  if(yArray.length    ==    yArray.length)    {    for(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "   ");    }    	non-compiled	[CE]  unclosed  string  literal	76	None	replace
268	[BUG]  [BUGGY]  if(yArray.length  ==  yArray.length)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException(  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  if(yArray.length  ==  yArray.length)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException(  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	if(yArray.length  ==  yArray.length)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException(	  if(yArray.length    ==    yArray.length)    {    for(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
269	[BUG]  [BUGGY]  if(regression!=  null)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatrix.  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  if(regression!=  null)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatrix.  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	if(regression!=  null)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  covarianceMatrix.	  RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    covarianceMatrix.    	non-compiled	[CE]  <identifier>  expected	24	None	replace
270	[BUG]  [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  co  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  co  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null  ||  co	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null    ||    co    	non-compiled	[CE]  ')'  expected	68	None	replace
271	[BUG]  [BUGGY]  return  regression.compareTo(yArray[0],  yArray[0].compareTo(yArray[1]));  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  return  regression.compareTo(yArray[0],  yArray[0].compareTo(yArray[1]));  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	return  regression.compareTo(yArray[0],  yArray[0].compareTo(yArray[1]));	  return    regression.compareTo(yArray[0],    yArray[0]);    	non-compiled	[CE]  double  cannot  be  dereferenced	19	None	replace
272	[BUG]  [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  return  regression.getR();  }  [CE]  >  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  return  regression.getR();  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  return  regression.getR();  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size!=    0)    {    return    regression.getR();    }    	non-compiled	[CE]  >  expected	55	None	replace
273	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  return  regression.getR();  }  [CE]  'else'  without  'if'  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  return  regression.getR();  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  return  regression.getR();  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size!=    0)    {    return    regression.getR();    }    	non-compiled	[CE]  'else'  without  'if'	55	None	replace
274	[BUG]  [BUGGY]  for(int  i=0;  i  <  length;  i++)  {  double[]  yArray  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [CE]  'else'  without  'if'  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  length;  i++)  {  double[]  yArray  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  length;  i++)  {  double[]  yArray  =  getSize();  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i],  size[i]);  }	  for(int    i=0;    i    <    size;    i++)    {    double[]    yArray    =    getSize();    for(int    i=0;    i    <    size;    i++)    {    regression.addData(yArray[i],    size[i]);    }    	non-compiled	[CE]  'else'  without  'if'	89	None	replace
275	[BUG]  [BUGGY]  int  i=0;  i  <  size;  i++)  {  regression.addData(xArray[i],  size[i]);  }  [CE]  >  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  int  i=0;  i  <  size;  i++)  {  regression.addData(xArray[i],  size[i]);  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	int  i=0;  i  <  size;  i++)  {  regression.addData(xArray[i],  size[i]);  }	  for(int    i=0;    i    <    size;    i++)    {    double    size[]    =    getSize();    for(int    i=0;    i    <    size;    i++)    {    regression.addData(xArray[i],    size[i]);    }    	non-compiled	[CE]  >  expected	22	None	replace
276	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createInvalidArray  dimensions  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createInvalidArray  dimensions  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createInvalidArray  dimensions	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size    ==    0)    {    throw    MathRuntimeException.createInvalidArray    dimensions    	non-compiled	[CE]  ';'  expected	54	None	replace
277	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createInvalidArray  dimensions  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createInvalidArray  dimensions  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createInvalidArray  dimensions  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size    ==    0)    {    throw    MathRuntimeException.createInvalidArray    dimensions    	non-compiled	[CE]  ';'  expected	54	None	replace
278	[BUG]  [BUGGY]  if(regression!=  null)  {  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  if(regression!=  null)  {  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	if(regression!=  null)  {  for(int  i=0;  i  <  xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	  if(regression!=    null)    {    for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
279	[BUG]  [BUGGY]  if(regression!=  null)  {  for(int  i=0;  i  <  size;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  if(regression!=  null)  {  for(int  i=0;  i  <  size;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	if(regression!=  null)  {  for(int  i=0;  i  <  size;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }	  if(regression!=    null)    {    for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(xArray[i],    yArray[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
280	[BUG]  [BUGGY]  if(regression!=  null)  {  For(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  if(regression!=  null)  {  For(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	if(regression!=  null)  {  For(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }	  For(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	42	None	replace
281	[BUG]  [BUGGY]  if(regression!=  null)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }  [CE]  'else'  without  'if'  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  if(regression!=  null)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	if(regression!=  null)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }	  For(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'else'  without  'if'	42	None	replace
282	[BUG]  [BUGGY]  if(regression!=  null)  {  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  if(regression!=  null)  {  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i]);  }  [BUGGY]      }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	if(regression!=  null)  {  for(int  i=0;  i  <  size;  i++)  {  regression.addData(yArray[i]);  }	  if(regression!=    null)    {    for(int    i=0;    i    <    yArray.length;    i++)    {    regression.addData(yArray[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
283	[BUG]  [BUGGY]  if(regression!=  null)  {  for(int  i=0;  i  <  xArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }  [CE]  'else'  without  'if'  [FE]            AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  if(regression!=  null)  {  for(int  i=0;  i  <  xArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	if(regression!=  null)  {  for(int  i=0;  i  <  xArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( " ");  }	  for(int    i=0;    i    <    xArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'else'  without  'if'	41	None	replace
284	[BUG]  [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  RealMatrix  matrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  RealMatrix  matrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  size;  i++)  {  RealMatrix  matrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  correlation	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    matrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null)    {    return    correlation    	non-compiled	[CE]  ';'  expected	64	None	replace
285	[BUG]  [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions  }  [CE]  unclosed  string  literal  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  xArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions  }	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size!=    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    array    dimensions    }    	non-compiled	[CE]  unclosed  string  literal	78	None	replace
286	[BUG]  [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covari  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covari  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covari	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null)    {    return    covari    	non-compiled	[CE]  ';'  expected	53	None	replace
287	[BUG]  [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covariance  [CE]  >  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covariance  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	int  i=0;  i  <  yArray.length;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covariance	  for(int    i=0;    i    <    xArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null)    {    return    covariance    	non-compiled	[CE]  >  expected	33	None	replace
288	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size    ==    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "In    	non-compiled	[CE]  unclosed  string  literal	35	None	replace
289	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "In  [CE]  unclosed  string  literal  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "In  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "In	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size    ==    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "In    	non-compiled	[CE]  unclosed  string  literal	35	None	replace
290	[BUG]  [BUGGY]  if(regression!=  null)  {  for(int  i=0;  i  <  xArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.   "  +  size);  }  [CE]  'else'  without  'if'  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  if(regression!=  null)  {  for(int  i=0;  i  <  xArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.   "  +  size);  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	if(regression!=  null)  {  for(int  i=0;  i  <  xArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  throw  MathRuntimeException.createIllegalArgumentException( "Invalid  array  dimensions.   "  +  size);  }	  for(int    i=0;    i    <    xArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    throw    MathRuntimeException.createIllegalArgumentException(   "Invalid    array    dimensions.       "    +    size);    }    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
291	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  }	  if(yArray.length    ==    yArray.length)    {    for(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    return    size;    }    }    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
292	[BUG]  [BUGGY]  if(yArray.length  >  0)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  if(yArray.length  >  0)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  }  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	if(yArray.length  >  0)  {  for(int  i=0;  i  <  yArray.length;  i++)  {  double  size  =  regression.getSize();  if(size  >  size)  {  return  size;  }  }	  if(yArray.length    ==    yArray.length)    {    for(int    i=0;    i    <    yArray.length;    i++)    {    double    size    =    regression.getSize();    if(size    >    size)    {    return    size;    }    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
293	[BUG]  [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covarianceMa  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covarianceMa  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  size;  i++)  {  RealMatrix  covarianceMatrix  =  regression.getCovarianceMatrix();  if(covarianceMatrix!=  null)  {  return  covarianceMa	  for(int    i=0;    i    <    yArray.length;    i++)    {    RealMatrix    covarianceMatrix    =    regression.getCovarianceMatrix();    if(covarianceMatrix!=    null)    {    return    covarianceMa    	non-compiled	[CE]  ';'  expected	90	None	replace
294	[BUG]  [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "  [CE]  >  expected  [FE]                AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException( "	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size    ==    0)    {    throw    MathRuntimeException.createIllegalArgumentException(   "    	non-compiled	[CE]  >  expected	28	None	replace
295	[BUG]  [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createInvalidArray  dimensions  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createInvalidArray  dimensions  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	for(int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(yArray[i]);  if(size!=  0)  {  throw  MathRuntimeException.createInvalidArray  dimensions	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size!=    0)    {    throw    MathRuntimeException.createInvalidArray    dimensions    	non-compiled	[CE]  ';'  expected	56	None	replace
296	[BUG]  [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException(  [CE]  >  expected  [FE]              AssertionFailedError      [CONTEXT]      public  double  correlation(final  double[]  xArray,  final  double[]  yArray)  throws  IllegalArgumentException  {  SimpleRegression  regression  =  new  SimpleRegression();  if(xArray.length  ==  yArray.length  &&  xArray.length  >  1)  {  for(int  i=0;  i<xArray.length;  i++)  {  regression.addData(xArray[i],  yArray[i]);  }      [BUGGY]  int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException(  [BUGGY]      return  regression.getR();  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(       "invalid  array  dimensions.  xArray  has  size  {0};  yArray  has  {1}  elements     ",  xArray.length,  yArray.length);  }  }  [CLASS]  PearsonsCorrelation  [METHOD]  correlation  [RETURN_TYPE]  double  final  double[]  xArray  final  double[]  yArray  [VARIABLES]  SimpleRegression  regression  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  outMatrix  double[]  xArray  yArray  int  i  j  nObs  nVars  numberOfObservations  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.3922322702763681	230	230	2	replace	int  i=0;  i  <  yArray.length;  i++)  {  double[]  size  =  yArray[i].compareTo(xArray[i]);  if(size  ==  0)  {  throw  MathRuntimeException.createIllegalArgumentException(	  for(int    i=0;    i    <    yArray.length;    i++)    {    double[]    size    =    yArray[i].compareTo(xArray[i]);    if(size    ==    0)    {    throw    MathRuntimeException.createIllegalArgumentException(    	non-compiled	[CE]  >  expected	34	None	replace
