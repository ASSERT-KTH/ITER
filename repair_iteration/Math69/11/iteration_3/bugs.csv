bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(2  -  nObs  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(2  -  nObs  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(2    -    nVars    *    j)));    	compilable	  [FE]  AssertionFailedError  	4	4	replace
2	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(2  -  nObs  *  j)));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(2  -  nObs  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(2  -  nObs  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(2    -    nVars    *    j)));    	compilable	  [FE]  AssertionFailedError  	4	4	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(2  -  nVars  *  nObs)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(2  -  nVars  *  nObs)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(2    -    nVars    *    j)));    	compilable	  [FE]  AssertionFailedError  	4	4	replace
4	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(2  -  nVars  *  nObs)));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(2  -  nVars  *  nObs)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(2  -  nVars  *  nObs)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(2    -    nVars    *    j)));    	compilable	  [FE]  AssertionFailedError  	4	4	replace
5	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  j)));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  j)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  j)));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nVars    *    j)));    double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  j)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	41	None	add
6	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  j)));  Double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  j)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  j)));  Double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nVars    *    j)));    Double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  j)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	41	None	add
7	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  j)));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(2  -  nVars  *  j)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  j)));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(2  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nVars    *    j)));    double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(2  -  nVars  *  j)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	41	None	add
8	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  j)));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  d)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]          AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  j)));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  d)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nVars    *    j)));    double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  d)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	41	None	add
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(2  -  nObs  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(2  -  nObs  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    r)));    double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(2    -    nObs    *    r)));    	compilable	  [FE]  AssertionFailedError  	25	4	replace
10	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(2  -  nObs  *  j)));  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(2  -  nObs  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(2  -  nObs  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    r)));    double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(2    -    nObs    *    r)));    	compilable	  [FE]  AssertionFailedError  	25	4	replace
11	[BUG]  [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  [CE]  cannot  find  symbol  t  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    r)));    double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(2    -    nObs    *    r)));    	non-compiled	[CE]  cannot  find  symbol  t	25	None	replace
12	[BUG]  [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(2  -  nObs  *  j)));  [CE]  cannot  find  symbol  t  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(2  -  nObs  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(2  -  nObs  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    r)));    double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(2    -    nObs    *    r)));    	non-compiled	[CE]  cannot  find  symbol  t	25	None	replace
13	[BUG]  [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  nVars)));  [CE]  cannot  find  symbol  R  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    nVars)));    double    t    =    Math.abs(R    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    nVars)));    	non-compiled	[CE]  cannot  find  symbol  R	116	None	replace
14	[BUG]  [BUGGY]  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  nVars)));  [CE]  cannot  find  symbol  t  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	t  =  Math.abs(R  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    nVars)));    double    t    =    Math.abs(R    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    nVars)));    	non-compiled	[CE]  cannot  find  symbol  t	116	None	replace
15	[BUG]  [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  nVars)));  [CE]  cannot  find  symbol  t  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    nVars)));    double    t    =    Math.abs(R    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    nVars)));    	non-compiled	[CE]  cannot  find  symbol  t	116	None	replace
16	[BUG]  [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  [CE]  cannot  find  symbol  R  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    double    t    =    Math.abs(R    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    	non-compiled	[CE]  cannot  find  symbol  R	108	None	replace
17	[BUG]  [BUGGY]  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  [CE]  cannot  find  symbol  t  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	t  =  Math.abs(R  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    double    t    =    Math.abs(R    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    	non-compiled	[CE]  cannot  find  symbol  t	108	None	replace
18	[BUG]  [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  [CE]  cannot  find  symbol  R  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    double    t    =    Math.abs(R    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    	non-compiled	[CE]  cannot  find  symbol  R	108	None	replace
19	[BUG]  [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  i)));  [CE]  cannot  find  symbol  R  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  i)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  i)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    double    t    =    Math.abs(R    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    	non-compiled	[CE]  cannot  find  symbol  R	108	None	replace
20	[BUG]  [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CE]  cannot  find  symbol  t  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  cannot  find  symbol  t	97	None	replace
21	[BUG]  [BUGGY]  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CE]  cannot  find  symbol  t  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  cannot  find  symbol  t	97	None	replace
22	[BUG]  [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  ')'  expected	97	None	replace
23	[BUG]  [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  j)));  [CE]  cannot  find  symbol  t  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    	non-compiled	[CE]  cannot  find  symbol  t	70	None	replace
24	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  nVars)));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  nVars)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  nVars)));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(2    -    nVars    *    nVars)));    double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  nVars)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	62	None	add
25	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  nVars)));  Double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  nVars)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  nVars)));  Double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(2    -    nVars    *    nVars)));    Double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  nVars)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	62	None	add
26	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  nVars)));  double  t  =  Math.abs(r  *  Math.sqrt((  nobs  -  1)/(2  -  nVars  *  nVars)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  nVars)));  double  t  =  Math.abs(r  *  Math.sqrt((  nobs  -  1)/(2  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(2    -    nVars    *    nVars)));    double  t  =  Math.abs(r  *  Math.sqrt((  nobs  -  1)/(2  -  nVars  *  nVars)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	62	None	add
27	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  nVars)));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nvars  *  nVars)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]          AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  nVars)));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nvars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(2    -    nVars    *    nVars)));    double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nvars  *  nVars)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	62	None	add
28	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  +  1,  nVars);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  +  1,  nVars);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  r  =  correlationMatrix.getEntry(i,  j  +  1,  nVars);	  double    r    =    correlationMatrix.getEntry(i,    j    +    1);    	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	102	None	replace
29	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  i  +  1);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  i  +  1);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  r  =  correlationMatrix.getEntry(j,  i  +  1);	  double    r    =    correlationMatrix.getEntry(i,    j    +    1);    	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	102	None	replace
30	[BUG]  [BUGGY]  double  r  =  covarianceMatrix.getEntry(i,  j  +  1);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  r  =  covarianceMatrix.getEntry(i,  j  +  1);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  r  =  covarianceMatrix.getEntry(i,  j  +  1);	  double    r    =    correlationMatrix.getEntry(i,    j    +    1);    	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	102	None	replace
31	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    j    -    2)/(1    -    nObs    *    r)));    	compilable	  [FE]  AssertionFailedError  	135	1	replace
32	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  j)));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    j    -    2)/(1    -    nObs    *    r)));    	compilable	  [FE]  AssertionFailedError  	135	1	replace
33	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    j    -    2)/(1    -    nObs    *    r)));    	compilable	  [FE]  AssertionFailedError  	135	1	replace
34	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  j)));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    j    -    2)/(1    -    nObs    *    r)));    	compilable	  [FE]  AssertionFailedError  	135	1	replace
35	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nObs  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nObs  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    j    -    2)/(1    -    nObs    *    r)));    	compilable	  [FE]  AssertionFailedError  	135	1	replace
36	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nObs  *  j)));  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nObs  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nObs  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    j    -    2)/(1    -    nObs    *    r)));    	compilable	  [FE]  AssertionFailedError  	135	1	replace
37	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  i)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  i)));	  double    t    =    Math.abs(r    *    Math.sqrt((    j    -    2)/(1    -    nObs    *    r)));    	compilable	  [FE]  AssertionFailedError  	135	3	replace
38	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  i)));  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  i)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  i)));	  double    t    =    Math.abs(r    *    Math.sqrt((    j    -    2)/(1    -    nObs    *    r)));    	compilable	  [FE]  AssertionFailedError  	135	3	replace
39	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  Double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	Double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    r)));    Double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    r)));    	compilable	  [FE]  AssertionFailedError  	23	4	replace
40	[BUG]  [BUGGY]  Double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  Double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	Double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    r)));    Double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    r)));    	compilable	  [FE]  AssertionFailedError  	23	4	replace
41	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  r)));  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  r)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  r)));  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  r)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    j    -    2)/(1    -    nVars    *    r)));    double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  r)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	124	None	add
42	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  r)));  Double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  r)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  r)));  Double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  r)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    j    -    2)/(1    -    nVars    *    r)));    Double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  r)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	124	None	add
43	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  r)));  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(2  -  nVars  *  r)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  r)));  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(2  -  nVars  *  r)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    j    -    2)/(1    -    nVars    *    r)));    double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(2  -  nVars  *  r)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	124	None	add
44	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  r)));  int  j  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  r)));  [CE]  variable  j  is  already  defined  in  method  getCorrelationPValues()  [FE]          AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  r)));  int  j  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  r)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    j    -    2)/(1    -    nVars    *    r)));    int  j  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  r)));	  	non-compiled	[CE]  variable  j  is  already  defined  in  method  getCorrelationPValues()	124	None	add
45	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t)    	non-compiled	[CE]  ')'  expected	98	None	replace
46	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t)    	non-compiled	[CE]  ')'  expected	98	None	replace
47	[BUG]  [BUGGY]  if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t)    	non-compiled	[CE]  ')'  expected	98	None	replace
48	[BUG]  [BUGGY]  if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t)    	non-compiled	[CE]  ')'  expected	98	None	replace
49	[BUG]  [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  j)));  [CE]  cannot  find  symbol  R  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    double    t    =    Math.abs(R    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    	non-compiled	[CE]  cannot  find  symbol  R	117	None	replace
50	[BUG]  [BUGGY]  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  j)));  [CE]  cannot  find  symbol  t  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	t  =  Math.abs(R  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    double    t    =    Math.abs(R    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    	non-compiled	[CE]  cannot  find  symbol  t	117	None	replace
51	[BUG]  [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  r)));  [CE]  cannot  find  symbol  R  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  r)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  r)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    double    t    =    Math.abs(R    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    	non-compiled	[CE]  cannot  find  symbol  R	117	None	replace
52	[BUG]  [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  i)));  [CE]  cannot  find  symbol  R  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  i)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  i)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    double    t    =    Math.abs(R    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    	non-compiled	[CE]  cannot  find  symbol  R	117	None	replace
53	[BUG]  [BUGGY]  double  nObs  =  datasetMatrix.getColumnDimension();  [CE]  cannot  find  symbol  datasetMatrix  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  nObs  =  datasetMatrix.getColumnDimension();  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  nObs  =  datasetMatrix.getColumnDimension();	  double    nObs    =    dataMatrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol  datasetMatrix	50	None	replace
54	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  i)));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  i)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  i)));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  i)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    i)));    double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  i)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	33	None	add
55	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  i)));  Double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  i)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  i)));  Double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  i)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    i)));    Double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  i)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	33	None	add
56	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  i)));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(2  -  nVars  *  i)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  i)));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(2  -  nVars  *  i)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    i)));    double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(2  -  nVars  *  i)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	33	None	add
57	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  i)));  double  t  =  Math.abs(r  *  Math.sqrt((  nobs  -  2)/(1  -  nVars  *  i)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]          AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  i)));  double  t  =  Math.abs(r  *  Math.sqrt((  nobs  -  2)/(1  -  nVars  *  i)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    i)));    double  t  =  Math.abs(r  *  Math.sqrt((  nobs  -  2)/(1  -  nVars  *  i)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	33	None	add
58	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(2  -  nObs  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(2  -  nObs  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(2    -    nVars    *    nVars)));    	compilable	  [FE]  AssertionFailedError  	63	4	replace
59	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(2  -  nObs  *  nVars)));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(2  -  nObs  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(2  -  nObs  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(2    -    nVars    *    nVars)));    	compilable	  [FE]  AssertionFailedError  	63	4	replace
60	[BUG]  [BUGGY]  if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t)  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t)  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t)	  if(r!=    null)    {    double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    r    *    r)));    out[i][j]    =    2    *    1    -    tDistribution.cumulativeProbability(t)    	non-compiled	[CE]  ';'  expected	69	None	replace
61	[BUG]  [BUGGY]  if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability	  if(r!=    null)    {    double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    r    *    r)));    out[i][j]    =    2    *    1    -    tDistribution.cumulativeProbability(t)    	non-compiled	[CE]  ';'  expected	69	None	replace
62	[BUG]  [BUGGY]  if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(	  if(r!=    null)    {    double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    r    *    r)));    out[i][j]    =    2    *    1    -    tDistribution.cumulativeProbability(t)    	non-compiled	[CE]  ')'  expected	69	None	replace
63	[BUG]  [BUGGY]  if(r  ==  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t)  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  if(r  ==  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t)  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	if(r  ==  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t)	  if(r!=    null)    {    double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    r    *    r)));    out[i][j]    =    2    *    1    -    tDistribution.cumulativeProbability(t)    	non-compiled	[CE]  ';'  expected	69	None	replace
64	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(2  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(2  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    j)));    double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(2    -    nVars    *    j)));    	compilable	  [FE]  AssertionFailedError  	12	3	replace
65	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(2  -  nVars  *  j)));  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(2  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(2  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    j)));    double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(2    -    nVars    *    j)));    	compilable	  [FE]  AssertionFailedError  	12	3	replace
66	[BUG]  [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(2  -  nVars  *  j)));  [CE]  cannot  find  symbol  t  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(2  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(2  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    j)));    double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(2    -    nVars    *    j)));    	non-compiled	[CE]  cannot  find  symbol  t	12	None	replace
67	[BUG]  [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  [CE]  cannot  find  symbol  t  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    j)));    double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(2    -    nVars    *    j)));    	non-compiled	[CE]  cannot  find  symbol  t	12	None	replace
68	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  r)));  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  r)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  r)));  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  r)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    j    -    1)/(1    -    nVars    *    r)));    double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  r)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	110	None	add
69	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  r)));  Double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  r)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  r)));  Double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  r)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    j    -    1)/(1    -    nVars    *    r)));    Double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  r)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	110	None	add
70	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  r)));  int  j  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  r)));  [CE]  variable  j  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  r)));  int  j  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  r)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    j    -    1)/(1    -    nVars    *    r)));    int  j  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  r)));	  	non-compiled	[CE]  variable  j  is  already  defined  in  method  getCorrelationPValues()	110	None	add
71	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  r)));  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(2  -  nVars  *  r)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]          AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  r)));  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(2  -  nVars  *  r)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    j    -    1)/(1    -    nVars    *    r)));    double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(2  -  nVars  *  r)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	110	None	add
72	[BUG]  [BUGGY]  double  nObs  =  dataMatrix.getRowDimension();  [CE]  cannot  find  symbol  dataMatrix  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  nObs  =  dataMatrix.getRowDimension();  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  nObs  =  dataMatrix.getRowDimension();	  double    nObs    =    covarianceMatrix.getRowDimension();    	non-compiled	[CE]  cannot  find  symbol  dataMatrix	49	None	replace
73	[BUG]  [BUGGY]  double  nObs  =  matrix.getRowDimension();  [CE]  cannot  find  symbol  matrix  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  nObs  =  matrix.getRowDimension();  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  nObs  =  matrix.getRowDimension();	  double    nObs    =    covarianceMatrix.getRowDimension();    	non-compiled	[CE]  cannot  find  symbol  matrix	49	None	replace
74	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nobs  *  j)));  [CE]  cannot  find  symbol  nobs  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nobs  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nobs  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    r)));    double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nobs    *    r)));    	non-compiled	[CE]  cannot  find  symbol  nobs	24	None	replace
75	[BUG]  [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nobs  *  j)));  [CE]  cannot  find  symbol  t  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nobs  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nobs  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    r)));    double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nobs    *    r)));    	non-compiled	[CE]  cannot  find  symbol  t	24	None	replace
76	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nobs  -  1)/(1  -  nVars  *  nVars)));  [CE]  cannot  find  symbol  nobs  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nobs  -  1)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nobs  -  1)/(1  -  nVars  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    nVars)));    double    t    =    Math.abs(r    *    Math.sqrt((    nobs    -    1)/(1    -    nVars    *    nVars)));    	non-compiled	[CE]  cannot  find  symbol  nobs	39	None	replace
77	[BUG]  [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nobs  -  1)/(1  -  nVars  *  nVars)));  [CE]  cannot  find  symbol  t  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nobs  -  1)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	t  =  Math.abs(r  *  Math.sqrt((  nobs  -  1)/(1  -  nVars  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    nVars)));    double    t    =    Math.abs(r    *    Math.sqrt((    nobs    -    1)/(1    -    nVars    *    nVars)));    	non-compiled	[CE]  cannot  find  symbol  t	39	None	replace
78	[BUG]  [BUGGY]  nObs  =  correlationMatrix.getColumnDimension();  [CE]  cannot  assign  a  value  to  final  variable  nObs  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  nObs  =  correlationMatrix.getColumnDimension();  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	nObs  =  correlationMatrix.getColumnDimension();	          double    nObs    =    correlationMatrix.getColumnDimension();    double    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  nObs	75	None	replace
79	[BUG]  [BUGGY]  double  tDistribution  =  correlationMatrix.cumulativeProbability(r);  [CE]  variable  tDistribution  is  already  defined  in  method  getCorrelationPValues()  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  tDistribution  =  correlationMatrix.cumulativeProbability(r);  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  tDistribution  =  correlationMatrix.cumulativeProbability(r);	  double    tDistribution    =    tDistribution.cumulativeProbability(r);    	non-compiled	[CE]  variable  tDistribution  is  already  defined  in  method  getCorrelationPValues()	133	None	replace
80	[BUG]  [BUGGY]  double  tDistribution  =  covarianceMatrix.cumulativeProbability(r);  [CE]  variable  tDistribution  is  already  defined  in  method  getCorrelationPValues()  [FE]                          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  tDistribution  =  covarianceMatrix.cumulativeProbability(r);  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  tDistribution  =  covarianceMatrix.cumulativeProbability(r);	  double    tDistribution    =    tDistribution.cumulativeProbability(r);    	non-compiled	[CE]  variable  tDistribution  is  already  defined  in  method  getCorrelationPValues()	133	None	replace
81	[BUG]  [BUGGY]  double  tDistribution  =  dataMatrix.cumulativeProbability(r);  [CE]  variable  tDistribution  is  already  defined  in  method  getCorrelationPValues()  [FE]                            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  tDistribution  =  dataMatrix.cumulativeProbability(r);  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  tDistribution  =  dataMatrix.cumulativeProbability(r);	  double    tDistribution    =    tDistribution.cumulativeProbability(r);    	non-compiled	[CE]  variable  tDistribution  is  already  defined  in  method  getCorrelationPValues()	133	None	replace
82	[BUG]  [BUGGY]  double  r  =  correlationMatrix.cumulativeProbability(r);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]                              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  r  =  correlationMatrix.cumulativeProbability(r);  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  r  =  correlationMatrix.cumulativeProbability(r);	  double    tDistribution    =    tDistribution.cumulativeProbability(r);    	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	133	None	replace
83	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  j)));  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  j)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  j)));  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    i    -    2)/(1    -    nVars    *    j)));    double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  j)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	104	None	add
84	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  j)));  Double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  j)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  j)));  Double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    i    -    2)/(1    -    nVars    *    j)));    Double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  j)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	104	None	add
85	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  j)));  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(2  -  nVars  *  j)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  j)));  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(2  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    i    -    2)/(1    -    nVars    *    j)));    double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(2  -  nVars  *  j)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	104	None	add
86	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  Double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	Double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    Double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    	compilable	  [FE]  AssertionFailedError  	71	3	replace
87	[BUG]  [BUGGY]  Double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  j)));  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  Double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	Double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    Double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    	compilable	  [FE]  AssertionFailedError  	71	3	replace
88	[BUG]  [BUGGY]  Double  nObs  =  correlationMatrix.getColumnDimension();  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  Double  nObs  =  correlationMatrix.getColumnDimension();  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	Double  nObs  =  correlationMatrix.getColumnDimension();	          double    nObs    =    correlationMatrix.getColumnDimension();    Double    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  incompatible  types	76	None	replace
89	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  nVars)));  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  nVars)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  nVars)));  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    i    -    1)/(1    -    nVars    *    nVars)));    double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  nVars)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	114	None	add
90	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  nVars)));  Double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  nVars)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  nVars)));  Double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    i    -    1)/(1    -    nVars    *    nVars)));    Double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  nVars)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	114	None	add
91	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  nVars)));  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(2  -  nVars  *  nVars)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  nVars)));  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(2  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    i    -    1)/(1    -    nVars    *    nVars)));    double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(2  -  nVars  *  nVars)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	114	None	add
92	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  j)));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  j)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  j)));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    1)/(1    -    nObs    *    j)));    double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  j)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	1	None	add
93	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  j)));  Double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  j)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  j)));  Double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    1)/(1    -    nObs    *    j)));    Double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  j)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	1	None	add
94	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  j)));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nobs  *  j)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  j)));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nobs  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    1)/(1    -    nObs    *    j)));    double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nobs  *  j)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	1	None	add
95	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  j)));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(2  -  nObs  *  j)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]          AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  j)));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(2  -  nObs  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    1)/(1    -    nObs    *    j)));    double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(2  -  nObs  *  j)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	1	None	add
96	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nobs  -  1)/(1  -  nVars  *  j)));  [CE]  cannot  find  symbol  nobs  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nobs  -  1)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nobs  -  1)/(1  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    double    t    =    Math.abs(r    *    Math.sqrt((    nobs    -    1)/(1    -    nVars    *    r)));    	non-compiled	[CE]  cannot  find  symbol  nobs	72	None	replace
97	[BUG]  [BUGGY]  double  t  =  Math.abs(nobs  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  j)));  [CE]  cannot  find  symbol  nobs  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(nobs  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(nobs  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    double    t    =    Math.abs(r    *    Math.sqrt((    nobs    -    1)/(1    -    nVars    *    r)));    	non-compiled	[CE]  cannot  find  symbol  nobs	72	None	replace
98	[BUG]  [BUGGY]  out[i][j]  =  2  -  tDistribution.cumulativeProbability(r));  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  out[i][j]  =  2  -  tDistribution.cumulativeProbability(r));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	out[i][j]  =  2  -  tDistribution.cumulativeProbability(r));	  out[i][j]    =    2    *    1    -    tDistribution.cumulativeProbability(r));    	non-compiled	[CE]  ';'  expected	67	None	replace
99	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nobs  -  2)/(1  -  nVars  *  j)));  [CE]  cannot  find  symbol  nobs  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nobs  -  2)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nobs  -  2)/(1  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    double    t    =    Math.abs(r    *    Math.sqrt((    nobs    -    2)/(1    -    nVars    *    r)));    	non-compiled	[CE]  cannot  find  symbol  nobs	61	None	replace
100	[BUG]  [BUGGY]  double  t  =  Math.abs(nobs  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  [CE]  cannot  find  symbol  nobs  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(nobs  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(nobs  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    double    t    =    Math.abs(r    *    Math.sqrt((    nobs    -    2)/(1    -    nVars    *    r)));    	non-compiled	[CE]  cannot  find  symbol  nobs	61	None	replace
101	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  i)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  i)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    i)));    	compilable	  [FE]  AssertionFailedError  	56	3	replace
102	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  i)));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  i)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  i)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    i)));    	compilable	  [FE]  AssertionFailedError  	56	3	replace
103	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  i)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  i)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    i)));    	compilable	  [FE]  AssertionFailedError  	56	4	replace
104	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  i)));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  i)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  i)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    i)));    	compilable	  [FE]  AssertionFailedError  	56	4	replace
105	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  nVars)));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  nVars)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  nVars)));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    1)/(1    -    nObs    *    nVars)));    double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  nVars)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	64	None	add
106	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  nVars)));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nobs  *  nVars)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  nVars)));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nobs  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    1)/(1    -    nObs    *    nVars)));    double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nobs  *  nVars)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	64	None	add
107	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  nVars)));  Double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  nVars)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  nVars)));  Double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    1)/(1    -    nObs    *    nVars)));    Double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  nVars)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	64	None	add
108	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  nVars)));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(2  -  nObs  *  nVars)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]          AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  nVars)));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(2  -  nObs  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    1)/(1    -    nObs    *    nVars)));    double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(2  -  nObs  *  nVars)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	64	None	add
109	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(2  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(2  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    i    -    1)/(1    -    nVars    *    j)));    	compilable	  [FE]  AssertionFailedError  	88	3	replace
110	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(2  -  nVars  *  j)));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(2  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(2  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    i    -    1)/(1    -    nVars    *    j)));    	compilable	  [FE]  AssertionFailedError  	88	3	replace
111	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  i)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  i)));	  double    t    =    Math.abs(r    *    Math.sqrt((    i    -    1)/(1    -    nVars    *    j)));    	compilable	  [FE]  AssertionFailedError  	88	4	replace
112	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  i)));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  i)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  i)));	  double    t    =    Math.abs(r    *    Math.sqrt((    i    -    1)/(1    -    nVars    *    j)));    	compilable	  [FE]  AssertionFailedError  	88	4	replace
113	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(2  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(2  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    j    -    1)/(1    -    nVars    *    r)));    	compilable	  [FE]  AssertionFailedError  	111	6	replace
114	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(2  -  nVars  *  j)));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(2  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(2  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    j    -    1)/(1    -    nVars    *    r)));    	compilable	  [FE]  AssertionFailedError  	111	6	replace
115	[BUG]  [BUGGY]  double  t  =  Math.abs(relativeProbability  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  j)));  [CE]  cannot  find  symbol  relativeProbability  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(relativeProbability  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(relativeProbability  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    j    -    1)/(1    -    nVars    *    r)));    	non-compiled	[CE]  cannot  find  symbol  relativeProbability	111	None	replace
116	[BUG]  [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  [CE]  cannot  find  symbol  R  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    r)));    double    t    =    Math.abs(R    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    r)));    	non-compiled	[CE]  cannot  find  symbol  R	103	None	replace
117	[BUG]  [BUGGY]  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  [CE]  cannot  find  symbol  t  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	t  =  Math.abs(R  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    r)));    double    t    =    Math.abs(R    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    r)));    	non-compiled	[CE]  cannot  find  symbol  t	103	None	replace
118	[BUG]  [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  r)));  [CE]  cannot  find  symbol  R  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  r)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  r)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    r)));    double    t    =    Math.abs(R    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    r)));    	non-compiled	[CE]  cannot  find  symbol  R	103	None	replace
119	[BUG]  [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  i)));  [CE]  cannot  find  symbol  R  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  i)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  i)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    r)));    double    t    =    Math.abs(R    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    r)));    	non-compiled	[CE]  cannot  find  symbol  R	103	None	replace
120	[BUG]  [BUGGY]  double  nObs  =  matrix.getColumnDimension();  [CE]  cannot  find  symbol  matrix  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  nObs  =  matrix.getColumnDimension();  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  nObs  =  matrix.getColumnDimension();	  double    nObs    =    covarianceMatrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol  matrix	48	None	replace
121	[BUG]  [BUGGY]  double  r  =  dataMatrix.getColumnDimension();  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  r  =  dataMatrix.getColumnDimension();  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  r  =  dataMatrix.getColumnDimension();	  double    r    =    covarianceMatrix.getColumnDimension();    	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	19	None	replace
122	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    j    -    2)/(1    -    nVars    *    nObs)));    	compilable	  [FE]  AssertionFailedError  	46	4	replace
123	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  nVars)));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    j    -    2)/(1    -    nVars    *    nObs)));    	compilable	  [FE]  AssertionFailedError  	46	4	replace
124	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    i    -    2)/(1    -    r    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	118	None	add
125	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  r  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  r  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    i    -    2)/(1    -    r    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    double  r  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	118	None	add
126	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  Double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  Double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    i    -    2)/(1    -    r    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    Double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	118	None	add
127	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    i    -    2)/(1    -    r    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)	  	non-compiled	[CE]  ')'  expected	118	None	add
128	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j,  out,  covarianceMatrix);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j,  out,  covarianceMatrix);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  r  =  correlationMatrix.getEntry(i,  j,  out,  covarianceMatrix);	  double    r    =    correlationMatrix.getEntry(i,    j,    covarianceMatrix);    	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	32	None	replace
129	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j,  out);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j,  out);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  r  =  correlationMatrix.getEntry(i,  j,  out);	  double    r    =    correlationMatrix.getEntry(i,    j,    covarianceMatrix);    	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	32	None	replace
130	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	99	None	add
131	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)	  	non-compiled	[CE]  ')'  expected	99	None	add
132	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  r  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  r  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    double  r  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	99	None	add
133	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(  [CE]  '.class'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(	  	non-compiled	[CE]  '.class'  expected	99	None	add
134	[BUG]  [BUGGY]  double  r  =  this.covarianceMatrix.getEntry(i,  j,  nVars);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  r  =  this.covarianceMatrix.getEntry(i,  j,  nVars);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  r  =  this.covarianceMatrix.getEntry(i,  j,  nVars);	  double    r    =    this.covarianceMatrix.getEntry(i,    j);    	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	89	None	replace
135	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  Double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	Double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    Double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    	compilable	  [FE]  AssertionFailedError  	58	3	replace
136	[BUG]  [BUGGY]  Double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  Double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	Double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    Double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    	compilable	  [FE]  AssertionFailedError  	58	3	replace
137	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  j)));  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  j)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  j)));  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    i    -    1)/(1    -    nVars    *    j)));    double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  j)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	87	None	add
138	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  j)));  Double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  j)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  j)));  Double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    i    -    1)/(1    -    nVars    *    j)));    Double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  j)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	87	None	add
139	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  j)));  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(2  -  nVars  *  j)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  j)));  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(2  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    i    -    1)/(1    -    nVars    *    j)));    double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(2  -  nVars  *  j)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	87	None	add
140	[BUG]  [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  j)));  [CE]  cannot  find  symbol  t  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(2    -    nVars    *    r)));    	non-compiled	[CE]  cannot  find  symbol  t	74	None	replace
141	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  d)));  [CE]  cannot  find  symbol  d  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  d)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  d)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(2    -    nVars    *    r)));    	non-compiled	[CE]  cannot  find  symbol  d	74	None	replace
142	[BUG]  [BUGGY]  double  t  =  Math.abs(relativeProbability  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  r)));  [CE]  cannot  find  symbol  relativeProbability  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(relativeProbability  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  r)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(relativeProbability  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  r)));	  double    t    =    Math.abs(r    *    Math.sqrt((    i    -    1)/(1    -    nVars    *    r)));    	non-compiled	[CE]  cannot  find  symbol  relativeProbability	113	None	replace
143	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  i)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  i)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    r)));    double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    r)));    	compilable	  [FE]  AssertionFailedError  	22	4	replace
144	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  i)));  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  i)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  i)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    r)));    double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    r)));    	compilable	  [FE]  AssertionFailedError  	22	4	replace
145	[BUG]  [BUGGY]  int  numberOfObservations  =  r.getColumnDimension();  [CE]  double  cannot  be  dereferenced  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  int  numberOfObservations  =  r.getColumnDimension();  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	int  numberOfObservations  =  r.getColumnDimension();	  int    numberOfObservations    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  double  cannot  be  dereferenced	80	None	replace
146	[BUG]  [BUGGY]  int  numberOfObservations  =  covarianceMatrix.getColumnDimension();  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  int  numberOfObservations  =  covarianceMatrix.getColumnDimension();  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	int  numberOfObservations  =  covarianceMatrix.getColumnDimension();	  int    numberOfObservations    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	80	None	replace
147	[BUG]  [BUGGY]  int  numberOfObservations  =  correlationMatrix.getRowDimension();  [CE]  cannot  find  symbol  t  [FE]                          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  int  numberOfObservations  =  correlationMatrix.getRowDimension();  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	int  numberOfObservations  =  correlationMatrix.getRowDimension();	  int    numberOfObservations    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol  t	80	None	replace
148	[BUG]  [BUGGY]  int  numberOfObservations  =  r.getNumberOfObservations();  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  int  numberOfObservations  =  r.getNumberOfObservations();  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	int  numberOfObservations  =  r.getNumberOfObservations();	  int    numberOfObservations    =    correlationMatrix.getNumberOfObservations();    	non-compiled	[CE]  double  cannot  be  dereferenced	79	None	replace
149	[BUG]  [BUGGY]  int  numberOfObservations  =  covarianceMatrix.getNumberOfObservations();  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  int  numberOfObservations  =  covarianceMatrix.getNumberOfObservations();  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	int  numberOfObservations  =  covarianceMatrix.getNumberOfObservations();	  int    numberOfObservations    =    correlationMatrix.getNumberOfObservations();    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	79	None	replace
150	[BUG]  [BUGGY]  int  numberOfObservations  =  this.covarianceMatrix.getNumberOfObservations();  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  int  numberOfObservations  =  this.covarianceMatrix.getNumberOfObservations();  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	int  numberOfObservations  =  this.covarianceMatrix.getNumberOfObservations();	  int    numberOfObservations    =    correlationMatrix.getNumberOfObservations();    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	79	None	replace
151	[BUG]  [BUGGY]  int  nVars  =  r.getColumnDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  int  nVars  =  r.getColumnDimension();  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	int  nVars  =  r.getColumnDimension();	  int    nVars    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	131	None	replace
152	[BUG]  [BUGGY]  double  nVars  =  correlationMatrix.getColumnDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  nVars  =  correlationMatrix.getColumnDimension();  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  nVars  =  correlationMatrix.getColumnDimension();	  int    nVars    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	131	None	replace
153	[BUG]  [BUGGY]  int  nVars  =  correlationMatrix.getRowDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  int  nVars  =  correlationMatrix.getRowDimension();  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	int  nVars  =  correlationMatrix.getRowDimension();	  int    nVars    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	131	None	replace
154	[BUG]  [BUGGY]  int  nVars  =  covarianceMatrix.getColumnDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]                          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  int  nVars  =  covarianceMatrix.getColumnDimension();  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	int  nVars  =  covarianceMatrix.getColumnDimension();	  int    nVars    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	131	None	replace
155	[BUG]  [BUGGY]  double  nObs  =  covarianceMatrix.getEntryDimension();  [CE]  cannot  find  symbol  covarianceMatrix  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  nObs  =  covarianceMatrix.getEntryDimension();  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  nObs  =  covarianceMatrix.getEntryDimension();	  double    nObs    =    correlationMatrix.getEntryDimension();    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	109	None	replace
156	[BUG]  [BUGGY]  double  nObs  =  dataMatrix.getEntryDimension();  [CE]  cannot  find  symbol  dataMatrix  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  nObs  =  dataMatrix.getEntryDimension();  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  nObs  =  dataMatrix.getEntryDimension();	  double    nObs    =    correlationMatrix.getEntryDimension();    	non-compiled	[CE]  cannot  find  symbol  dataMatrix	109	None	replace
157	[BUG]  [BUGGY]  double  nObs  =  this.covarianceMatrix.getEntryDimension();  [CE]  cannot  find  symbol  covarianceMatrix  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  nObs  =  this.covarianceMatrix.getEntryDimension();  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  nObs  =  this.covarianceMatrix.getEntryDimension();	  double    nObs    =    correlationMatrix.getEntryDimension();    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	109	None	replace
158	[BUG]  [BUGGY]  int  nObs  =  correlationMatrix.getColumnDimension();  int  nObs  =  correlationMatrix.getRowDimension();  [CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  int  nObs  =  correlationMatrix.getColumnDimension();  int  nObs  =  correlationMatrix.getRowDimension();  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	int  nObs  =  correlationMatrix.getColumnDimension();  int  nObs  =  correlationMatrix.getRowDimension();	          double    nObs    =    correlationMatrix.getColumnDimension();    double    nObs    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  variable  nObs  is  already  defined  in  method  getCorrelationPValues()	78	None	replace
159	[BUG]  [BUGGY]  nObs  =  correlationMatrix.getRowDimension();  [CE]  cannot  assign  a  value  to  final  variable  nObs  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  nObs  =  correlationMatrix.getRowDimension();  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	nObs  =  correlationMatrix.getRowDimension();	          double    nObs    =    correlationMatrix.getColumnDimension();    double    nObs    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  nObs	78	None	replace
160	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(2  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(2  -  nVars  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    j    -    1)/(1    -    nVars    *    nVars)));    	compilable	  [FE]  AssertionFailedError  	91	4	replace
161	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(2  -  nVars  *  nVars)));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(2  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(2  -  nVars  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    j    -    1)/(1    -    nVars    *    nVars)));    	compilable	  [FE]  AssertionFailedError  	91	4	replace
162	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nVars  +  1)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nVars  +  1)));	  double    t    =    Math.abs(r    *    Math.sqrt((    j    -    1)/(1    -    nVars    *    nVars)));    	compilable	  [FE]  AssertionFailedError  	91	4	replace
163	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nVars  +  1)));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nVars  +  1)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nVars  +  1)));	  double    t    =    Math.abs(r    *    Math.sqrt((    j    -    1)/(1    -    nVars    *    nVars)));    	compilable	  [FE]  AssertionFailedError  	91	4	replace
164	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nObs)));  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nObs)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nObs)));  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nObs)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    j    -    1)/(1    -    nVars    *    nObs)));    double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nObs)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	5	None	add
165	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nObs)));  Double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nObs)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nObs)));  Double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nObs)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    j    -    1)/(1    -    nVars    *    nObs)));    Double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nObs)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	5	None	add
166	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nObs)));  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nobs)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nObs)));  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nobs)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    j    -    1)/(1    -    nVars    *    nObs)));    double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nobs)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	5	None	add
167	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nObs)));  int  j  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nObs)));  [CE]  variable  j  is  already  defined  in  method  getCorrelationPValues()  [FE]          AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nObs)));  int  j  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nObs)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    j    -    1)/(1    -    nVars    *    nObs)));    int  j  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nObs)));	  	non-compiled	[CE]  variable  j  is  already  defined  in  method  getCorrelationPValues()	5	None	add
168	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nObs)));  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nvars  *  nObs)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]            AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nObs)));  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nvars  *  nObs)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    j    -    1)/(1    -    nVars    *    nObs)));    double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nvars  *  nObs)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	5	None	add
169	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  2)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  2)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    j)));    double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    j)));    	compilable	  [FE]  AssertionFailedError  	14	3	replace
170	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  2)));  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  2)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  2)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    j)));    double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    j)));    	compilable	  [FE]  AssertionFailedError  	14	3	replace
171	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  nVars)));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  nVars)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  nVars)));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    nVars)));    double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  nVars)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	85	None	add
172	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  nVars)));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nobs  *  nVars)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  nVars)));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nobs  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    nVars)));    double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nobs  *  nVars)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	85	None	add
173	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  nVars)));  Double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  nVars)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  nVars)));  Double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    nVars)));    Double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  nVars)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	85	None	add
174	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  nVars)));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(2  -  nObs  *  nVars)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]          AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  nVars)));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(2  -  nObs  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    nVars)));    double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(2  -  nObs  *  nVars)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	85	None	add
175	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  i)));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  i)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  i)));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  i)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    i)));    double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  i)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	55	None	add
176	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  i)));  Double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  i)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  i)));  Double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  i)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    i)));    Double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  i)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	55	None	add
177	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  i)));  double  t  =  Math.abs(r  *  Math.sqrt((  nobs  -  1)/(1  -  nVars  *  i)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  i)));  double  t  =  Math.abs(r  *  Math.sqrt((  nobs  -  1)/(1  -  nVars  *  i)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    i)));    double  t  =  Math.abs(r  *  Math.sqrt((  nobs  -  1)/(1  -  nVars  *  i)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	55	None	add
178	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  i)));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  i)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]          AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  i)));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  i)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    i)));    double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  i)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	55	None	add
179	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    j)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	122	None	add
180	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    j)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)	  	non-compiled	[CE]  ')'  expected	122	None	add
181	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    j)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	122	None	add
182	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(  [CE]  '.class'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    j)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(	  	non-compiled	[CE]  '.class'  expected	122	None	add
183	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j,  nVars,  nObs);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j,  nVars,  nObs);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  r  =  correlationMatrix.getEntry(i,  j,  nVars,  nObs);	  double    r    =    correlationMatrix.getEntry(i,    j,    nVars);    	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	7	None	replace
184	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  i,  nVars);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  i,  nVars);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  r  =  correlationMatrix.getEntry(j,  i,  nVars);	  double    r    =    correlationMatrix.getEntry(i,    j,    nVars);    	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	7	None	replace
185	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j,  nVars,  covarianceMatrix);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j,  nVars,  covarianceMatrix);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  r  =  correlationMatrix.getEntry(i,  j,  nVars,  covarianceMatrix);	  double    r    =    correlationMatrix.getEntry(i,    j,    nVars);    	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	7	None	replace
186	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  nVars)));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  nVars)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  nVars)));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    1)/(1    -    nVars    *    nVars)));    double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  nVars)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	92	None	add
187	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  nVars)));  Double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  nVars)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  nVars)));  Double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    1)/(1    -    nVars    *    nVars)));    Double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  nVars)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	92	None	add
188	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  nVars)));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(2  -  nVars  *  nVars)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  nVars)));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(2  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    1)/(1    -    nVars    *    nVars)));    double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(2  -  nVars  *  nVars)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	92	None	add
189	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    nVars)));    	compilable	  [FE]  AssertionFailedError  	86	4	replace
190	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  nVars)));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    nVars)));    	compilable	  [FE]  AssertionFailedError  	86	4	replace
191	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    j)));    double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	43	None	add
192	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  Double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  Double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    j)));    Double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	43	None	add
193	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nobs  *  j)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nobs  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    j)));    double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nobs  *  j)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	43	None	add
194	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(2  -  nObs  *  j)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]          AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(2  -  nObs  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    j)));    double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(2  -  nObs  *  j)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	43	None	add
195	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nVars)));  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nVars)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nVars)));  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    j    -    1)/(1    -    nVars    *    nVars)));    double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nVars)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	90	None	add
196	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nVars)));  Double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nVars)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nVars)));  Double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    j    -    1)/(1    -    nVars    *    nVars)));    Double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nVars)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	90	None	add
197	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nVars)));  int  j  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nVars)));  [CE]  variable  j  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nVars)));  int  j  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    j    -    1)/(1    -    nVars    *    nVars)));    int  j  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nVars)));	  	non-compiled	[CE]  variable  j  is  already  defined  in  method  getCorrelationPValues()	90	None	add
198	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  [CE]  cannot  find  symbol  dataMatrix  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  int  nObs  =  dataMatrix.getColumnDimension();  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	int  nObs  =  dataMatrix.getColumnDimension();	          double    nObs    =    correlationMatrix.getColumnDimension();    int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol  dataMatrix	77	None	replace
199	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  Double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	Double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    nVars)));    Double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    nVars)));    	compilable	  [FE]  AssertionFailedError  	38	4	replace
200	[BUG]  [BUGGY]  Double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  nVars)));  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  Double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	Double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    nVars)));    Double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    nVars)));    	compilable	  [FE]  AssertionFailedError  	38	4	replace
201	[BUG]  [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  nVars)));  [CE]  cannot  find  symbol  t  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    nVars)));    Double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    nVars)));    	non-compiled	[CE]  cannot  find  symbol  t	38	None	replace
202	[BUG]  [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CE]  cannot  find  symbol  t  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  cannot  find  symbol  t	100	None	replace
203	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	compilable	  [FE]  AssertionFailedError  	100	4	replace
204	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	compilable	  [FE]  AssertionFailedError  	100	4	replace
205	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    nVars)));    double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	35	None	add
206	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));  Double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));  Double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    nVars)));    Double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	35	None	add
207	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));  double  t  =  Math.abs(r  *  Math.sqrt((  nobs  -  2)/(1  -  nVars  *  nVars)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));  double  t  =  Math.abs(r  *  Math.sqrt((  nobs  -  2)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    nVars)));    double  t  =  Math.abs(r  *  Math.sqrt((  nobs  -  2)/(1  -  nVars  *  nVars)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	35	None	add
208	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(2  -  nVars  *  nVars)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]          AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(2  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    nVars)));    double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(2  -  nVars  *  nVars)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	35	None	add
209	[BUG]  [BUGGY]  RealMatrix  tDistribution  =  new  RealMatrixImpl(r,  j);  [CE]  variable  tDistribution  is  already  defined  in  method  getCorrelationPValues()  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  RealMatrix  tDistribution  =  new  RealMatrixImpl(r,  j);  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	RealMatrix  tDistribution  =  new  RealMatrixImpl(r,  j);	  RealMatrix    tDistribution    =    new    RealMatrixImpl(r,    i);    	non-compiled	[CE]  variable  tDistribution  is  already  defined  in  method  getCorrelationPValues()	81	None	replace
210	[BUG]  [BUGGY]  RealMatrix  tDistribution  =  new  RealMatrixImpl(nObs,  i);  [CE]  variable  tDistribution  is  already  defined  in  method  getCorrelationPValues()  [FE]                          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  RealMatrix  tDistribution  =  new  RealMatrixImpl(nObs,  i);  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	RealMatrix  tDistribution  =  new  RealMatrixImpl(nObs,  i);	  RealMatrix    tDistribution    =    new    RealMatrixImpl(r,    i);    	non-compiled	[CE]  variable  tDistribution  is  already  defined  in  method  getCorrelationPValues()	81	None	replace
211	[BUG]  [BUGGY]  RealMatrix  tDistribution  =  new  RealMatrixImpl(r,  i,  covarianceMatrix);  [CE]  variable  tDistribution  is  already  defined  in  method  getCorrelationPValues()  [FE]                            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  RealMatrix  tDistribution  =  new  RealMatrixImpl(r,  i,  covarianceMatrix);  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	RealMatrix  tDistribution  =  new  RealMatrixImpl(r,  i,  covarianceMatrix);	  RealMatrix    tDistribution    =    new    RealMatrixImpl(r,    i);    	non-compiled	[CE]  variable  tDistribution  is  already  defined  in  method  getCorrelationPValues()	81	None	replace
212	[BUG]  [BUGGY]  RealMatrix  tDistribution  =  new  RealMatrixImpl(r,  i  +  1);  [CE]  variable  tDistribution  is  already  defined  in  method  getCorrelationPValues()  [FE]                              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  RealMatrix  tDistribution  =  new  RealMatrixImpl(r,  i  +  1);  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	RealMatrix  tDistribution  =  new  RealMatrixImpl(r,  i  +  1);	  RealMatrix    tDistribution    =    new    RealMatrixImpl(r,    i);    	non-compiled	[CE]  variable  tDistribution  is  already  defined  in  method  getCorrelationPValues()	81	None	replace
213	[BUG]  [BUGGY]  int  nObs  =  r.getColumnDimension();  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  int  nObs  =  r.getColumnDimension();  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	int  nObs  =  r.getColumnDimension();	  int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  double  cannot  be  dereferenced	27	None	replace
214	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getColumnDimension();  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  int  nObs  =  covarianceMatrix.getColumnDimension();  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	int  nObs  =  covarianceMatrix.getColumnDimension();	  int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	27	None	replace
215	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	129	None	add
216	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)	  	non-compiled	[CE]  ')'  expected	129	None	add
217	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	129	None	add
218	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]          AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	129	None	add
219	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(  [CE]  '.class'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(	  	non-compiled	[CE]  '.class'  expected	129	None	add
220	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  2)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  2)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    1)/(1    -    nObs    *    j)));    	compilable	  [FE]  AssertionFailedError  	2	4	replace
221	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  2)));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  2)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  2)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    1)/(1    -    nObs    *    j)));    	compilable	  [FE]  AssertionFailedError  	2	4	replace
222	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(2  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(2  -  nVars  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    1)/(1    -    nVars    *    nVars)));    	compilable	  [FE]  AssertionFailedError  	93	4	replace
223	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(2  -  nVars  *  nVars)));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(2  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(2  -  nVars  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    1)/(1    -    nVars    *    nVars)));    	compilable	  [FE]  AssertionFailedError  	93	4	replace
224	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(2  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(2  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    1)/(1    -    nVars    *    j)));    	compilable	  [FE]  AssertionFailedError  	107	3	replace
225	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(2  -  nVars  *  j)));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(2  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(2  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    1)/(1    -    nVars    *    j)));    	compilable	  [FE]  AssertionFailedError  	107	3	replace
226	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  nObs)));  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  nObs)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  nObs)));  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  nObs)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    j    -    2)/(1    -    nVars    *    nObs)));    double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  nObs)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	45	None	add
227	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  nObs)));  Double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  nObs)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  nObs)));  Double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  nObs)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    j    -    2)/(1    -    nVars    *    nObs)));    Double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  nObs)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	45	None	add
228	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  nObs)));  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  nobs)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  nObs)));  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  nobs)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    j    -    2)/(1    -    nVars    *    nObs)));    double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  nobs)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	45	None	add
229	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  nObs)));  int  j  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  nObs)));  [CE]  variable  j  is  already  defined  in  method  getCorrelationPValues()  [FE]          AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  nObs)));  int  j  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  nObs)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    j    -    2)/(1    -    nVars    *    nObs)));    int  j  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  nObs)));	  	non-compiled	[CE]  variable  j  is  already  defined  in  method  getCorrelationPValues()	45	None	add
230	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  nObs)));  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(2  -  nVars  *  nObs)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]            AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  nObs)));  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(2  -  nVars  *  nObs)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    j    -    2)/(1    -    nVars    *    nObs)));    double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(2  -  nVars  *  nObs)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	45	None	add
231	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  j)));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  j)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  j)));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(2    -    nVars    *    j)));    double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  j)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	3	None	add
232	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  j)));  Double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  j)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  j)));  Double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(2    -    nVars    *    j)));    Double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  j)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	3	None	add
233	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  j)));  double  t  =  Math.abs(r  *  Math.sqrt((  nobs  -  1)/(2  -  nVars  *  j)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  j)));  double  t  =  Math.abs(r  *  Math.sqrt((  nobs  -  1)/(2  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(2    -    nVars    *    j)));    double  t  =  Math.abs(r  *  Math.sqrt((  nobs  -  1)/(2  -  nVars  *  j)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	3	None	add
234	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  j)));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  d)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]          AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  j)));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  d)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(2    -    nVars    *    j)));    double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  d)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	3	None	add
235	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  j)));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  j)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  j)));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    1)/(1    -    nVars    *    j)));    double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  j)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	106	None	add
236	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  j)));  Double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  j)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  j)));  Double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    1)/(1    -    nVars    *    j)));    Double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  j)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	106	None	add
237	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  j)));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(2  -  nVars  *  j)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  j)));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(2  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    1)/(1    -    nVars    *    j)));    double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(2  -  nVars  *  j)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	106	None	add
238	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nObs  *  r)));  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nObs  *  r)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nObs  *  r)));  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nObs  *  r)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    j    -    2)/(1    -    nObs    *    r)));    double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nObs  *  r)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	134	None	add
239	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nObs  *  r)));  Double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nObs  *  r)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nObs  *  r)));  Double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nObs  *  r)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    j    -    2)/(1    -    nObs    *    r)));    Double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nObs  *  r)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	134	None	add
240	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nObs  *  r)));  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nobs  *  r)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nObs  *  r)));  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nobs  *  r)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    j    -    2)/(1    -    nObs    *    r)));    double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nobs  *  r)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	134	None	add
241	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nObs  *  r)));  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(2  -  nObs  *  r)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]          AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nObs  *  r)));  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(2  -  nObs  *  r)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    j    -    2)/(1    -    nObs    *    r)));    double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(2  -  nObs  *  r)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	134	None	add
242	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nObs  *  r)));  int  j  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nObs  *  r)));  [CE]  variable  j  is  already  defined  in  method  getCorrelationPValues()  [FE]            AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nObs  *  r)));  int  j  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nObs  *  r)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    j    -    2)/(1    -    nObs    *    r)));    int  j  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nObs  *  r)));	  	non-compiled	[CE]  variable  j  is  already  defined  in  method  getCorrelationPValues()	134	None	add
243	[BUG]  [BUGGY]  double  r  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  r  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  r  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    r)));    double    r    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    r)));    	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	26	None	replace
244	[BUG]  [BUGGY]  double  r  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  nVars)));  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  r  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  r  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    r)));    double    r    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    r)));    	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	26	None	replace
245	[BUG]  [BUGGY]  double  tT  =  covarianceMatrix.getEntry(i,  j);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  tT  =  covarianceMatrix.getEntry(i,  j);  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  tT  =  covarianceMatrix.getEntry(i,  j);	  double    tT    =    correlationMatrix.getEntry(i,    j);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	132	None	replace
246	[BUG]  [BUGGY]  double  tT  =  dataMatrix.getEntry(i,  j);  [CE]  cannot  find  symbol  dataMatrix  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  tT  =  dataMatrix.getEntry(i,  j);  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  tT  =  dataMatrix.getEntry(i,  j);	  double    tT    =    correlationMatrix.getEntry(i,    j);    	non-compiled	[CE]  cannot  find  symbol  dataMatrix	132	None	replace
247	[BUG]  [BUGGY]  nObs  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  nObs  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	nObs  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    j)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  ')'  expected	123	None	replace
248	[BUG]  [BUGGY]  double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    double    r    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	60	None	replace
249	[BUG]  [BUGGY]  double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    double    r    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	60	None	replace
250	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  r)));  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  r)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  r)));  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  r)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    i    -    1)/(1    -    nVars    *    r)));    double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  r)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	112	None	add
251	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  r)));  Double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  r)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  r)));  Double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  r)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    i    -    1)/(1    -    nVars    *    r)));    Double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  r)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	112	None	add
252	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  r)));  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(2  -  nVars  *  r)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  r)));  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(2  -  nVars  *  r)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    i    -    1)/(1    -    nVars    *    r)));    double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(2  -  nVars  *  r)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	112	None	add
253	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  r)));  double  r  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  r)));  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]          AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  r)));  double  r  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  r)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    i    -    1)/(1    -    nVars    *    r)));    double  r  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  r)));	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	112	None	add
254	[BUG]  [BUGGY]  out[i][j]  =  2  *  (1  -  r.cumulativeProbability(r));  [CE]  double  cannot  be  dereferenced  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  out[i][j]  =  2  *  (1  -  r.cumulativeProbability(r));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	out[i][j]  =  2  *  (1  -  r.cumulativeProbability(r));	  out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(r));    	non-compiled	[CE]  double  cannot  be  dereferenced	51	None	replace
255	[BUG]  [BUGGY]  out[i][j]  =  2  *  (1  -  r.cumulativeProbability(t));  [CE]  cannot  find  symbol  t  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  out[i][j]  =  2  *  (1  -  r.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	out[i][j]  =  2  *  (1  -  r.cumulativeProbability(t));	  out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(r));    	non-compiled	[CE]  cannot  find  symbol  t	51	None	replace
256	[BUG]  [BUGGY]  out[i][j]  =  2  *  (1  -  correlationMatrix.cumulativeProbability(r));  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  out[i][j]  =  2  *  (1  -  correlationMatrix.cumulativeProbability(r));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	out[i][j]  =  2  *  (1  -  correlationMatrix.cumulativeProbability(r));	  out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(r));    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
257	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CE]  cannot  find  symbol  n  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  double    t    =    Math.abs(r    *    Math.sqrt((    i    -    2)/(1    -    r    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  cannot  find  symbol  n	119	None	replace
258	[BUG]  [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CE]  cannot  find  symbol  t  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  double    t    =    Math.abs(r    *    Math.sqrt((    i    -    2)/(1    -    r    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  cannot  find  symbol  t	119	None	replace
259	[BUG]  [BUGGY]  double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  nVars)));  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    nVars)));    double    r    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    nVars)));    	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	84	None	replace
260	[BUG]  [BUGGY]  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  nVars)));  [CE]  cannot  find  symbol  t  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	r  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    nVars)));    double    r    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    nVars)));    	non-compiled	[CE]  cannot  find  symbol  t	84	None	replace
261	[BUG]  [BUGGY]  double  t  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  nVars)));  [CE]  cannot  find  symbol  relativeProbability  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    nVars)));    double    r    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    nVars)));    	non-compiled	[CE]  cannot  find  symbol  relativeProbability	84	None	replace
262	[BUG]  [BUGGY]  if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t)  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t)  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t)	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    n    *    r)));    out[i][j]    =    2    *    1    -    tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  ';'  expected	94	None	replace
263	[BUG]  [BUGGY]  if(r  ==  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t)  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  if(r  ==  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t)  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	if(r  ==  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t)	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    n    *    r)));    out[i][j]    =    2    *    1    -    tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  ';'  expected	94	None	replace
264	[BUG]  [BUGGY]  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t));  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    n    *    r)));    out[i][j]    =    2    *    1    -    tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  ';'  expected	94	None	replace
265	[BUG]  [BUGGY]  if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t));  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t));  }  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t));  }	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    n    *    r)));    out[i][j]    =    2    *    1    -    tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  ';'  expected	94	None	replace
266	[BUG]  [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  i)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CE]  cannot  find  symbol  t  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  i)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  i)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  cannot  find  symbol  t	53	None	replace
267	[BUG]  [BUGGY]  double  t  =  correlationMatrix.getEntry(i,  j);  double  t  =  correlationMatrix.getEntry(i,  j);  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  correlationMatrix.getEntry(i,  j);  double  t  =  correlationMatrix.getEntry(i,  j);  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    correlationMatrix.getEntry(i,    j);    double  t  =  correlationMatrix.getEntry(i,  j);	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	29	None	add
268	[BUG]  [BUGGY]  double  t  =  correlationMatrix.getEntry(i,  j);  Double  t  =  correlationMatrix.getEntry(i,  j);  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  correlationMatrix.getEntry(i,  j);  Double  t  =  correlationMatrix.getEntry(i,  j);  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    correlationMatrix.getEntry(i,    j);    Double  t  =  correlationMatrix.getEntry(i,  j);	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	29	None	add
269	[BUG]  [BUGGY]  double  t  =  correlationMatrix.getEntry(i,  j);  double  t  =  covarianceMatrix.getEntry(i,  j);  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  correlationMatrix.getEntry(i,  j);  double  t  =  covarianceMatrix.getEntry(i,  j);  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    correlationMatrix.getEntry(i,    j);    double  t  =  covarianceMatrix.getEntry(i,  j);	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	29	None	add
270	[BUG]  [BUGGY]  double  t  =  correlationMatrix.getEntry(i,  j);  double  r  =  correlationMatrix.getEntry(i,  j);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]          AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  correlationMatrix.getEntry(i,  j);  double  r  =  correlationMatrix.getEntry(i,  j);  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    correlationMatrix.getEntry(i,    j);    double  r  =  correlationMatrix.getEntry(i,  j);	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	29	None	add
271	[BUG]  [BUGGY]  double  t  =  correlationMatrix.getEntry(i,  j);  double  t  =  conrelationMatrix.getEntry(i,  j);  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]            AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  correlationMatrix.getEntry(i,  j);  double  t  =  conrelationMatrix.getEntry(i,  j);  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    correlationMatrix.getEntry(i,    j);    double  t  =  conrelationMatrix.getEntry(i,  j);	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	29	None	add
272	[BUG]  [BUGGY]  double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  j)));  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    double    r    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	73	None	replace
273	[BUG]  [BUGGY]  double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  i)));  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  i)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  i)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    double    r    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	73	None	replace
274	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    i    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	120	None	add
275	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    i    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)	  	non-compiled	[CE]  ')'  expected	120	None	add
276	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  r  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  r  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    i    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    double  r  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	120	None	add
277	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t));  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    i    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t));	  	non-compiled	[CE]  ';'  expected	120	None	add
278	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j,  nVars,  numberOfObservations);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j,  nVars,  numberOfObservations);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  r  =  correlationMatrix.getEntry(i,  j,  nVars,  numberOfObservations);	  double    r    =    covarianceMatrix.getEntry(i,    j,    nVars);    	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	8	None	replace
279	[BUG]  [BUGGY]  double  r  =  covarianceMatrix.getEntry(i,  j,  nVars,  nObs);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  r  =  covarianceMatrix.getEntry(i,  j,  nVars,  nObs);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  r  =  covarianceMatrix.getEntry(i,  j,  nVars,  nObs);	  double    r    =    covarianceMatrix.getEntry(i,    j,    nVars);    	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	8	None	replace
280	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	96	None	add
281	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)	  	non-compiled	[CE]  ')'  expected	96	None	add
282	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	96	None	add
283	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(  [CE]  '.class'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(	  	non-compiled	[CE]  '.class'  expected	96	None	add
284	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(2  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(2  -  nVars  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    i    -    1)/(1    -    nVars    *    nVars)));    	compilable	  [FE]  AssertionFailedError  	115	4	replace
285	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(2  -  nVars  *  nVars)));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(2  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(2  -  nVars  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    i    -    1)/(1    -    nVars    *    nVars)));    	compilable	  [FE]  AssertionFailedError  	115	4	replace
286	[BUG]  [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  nVars)));  [CE]  cannot  find  symbol  t  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    nVars)));    double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(2    -    nVars    *    nVars)));    	non-compiled	[CE]  cannot  find  symbol  t	40	None	replace
287	[BUG]  [BUGGY]  if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t)    	non-compiled	[CE]  ')'  expected	54	None	replace
288	[BUG]  [BUGGY]  if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t)    	non-compiled	[CE]  ')'  expected	54	None	replace
289	[BUG]  [BUGGY]  if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t)  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t)  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t)	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    1    -    tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  ';'  expected	66	None	replace
290	[BUG]  [BUGGY]  if(r  ==  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t)  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  if(r  ==  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t)  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	if(r  ==  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t)	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    1    -    tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  ';'  expected	66	None	replace
291	[BUG]  [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t));  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    1    -    tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  ';'  expected	66	None	replace
292	[BUG]  [BUGGY]  if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    1    -    tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  ';'  expected	66	None	replace
293	[BUG]  [BUGGY]  out[i][j]  =  2  *  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  [CE]  cannot  find  symbol  t  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  out[i][j]  =  2  *  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	out[i][j]  =  2  *  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));	  out[i][j]    =    2    *    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    	non-compiled	[CE]  cannot  find  symbol  t	95	None	replace
294	[BUG]  [BUGGY]  out[i][j]  =  2  *  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  l)));  [CE]  cannot  find  symbol  l  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  out[i][j]  =  2  *  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  l)));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	out[i][j]  =  2  *  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  l)));	  out[i][j]    =    2    *    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    	non-compiled	[CE]  cannot  find  symbol  l	95	None	replace
295	[BUG]  [BUGGY]  out[i][j]  =  2  *  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  d)));  [CE]  cannot  find  symbol  d  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  out[i][j]  =  2  *  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  d)));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	out[i][j]  =  2  *  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  d)));	  out[i][j]    =    2    *    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    	non-compiled	[CE]  cannot  find  symbol  d	95	None	replace
296	[BUG]  [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)	  t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t)    	non-compiled	[CE]  ')'  expected	52	None	replace
297	[BUG]  [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  i)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  i)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  i)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)	  t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t)    	non-compiled	[CE]  ')'  expected	52	None	replace
298	[BUG]  [BUGGY]  double  r  =  covarianceMatrix.getEntry(j,  i);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  r  =  covarianceMatrix.getEntry(j,  i);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  r  =  covarianceMatrix.getEntry(j,  i);	  double    r    =    correlationMatrix.getEntry(j,    i);    	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	9	None	replace
299	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  nVars);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  r  =  correlationMatrix.getEntry(j,  nVars);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  r  =  correlationMatrix.getEntry(j,  nVars);	  double    r    =    correlationMatrix.getEntry(j,    i);    	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	9	None	replace
300	[BUG]  [BUGGY]  double  t  =  covarianceMatrix.getEntry(i,  j);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  covarianceMatrix.getEntry(i,  j);  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  covarianceMatrix.getEntry(i,  j);	  double    t    =    correlationMatrix.getEntry(i,    j);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	30	None	replace
301	[BUG]  [BUGGY]  double  t  =  this.covarianceMatrix.getEntry(i,  j);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  this.covarianceMatrix.getEntry(i,  j);  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  this.covarianceMatrix.getEntry(i,  j);	  double    t    =    correlationMatrix.getEntry(i,    j);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	30	None	replace
302	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  correlationMatrix.getEntry(i,  j  +  1);  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  correlationMatrix.getEntry(i,  j  +  1);	  double    t    =    correlationMatrix.getEntry(i,    j);    	compilable	  [FE]  AssertionFailedError  	30	4	replace
303	[BUG]  [BUGGY]  double  t  =  correlationMatrix.getEntry(i,  j  +  1);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  correlationMatrix.getEntry(i,  j  +  1);  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  correlationMatrix.getEntry(i,  j  +  1);	  double    t    =    correlationMatrix.getEntry(i,    j);    	compilable	  [FE]  AssertionFailedError  	30	4	replace
304	[BUG]  [BUGGY]  double  t  =  correlationMatrix.getEntry(i,  j,  nVars);  [CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  correlationMatrix.getEntry(i,  j,  nVars);  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  correlationMatrix.getEntry(i,  j,  nVars);	  double    t    =    correlationMatrix.getEntry(i,    j);    	non-compiled	[CE]  method  getEntry  in  interface  RealMatrix  cannot  be  applied  to  given  types;	30	None	replace
305	[BUG]  [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CE]  cannot  find  symbol  t  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  cannot  find  symbol  t	130	None	replace
306	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	compilable	  [FE]  AssertionFailedError  	130	3	replace
307	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	compilable	  [FE]  AssertionFailedError  	130	3	replace
308	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t)  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t)  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t)	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    1    -    tDistribution.cumulativeProbability(t)    	non-compiled	[CE]  ';'  expected	68	None	replace
309	[BUG]  [BUGGY]  nObs  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t)  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  nObs  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t)  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	nObs  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t)	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    1    -    tDistribution.cumulativeProbability(t)    	non-compiled	[CE]  ';'  expected	68	None	replace
310	[BUG]  [BUGGY]  double  r  =  this.covarianceMatrix.getRowDimension();  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  r  =  this.covarianceMatrix.getRowDimension();  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  r  =  this.covarianceMatrix.getRowDimension();	  double    r    =    this.covarianceMatrix.getColumnDimension();    	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	21	None	replace
311	[BUG]  [BUGGY]  int  nObs  =  r.getRowDimension();  [CE]  double  cannot  be  dereferenced  [FE]                          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  int  nObs  =  r.getRowDimension();  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	int  nObs  =  r.getRowDimension();	  int    nObs    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  double  cannot  be  dereferenced	31	None	replace
312	[BUG]  [BUGGY]  int  nObs  =  covarianceMatrix.getRowDimension();  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  int  nObs  =  covarianceMatrix.getRowDimension();  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	int  nObs  =  covarianceMatrix.getRowDimension();	  int    nObs    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	31	None	replace
313	[BUG]  [BUGGY]  tDistribution.cumulativeProbability(out);  [CE]  no  suitable  method  found  for  cumulativeProbability(double[][])  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  tDistribution.cumulativeProbability(out);  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	tDistribution.cumulativeProbability(out);	  tDistribution.cumulativeProbability(r);    	non-compiled	[CE]  no  suitable  method  found  for  cumulativeProbability(double[][])	28	None	replace
314	[BUG]  [BUGGY]  tDistribution.cumulativeProbability(i);  [CE]  cannot  find  symbol  t  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  tDistribution.cumulativeProbability(i);  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	tDistribution.cumulativeProbability(i);	  tDistribution.cumulativeProbability(r);    	non-compiled	[CE]  cannot  find  symbol  t	28	None	replace
315	[BUG]  [BUGGY]  tDistribution.cumulativeProbability(d);  [CE]  cannot  find  symbol  d  [FE]                          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  tDistribution.cumulativeProbability(d);  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	tDistribution.cumulativeProbability(d);	  tDistribution.cumulativeProbability(r);    	non-compiled	[CE]  cannot  find  symbol  d	28	None	replace
316	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    i    -    2)/(1    -    nVars    *    r)));    double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	126	None	add
317	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  Double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  Double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    i    -    2)/(1    -    nVars    *    r)));    Double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	126	None	add
318	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(2  -  nVars  *  r)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(2  -  nVars  *  r)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    i    -    2)/(1    -    nVars    *    r)));    double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(2  -  nVars  *  r)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	126	None	add
319	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  double  r  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]          AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  double  r  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    i    -    2)/(1    -    nVars    *    r)));    double  r  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	126	None	add
320	[BUG]  [BUGGY]  n  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  n  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	n  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t)    	non-compiled	[CE]  ')'  expected	98	None	replace
321	[BUG]  [BUGGY]  n  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  n  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	n  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t)    	non-compiled	[CE]  ')'  expected	98	None	replace
322	[BUG]  [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));  [CE]  cannot  find  symbol  R  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    double    t    =    Math.abs(R    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    	non-compiled	[CE]  cannot  find  symbol  R	108	None	replace
323	[BUG]  [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  d)));  [CE]  cannot  find  symbol  R  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  d)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  d)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    double    t    =    Math.abs(R    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    	non-compiled	[CE]  cannot  find  symbol  R	108	None	replace
324	[BUG]  [BUGGY]  double  r  =  Math.abs(relativeProbability  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  nVars)));  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  r  =  Math.abs(relativeProbability  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  r  =  Math.abs(relativeProbability  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    r)));    double    r    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    r)));    	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	26	None	replace
325	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  nObs)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  nObs)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    nVars)));    double    t    =    Math.abs(r    *    Math.sqrt((    nobs    -    1)/(1    -    nVars    *    nVars)));    	compilable	  [FE]  AssertionFailedError  	39	4	replace
326	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  nObs)));  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  nObs)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  nObs)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    nVars)));    double    t    =    Math.abs(r    *    Math.sqrt((    nobs    -    1)/(1    -    nVars    *    nVars)));    	compilable	  [FE]  AssertionFailedError  	39	4	replace
327	[BUG]  [BUGGY]  double  tT  =  matrix.getEntry(i,  j);  [CE]  cannot  find  symbol  matrix  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  tT  =  matrix.getEntry(i,  j);  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  tT  =  matrix.getEntry(i,  j);	  double    tT    =    correlationMatrix.getEntry(i,    j);    	non-compiled	[CE]  cannot  find  symbol  matrix	132	None	replace
328	[BUG]  [BUGGY]  double  tT  =  this.covarianceMatrix.getEntry(i,  j);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  tT  =  this.covarianceMatrix.getEntry(i,  j);  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  tT  =  this.covarianceMatrix.getEntry(i,  j);	  double    tT    =    correlationMatrix.getEntry(i,    j);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	132	None	replace
329	[BUG]  [BUGGY]  double  r  =  dataMatrix.getEntry(i,  j,  nVars);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  r  =  dataMatrix.getEntry(i,  j,  nVars);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  r  =  dataMatrix.getEntry(i,  j,  nVars);	  double    r    =    correlationMatrix.getEntry(i,    j,    nVars);    	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	7	None	replace
330	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  r)));  double  r  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  r)));  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  r)));  double  r  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  r)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    j    -    1)/(1    -    nVars    *    r)));    double  r  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  r)));	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	110	None	add
331	[BUG]  [BUGGY]  RealMatrix  tDistribution  =  new  RealMatrixImpl(out,  i);  [CE]  variable  tDistribution  is  already  defined  in  method  getCorrelationPValues()  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  RealMatrix  tDistribution  =  new  RealMatrixImpl(out,  i);  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	RealMatrix  tDistribution  =  new  RealMatrixImpl(out,  i);	  RealMatrix    tDistribution    =    new    RealMatrixImpl(r,    i);    	non-compiled	[CE]  variable  tDistribution  is  already  defined  in  method  getCorrelationPValues()	81	None	replace
332	[BUG]  [BUGGY]  RealMatrix  tDistribution  =  new  RealMatrixImpl(r,  out);  [CE]  variable  tDistribution  is  already  defined  in  method  getCorrelationPValues()  [FE]                          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  RealMatrix  tDistribution  =  new  RealMatrixImpl(r,  out);  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	RealMatrix  tDistribution  =  new  RealMatrixImpl(r,  out);	  RealMatrix    tDistribution    =    new    RealMatrixImpl(r,    i);    	non-compiled	[CE]  variable  tDistribution  is  already  defined  in  method  getCorrelationPValues()	81	None	replace
333	[BUG]  [BUGGY]  out[i][j]  =  2  *  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  r)));  [CE]  cannot  find  symbol  t  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  out[i][j]  =  2  *  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  r)));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	out[i][j]  =  2  *  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  r)));	  out[i][j]    =    2    *    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    	non-compiled	[CE]  cannot  find  symbol  t	95	None	replace
334	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  Double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	Double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    j)));    Double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    j)));    	compilable	  [FE]  AssertionFailedError  	15	4	replace
335	[BUG]  [BUGGY]  Double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  j)));  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  Double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	Double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    j)));    Double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    j)));    	compilable	  [FE]  AssertionFailedError  	15	4	replace
336	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  j)));  double  r  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  j)));  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  j)));  double  r  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nVars    *    j)));    double  r  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  j)));	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	41	None	add
337	[BUG]  [BUGGY]  double  t  =  matrix.getEntry(i,  j);  [CE]  cannot  find  symbol  matrix  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  matrix.getEntry(i,  j);  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  matrix.getEntry(i,  j);	  double    t    =    correlationMatrix.getEntry(i,    j);    	non-compiled	[CE]  cannot  find  symbol  matrix	30	None	replace
338	[BUG]  [BUGGY]  double  t  =  dataMatrix.getEntry(i,  j);  [CE]  cannot  find  symbol  dataMatrix  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  dataMatrix.getEntry(i,  j);  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  dataMatrix.getEntry(i,  j);	  double    t    =    correlationMatrix.getEntry(i,    j);    	non-compiled	[CE]  cannot  find  symbol  dataMatrix	30	None	replace
339	[BUG]  [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  j)));  [CE]  cannot  find  symbol  R  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    j)));    double    t    =    Math.abs(R    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    j)));    	non-compiled	[CE]  cannot  find  symbol  R	101	None	replace
340	[BUG]  [BUGGY]  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(nVars));  [CE]  cannot  find  symbol  t  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(nVars));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(nVars));	  out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(r));    	non-compiled	[CE]  cannot  find  symbol  t	51	None	replace
341	[BUG]  [BUGGY]  double  r  =  dataMatrix.getEntry(i,  j,  covarianceMatrix);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  r  =  dataMatrix.getEntry(i,  j,  covarianceMatrix);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  r  =  dataMatrix.getEntry(i,  j,  covarianceMatrix);	  double    r    =    dataMatrix.getEntry(i,    j);    	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	83	None	replace
342	[BUG]  [BUGGY]  double  t  =  Math.abs(nobs  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  r)));  [CE]  cannot  find  symbol  nobs  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(nobs  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  r)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(nobs  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  r)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    double    t    =    Math.abs(r    *    Math.sqrt((    nobs    -    1)/(1    -    nVars    *    r)));    	non-compiled	[CE]  cannot  find  symbol  nobs	72	None	replace
343	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  r)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  r)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    double    t    =    Math.abs(r    *    Math.sqrt((    nobs    -    1)/(1    -    nVars    *    r)));    	compilable	  [FE]  AssertionFailedError  	72	3	replace
344	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  r)));  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  r)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  r)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    double    t    =    Math.abs(r    *    Math.sqrt((    nobs    -    1)/(1    -    nVars    *    r)));    	compilable	  [FE]  AssertionFailedError  	72	3	replace
345	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  j)));  double  r  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  j)));  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  j)));  double  r  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    1)/(1    -    nVars    *    j)));    double  r  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  j)));	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	106	None	add
346	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  Double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	Double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    Double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    	compilable	  [FE]  AssertionFailedError  	58	4	replace
347	[BUG]  [BUGGY]  Double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  Double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	Double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    Double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    	compilable	  [FE]  AssertionFailedError  	58	4	replace
348	[BUG]  [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  d)));  [CE]  cannot  find  symbol  R  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  d)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  d)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    r)));    double    t    =    Math.abs(R    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    r)));    	non-compiled	[CE]  cannot  find  symbol  R	103	None	replace
349	[BUG]  [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  nVars)));  [CE]  cannot  find  symbol  R  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    r)));    double    t    =    Math.abs(R    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    r)));    	non-compiled	[CE]  cannot  find  symbol  R	103	None	replace
350	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nObs  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nObs  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    1)/(1    -    nObs    *    j)));    	compilable	  [FE]  AssertionFailedError  	2	4	replace
351	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nObs  *  nVars)));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nObs  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nObs  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    1)/(1    -    nObs    *    j)));    	compilable	  [FE]  AssertionFailedError  	2	4	replace
352	[BUG]  [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  nVars)));  [CE]  cannot  find  symbol  R  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    nVars)));    double    t    =    Math.abs(R    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    nVars)));    	non-compiled	[CE]  cannot  find  symbol  R	116	None	replace
353	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  j)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t));  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  j)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  j)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    n    *    r)));    out[i][j]    =    2    *    1    -    tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  ';'  expected	94	None	replace
354	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t));  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    n    *    r)));    out[i][j]    =    2    *    1    -    tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  ';'  expected	94	None	replace
355	[BUG]  [BUGGY]  out[i][j]  =  2  *  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  [CE]  cannot  find  symbol  n  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  out[i][j]  =  2  *  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	out[i][j]  =  2  *  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    n    *    r)));    out[i][j]    =    2    *    1    -    tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  cannot  find  symbol  n	94	None	replace
356	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  nVars  +  1)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  nVars  +  1)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    1)/(1    -    nVars    *    nVars)));    	compilable	  [FE]  AssertionFailedError  	93	4	replace
357	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  nVars  +  1)));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  nVars  +  1)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  nVars  +  1)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    1)/(1    -    nVars    *    nVars)));    	compilable	  [FE]  AssertionFailedError  	93	4	replace
358	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  d)));  [CE]  cannot  find  symbol  d  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  d)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  d)));	  double    t    =    Math.abs(r    *    Math.sqrt((    j    -    1)/(1    -    nVars    *    r)));    	non-compiled	[CE]  cannot  find  symbol  d	111	None	replace
359	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  nVars)));  double  r  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  nVars)));  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  nVars)));  double  r  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    nVars)));    double  r  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  nVars)));	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	85	None	add
360	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  nVars)));  double  r  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  nVars)));  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  nVars)));  double  r  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    1)/(1    -    nVars    *    nVars)));    double  r  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  nVars)));	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	92	None	add
361	[BUG]  [BUGGY]  double  t  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));  [CE]  cannot  find  symbol  relativeProbability  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    	non-compiled	[CE]  cannot  find  symbol  relativeProbability	57	None	replace
362	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    j)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)	  	non-compiled	[CE]  ')'  expected	122	None	add
363	[BUG]  [BUGGY]  if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability	  if(r!=    null)    {    double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    r    *    r)));    out[i][j]    =    2    *    1    -    tDistribution.cumulativeProbability(t)    	non-compiled	[CE]  ';'  expected	69	None	replace
364	[BUG]  [BUGGY]  if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativePro  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativePro  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativePro	  if(r!=    null)    {    double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    r    *    r)));    out[i][j]    =    2    *    1    -    tDistribution.cumulativeProbability(t)    	non-compiled	[CE]  ';'  expected	69	None	replace
365	[BUG]  [BUGGY]  double  r  =  this.covarianceMatrix.getEntry(j,  i);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  r  =  this.covarianceMatrix.getEntry(j,  i);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  r  =  this.covarianceMatrix.getEntry(j,  i);	  double    r    =    correlationMatrix.getEntry(j,    i);    	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	9	None	replace
366	[BUG]  [BUGGY]  int  numberOfObservations  =  tDistribution.getNumberOfObservations();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  int  numberOfObservations  =  tDistribution.getNumberOfObservations();  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	int  numberOfObservations  =  tDistribution.getNumberOfObservations();	  int    numberOfObservations    =    correlationMatrix.getNumberOfObservations();    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
367	[BUG]  [BUGGY]  double  r  =  matrix.getEntry(i,  j,  covarianceMatrix);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  r  =  matrix.getEntry(i,  j,  covarianceMatrix);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  r  =  matrix.getEntry(i,  j,  covarianceMatrix);	  double    r    =    correlationMatrix.getEntry(i,    j,    covarianceMatrix);    	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	32	None	replace
368	[BUG]  [BUGGY]  int  nVars  =  this.covarianceMatrix.getColumnDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  int  nVars  =  this.covarianceMatrix.getColumnDimension();  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	int  nVars  =  this.covarianceMatrix.getColumnDimension();	  int    nVars    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	131	None	replace
369	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t));  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    i    -    2)/(1    -    r    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t));	  	non-compiled	[CE]  ';'  expected	118	None	add
370	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	compilable	  [FE]  AssertionFailedError  	130	3	replace
371	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	compilable	  [FE]  AssertionFailedError  	130	3	replace
372	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    j)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	compilable	  [FE]  AssertionFailedError  	123	4	replace
373	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    j)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	compilable	  [FE]  AssertionFailedError  	123	4	replace
374	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    j)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	compilable	  [FE]  AssertionFailedError  	123	1	replace
375	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    j)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	compilable	  [FE]  AssertionFailedError  	123	1	replace
376	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    j)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  ')'  expected	123	None	replace
377	[BUG]  [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CE]  cannot  find  symbol  t  [FE]          AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    j)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  cannot  find  symbol  t	123	None	replace
378	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	compilable	  [FE]  AssertionFailedError  	97	1	replace
379	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	compilable	  [FE]  AssertionFailedError  	97	1	replace
380	[BUG]  [BUGGY]  double  t  =  Math.abs(nobs  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  [CE]  cannot  find  symbol  nobs  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(nobs  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(nobs  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    double    t    =    Math.abs(r    *    Math.sqrt((    nobs    -    2)/(1    -    nVars    *    r)));    	non-compiled	[CE]  cannot  find  symbol  nobs	61	None	replace
381	[BUG]  [BUGGY]  double  t  =  Math.abs(nobs  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));  [CE]  cannot  find  symbol  nobs  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(nobs  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(nobs  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    double    t    =    Math.abs(r    *    Math.sqrt((    nobs    -    2)/(1    -    nVars    *    r)));    	non-compiled	[CE]  cannot  find  symbol  nobs	61	None	replace
382	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t)  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t)  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t)	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    1    -    tDistribution.cumulativeProbability(t)    	non-compiled	[CE]  ';'  expected	68	None	replace
383	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t)  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t)  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t)	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    1    -    tDistribution.cumulativeProbability(t)    	non-compiled	[CE]  ';'  expected	68	None	replace
384	[BUG]  [BUGGY]  if(r  >=  0)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  if(r  >=  0)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	if(r  >=  0)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    1    -    tDistribution.cumulativeProbability(t)    	non-compiled	[CE]  ';'  expected	68	None	replace
385	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	99	None	add
386	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  i)));  double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  i)));  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  i)));  double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  i)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    i)));    double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  i)));	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	33	None	add
387	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  r)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  r)));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  r)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	129	None	add
388	[BUG]  [BUGGY]  double  t  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  [CE]  cannot  find  symbol  relativeProbability  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    j)));    double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    j)));    	non-compiled	[CE]  cannot  find  symbol  relativeProbability	10	None	replace
389	[BUG]  [BUGGY]  double  t  =  Math.abs(relativeProbability  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  [CE]  cannot  find  symbol  relativeProbability  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(relativeProbability  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(relativeProbability  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));	  double    t    =    Math.abs(r    *    Math.sqrt((    i    -    2)/(1    -    nVars    *    r)));    	non-compiled	[CE]  cannot  find  symbol  relativeProbability	127	None	replace
390	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nObs  *  r)));  double  r  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nObs  *  r)));  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nObs  *  r)));  double  r  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nObs  *  r)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    j    -    2)/(1    -    nObs    *    r)));    double  r  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nObs  *  r)));	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	134	None	add
391	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  Double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	Double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    r)));    Double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    r)));    	compilable	  [FE]  AssertionFailedError  	23	4	replace
392	[BUG]  [BUGGY]  Double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  nVars)));  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  Double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	Double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    r)));    Double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    r)));    	compilable	  [FE]  AssertionFailedError  	23	4	replace
393	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  i)));  double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  i)));  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  i)));  double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  i)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    i)));    double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  i)));	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	55	None	add
394	[BUG]  [BUGGY]  double  t  =  Math.abs(nobs  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  r)));  [CE]  cannot  find  symbol  nobs  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(nobs  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  r)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(nobs  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  r)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    r)));    double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nobs    *    r)));    	non-compiled	[CE]  cannot  find  symbol  nobs	24	None	replace
395	[BUG]  [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)	  t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t)    	non-compiled	[CE]  ')'  expected	52	None	replace
396	[BUG]  [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)	  t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t)    	non-compiled	[CE]  ')'  expected	52	None	replace
397	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));  double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));  double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    nVars)));    double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	35	None	add
398	[BUG]  [BUGGY]  double  r  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  nVars)));  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  r  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  r  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    double    r    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	73	None	replace
399	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  nVars)));  double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  nVars)));  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  nVars)));  double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(2    -    nVars    *    nVars)));    double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  nVars)));	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	62	None	add
400	[BUG]  [BUGGY]  double  t  =  correlationMatrix.getEntry(i,  j);  double  t  =  contributionMatrix.getEntry(i,  j);  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  correlationMatrix.getEntry(i,  j);  double  t  =  contributionMatrix.getEntry(i,  j);  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    correlationMatrix.getEntry(i,    j);    double  t  =  contributionMatrix.getEntry(i,  j);	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	29	None	add
401	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  r)));  double  r  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  r)));  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  r)));  double  r  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  r)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    j    -    2)/(1    -    nVars    *    r)));    double  r  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  r)));	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	124	None	add
402	[BUG]  [BUGGY]  double  nObs  =  matrix.getEntryDimension();  [CE]  cannot  find  symbol  matrix  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  nObs  =  matrix.getEntryDimension();  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  nObs  =  matrix.getEntryDimension();	  double    nObs    =    correlationMatrix.getEntryDimension();    	non-compiled	[CE]  cannot  find  symbol  matrix	109	None	replace
403	[BUG]  [BUGGY]  double  r  =  dataMatrix.getRowDimension();  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  r  =  dataMatrix.getRowDimension();  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  r  =  dataMatrix.getRowDimension();	  double    r    =    covarianceMatrix.getRowDimension();    	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	20	None	replace
404	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  double  r  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  double  r  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    j)));    double  r  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	43	None	add
405	[BUG]  [BUGGY]  double  t  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  j)));  [CE]  cannot  find  symbol  relativeProbability  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    j)));    double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    j)));    	non-compiled	[CE]  cannot  find  symbol  relativeProbability	14	None	replace
406	[BUG]  [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  j)));  [CE]  cannot  find  symbol  t  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    j)));    double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    j)));    	non-compiled	[CE]  cannot  find  symbol  t	14	None	replace
407	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  nVars)));  double  r  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  nVars)));  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  nVars)));  double  r  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    1)/(1    -    nObs    *    nVars)));    double  r  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  nVars)));	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	64	None	add
408	[BUG]  [BUGGY]  double  t  =  Math.abs(nobs  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  j)));  [CE]  cannot  find  symbol  nobs  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(nobs  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(nobs  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    j)));    double    t    =    Math.abs(r    *    Math.sqrt((    nobs    -    1)/(1    -    nVars    *    j)));    	non-compiled	[CE]  cannot  find  symbol  nobs	16	None	replace
409	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	96	None	add
410	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(2  -  nObs  *  r)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(2  -  nObs  *  r)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(2    -    nVars    *    r)));    	compilable	  [FE]  AssertionFailedError  	74	3	replace
411	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(2  -  nObs  *  r)));  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(2  -  nObs  *  r)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(2  -  nObs  *  r)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(2    -    nVars    *    r)));    	compilable	  [FE]  AssertionFailedError  	74	3	replace
412	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  n)));  [CE]  cannot  find  symbol  n  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  n)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  n)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(2    -    nVars    *    r)));    	non-compiled	[CE]  cannot  find  symbol  n	74	None	replace
413	[BUG]  [BUGGY]  int  numberOfObservations  =  dataMatrix.getColumnDimension();  [CE]  cannot  find  symbol  dataMatrix  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  int  numberOfObservations  =  dataMatrix.getColumnDimension();  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	int  numberOfObservations  =  dataMatrix.getColumnDimension();	  int    numberOfObservations    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol  dataMatrix	80	None	replace
414	[BUG]  [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  r)));  [CE]  cannot  find  symbol  R  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  r)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  r)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    double    t    =    Math.abs(R    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    	non-compiled	[CE]  cannot  find  symbol  R	117	None	replace
415	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t));  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    1    -    tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  ';'  expected	66	None	replace
416	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t));  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    1    -    tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  ';'  expected	66	None	replace
417	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t));  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    1    -    tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  ';'  expected	66	None	replace
418	[BUG]  [BUGGY]  tDistribution.cumulativeProbability(n);  [CE]  cannot  find  symbol  n  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  tDistribution.cumulativeProbability(n);  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	tDistribution.cumulativeProbability(n);	  tDistribution.cumulativeProbability(r);    	non-compiled	[CE]  cannot  find  symbol  n	28	None	replace
419	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  j)));  double  r  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  j)));  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  j)));  double  r  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    1)/(1    -    nObs    *    j)));    double  r  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  j)));	  	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	1	None	add
420	[BUG]  [BUGGY]  double  r  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  r  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  r  =  Math.abs(relativeProbability  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    double    r    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	60	None	replace
421	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nVars)));  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(2  -  nVars  *  nVars)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nVars)));  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(2  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    j    -    1)/(1    -    nVars    *    nVars)));    double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(2  -  nVars  *  nVars)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	90	None	add
422	[BUG]  [BUGGY]  double  r  =  dataMatrix.getEntry(i,  j  +  1);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  r  =  dataMatrix.getEntry(i,  j  +  1);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  r  =  dataMatrix.getEntry(i,  j  +  1);	  double    r    =    correlationMatrix.getEntry(i,    j    +    1);    	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	102	None	replace
423	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(2  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(2  -  nVars  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(2    -    nVars    *    r)));    	compilable	  [FE]  AssertionFailedError  	59	4	replace
424	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(2  -  nVars  *  nVars)));  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(2  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(2  -  nVars  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(2    -    nVars    *    r)));    	compilable	  [FE]  AssertionFailedError  	59	4	replace
425	[BUG]  [BUGGY]  int  nObs  =  dataMatrix.getRowDimension();  [CE]  cannot  find  symbol  dataMatrix  [FE]                          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  int  nObs  =  dataMatrix.getRowDimension();  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	int  nObs  =  dataMatrix.getRowDimension();	  int    nObs    =    correlationMatrix.getRowDimension();    	non-compiled	[CE]  cannot  find  symbol  dataMatrix	31	None	replace
426	[BUG]  [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CE]  cannot  find  symbol  t  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  cannot  find  symbol  t	53	None	replace
427	[BUG]  [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CE]  cannot  find  symbol  t  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  cannot  find  symbol  t	53	None	replace
428	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (  -  tDistribution.cumulativeProbability(t));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    i    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (  -  tDistribution.cumulativeProbability(t));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	120	None	add
429	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t)    	non-compiled	[CE]  ')'  expected	54	None	replace
430	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t)    	non-compiled	[CE]  ')'  expected	54	None	replace
431	[BUG]  [BUGGY]  double  r  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  nVars)));  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  r  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  r  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    nVars)));    double    r    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    nVars)));    	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	84	None	replace
432	[BUG]  [BUGGY]  double  r  =  matrixMatrix.getEntry(i,  j,  nVars);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  r  =  matrixMatrix.getEntry(i,  j,  nVars);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  r  =  matrixMatrix.getEntry(i,  j,  nVars);	  double    r    =    covarianceMatrix.getEntry(i,    j,    nVars);    	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	8	None	replace
433	[BUG]  [BUGGY]  double  t  =  Math.abs(relativeProbability  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  nVars)));  [CE]  cannot  find  symbol  relativeProbability  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(relativeProbability  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(relativeProbability  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    i    -    1)/(1    -    nVars    *    nVars)));    	non-compiled	[CE]  cannot  find  symbol  relativeProbability	115	None	replace
434	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.cos((  i  -  1)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.cos((  i  -  1)/(1  -  nVars  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    i    -    1)/(1    -    nVars    *    nVars)));    	compilable	  [FE]  AssertionFailedError  	115	4	replace
435	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.cos((  i  -  1)/(1  -  nVars  *  nVars)));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.cos((  i  -  1)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.cos((  i  -  1)/(1  -  nVars  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    i    -    1)/(1    -    nVars    *    nVars)));    	compilable	  [FE]  AssertionFailedError  	115	4	replace
436	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.cos((  i  -  1)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.cos((  i  -  1)/(1  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    i    -    1)/(1    -    nVars    *    j)));    	compilable	  [FE]  AssertionFailedError  	88	4	replace
437	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.cos((  i  -  1)/(1  -  nVars  *  j)));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.cos((  i  -  1)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.cos((  i  -  1)/(1  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    i    -    1)/(1    -    nVars    *    j)));    	compilable	  [FE]  AssertionFailedError  	88	4	replace
438	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.log((  i  -  1)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.log((  i  -  1)/(1  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    i    -    1)/(1    -    nVars    *    j)));    	compilable	  [FE]  AssertionFailedError  	88	4	replace
439	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.log((  i  -  1)/(1  -  nVars  *  j)));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.log((  i  -  1)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.log((  i  -  1)/(1  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    i    -    1)/(1    -    nVars    *    j)));    	compilable	  [FE]  AssertionFailedError  	88	4	replace
440	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    j)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	compilable	  [FE]  AssertionFailedError  	123	1	replace
441	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    j)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	compilable	  [FE]  AssertionFailedError  	123	1	replace
442	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  i)));  double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  i)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  i)));  double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  i)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    i)));    double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  i)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	33	None	add
443	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  r)));  double  t  =  Math.abs(R  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  r)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  r)));  double  t  =  Math.abs(R  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  r)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    i    -    1)/(1    -    nVars    *    r)));    double  t  =  Math.abs(R  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  r)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	112	None	add
444	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  3)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  3)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    	compilable	  [FE]  AssertionFailedError  	70	4	replace
445	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  3)));  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  3)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  3)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    	compilable	  [FE]  AssertionFailedError  	70	4	replace
446	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	compilable	  [FE]  AssertionFailedError  	97	1	replace
447	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	compilable	  [FE]  AssertionFailedError  	97	1	replace
448	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  double    t    =    Math.abs(r    *    Math.sqrt((    i    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	compilable	  [FE]  AssertionFailedError  	121	3	replace
449	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  double    t    =    Math.abs(r    *    Math.sqrt((    i    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	compilable	  [FE]  AssertionFailedError  	121	3	replace
450	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  l  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CE]  cannot  find  symbol  l  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  l  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  l  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  double    t    =    Math.abs(r    *    Math.sqrt((    i    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  cannot  find  symbol  l	121	None	replace
451	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  j)));  double  t  =  Math.abs(R  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  j)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  j)));  double  t  =  Math.abs(R  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    i    -    2)/(1    -    nVars    *    j)));    double  t  =  Math.abs(R  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  j)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	104	None	add
452	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  r)));  double  t  =  Math.abs(R  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  r)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  r)));  double  t  =  Math.abs(R  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  r)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    j    -    2)/(1    -    nVars    *    r)));    double  t  =  Math.abs(R  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  r)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	124	None	add
453	[BUG]  [BUGGY]  int  numberOfObservations  =  tDistribution.getColumnDimension();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  int  numberOfObservations  =  tDistribution.getColumnDimension();  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	int  numberOfObservations  =  tDistribution.getColumnDimension();	  int    numberOfObservations    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
454	[BUG]  [BUGGY]  int  numberOfObservations  =  this.covarianceMatrix.getColumnDimension();  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  int  numberOfObservations  =  this.covarianceMatrix.getColumnDimension();  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	int  numberOfObservations  =  this.covarianceMatrix.getColumnDimension();	  int    numberOfObservations    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	80	None	replace
455	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  nVars)));  double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  nVars)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  nVars)));  double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    1)/(1    -    nVars    *    nVars)));    double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  nVars)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	92	None	add
456	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nObs  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nObs  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    1)/(1    -    nObs    *    j)));    	compilable	  [FE]  AssertionFailedError  	2	4	replace
457	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nObs  *  j)));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nObs  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nObs  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    1)/(1    -    nObs    *    j)));    	compilable	  [FE]  AssertionFailedError  	2	4	replace
458	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  j)));  double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  j)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  j)));  double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    1)/(1    -    nObs    *    j)));    double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  j)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	1	None	add
459	[BUG]  [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  l)));  [CE]  cannot  find  symbol  R  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  l)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  l)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    r)));    double    t    =    Math.abs(R    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    r)));    	non-compiled	[CE]  cannot  find  symbol  R	103	None	replace
460	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  r)));  double  t  =  Math.abs(R  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  r)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  r)));  double  t  =  Math.abs(R  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  r)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    j    -    1)/(1    -    nVars    *    r)));    double  t  =  Math.abs(R  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  r)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	110	None	add
461	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(covarianceMatrix,  j);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]            AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  r  =  correlationMatrix.getEntry(covarianceMatrix,  j);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  r  =  correlationMatrix.getEntry(covarianceMatrix,  j);	  double    r    =    correlationMatrix.getEntry(i,    j,    covarianceMatrix);    	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	32	None	replace
462	[BUG]  [BUGGY]  double  t  =  Math.abs(relativeProbability  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  j)));  [CE]  cannot  find  symbol  relativeProbability  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(relativeProbability  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(relativeProbability  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    j    -    2)/(1    -    nVars    *    r)));    	non-compiled	[CE]  cannot  find  symbol  relativeProbability	125	None	replace
463	[BUG]  [BUGGY]  if(r  <  0)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CE]  cannot  find  symbol  t  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  if(r  <  0)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	if(r  <  0)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }	  double    t    =    Math.abs(r    *    Math.sqrt((    i    -    2)/(1    -    r    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  cannot  find  symbol  t	119	None	replace
464	[BUG]  [BUGGY]  if(r  >=  0)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CE]  cannot  find  symbol  t  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  if(r  >=  0)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	if(r  >=  0)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }	  double    t    =    Math.abs(r    *    Math.sqrt((    i    -    2)/(1    -    r    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  cannot  find  symbol  t	119	None	replace
465	[BUG]  [BUGGY]  int  nVars  =  tDistribution.getColumnDimension();  [CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  int  nVars  =  tDistribution.getColumnDimension();  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	int  nVars  =  tDistribution.getColumnDimension();	  int    nVars    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  variable  nVars  is  already  defined  in  method  getCorrelationPValues()	131	None	replace
466	[BUG]  [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  +  3);  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  r  =  correlationMatrix.getEntry(i,  j  +  3);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  r  =  correlationMatrix.getEntry(i,  j  +  3);	  double    r    =    correlationMatrix.getEntry(i,    j    +    1);    	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	102	None	replace
467	[BUG]  [BUGGY]  double  tDistribution  =  tDistribution.cumulativeProbability(t);  [CE]  variable  tDistribution  is  already  defined  in  method  getCorrelationPValues()  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  tDistribution  =  tDistribution.cumulativeProbability(t);  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  tDistribution  =  tDistribution.cumulativeProbability(t);	  double    tDistribution    =    tDistribution.cumulativeProbability(r);    	non-compiled	[CE]  variable  tDistribution  is  already  defined  in  method  getCorrelationPValues()	133	None	replace
468	[BUG]  [BUGGY]  double  tDistribution  =  tDistribution.cumulativeProbability(r,  t);  [CE]  variable  tDistribution  is  already  defined  in  method  getCorrelationPValues()  [FE]                          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  tDistribution  =  tDistribution.cumulativeProbability(r,  t);  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  tDistribution  =  tDistribution.cumulativeProbability(r,  t);	  double    tDistribution    =    tDistribution.cumulativeProbability(r);    	non-compiled	[CE]  variable  tDistribution  is  already  defined  in  method  getCorrelationPValues()	133	None	replace
469	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  j)));  double  t  =  Math.abs(R  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  j)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  j)));  double  t  =  Math.abs(R  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    i    -    1)/(1    -    nVars    *    j)));    double  t  =  Math.abs(R  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  j)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	87	None	add
470	[BUG]  [BUGGY]  double  t  =  Math.abs(relativeProbability  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  j)));  [CE]  cannot  find  symbol  relativeProbability  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(relativeProbability  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(relativeProbability  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    i    -    1)/(1    -    nVars    *    r)));    	non-compiled	[CE]  cannot  find  symbol  relativeProbability	113	None	replace
471	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  double  t  =  Math.abs(R  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  double  t  =  Math.abs(R  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    i    -    2)/(1    -    nVars    *    r)));    double  t  =  Math.abs(R  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	126	None	add
472	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (  -  tDistribution.cumulativeProbability(t));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    i    -    2)/(1    -    r    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (  -  tDistribution.cumulativeProbability(t));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	118	None	add
473	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nVars)));  double  t  =  Math.abs(R  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nVars)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nVars)));  double  t  =  Math.abs(R  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    j    -    1)/(1    -    nVars    *    nVars)));    double  t  =  Math.abs(R  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nVars)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	90	None	add
474	[BUG]  [BUGGY]  double  t  =  tDistribution.getEntry(i,  j);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  tDistribution.getEntry(i,  j);  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  tDistribution.getEntry(i,  j);	  double    t    =    correlationMatrix.getEntry(i,    j);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
475	[BUG]  [BUGGY]  if(r!=  nVars)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  if(r!=  nVars)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	if(r!=  nVars)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t)    	non-compiled	[CE]  ')'  expected	98	None	replace
476	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t)    	non-compiled	[CE]  ')'  expected	98	None	replace
477	[BUG]  [BUGGY]  double  t  =  Math.abs(covarianceMatrix  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  j)));  [CE]  cannot  find  symbol  covarianceMatrix  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(covarianceMatrix  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(covarianceMatrix  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    j    -    1)/(1    -    nVars    *    r)));    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	111	None	replace
478	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t)    	non-compiled	[CE]  ')'  expected	54	None	replace
479	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t));  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    j)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t));	  	non-compiled	[CE]  ';'  expected	122	None	add
480	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (  -  tDistribution.cumulativeProbability(t));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    j)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (  -  tDistribution.cumulativeProbability(t));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	122	None	add
481	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  nVars)));  double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  nVars)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  nVars)));  double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    nVars)));    double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  nVars)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	85	None	add
482	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t)  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t)  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t)	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    1    -    tDistribution.cumulativeProbability(t)    	non-compiled	[CE]  ';'  expected	68	None	replace
483	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t)  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t)  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t)	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    1    -    tDistribution.cumulativeProbability(t)    	non-compiled	[CE]  ';'  expected	68	None	replace
484	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	compilable	  [FE]  AssertionFailedError  	100	3	replace
485	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	compilable	  [FE]  AssertionFailedError  	100	3	replace
486	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    j)));    double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  2)/(1  -  nObs  *  j)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	43	None	add
487	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nObs  *  r)));  double  t  =  Math.abs(R  *  Math.sqrt((  j  -  2)/(1  -  nObs  *  r)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nObs  *  r)));  double  t  =  Math.abs(R  *  Math.sqrt((  j  -  2)/(1  -  nObs  *  r)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    j    -    2)/(1    -    nObs    *    r)));    double  t  =  Math.abs(R  *  Math.sqrt((  j  -  2)/(1  -  nObs  *  r)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	134	None	add
488	[BUG]  [BUGGY]  if(r  <  0)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [CE]  cannot  find  symbol  t  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  if(r  <  0)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	if(r  <  0)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  cannot  find  symbol  t	130	None	replace
489	[BUG]  [BUGGY]  if(r  <  0)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  if(r  <  0)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	if(r  <  0)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  ')'  expected	130	None	replace
490	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  nObs)));  double  t  =  Math.abs(R  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  nObs)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  nObs)));  double  t  =  Math.abs(R  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  nObs)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    j    -    2)/(1    -    nVars    *    nObs)));    double  t  =  Math.abs(R  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  nObs)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	45	None	add
491	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  nObs)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  nObs)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    i)));    	compilable	  [FE]  AssertionFailedError  	56	4	replace
492	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  nObs)));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  nObs)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  nObs)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    i)));    	compilable	  [FE]  AssertionFailedError  	56	4	replace
493	[BUG]  [BUGGY]  tDistribution.cumulativeProbability(covarianceMatrix);  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                      AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  tDistribution.cumulativeProbability(covarianceMatrix);  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	tDistribution.cumulativeProbability(covarianceMatrix);	  tDistribution.cumulativeProbability(r);    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	28	None	replace
494	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  nVars)));  double  t  =  Math.abs(R  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  nVars)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  nVars)));  double  t  =  Math.abs(R  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    i    -    1)/(1    -    nVars    *    nVars)));    double  t  =  Math.abs(R  *  Math.sqrt((  i  -  1)/(1  -  nVars  *  nVars)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	114	None	add
495	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  j)));  double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  j)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  j)));  double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nVars    *    j)));    double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  j)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	41	None	add
496	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nObs)));  double  t  =  Math.abs(R  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nObs)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nObs)));  double  t  =  Math.abs(R  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nObs)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    j    -    1)/(1    -    nVars    *    nObs)));    double  t  =  Math.abs(R  *  Math.sqrt((  j  -  1)/(1  -  nVars  *  nObs)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	5	None	add
497	[BUG]  [BUGGY]  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(r),  covarianceMatrix);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(r),  covarianceMatrix);  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(r),  covarianceMatrix);	  out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(r));    	non-compiled	[CE]  ')'  expected	51	None	replace
498	[BUG]  [BUGGY]  if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativePro  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativePro  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativePro	  if(r!=    null)    {    double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    r    *    r)));    out[i][j]    =    2    *    1    -    tDistribution.cumulativeProbability(t)    	non-compiled	[CE]  ';'  expected	69	None	replace
499	[BUG]  [BUGGY]  if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	if(r!=  null)  {  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)	  if(r!=    null)    {    double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    r    *    r)));    out[i][j]    =    2    *    1    -    tDistribution.cumulativeProbability(t)    	non-compiled	[CE]  ')'  expected	69	None	replace
500	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.cos((  j  -  1)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.cos((  j  -  1)/(1  -  nVars  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    j    -    1)/(1    -    nVars    *    nObs)));    	compilable	  [FE]  AssertionFailedError  	6	4	replace
501	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.cos((  j  -  1)/(1  -  nVars  *  nVars)));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.cos((  j  -  1)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.cos((  j  -  1)/(1  -  nVars  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    j    -    1)/(1    -    nVars    *    nObs)));    	compilable	  [FE]  AssertionFailedError  	6	4	replace
502	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  nObs)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  nObs)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    i)));    	compilable	  [FE]  AssertionFailedError  	34	4	replace
503	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  nObs)));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  nObs)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  nObs)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    i)));    	compilable	  [FE]  AssertionFailedError  	34	4	replace
504	[BUG]  [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t)	  t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t)    	non-compiled	[CE]  ')'  expected	52	None	replace
505	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  i)));  double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  i)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  i)));  double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  i)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    i)));    double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  i)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	55	None	add
506	[BUG]  [BUGGY]  double  t  =  Math.abs(covarianceMatrix  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  j)));  [CE]  cannot  find  symbol  covarianceMatrix  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(covarianceMatrix  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(covarianceMatrix  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    j)));    double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    j)));    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	14	None	replace
507	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (  -  tDistribution.cumulativeProbability(t));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (  -  tDistribution.cumulativeProbability(t));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	99	None	add
508	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t));  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t));	  	non-compiled	[CE]  ';'  expected	99	None	add
509	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  nVars)));  double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  nVars)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  nVars)));  double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(2    -    nVars    *    nVars)));    double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  nVars)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	62	None	add
510	[BUG]  [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CE]  cannot  find  symbol  t  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  cannot  find  symbol  t	53	None	replace
511	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  j)));  double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  j)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  j)));  double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(2    -    nVars    *    j)));    double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  1)/(2  -  nVars  *  j)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	3	None	add
512	[BUG]  [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  nVars)));  [CE]  cannot  find  symbol  R  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    nVars)));    double    t    =    Math.abs(R    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    nVars)));    	non-compiled	[CE]  cannot  find  symbol  R	116	None	replace
513	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    nVars)));    	compilable	  [FE]  AssertionFailedError  	36	4	replace
514	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  nVars)));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    nVars)));    	compilable	  [FE]  AssertionFailedError  	36	4	replace
515	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CE]  cannot  find  symbol  n  [FE]                  AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  n  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    n    *    r)));    out[i][j]    =    2    *    1    -    tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  cannot  find  symbol  n	94	None	replace
516	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CE]  cannot  find  symbol  n  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  2)/(1  -  n  *  j)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    n    *    r)));    out[i][j]    =    2    *    1    -    tDistribution.cumulativeProbability(t));    	non-compiled	[CE]  cannot  find  symbol  n	94	None	replace
517	[BUG]  [BUGGY]  double  t  =  Math.abs(relativeProbability  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  j)));  [CE]  cannot  find  symbol  relativeProbability  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(relativeProbability  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(relativeProbability  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    i    -    2)/(1    -    nVars    *    r)));    	non-compiled	[CE]  cannot  find  symbol  relativeProbability	127	None	replace
518	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));  double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));  double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    nVars)));    double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  nVars)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	35	None	add
519	[BUG]  [BUGGY]  int  nObs  =  this.covarianceMatrix.getColumnDimension();  [CE]  cannot  find  symbol  covarianceMatrix  [FE]                    AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  int  nObs  =  this.covarianceMatrix.getColumnDimension();  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	int  nObs  =  this.covarianceMatrix.getColumnDimension();	  int    nObs    =    correlationMatrix.getColumnDimension();    	non-compiled	[CE]  cannot  find  symbol  covarianceMatrix	27	None	replace
520	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nObs  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nObs  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    1)/(1    -    nObs    *    nVars)));    	compilable	  [FE]  AssertionFailedError  	65	4	replace
521	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nObs  *  nVars)));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nObs  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  i  -  1)/(1  -  nObs  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    1)/(1    -    nObs    *    nVars)));    	compilable	  [FE]  AssertionFailedError  	65	4	replace
522	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t));  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  1  -  tDistribution.cumulativeProbability(t));	  	non-compiled	[CE]  ';'  expected	96	None	add
523	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (  -  tDistribution.cumulativeProbability(t));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    double  t  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (  -  tDistribution.cumulativeProbability(t));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	96	None	add
524	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  j)));  double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  j)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  j)));  double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    1)/(1    -    nVars    *    j)));    double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  j)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	106	None	add
525	[BUG]  [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  d)));  [CE]  cannot  find  symbol  R  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  d)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  d)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    double    t    =    Math.abs(R    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    	non-compiled	[CE]  cannot  find  symbol  R	117	None	replace
526	[BUG]  [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  3)));  [CE]  cannot  find  symbol  R  [FE]          AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  3)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  1)/(1  -  nVars  *  3)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    double    t    =    Math.abs(R    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    r)));    	non-compiled	[CE]  cannot  find  symbol  R	117	None	replace
527	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  nVars)));  double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  nVars)));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  nVars)));  double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    1)/(1    -    nObs    *    nVars)));    double  t  =  Math.abs(R  *  Math.sqrt((  nVars  -  1)/(1  -  nObs  *  nVars)));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	64	None	add
528	[BUG]  [BUGGY]  double  r  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  nVars)));  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  r  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  r  =  Math.abs(r  *  Math.sqrt((  nVars  -  1)/(1  -  nVars  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    nVars)));    double    r    =    Math.abs(r    *    Math.sqrt((    nObs    -    1)/(1    -    nVars    *    nVars)));    	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	84	None	replace
529	[BUG]  [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  3)));  [CE]  cannot  find  symbol  R  [FE]        AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  3)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(R  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  3)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    double    t    =    Math.abs(R    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    	non-compiled	[CE]  cannot  find  symbol  R	108	None	replace
530	[BUG]  [BUGGY]  double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  3)));  [CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()  [FE]              AssertionFailedError      [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  3)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  r  =  Math.abs(r  *  Math.sqrt((  nObs  -  2)/(1  -  nVars  *  3)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    double    r    =    Math.abs(r    *    Math.sqrt((    nObs    -    2)/(1    -    nVars    *    r)));    	non-compiled	[CE]  variable  r  is  already  defined  in  method  getCorrelationPValues()	60	None	replace
531	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  Double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  Double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  [BUGGY]      double  t  =  Math.abs(r  *  Math.sqrt((nObs  -  2)/(1  -  r  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double    t    =    Math.abs(r    *    Math.sqrt((    i    -    2)/(1    -    nVars    *    r)));    out[i][j]    =    2    *    (1    -    tDistribution.cumulativeProbability(t));    Double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nVars  *  r)));  out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));	  	non-compiled	[CE]  variable  t  is  already  defined  in  method  getCorrelationPValues()	120	None	add
532	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.cos((  i  -  2)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.cos((  i  -  2)/(1  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    i    -    2)/(1    -    nVars    *    j)));    	compilable	  [FE]  AssertionFailedError  	105	4	replace
533	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.cos((  i  -  2)/(1  -  nVars  *  j)));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.cos((  i  -  2)/(1  -  nVars  *  j)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.cos((  i  -  2)/(1  -  nVars  *  j)));	  double    t    =    Math.abs(r    *    Math.sqrt((    i    -    2)/(1    -    nVars    *    j)));    	compilable	  [FE]  AssertionFailedError  	105	4	replace
534	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nObs  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nObs  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    nVars)));    	compilable	  [FE]  AssertionFailedError  	86	4	replace
535	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nObs  *  nVars)));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nObs  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  j  -  2)/(1  -  nObs  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    nVars)));    	compilable	  [FE]  AssertionFailedError  	86	4	replace
536	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nObs  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	add	double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nObs  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    nVars)));    	compilable	  [FE]  AssertionFailedError  	86	4	replace
537	[BUG]  [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nObs  *  nVars)));  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  RealMatrix  getCorrelationPValues()  throws  MathException  {  TDistribution  tDistribution  =  new  TDistributionImpl(nObs  -  2);  int  nVars  =  correlationMatrix.getColumnDimension();  double[][]  out  =  new  double[nVars][nVars];  for  (int  i  =  0;  i  <  nVars;  i++)  {  for  (int  j  =  0;  j  <  nVars;  j++)  {  if  (i  ==  j)  {  out[i][j]  =  0d;  }  else  {  double  r  =  correlationMatrix.getEntry(i,  j);      [BUGGY]  double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nObs  *  nVars)));  [BUGGY]      out[i][j]  =  2  *  (1  -  tDistribution.cumulativeProbability(t));  }  }  }  return  new  BlockRealMatrix(out);  }  [CLASS]  PearsonsCorrelation  [METHOD]  getCorrelationPValues  [RETURN_TYPE]  RealMatrix  [VARIABLES]  double[][]  out  TDistribution  tDistribution  boolean  RealMatrix  correlationMatrix  covarianceMatrix  matrix  int  i  j  nObs  nVars  numberOfObservations  double  r  t  	projects/Math69/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java	0.5345224838248488	170	170	2	replace	double  t  =  Math.abs(r  *  Math.sqrt((  i  -  2)/(1  -  nObs  *  nVars)));	  double    t    =    Math.abs(r    *    Math.sqrt((    nVars    -    2)/(1    -    nObs    *    nVars)));    	compilable	  [FE]  AssertionFailedError  	86	4	replace
