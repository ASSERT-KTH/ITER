bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isGet(n));  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkArgument(NodeUtil.isGet(n));  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isGet(n));	  Preconditions.checkArgument(NodeUtil.isGet(parent));    	non-compiled	[CE]  not  a  statement	8	None	replace
2	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isGet(parent));  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkState(NodeUtil.isGet(parent));  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkState(NodeUtil.isGet(parent));	  Preconditions.checkArgument(NodeUtil.isGet(parent));    	non-compiled	[CE]  not  a  statement	8	None	replace
3	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isGet(parent,  addAfter));  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkArgument(NodeUtil.isGet(parent,  addAfter));  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isGet(parent,  addAfter));	  Preconditions.checkArgument(NodeUtil.isGet(parent));    	non-compiled	[CE]  not  a  statement	8	None	replace
4	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isGet(parent),  alias);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkArgument(NodeUtil.isGet(parent),  alias);  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isGet(parent),  alias);	  Preconditions.checkArgument(NodeUtil.isGet(parent));    	non-compiled	[CE]  not  a  statement	8	None	replace
5	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isGet(parent)||  n.getType()  ==  Token.NAME);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkArgument(NodeUtil.isGet(parent)||  n.getType()  ==  Token.NAME);  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isGet(parent)||  n.getType()  ==  Token.NAME);	  Preconditions.checkArgument(NodeUtil.isGet(parent));    	non-compiled	[CE]  not  a  statement	8	None	replace
6	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isGet(n));  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkState(NodeUtil.isGet(n));  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkState(NodeUtil.isGet(n));	  Preconditions.checkArgument(NodeUtil.isGet(parent));    	non-compiled	[CE]  not  a  statement	8	None	replace
7	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isStatementBlock(n,  parent));  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkState(NodeUtil.isStatementBlock(n,  parent));  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkState(NodeUtil.isStatementBlock(n,  parent));	  Preconditions.checkState(NodeUtil.isStatementBlock(n));    	non-compiled	[CE]  not  a  statement	3	None	replace
8	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isStatementBlock(n),  parent);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkState(NodeUtil.isStatementBlock(n),  parent);  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkState(NodeUtil.isStatementBlock(n),  parent);	  Preconditions.checkState(NodeUtil.isStatementBlock(n));    	non-compiled	[CE]  not  a  statement	3	None	replace
9	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isStatementBlock(n)||  NodeUtil.isStatementBlock(parent));  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkState(NodeUtil.isStatementBlock(n)||  NodeUtil.isStatementBlock(parent));  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkState(NodeUtil.isStatementBlock(n)||  NodeUtil.isStatementBlock(parent));	  Preconditions.checkState(NodeUtil.isStatementBlock(n));    	non-compiled	[CE]  not  a  statement	3	None	replace
10	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isStatementBlock(n),  alias);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkState(NodeUtil.isStatementBlock(n),  alias);  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkState(NodeUtil.isStatementBlock(n),  alias);	  Preconditions.checkState(NodeUtil.isStatementBlock(n));    	non-compiled	[CE]  not  a  statement	3	None	replace
11	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isFunctionDeclaration(n));  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkState(NodeUtil.isFunctionDeclaration(n));  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkState(NodeUtil.isFunctionDeclaration(n));	  Preconditions.checkState(NodeUtil.isStatementBlock(n));    	non-compiled	[CE]  not  a  statement	3	None	replace
12	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(n,  parent));  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(n,  parent));  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isGetProp(n,  parent));	  Preconditions.checkArgument(NodeUtil.isGetProp(n));    	non-compiled	[CE]  not  a  statement	10	None	replace
13	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(n),  alias);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(n),  alias);  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isGetProp(n),  alias);	  Preconditions.checkArgument(NodeUtil.isGetProp(n));    	non-compiled	[CE]  not  a  statement	10	None	replace
14	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isGetProp(n));  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkState(NodeUtil.isGetProp(n));  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkState(NodeUtil.isGetProp(n));	  Preconditions.checkArgument(NodeUtil.isGetProp(n));    	non-compiled	[CE]  not  a  statement	10	None	replace
15	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isGetProp(parent));  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkState(NodeUtil.isGetProp(parent));  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkState(NodeUtil.isGetProp(parent));	  Preconditions.checkArgument(NodeUtil.isGetProp(n));    	non-compiled	[CE]  not  a  statement	10	None	replace
16	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(n,  addAfter));  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(n,  addAfter));  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isGetProp(n,  addAfter));	  Preconditions.checkArgument(NodeUtil.isGetProp(n));    	non-compiled	[CE]  not  a  statement	10	None	replace
17	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isFunctionDeclaration(parent));  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkState(NodeUtil.isFunctionDeclaration(parent));  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkState(NodeUtil.isFunctionDeclaration(parent));	  Preconditions.checkArgument(NodeUtil.isFunctionDeclaration(parent));    	non-compiled	[CE]  not  a  statement	9	None	replace
18	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isVarDeclaration(n));  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkArgument(NodeUtil.isVarDeclaration(n));  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isVarDeclaration(n));	  Preconditions.checkArgument(NodeUtil.isFunctionDeclaration(parent));    	non-compiled	[CE]  not  a  statement	9	None	replace
19	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isExpressionNode(parent));  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkArgument(NodeUtil.isExpressionNode(parent));  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isExpressionNode(parent));	  Preconditions.checkArgument(NodeUtil.isFunctionDeclaration(parent));    	non-compiled	[CE]  not  a  statement	9	None	replace
20	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(parent,  addAfter));  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(parent,  addAfter));  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isGetProp(parent,  addAfter));	  Preconditions.checkArgument(NodeUtil.isGetProp(parent));    	non-compiled	[CE]  not  a  statement	6	None	replace
21	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(parent,  alias));  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(parent,  alias));  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isGetProp(parent,  alias));	  Preconditions.checkArgument(NodeUtil.isGetProp(parent));    	non-compiled	[CE]  not  a  statement	6	None	replace
22	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isStatementBlock(parent,  addAfter));  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkState(NodeUtil.isStatementBlock(parent,  addAfter));  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkState(NodeUtil.isStatementBlock(parent,  addAfter));	  Preconditions.checkState(NodeUtil.isStatementBlock(parent));    	non-compiled	[CE]  not  a  statement	2	None	replace
23	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isImmutableValue(parent));  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkState(NodeUtil.isImmutableValue(parent));  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkState(NodeUtil.isImmutableValue(parent));	  Preconditions.checkState(NodeUtil.isStatementBlock(parent));    	non-compiled	[CE]  not  a  statement	2	None	replace
24	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isStatementBlock(parent),  addAfter);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkState(NodeUtil.isStatementBlock(parent),  addAfter);  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkState(NodeUtil.isStatementBlock(parent),  addAfter);	  Preconditions.checkState(NodeUtil.isStatementBlock(parent));    	non-compiled	[CE]  not  a  statement	2	None	replace
25	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isStatementBlock(n,  parent));  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkArgument(NodeUtil.isStatementBlock(n,  parent));  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isStatementBlock(n,  parent));	  Preconditions.checkArgument(NodeUtil.isStatementBlock(n));    	non-compiled	[CE]  not  a  statement	1	None	replace
26	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isStatementBlock(n),  alias);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkArgument(NodeUtil.isStatementBlock(n),  alias);  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isStatementBlock(n),  alias);	  Preconditions.checkArgument(NodeUtil.isStatementBlock(n));    	non-compiled	[CE]  not  a  statement	1	None	replace
27	[BUG]  [BUGGY]  Node  newVar  =  Node.newString(Token.NAME,  propAlias);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Node  newVar  =  Node.newString(Token.NAME,  propAlias);  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Node  newVar  =  Node.newString(Token.NAME,  propAlias);	      	non-compiled	[CE]  not  a  statement	7	None	replace
28	[BUG]  [BUGGY]  Node  addAfter  =  parent.getFirstChild();  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Node  addAfter  =  parent.getFirstChild();  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Node  addAfter  =  parent.getFirstChild();	      	non-compiled	[CE]  not  a  statement	7	None	replace
29	[BUG]  [BUGGY]  Name  n  =  parent.getFirstChild();  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Name  n  =  parent.getFirstChild();  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Name  n  =  parent.getFirstChild();	      	non-compiled	[CE]  not  a  statement	7	None	replace
30	[BUG]  [BUGGY]  Node  newVar  =  Node.newString(Token.NAME,  propAlias);  parent.addChildAfter(newVar,  addAfter);  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Node  newVar  =  Node.newString(Token.NAME,  propAlias);  parent.addChildAfter(newVar,  addAfter);  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Node  newVar  =  Node.newString(Token.NAME,  propAlias);  parent.addChildAfter(newVar,  addAfter);	      	non-compiled	[CE]  not  a  statement	7	None	replace
31	[BUG]  [BUGGY]  Node  newVar  =  Node.newString(Token.NAME,  propAlias);  addAfter.addChildToFront(newVar);  [CE]  not  a  statement  [FE]                            AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Node  newVar  =  Node.newString(Token.NAME,  propAlias);  addAfter.addChildToFront(newVar);  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Node  newVar  =  Node.newString(Token.NAME,  propAlias);  addAfter.addChildToFront(newVar);	      	non-compiled	[CE]  not  a  statement	7	None	replace
32	[BUG]  [BUGGY]  Node  newVar  =  Node.newString(Token.NAME,  alias);  [CE]  not  a  statement  [FE]                              AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Node  newVar  =  Node.newString(Token.NAME,  alias);  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Node  newVar  =  Node.newString(Token.NAME,  alias);	      	non-compiled	[CE]  not  a  statement	7	None	replace
33	[BUG]  [BUGGY]  Node  parent  =  n.getParent();  [CE]  not  a  statement  [FE]                                AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Node  parent  =  n.getParent();  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Node  parent  =  n.getParent();	      	non-compiled	[CE]  not  a  statement	7	None	replace
34	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isImmutableValue(n));  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkArgument(NodeUtil.isImmutableValue(n));  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isImmutableValue(n));	  Preconditions.checkArgument(NodeUtil.isImmutableValue(parent));    	non-compiled	[CE]  not  a  statement	5	None	replace
35	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isImmutableValue(n));  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkState(NodeUtil.isImmutableValue(n));  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkState(NodeUtil.isImmutableValue(n));	  Preconditions.checkArgument(NodeUtil.isImmutableValue(parent));    	non-compiled	[CE]  not  a  statement	5	None	replace
36	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isImmutableValue(parent,  addAfter));  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkArgument(NodeUtil.isImmutableValue(parent,  addAfter));  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isImmutableValue(parent,  addAfter));	  Preconditions.checkArgument(NodeUtil.isImmutableValue(parent));    	non-compiled	[CE]  not  a  statement	5	None	replace
37	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isName(n));  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkArgument(NodeUtil.isName(n));  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isName(n));	  Preconditions.checkArgument(NodeUtil.isVar(parent));    	non-compiled	[CE]  not  a  statement	11	None	replace
38	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isName(parent));  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkArgument(NodeUtil.isName(parent));  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isName(parent));	  Preconditions.checkArgument(NodeUtil.isVar(parent));    	non-compiled	[CE]  not  a  statement	11	None	replace
39	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isVar(n));  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkArgument(NodeUtil.isVar(n));  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isVar(n));	  Preconditions.checkArgument(NodeUtil.isVar(parent));    	non-compiled	[CE]  not  a  statement	11	None	replace
40	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isVar(parent));  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkState(NodeUtil.isVar(parent));  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkState(NodeUtil.isVar(parent));	  Preconditions.checkArgument(NodeUtil.isVar(parent));    	non-compiled	[CE]  not  a  statement	11	None	replace
41	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isFunctionDeclaration(n),  alias);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkArgument(NodeUtil.isFunctionDeclaration(n),  alias);  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isFunctionDeclaration(n),  alias);	  Preconditions.checkArgument(NodeUtil.isFunctionDeclaration(n));    	non-compiled	[CE]  not  a  statement	4	None	replace
42	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isFunctionDeclaration(n,  parent));  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkArgument(NodeUtil.isFunctionDeclaration(n,  parent));  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isFunctionDeclaration(n,  parent));	  Preconditions.checkArgument(NodeUtil.isFunctionDeclaration(n));    	non-compiled	[CE]  not  a  statement	4	None	replace
43	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isFunctionDeclaration(n),  addAfter);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkArgument(NodeUtil.isFunctionDeclaration(n),  addAfter);  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isFunctionDeclaration(n),  addAfter);	  Preconditions.checkArgument(NodeUtil.isFunctionDeclaration(n));    	non-compiled	[CE]  not  a  statement	4	None	replace
44	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isFunctionDeclaration(n),  parent);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkArgument(NodeUtil.isFunctionDeclaration(n),  parent);  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isFunctionDeclaration(n),  parent);	  Preconditions.checkArgument(NodeUtil.isFunctionDeclaration(n));    	non-compiled	[CE]  not  a  statement	4	None	replace
45	[BUG]  [BUGGY]  Node  addAfter  =  n.getFirstChild();  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Node  addAfter  =  n.getFirstChild();  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Node  addAfter  =  n.getFirstChild();	      	non-compiled	[CE]  not  a  statement	7	None	replace
46	[BUG]  [BUGGY]  Preconditions.checkState(numStubs  ==  0);  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkState(numStubs  ==  0);  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkState(numStubs  ==  0);	      	non-compiled	[CE]  not  a  statement	7	None	replace
47	[BUG]  [BUGGY]  Node  addAfter  =  node.getFirstChild();  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Node  addAfter  =  node.getFirstChild();  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Node  addAfter  =  node.getFirstChild();	      	non-compiled	[CE]  not  a  statement	7	None	replace
48	[BUG]  [BUGGY]  Node  addAfter  =  parent.getParent();  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Node  addAfter  =  parent.getParent();  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Node  addAfter  =  parent.getParent();	      	non-compiled	[CE]  not  a  statement	7	None	replace
49	[BUG]  [BUGGY]  Preconditions.checkNotNull(parent);  [CE]  not  a  statement  [FE]                            AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkNotNull(parent);  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkNotNull(parent);	      	non-compiled	[CE]  not  a  statement	7	None	replace
50	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(parent)||  n.getType()  ==  Token.NAME);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(parent)||  n.getType()  ==  Token.NAME);  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isGetProp(parent)||  n.getType()  ==  Token.NAME);	  Preconditions.checkArgument(NodeUtil.isGetProp(parent));    	non-compiled	[CE]  not  a  statement	6	None	replace
51	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(parent),  n);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(parent),  n);  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isGetProp(parent),  n);	  Preconditions.checkArgument(NodeUtil.isGetProp(parent));    	non-compiled	[CE]  not  a  statement	6	None	replace
52	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(parent)||  n.getType()  ==  Token.FUNCTION);  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(parent)||  n.getType()  ==  Token.FUNCTION);  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isGetProp(parent)||  n.getType()  ==  Token.FUNCTION);	  Preconditions.checkArgument(NodeUtil.isGetProp(parent));    	non-compiled	[CE]  not  a  statement	6	None	replace
53	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(n),  parent);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(n),  parent);  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isGetProp(n),  parent);	  Preconditions.checkArgument(NodeUtil.isGetProp(n));    	non-compiled	[CE]  not  a  statement	10	None	replace
54	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isName(parent));  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkState(NodeUtil.isName(parent));  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkState(NodeUtil.isName(parent));	  Preconditions.checkArgument(NodeUtil.isVar(parent));    	non-compiled	[CE]  not  a  statement	11	None	replace
55	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isVar(parent)||  n.getType()  ==  Token.NAME);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkArgument(NodeUtil.isVar(parent)||  n.getType()  ==  Token.NAME);  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isVar(parent)||  n.getType()  ==  Token.NAME);	  Preconditions.checkArgument(NodeUtil.isVar(parent));    	non-compiled	[CE]  not  a  statement	11	None	replace
56	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isImmutableValue(parent,  alias));  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkArgument(NodeUtil.isImmutableValue(parent,  alias));  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isImmutableValue(parent,  alias));	  Preconditions.checkArgument(NodeUtil.isImmutableValue(parent));    	non-compiled	[CE]  not  a  statement	5	None	replace
57	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isLiteralValue(parent));  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkArgument(NodeUtil.isLiteralValue(parent));  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isLiteralValue(parent));	  Preconditions.checkArgument(NodeUtil.isImmutableValue(parent));    	non-compiled	[CE]  not  a  statement	5	None	replace
58	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isImmutableValue(parent),  n);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkArgument(NodeUtil.isImmutableValue(parent),  n);  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isImmutableValue(parent),  n);	  Preconditions.checkArgument(NodeUtil.isImmutableValue(parent));    	non-compiled	[CE]  not  a  statement	5	None	replace
59	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isGet(parent),  n);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkArgument(NodeUtil.isGet(parent),  n);  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isGet(parent),  n);	  Preconditions.checkArgument(NodeUtil.isGet(parent));    	non-compiled	[CE]  not  a  statement	8	None	replace
60	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isGet(parent)||  NodeUtil.isGet(parent));  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkArgument(NodeUtil.isGet(parent)||  NodeUtil.isGet(parent));  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isGet(parent)||  NodeUtil.isGet(parent));	  Preconditions.checkArgument(NodeUtil.isGet(parent));    	non-compiled	[CE]  not  a  statement	8	None	replace
61	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isGet(parent)||  n.getType()  ==  Token.FUNCTION);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkArgument(NodeUtil.isGet(parent)||  n.getType()  ==  Token.FUNCTION);  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isGet(parent)||  n.getType()  ==  Token.FUNCTION);	  Preconditions.checkArgument(NodeUtil.isGet(parent));    	non-compiled	[CE]  not  a  statement	8	None	replace
62	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME);  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME);	      	non-compiled	[CE]  not  a  statement	7	None	replace
63	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkState(n.getType()  ==  Token.NAME);	      	non-compiled	[CE]  not  a  statement	7	None	replace
64	[BUG]  [BUGGY]  int  addAfter  =  parent.getFirstChild().getIndexOf(alias);  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  int  addAfter  =  parent.getFirstChild().getIndexOf(alias);  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	int  addAfter  =  parent.getFirstChild().getIndexOf(alias);	      	non-compiled	[CE]  not  a  statement	7	None	replace
65	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.EXPR_RESULT);  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(n.getType()  ==  Token.EXPR_RESULT);	      	non-compiled	[CE]  not  a  statement	7	None	replace
66	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isFunction(parent));  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkArgument(NodeUtil.isFunction(parent));  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isFunction(parent));	  Preconditions.checkArgument(NodeUtil.isVar(parent));    	non-compiled	[CE]  not  a  statement	11	None	replace
67	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isGet(parent)||  n.getType()  ==  Token.VAR);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkArgument(NodeUtil.isGet(parent)||  n.getType()  ==  Token.VAR);  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isGet(parent)||  n.getType()  ==  Token.VAR);	  Preconditions.checkArgument(NodeUtil.isGet(parent));    	non-compiled	[CE]  not  a  statement	8	None	replace
68	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isStatementBlock(n),  parent);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkArgument(NodeUtil.isStatementBlock(n),  parent);  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isStatementBlock(n),  parent);	  Preconditions.checkArgument(NodeUtil.isStatementBlock(n));    	non-compiled	[CE]  not  a  statement	1	None	replace
69	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(n)||  n.getType()  ==  Token.NAME);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(n)||  n.getType()  ==  Token.NAME);  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isGetProp(n)||  n.getType()  ==  Token.NAME);	  Preconditions.checkArgument(NodeUtil.isGetProp(n));    	non-compiled	[CE]  not  a  statement	10	None	replace
70	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(n)||  n.getType()  ==  Token.VAR);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(n)||  n.getType()  ==  Token.VAR);  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isGetProp(n)||  n.getType()  ==  Token.VAR);	  Preconditions.checkArgument(NodeUtil.isGetProp(n));    	non-compiled	[CE]  not  a  statement	10	None	replace
71	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(parent)||  n.getType()  ==  Token.VAR);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {    [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(parent)||  n.getType()  ==  Token.VAR);  [BUGGY]    Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isGetProp(parent)||  n.getType()  ==  Token.VAR);	  Preconditions.checkArgument(NodeUtil.isGetProp(parent));    	non-compiled	[CE]  not  a  statement	6	None	replace
