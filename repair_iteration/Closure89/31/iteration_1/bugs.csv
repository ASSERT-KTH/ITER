bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isStatementBlock(n));  [CE]  not  a  statement  [FE]    AssertionFailedError  [CONTEXT]  Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  [BUGGY]  Preconditions.checkArgument(NodeUtil.isStatementBlock(n));  [BUGGY]  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isStatementBlock(n));	Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  	non-compiled	[CE]  not  a  statement	64	None	replace
2	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isStatementBlock(parent));  [CE]  not  a  statement  [FE]      AssertionFailedError  [CONTEXT]  Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  [BUGGY]  Preconditions.checkState(NodeUtil.isStatementBlock(parent));  [BUGGY]  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkState(NodeUtil.isStatementBlock(parent));	Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  	non-compiled	[CE]  not  a  statement	64	None	replace
3	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isStatementBlock(n));  [CE]  not  a  statement  [FE]        AssertionFailedError  [CONTEXT]  Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  [BUGGY]  Preconditions.checkState(NodeUtil.isStatementBlock(n));  [BUGGY]  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkState(NodeUtil.isStatementBlock(n));	Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  	non-compiled	[CE]  not  a  statement	64	None	replace
4	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isFunctionDeclaration(n));  [CE]  not  a  statement  [FE]          AssertionFailedError  [CONTEXT]  Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  [BUGGY]  Preconditions.checkArgument(NodeUtil.isFunctionDeclaration(n));  [BUGGY]  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isFunctionDeclaration(n));	Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  	non-compiled	[CE]  not  a  statement	64	None	replace
5	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isImmutableValue(parent));  [CE]  not  a  statement  [FE]            AssertionFailedError  [CONTEXT]  Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  [BUGGY]  Preconditions.checkArgument(NodeUtil.isImmutableValue(parent));  [BUGGY]  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isImmutableValue(parent));	Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  	non-compiled	[CE]  not  a  statement	64	None	replace
6	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(parent));  [CE]  not  a  statement  [FE]              AssertionFailedError  [CONTEXT]  Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(parent));  [BUGGY]  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isGetProp(parent));	Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  	non-compiled	[CE]  not  a  statement	64	None	replace
7	[BUG]  [BUGGY]    [CE]  not  a  statement  [FE]                AssertionFailedError  [CONTEXT]  Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  [BUGGY]    [BUGGY]  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	  	Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  	non-compiled	[CE]  not  a  statement	64	None	replace
8	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isGet(parent));  [CE]  not  a  statement  [FE]    AssertionFailedError  [CONTEXT]  Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  [BUGGY]  Preconditions.checkArgument(NodeUtil.isGet(parent));  [BUGGY]  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isGet(parent));	Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  	non-compiled	[CE]  not  a  statement	64	None	replace
9	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isFunctionDeclaration(parent));  [CE]  not  a  statement  [FE]      AssertionFailedError  [CONTEXT]  Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  [BUGGY]  Preconditions.checkArgument(NodeUtil.isFunctionDeclaration(parent));  [BUGGY]  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isFunctionDeclaration(parent));	Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  	non-compiled	[CE]  not  a  statement	64	None	replace
10	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(n));  [CE]  not  a  statement  [FE]    AssertionFailedError  [CONTEXT]  Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  [BUGGY]  Preconditions.checkArgument(NodeUtil.isGetProp(n));  [BUGGY]  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isGetProp(n));	Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  	non-compiled	[CE]  not  a  statement	64	None	replace
11	[BUG]  [BUGGY]  Preconditions.checkArgument(NodeUtil.isVar(parent));  [CE]  not  a  statement  [FE]      AssertionFailedError  [CONTEXT]  Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  [BUGGY]  Preconditions.checkArgument(NodeUtil.isVar(parent));  [BUGGY]  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	817	817	8	replace	Preconditions.checkArgument(NodeUtil.isVar(parent));	Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  	non-compiled	[CE]  not  a  statement	64	None	replace
