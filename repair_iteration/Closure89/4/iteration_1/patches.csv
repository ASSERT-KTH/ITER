bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  parent.replaceChild(n,  newVar,  addAfter);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  parent.replaceChild(n,  newVar,  addAfter);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	parent.replaceChild(n,  newVar,  addAfter);	  parent.addChildAfter(newVar,    newVar,    addAfter);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
2	[BUG]  [BUGGY]  parent.addChildAfter(newVar,  propAlias,  addAfter);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  parent.addChildAfter(newVar,  propAlias,  addAfter);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	parent.addChildAfter(newVar,  propAlias,  addAfter);	  parent.addChildAfter(newVar,    newVar,    addAfter);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
3	[BUG]  [BUGGY]  parent.addChildToFront(newVar,  addAfter,  newVar);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  parent.addChildToFront(newVar,  addAfter,  newVar);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	parent.addChildToFront(newVar,  addAfter,  newVar);	  parent.addChildAfter(newVar,    newVar,    addAfter);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
4	[BUG]  [BUGGY]  parent.addChildAfter(newVar,  addAfter,  propAlias);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  parent.addChildAfter(newVar,  addAfter,  propAlias);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	parent.addChildAfter(newVar,  addAfter,  propAlias);	  parent.addChildAfter(newVar,    addAfter,    nameNode);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
5	[BUG]  [BUGGY]  parent.addChildAfter(newVar,  addAfter,  nameNode,  propAlias);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  parent.addChildAfter(newVar,  addAfter,  nameNode,  propAlias);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	parent.addChildAfter(newVar,  addAfter,  nameNode,  propAlias);	  parent.addChildAfter(newVar,    addAfter,    nameNode);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
6	[BUG]  [BUGGY]  parent.addChildAfter(newVar,  nameNode,  addAfter);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  parent.addChildAfter(newVar,  nameNode,  addAfter);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	parent.addChildAfter(newVar,  nameNode,  addAfter);	  parent.addChildAfter(newVar,    addAfter,    nameNode);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
7	[BUG]  [BUGGY]  parent.addChildAfter(newVar,  addAfter,  nameNode,  numStubs);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  parent.addChildAfter(newVar,  addAfter,  nameNode,  numStubs);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	parent.addChildAfter(newVar,  addAfter,  nameNode,  numStubs);	  parent.addChildAfter(newVar,    addAfter,    nameNode);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
8	[BUG]  [BUGGY]  parent.addChildAfter(newVar,  addAfter,  numStubs,  propAlias);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  parent.addChildAfter(newVar,  addAfter,  numStubs,  propAlias);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	parent.addChildAfter(newVar,  addAfter,  numStubs,  propAlias);	  parent.addChildAfter(newVar,    addAfter,    numStubs);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
9	[BUG]  [BUGGY]  parent.addChildAfter(newVar,  numStubs,  addAfter);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  parent.addChildAfter(newVar,  numStubs,  addAfter);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	parent.addChildAfter(newVar,  numStubs,  addAfter);	  parent.addChildAfter(newVar,    addAfter,    numStubs);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
10	[BUG]  [BUGGY]  parent.addChildAfter(newVar,  addAfter,  numStubs  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  parent.addChildAfter(newVar,  addAfter,  numStubs  +  1);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	parent.addChildAfter(newVar,  addAfter,  numStubs  +  1);	  parent.addChildAfter(newVar,    addAfter,    numStubs);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
11	[BUG]  [BUGGY]  parent.addChildAfter(newVar,  addAfter,  numStubs,  nameNode);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  parent.addChildAfter(newVar,  addAfter,  numStubs,  nameNode);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	parent.addChildAfter(newVar,  addAfter,  numStubs,  nameNode);	  parent.addChildAfter(newVar,    addAfter,    numStubs);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
12	[BUG]  [BUGGY]  parent.addChildAfter(newVar,  addAfter,  numStubs,  newVar);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  parent.addChildAfter(newVar,  addAfter,  numStubs,  newVar);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	parent.addChildAfter(newVar,  addAfter,  numStubs,  newVar);	  parent.addChildAfter(newVar,    addAfter,    numStubs);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
13	[BUG]  [BUGGY]  parent.addChildAfter(newVar,  newVar,  propAlias);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  parent.addChildAfter(newVar,  newVar,  propAlias);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	parent.addChildAfter(newVar,  newVar,  propAlias);	  parent.addChildAfter(newVar,    propAlias);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
14	[BUG]  [BUGGY]  parent.addChildToFront(newVar,  propAlias);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  parent.addChildToFront(newVar,  propAlias);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	parent.addChildToFront(newVar,  propAlias);	  parent.addChildAfter(newVar,    propAlias);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
15	[BUG]  [BUGGY]  parent.replaceChild(n,  newVar,  propAlias);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  parent.replaceChild(n,  newVar,  propAlias);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	parent.replaceChild(n,  newVar,  propAlias);	  parent.replaceChild(n,    newVar);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
16	[BUG]  [BUGGY]  parent.replaceChild(n,  newVar,  numStubs);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  parent.replaceChild(n,  newVar,  numStubs);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	parent.replaceChild(n,  newVar,  numStubs);	  parent.replaceChild(n,    newVar);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
17	[BUG]  [BUGGY]  parent.replaceChild(n,  newVar,  nameNode);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  parent.replaceChild(n,  newVar,  nameNode);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	parent.replaceChild(n,  newVar,  nameNode);	  parent.replaceChild(n,    newVar);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
18	[BUG]  [BUGGY]  Node  newVar  =  parent.replaceChild(n,  newVar);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  Node  newVar  =  parent.replaceChild(n,  newVar);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	Node  newVar  =  parent.replaceChild(n,  newVar);	  parent.replaceChild(n,    newVar);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
19	[BUG]  [BUGGY]  parent.replaceChild(n,  addAfter);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  parent.replaceChild(n,  addAfter);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	parent.replaceChild(n,  addAfter);	  parent.replaceChild(n,    newVar);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
20	[BUG]  [BUGGY]  parent.addChildAfter(newVar,  addAfter,  addAfter);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  parent.addChildAfter(newVar,  addAfter,  addAfter);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	parent.addChildAfter(newVar,  addAfter,  addAfter);	  parent.addChildAfter(newVar,    addAfter,    newVar);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
21	[BUG]  [BUGGY]  parent.addChildToFront(newVar,  newVar);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  parent.addChildToFront(newVar,  newVar);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	parent.addChildToFront(newVar,  newVar);	  parent.addChildToFront(newVar,    addAfter);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
22	[BUG]  [BUGGY]  parent.addChildToFront(newVar,  addAfter,  numStubs);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  parent.addChildToFront(newVar,  addAfter,  numStubs);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	parent.addChildToFront(newVar,  addAfter,  numStubs);	  parent.addChildToFront(newVar,    addAfter);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
23	[BUG]  [BUGGY]  parent.addChildToFront(newVar,  addAfter,  nameNode);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  parent.addChildToFront(newVar,  addAfter,  nameNode);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	parent.addChildToFront(newVar,  addAfter,  nameNode);	  parent.addChildToFront(newVar,    addAfter);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
24	[BUG]  [BUGGY]  parent.addChildToFront(newVar,  addAfter,  propAlias);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  parent.addChildToFront(newVar,  addAfter,  propAlias);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	parent.addChildToFront(newVar,  addAfter,  propAlias);	  parent.addChildToFront(newVar,    addAfter);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
25	[BUG]  [BUGGY]  parent.addChildToFront(newVar,  numStubs);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  parent.addChildToFront(newVar,  numStubs);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	parent.addChildToFront(newVar,  numStubs);	  parent.addChildToFront(newVar,    addAfter);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
26	[BUG]  [BUGGY]  newVar.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  newVar.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	newVar.putBooleanProp(Node.IS_CONSTANT_NAME,  true);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
27	[BUG]  [BUGGY]  newVar.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  newVar.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	newVar.putBooleanProp(Node.IS_CONSTANT_NAME,  false);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
28	[BUG]  [BUGGY]  newVar.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  newVar.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	newVar.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
29	[BUG]  [BUGGY]  newVar.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  addAfter.addChildToFront(newVar);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  newVar.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  addAfter.addChildToFront(newVar);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	newVar.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  addAfter.addChildToFront(newVar);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
30	[BUG]  [BUGGY]  newVar.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  newVar.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	newVar.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
31	[BUG]  [BUGGY]  newVar.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  addAfter.addChildToBack(newVar);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  newVar.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  addAfter.addChildToBack(newVar);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	newVar.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  addAfter.addChildToBack(newVar);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
32	[BUG]  [BUGGY]  newVar.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  numStubs++;  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  newVar.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  numStubs++;  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	newVar.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  numStubs++;	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
33	[BUG]  [BUGGY]  parent.addChildAfter(newVar,  propAlias,  numStubs);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  parent.addChildAfter(newVar,  propAlias,  numStubs);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	parent.addChildAfter(newVar,  propAlias,  numStubs);	  parent.addChildAfter(newVar,    numStubs);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
34	[BUG]  [BUGGY]  parent.addChildAfter(newVar,  newVar,  numStubs);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  parent.addChildAfter(newVar,  newVar,  numStubs);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	parent.addChildAfter(newVar,  newVar,  numStubs);	  parent.addChildAfter(newVar,    numStubs);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
35	[BUG]  [BUGGY]  parent.addChildAfter(newVar,  numStubs,  propAlias);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  parent.addChildAfter(newVar,  numStubs,  propAlias);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	parent.addChildAfter(newVar,  numStubs,  propAlias);	  parent.addChildAfter(newVar,    numStubs);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
36	[BUG]  [BUGGY]  parent.addChildToFront(newVar,  nameNode);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  parent.addChildToFront(newVar,  nameNode);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	parent.addChildToFront(newVar,  nameNode);	  parent.addChildToFront(newVar,    addAfter);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
37	[BUG]  [BUGGY]  newVar.putBooleanProp(Node.IS_OPTIONAL_NAME,  true);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  newVar.putBooleanProp(Node.IS_OPTIONAL_NAME,  true);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	newVar.putBooleanProp(Node.IS_OPTIONAL_NAME,  true);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
38	[BUG]  [BUGGY]  newVar.putBooleanProp(Node.IS_OBJECT_NAME,  true);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  newVar.putBooleanProp(Node.IS_OBJECT_NAME,  true);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	newVar.putBooleanProp(Node.IS_OBJECT_NAME,  true);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
39	[BUG]  [BUGGY]  Node  p  =  parent.getParent();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  Node  p  =  parent.getParent();  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	Node  p  =  parent.getParent();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
40	[BUG]  [BUGGY]  Node  addAfter  =  newVar.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  Node  addAfter  =  newVar.getFirstChild();  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	Node  addAfter  =  newVar.getFirstChild();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
41	[BUG]  [BUGGY]  newVar.addChildToBack(newVar);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  newVar.addChildToBack(newVar);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	newVar.addChildToBack(newVar);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
42	[BUG]  [BUGGY]  parent.addChildAfter(newVar,  alias);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  parent.addChildAfter(newVar,  alias);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	parent.addChildAfter(newVar,  alias);	  parent.addChildAfter(newVar,    propAlias);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
43	[BUG]  [BUGGY]  parent.addChildAfter(newVar,  propAlias,  nameNode);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  parent.addChildAfter(newVar,  propAlias,  nameNode);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	parent.addChildAfter(newVar,  propAlias,  nameNode);	  parent.addChildAfter(newVar,    propAlias);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
44	[BUG]  [BUGGY]  parent.addChildAfter(newVar,  n);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  parent.addChildAfter(newVar,  n);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	parent.addChildAfter(newVar,  n);	  parent.addChildAfter(newVar,    newVar);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
45	[BUG]  [BUGGY]  parent.replaceChild(n,  newVar  -  1);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  parent.replaceChild(n,  newVar  -  1);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	parent.replaceChild(n,  newVar  -  1);	  parent.replaceChild(n,    newVar);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
46	[BUG]  [BUGGY]  NodeUtil.replaceChild(parent,  newVar);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  NodeUtil.replaceChild(parent,  newVar);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	NodeUtil.replaceChild(parent,  newVar);	  parent.replaceChild(n,    newVar);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
47	[BUG]  [BUGGY]  parent.addChildAfter(newVar,  newVar,  nameNode);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  parent.addChildAfter(newVar,  newVar,  nameNode);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	parent.addChildAfter(newVar,  newVar,  nameNode);	  parent.addChildAfter(newVar,    addAfter,    nameNode);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
48	[BUG]  [BUGGY]  parent.replaceChild(n,  newVar,  p);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  parent.replaceChild(n,  newVar,  p);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	parent.replaceChild(n,  newVar,  p);	  parent.replaceChild(n,    newVar);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
49	[BUG]  [BUGGY]  parent.replaceChild(n,  newVar,  getNameNode());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  parent.replaceChild(n,  newVar,  getNameNode());  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	parent.replaceChild(n,  newVar,  getNameNode());	  parent.replaceChild(n,    newVar);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
50	[BUG]  [BUGGY]  parent.addChildAfter(newVar,  newVar,  addAfter,  numStubs);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  parent.addChildAfter(newVar,  newVar,  addAfter,  numStubs);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	parent.addChildAfter(newVar,  newVar,  addAfter,  numStubs);	  parent.addChildAfter(newVar,    newVar,    addAfter);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
51	[BUG]  [BUGGY]  parent.addChildAfter(newVar,  p);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  parent.addChildAfter(newVar,  p);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	parent.addChildAfter(newVar,  p);	  parent.addChildAfter(newVar,    newVar);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
52	[BUG]  [BUGGY]  parent.addChildAfter(newVar,  propAlias,  newVar);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  parent.addChildAfter(newVar,  propAlias,  newVar);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	parent.addChildAfter(newVar,  propAlias,  newVar);	  parent.addChildAfter(newVar,    propAlias);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
53	[BUG]  [BUGGY]  parent.addChildAfter(newVar,  alias,  propAlias);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  parent.addChildAfter(newVar,  alias,  propAlias);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	parent.addChildAfter(newVar,  alias,  propAlias);	  parent.addChildAfter(newVar,    propAlias);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
54	[BUG]  [BUGGY]  parent.addChildAfter(newVar,  nameNode,  propAlias);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  parent.addChildAfter(newVar,  nameNode,  propAlias);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	parent.addChildAfter(newVar,  nameNode,  propAlias);	  parent.addChildAfter(newVar,    nameNode);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
55	[BUG]  [BUGGY]  newVar.setString(propAlias);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  newVar.setString(propAlias);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	newVar.setString(propAlias);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
56	[BUG]  [BUGGY]  newVar.setString(propAlias);  addAfter.addChildToFront(newVar);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  newVar.setString(propAlias);  addAfter.addChildToFront(newVar);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	newVar.setString(propAlias);  addAfter.addChildToFront(newVar);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
57	[BUG]  [BUGGY]  Node  p  =  parent.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  Node  p  =  parent.getFirstChild();  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	Node  p  =  parent.getFirstChild();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
58	[BUG]  [BUGGY]  parent.addChildAfter(newVar,  addAfter,  n);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);    [BUGGY]  parent.addChildAfter(newVar,  addAfter,  n);  [BUGGY]    addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	827	827	8	replace	parent.addChildAfter(newVar,  addAfter,  n);	  parent.addChildAfter(newVar,    addAfter,    newVar);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
