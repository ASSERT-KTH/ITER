bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	add	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    timeout    	compilable	timeout	10	1	replace
2	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2);  timeout  [FE]        AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    timeout    	compilable	timeout	10	1	replace
3	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name  +  1);  [CE]  no  suitable  method  found  for  newString(int,String,String)  [FE]          AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name  +  1);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name  +  1);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    timeout    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String)	10	None	replace
4	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  p.name);  [CE]  no  suitable  method  found  for  newString(int,String,String)  [FE]            AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  p.name);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    timeout    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String)	10	None	replace
5	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	add	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    timeout    	compilable	timeout	10	1	replace
6	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  timeout  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    timeout    	compilable	timeout	10	1	replace
7	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1).replaceChild(n,  parent);  [CE]  method  replaceChild  in  class  Node  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1).replaceChild(n,  parent);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1).replaceChild(n,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    timeout    	non-compiled	[CE]  method  replaceChild  in  class  Node  cannot  be  applied  to  given  types;	10	None	replace
8	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  addAfter);  [CE]  no  suitable  method  found  for  newString(int,String,Node,Node)  [FE]          AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  addAfter);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    parent);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,Node)	2	None	replace
9	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent);  [CE]  no  suitable  method  found  for  newString(int,String,Node)  [FE]            AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    parent);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node)	2	None	replace
10	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  addAfter);  [CE]  no  suitable  method  found  for  newString(int,String,Node,Node)  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  addAfter);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    parent);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,Node)	2	None	replace
11	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  parent,  propAlias);  [CE]  no  suitable  method  found  for  newString(int,Node,String)  [FE]                AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  parent,  propAlias);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  parent,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    parent);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Node,String)	2	None	replace
12	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  parent);  [CE]  no  suitable  method  found  for  newString(int,Name,String,Node)  [FE]                  AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  parent);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    parent);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Name,String,Node)	2	None	replace
13	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  p.type);  [CE]  no  suitable  method  found  for  newString(int,String,String,Type)  [FE]                AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  p.type);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  p.type);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,Type)	5	None	replace
14	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.type);  [CE]  no  suitable  method  found  for  newString(int,String,String,Type)  [FE]                  AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.type);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.type);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,Type)	5	None	replace
15	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.type);  [CE]  no  suitable  method  found  for  newString(int,String,Type)  [FE]                    AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.type);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.type);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Type)	5	None	replace
16	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  numStubs);  [CE]  no  suitable  method  found  for  newString(int,String,Type,int)  [FE]                      AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  numStubs);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Type,int)	5	None	replace
17	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  p.type);  [CE]  no  suitable  method  found  for  newString(int,String,String,Type)  [FE]                        AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  p.type);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  p.type);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,Type)	5	None	replace
18	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.type,  propAlias);  [CE]  no  suitable  method  found  for  newString(int,Type,String)  [FE]                          AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.type,  propAlias);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.type,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Type,String)	5	None	replace
19	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.type);  [CE]  no  suitable  method  found  for  newString(int,String,Node,Type)  [FE]                            AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.type);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.type);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,Type)	5	None	replace
20	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  numStubs);  [CE]  no  suitable  method  found  for  newString(int,String,int)  [FE]        AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  numStubs);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    appendAfter);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,int)	11	None	replace
21	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  true);  [CE]  no  suitable  method  found  for  newString(int,String,boolean)  [FE]                    AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  true);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  true);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    false);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,boolean)	7	None	replace
22	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  false);  [CE]  no  suitable  method  found  for  newString(int,String,String,boolean)  [FE]                      AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  false);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  false);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    false);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,boolean)	7	None	replace
23	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  false);  [CE]  no  suitable  method  found  for  newString(int,String,String,boolean)  [FE]                        AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  false);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  false);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    false);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,boolean)	7	None	replace
24	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  false);  [CE]  no  suitable  method  found  for  newString(int,String,boolean)  [FE]                          AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  false);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  false);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    false);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,boolean)	7	None	replace
25	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  false,  p.name);  [CE]  no  suitable  method  found  for  newString(int,String,boolean,String)  [FE]                            AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  false,  p.name);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  false,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    false);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,boolean,String)	7	None	replace
26	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  null,  false);  [CE]  no  suitable  method  found  for  newString(int,String,<null>,boolean)  [FE]                              AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  null,  false);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  null,  false);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    false);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,<null>,boolean)	7	None	replace
27	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  null);  [CE]  no  suitable  method  found  for  newString(int,String,<null>)  [FE]                                AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  null);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  null);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    false);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,<null>)	7	None	replace
28	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  [CE]  variable  nameNode  is  already  defined  in  method  addStubsForUndeclaredProperties(Name,String,Node,Node)  [FE]        AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  addStubsForUndeclaredProperties(Name,String,Node,Node)	9	None	add
29	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  Name  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  [CE]  variable  nameNode  is  already  defined  in  method  addStubsForUndeclaredProperties(Name,String,Node,Node)  [FE]          AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  Name  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Name  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  addStubsForUndeclaredProperties(Name,String,Node,Node)	9	None	add
30	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1));  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1));  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1));	  timeout    	non-compiled	[CE]  ';'  expected	9	None	add
31	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  numStubs++;  [CE]  variable  nameNode  is  already  defined  in  method  addStubsForUndeclaredProperties(Name,String,Node,Node)  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  numStubs++;  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  numStubs++;	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  addStubsForUndeclaredProperties(Name,String,Node,Node)	9	None	add
32	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  Node  parent  =  Node.newString(Token.NAME,  propAlias  +  1);  [CE]  variable  parent  is  already  defined  in  method  addStubsForUndeclaredProperties(Name,String,Node,Node)  [FE]                AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  Node  parent  =  Node.newString(Token.NAME,  propAlias  +  1);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node  parent  =  Node.newString(Token.NAME,  propAlias  +  1);	  timeout    	non-compiled	[CE]  variable  parent  is  already  defined  in  method  addStubsForUndeclaredProperties(Name,String,Node,Node)	9	None	add
33	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  compiler.reportCodeChange();  [CE]  variable  nameNode  is  already  defined  in  method  addStubsForUndeclaredProperties(Name,String,Node,Node)  [FE]                  AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  compiler.reportCodeChange();  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  compiler.reportCodeChange();	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  addStubsForUndeclaredProperties(Name,String,Node,Node)	9	None	add
34	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  p.refs);  [CE]  no  suitable  method  found  for  newString(int,String,String,List<Ref>)  [FE]                  AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  p.refs);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  p.refs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.refs);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,List<Ref>)	6	None	replace
35	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.refs);  [CE]  no  suitable  method  found  for  newString(int,String,String,List<Ref>)  [FE]                    AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.refs);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.refs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.refs);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,List<Ref>)	6	None	replace
36	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.refs,  propAlias);  [CE]  no  suitable  method  found  for  newString(int,List<Ref>,String)  [FE]                      AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.refs,  propAlias);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.refs,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.refs);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,List<Ref>,String)	6	None	replace
37	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.refs);  [CE]  no  suitable  method  found  for  newString(int,String,Node,List<Ref>)  [FE]                        AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.refs);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.refs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.refs);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,List<Ref>)	6	None	replace
38	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.refs);  [CE]  no  suitable  method  found  for  newString(int,String,List<Ref>)  [FE]                          AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.refs);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.refs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.refs);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,List<Ref>)	6	None	replace
39	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.refs,  numStubs);  [CE]  no  suitable  method  found  for  newString(int,String,List<Ref>,int)  [FE]                            AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.refs,  numStubs);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.refs,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.refs);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,List<Ref>,int)	6	None	replace
40	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.node,  propAlias);  [CE]  cannot  find  symbol  node  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.node,  propAlias);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.node,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.node);    	non-compiled	[CE]  cannot  find  symbol  node	4	None	replace
41	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias);  [CE]  no  suitable  method  found  for  newString(int,String,String)  [FE]                AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.node);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String)	4	None	replace
42	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.node);  [CE]  cannot  find  symbol  node  [FE]                  AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.node);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.node);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.node);    	non-compiled	[CE]  cannot  find  symbol  node	4	None	replace
43	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.node,  parent);  [CE]  cannot  find  symbol  node  [FE]                    AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.node,  parent);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.node,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.node);    	non-compiled	[CE]  cannot  find  symbol  node	4	None	replace
44	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.node,  addAfter);  [CE]  cannot  find  symbol  node  [FE]                      AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.node,  addAfter);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.node,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.node);    	non-compiled	[CE]  cannot  find  symbol  node	4	None	replace
45	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.name);  [CE]  no  suitable  method  found  for  newString(int,String,String)  [FE]        AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.name);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String)	1	None	replace
46	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  numStubs);  [CE]  no  suitable  method  found  for  newString(int,String,String,int)  [FE]          AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  numStubs);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,int)	1	None	replace
47	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  parent);  [CE]  no  suitable  method  found  for  newString(int,String,String,Node)  [FE]            AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  parent);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,Node)	1	None	replace
48	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  addAfter);  [CE]  no  suitable  method  found  for  newString(int,String,String,Node)  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  addAfter);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,Node)	1	None	replace
49	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  n);  [CE]  no  suitable  method  found  for  newString(int,String,String,Name)  [FE]                AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  n);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  n);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,Name)	1	None	replace
50	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  p.name);  [CE]  no  suitable  method  found  for  newString(int,String,String,String)  [FE]                  AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  p.name);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,String)	1	None	replace
51	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  parent.getFirstChild();  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	add	Node  nameNode  =  parent.getFirstChild();	      	compilable	timeout	8	1	replace
52	[BUG]  [BUGGY]  Node  nameNode  =  parent.getFirstChild();  timeout  [FE]                      AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  parent.getFirstChild();  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  parent.getFirstChild();	      	compilable	timeout	8	1	replace
53	[BUG]  [BUGGY]  Node  nameNode  =  p.node.getLastChild();  [CE]  cannot  find  symbol  node  [FE]                        AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  p.node.getLastChild();  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.node.getLastChild();	      	non-compiled	[CE]  cannot  find  symbol  node	8	None	replace
54	[BUG]  [BUGGY]  Node  nameNode  =  p.node.getFirstChild();  [CE]  cannot  find  symbol  node  [FE]                          AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  p.node.getFirstChild();  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.node.getFirstChild();	      	non-compiled	[CE]  cannot  find  symbol  node	8	None	replace
55	[BUG]  [BUGGY]  Node  nameNode  =  n.getFirstChild();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  n.getFirstChild();  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  n.getFirstChild();	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
56	[BUG]  [BUGGY]  Node  nameNode  =  p.nameNode.getFirstChild();  [CE]  cannot  find  symbol  nameNode  [FE]                              AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  p.nameNode.getFirstChild();  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.nameNode.getFirstChild();	      	non-compiled	[CE]  cannot  find  symbol  nameNode	8	None	replace
57	[BUG]  [BUGGY]  Node  nameNode  =  p.getNameNode();  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  p.getNameNode();  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.getNameNode();	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
58	[BUG]  [BUGGY]  Node  nameNode  =  p.nameNode();  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  p.nameNode();  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.nameNode();	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
59	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p,  propAlias);  [CE]  no  suitable  method  found  for  newString(int,Name,String)  [FE]          AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p,  propAlias);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Name,String)	12	None	replace
60	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  p);  [CE]  no  suitable  method  found  for  newString(int,String,Node,Name)  [FE]            AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  p);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  p);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,Name)	12	None	replace
61	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  p);  [CE]  no  suitable  method  found  for  newString(int,Name,String,Name)  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  p);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  p);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Name,String,Name)	12	None	replace
62	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias);  [CE]  no  suitable  method  found  for  newString(int,String,String)  [FE]                AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String)	12	None	replace
63	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  addAfter);  [CE]  no  suitable  method  found  for  newString(int,String,Node)  [FE]            AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  addAfter);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    addAfter);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node)	3	None	replace
64	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  addAfter,  propAlias);  [CE]  no  suitable  method  found  for  newString(int,Node,String)  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  addAfter,  propAlias);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  addAfter,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    addAfter);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Node,String)	3	None	replace
65	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  addAfter,  numStubs);  [CE]  no  suitable  method  found  for  newString(int,String,Node,int)  [FE]                AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  addAfter,  numStubs);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  addAfter,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    addAfter);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,int)	3	None	replace
66	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  addAfter);  [CE]  no  suitable  method  found  for  newString(int,String,String,Node)  [FE]                  AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  addAfter);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    addAfter);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,Node)	3	None	replace
67	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  getName(),  propAlias);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  getName(),  propAlias);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  getName(),  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    getName());    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
68	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  p.name);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  p.name);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    getName());    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
69	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  getName());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  getName());  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  getName());	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    getName());    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
70	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  getName());  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  getName());  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  getName());	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    getName());    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
71	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  parent);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  parent);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    getName());    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
72	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1).toString();  [CE]  incompatible  types  [FE]        AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1).toString();  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1).toString();	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    timeout    	non-compiled	[CE]  incompatible  types	10	None	replace
73	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  false,  parent);  [CE]  no  suitable  method  found  for  newString(int,String,boolean,Node)  [FE]                    AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  false,  parent);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  false,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    false);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,boolean,Node)	7	None	replace
74	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  0);  [CE]  no  suitable  method  found  for  newString(int,String,int)  [FE]                      AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  0);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  0);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    false);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,int)	7	None	replace
75	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.parent);  [CE]  no  suitable  method  found  for  newString(int,String,Name)  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.parent);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.node);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Name)	4	None	replace
76	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  p.refs);  [CE]  no  suitable  method  found  for  newString(int,String,String,List<Ref>)  [FE]                  AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  p.refs);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  p.refs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.refs);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,List<Ref>)	6	None	replace
77	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.node,  p.refs);  [CE]  cannot  find  symbol  node  [FE]                    AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.node,  p.refs);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.node,  p.refs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.refs);    	non-compiled	[CE]  cannot  find  symbol  node	6	None	replace
78	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  n);  [CE]  no  suitable  method  found  for  newString(int,String,Name)  [FE]          AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  n);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  n);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    parent);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Name)	2	None	replace
79	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  numStubs);  [CE]  no  suitable  method  found  for  newString(int,String,Node,int)  [FE]            AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  numStubs);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    parent);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,int)	2	None	replace
80	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  NAMESPACE_REDEFINED_WARNING);  [CE]  no  suitable  method  found  for  newString(int,String,DiagnosticType)  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  NAMESPACE_REDEFINED_WARNING);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  NAMESPACE_REDEFINED_WARNING);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    parent);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,DiagnosticType)	2	None	replace
81	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  NAMESPACE_REDEFINED_WARNING,  p);  [CE]  no  suitable  method  found  for  newString(int,String,DiagnosticType,Name)  [FE]          AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  NAMESPACE_REDEFINED_WARNING,  p);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  NAMESPACE_REDEFINED_WARNING,  p);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,DiagnosticType,Name)	12	None	replace
82	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForAlias(alias,  p.name));  [CE]  no  suitable  method  found  for  newString(int,String,String)  [FE]            AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForAlias(alias,  p.name));  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForAlias(alias,  p.name));	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String)	12	None	replace
83	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p);  [CE]  no  suitable  method  found  for  newString(int,String,Name)  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  p);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Name)	12	None	replace
84	[BUG]  [BUGGY]  Node  nameNode  =  NodeUtil.newString(Token.NAME,  propAlias,  getName());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  NodeUtil.newString(Token.NAME,  propAlias,  getName());  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  NodeUtil.newString(Token.NAME,  propAlias,  getName());	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    getName());    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
85	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getReferenceName());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getReferenceName());  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getReferenceName());	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    getName());    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
86	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  addAfter,  p.name);  [CE]  no  suitable  method  found  for  newString(int,String,Node,String)  [FE]            AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  addAfter,  p.name);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  addAfter,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    addAfter);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,String)	3	None	replace
87	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  NAMESPACE_REDEFINED_WARNING,  addAfter);  [CE]  no  suitable  method  found  for  newString(int,String,DiagnosticType,Node)  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  NAMESPACE_REDEFINED_WARNING,  addAfter);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  NAMESPACE_REDEFINED_WARNING,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    addAfter);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,DiagnosticType,Node)	3	None	replace
88	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  addAfter);  [CE]  no  suitable  method  found  for  newString(int,String,Type,Node)  [FE]                AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  addAfter);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Type,Node)	5	None	replace
89	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  parent);  [CE]  no  suitable  method  found  for  newString(int,String,Type,Node)  [FE]                  AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  parent);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Type,Node)	5	None	replace
90	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2);  [CE]  variable  nameNode  is  already  defined  in  method  addStubsForUndeclaredProperties(Name,String,Node,Node)  [FE]        AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2);	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  addStubsForUndeclaredProperties(Name,String,Node,Node)	9	None	add
91	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  Node  namesNode  =  Node.newString(Token.NAME,  propAlias  +  1);  [CE]  variable  nameNode  is  already  defined  in  method  addStubsForUndeclaredProperties(Name,String,Node,Node)  [FE]          AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  Node  namesNode  =  Node.newString(Token.NAME,  propAlias  +  1);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node  namesNode  =  Node.newString(Token.NAME,  propAlias  +  1);	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  addStubsForUndeclaredProperties(Name,String,Node,Node)	9	None	add
92	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias);  [CE]  method  getBooleanProp  in  class  Node  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias);	      	non-compiled	[CE]  method  getBooleanProp  in  class  Node  cannot  be  applied  to  given  types;	8	None	replace
93	[BUG]  [BUGGY]  timeout  [FE]                        AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild();  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	add	Node  nameNode  =  p.refs.get(0).node.getLastChild();	      	compilable	timeout	8	1	replace
94	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild();  timeout  [FE]                        AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild();  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild();	      	compilable	timeout	8	1	replace
95	[BUG]  [BUGGY]  Node  nameNode  =  n.getLastChild();  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  n.getLastChild();  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  n.getLastChild();	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
96	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.refs,  p.name);  [CE]  no  suitable  method  found  for  newString(int,String,List<Ref>,String)  [FE]                  AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.refs,  p.name);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.refs,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.refs);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,List<Ref>,String)	6	None	replace
97	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.refs,  parent);  [CE]  no  suitable  method  found  for  newString(int,String,List<Ref>,Node)  [FE]                    AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.refs,  parent);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.refs,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.refs);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,List<Ref>,Node)	6	None	replace
98	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForAlias(alias,  p.name);  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForAlias(alias,  p.name);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForAlias(alias,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name);    	non-compiled	[CE]  ')'  expected	1	None	replace
99	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.name);  [CE]  no  suitable  method  found  for  newString(int,String,String,String)  [FE]          AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.name);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,String)	1	None	replace
100	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias)?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  method  getBooleanProp  in  class  Node  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias)?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias)?  Boolean.TRUE  :  Boolean.FALSE;	      	non-compiled	[CE]  method  getBooleanProp  in  class  Node  cannot  be  applied  to  given  types;	8	None	replace
101	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias)?  true  :  false;  [CE]  method  getBooleanProp  in  class  Node  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias)?  true  :  false;  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias)?  true  :  false;	      	non-compiled	[CE]  method  getBooleanProp  in  class  Node  cannot  be  applied  to  given  types;	8	None	replace
102	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  true);  [CE]  method  getBooleanProp  in  class  Node  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  true);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  true);	      	non-compiled	[CE]  method  getBooleanProp  in  class  Node  cannot  be  applied  to  given  types;	8	None	replace
103	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  p);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  p);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  p);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    getName());    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
104	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  p.type);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  p.type);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  p.type);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    getName());    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
105	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  p.name);  [CE]  no  suitable  method  found  for  newString(int,String,Type,String)  [FE]                AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  p.name);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Type,String)	5	None	replace
106	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.type,  propAlias);  [CE]  no  suitable  method  found  for  newString(int,String,Type,String)  [FE]                  AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.type,  propAlias);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.type,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Type,String)	5	None	replace
107	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  n);  [CE]  no  suitable  method  found  for  newString(int,String,Type,Name)  [FE]                    AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  n);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  n);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Type,Name)	5	None	replace
108	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.title);  [CE]  cannot  find  symbol  title  [FE]        AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.title);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.title);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    appendAfter);    	non-compiled	[CE]  cannot  find  symbol  title	11	None	replace
109	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  propAlias);  [CE]  variable  nameNode  is  already  defined  in  method  addStubsForUndeclaredProperties(Name,String,Node,Node)  [FE]        AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  propAlias);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  propAlias);	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  addStubsForUndeclaredProperties(Name,String,Node,Node)	9	None	add
110	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  Node  nameNode  =  node.newString(Token.NAME,  propAlias  +  1);  [CE]  variable  nameNode  is  already  defined  in  method  addStubsForUndeclaredProperties(Name,String,Node,Node)  [FE]          AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  Node  nameNode  =  node.newString(Token.NAME,  propAlias  +  1);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node  nameNode  =  node.newString(Token.NAME,  propAlias  +  1);	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  addStubsForUndeclaredProperties(Name,String,Node,Node)	9	None	add
111	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  UNSAFE_THIS);  [CE]  no  suitable  method  found  for  newString(int,String,DiagnosticType)  [FE]                    AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  UNSAFE_THIS);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  UNSAFE_THIS);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    false);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,DiagnosticType)	7	None	replace
112	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  Boolean.TRUE);  [CE]  no  suitable  method  found  for  newString(int,String,Boolean)  [FE]                      AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  Boolean.TRUE);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  Boolean.TRUE);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    false);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Boolean)	7	None	replace
113	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForUndeclaredProperties(alias,  p.name));  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForUndeclaredProperties(alias,  p.name));  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForUndeclaredProperties(alias,  p.name));	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
114	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.node,  p.name);  [CE]  cannot  find  symbol  node  [FE]              AssertionFailedError    [CONTEXT]    Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);    [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.node,  p.name);  [BUGGY]    Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.node,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.node);    	non-compiled	[CE]  cannot  find  symbol  node	4	None	replace
