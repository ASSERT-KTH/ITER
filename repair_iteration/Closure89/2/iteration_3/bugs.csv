bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  addAfter,  NAMESPACE_REDEFINED_WARNING);  [CE]  no  suitable  method  found  for  newString(int,Node,DiagnosticType)  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  addAfter,  NAMESPACE_REDEFINED_WARNING);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  addAfter,  NAMESPACE_REDEFINED_WARNING);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    NAMESPACE_REDEFINED_WARNING,    addAfter);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Node,DiagnosticType)	87	None	replace
2	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  NAMESPACE_REDEFINED_WARNING,  addAfter);  [CE]  no  suitable  method  found  for  newString(int,String,DiagnosticType,Node)  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  NAMESPACE_REDEFINED_WARNING,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  NAMESPACE_REDEFINED_WARNING,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    NAMESPACE_REDEFINED_WARNING,    addAfter);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,DiagnosticType,Node)	87	None	replace
3	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  UNSAFE_NAMESPACE_REDEFINED_WARNING,  addAfter);  [CE]  cannot  find  symbol  UNSAFE_NAMESPACE_REDEFINED_WARNING  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  UNSAFE_NAMESPACE_REDEFINED_WARNING,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  UNSAFE_NAMESPACE_REDEFINED_WARNING,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    NAMESPACE_REDEFINED_WARNING,    addAfter);    	non-compiled	[CE]  cannot  find  symbol  UNSAFE_NAMESPACE_REDEFINED_WARNING	87	None	replace
4	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  NAMESPACE_REDEFINED_WARNING,  addAfter);  [CE]  no  suitable  method  found  for  newString(int,String,Node,DiagnosticType,Node)  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  NAMESPACE_REDEFINED_WARNING,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  NAMESPACE_REDEFINED_WARNING,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    NAMESPACE_REDEFINED_WARNING,    addAfter);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,DiagnosticType,Node)	87	None	replace
5	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  addAfter);  [CE]  no  suitable  method  found  for  newString(int,Name,String,Node)  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    NAMESPACE_REDEFINED_WARNING,    addAfter);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Name,String,Node)	87	None	replace
6	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  addAfter,  NAMESPACE_REDEFINED_WARNING,  propAlias);  [CE]  no  suitable  method  found  for  newString(int,Node,DiagnosticType,String)  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  addAfter,  NAMESPACE_REDEFINED_WARNING,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  addAfter,  NAMESPACE_REDEFINED_WARNING,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    NAMESPACE_REDEFINED_WARNING,    addAfter);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Node,DiagnosticType,String)	87	None	replace
7	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  Boolean.TRUE);  [CE]  no  suitable  method  found  for  newString(int,String,String,Boolean)  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  Boolean.TRUE);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  Boolean.TRUE);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    Boolean.TRUE);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,Boolean)	112	None	replace
8	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  Boolean.TRUE);  [CE]  no  suitable  method  found  for  newString(int,String,String,Boolean)  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  Boolean.TRUE);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  Boolean.TRUE);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    Boolean.TRUE);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,Boolean)	112	None	replace
9	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  Boolean.TRUE);  [CE]  no  suitable  method  found  for  newString(int,String,Node,Boolean)  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  Boolean.TRUE);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  Boolean.TRUE);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    Boolean.TRUE);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,Boolean)	112	None	replace
10	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  String.valueOf(p.name),  Boolean.TRUE);  [CE]  no  suitable  method  found  for  newString(int,String,String,Boolean)  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  String.valueOf(p.name),  Boolean.TRUE);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  String.valueOf(p.name),  Boolean.TRUE);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    Boolean.TRUE);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,Boolean)	112	None	replace
11	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  Boolean.TRUE,  n);  [CE]  no  suitable  method  found  for  newString(int,String,Boolean,Name)  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  Boolean.TRUE,  n);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  Boolean.TRUE,  n);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    Boolean.TRUE);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Boolean,Name)	112	None	replace
12	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  Boolean.TRUE);  [CE]  no  suitable  method  found  for  newString(int,String,Node,Boolean)  [FE]                                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  Boolean.TRUE);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  Boolean.TRUE);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    Boolean.TRUE);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,Boolean)	112	None	replace
13	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  Boolean.TRUE,  numStubs);  [CE]  no  suitable  method  found  for  newString(int,String,Boolean,int)  [FE]                                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  Boolean.TRUE,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  Boolean.TRUE,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    Boolean.TRUE);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Boolean,int)	112	None	replace
14	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  true);  [CE]  no  suitable  method  found  for  newString(int,String,String,boolean)  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  true);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  true);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    false);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,boolean)	22	None	replace
15	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.name,  false);  [CE]  no  suitable  method  found  for  newString(int,String,String,boolean)  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.name,  false);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.name,  false);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    false);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,boolean)	22	None	replace
16	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.name,  false);  [CE]  no  suitable  method  found  for  newString(int,String,Node,String,boolean)  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.name,  false);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.name,  false);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    false);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,String,boolean)	22	None	replace
17	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  null,  false);  [CE]  no  suitable  method  found  for  newString(int,String,String,<null>,boolean)  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  null,  false);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  null,  false);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    false);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,<null>,boolean)	22	None	replace
18	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  p.name,  false);  [CE]  no  suitable  method  found  for  newString(int,Name,String,String,boolean)  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  p.name,  false);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  p.name,  false);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    false);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Name,String,String,boolean)	22	None	replace
19	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  false,  parent);  [CE]  no  suitable  method  found  for  newString(int,String,String,boolean,Node)  [FE]                                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  false,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  false,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    false);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,boolean,Node)	22	None	replace
20	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild();  Node  nameNode  =  p.refs.get(0).node.getLastChild();  [CE]  variable  nameNode  is  already  defined  in  method  addStubsForUndeclaredProperties(Name,String,Node,Node)  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild();  Node  nameNode  =  p.refs.get(0).node.getLastChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    p.refs.get(0).node.getLastChild();    Node  nameNode  =  p.refs.get(0).node.getLastChild();	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  addStubsForUndeclaredProperties(Name,String,Node,Node)	93	None	add
21	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild();  Node  nameNode  =  p.refs.get(1).node.getLastChild();  [CE]  variable  nameNode  is  already  defined  in  method  addStubsForUndeclaredProperties(Name,String,Node,Node)  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild();  Node  nameNode  =  p.refs.get(1).node.getLastChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    p.refs.get(0).node.getLastChild();    Node  nameNode  =  p.refs.get(1).node.getLastChild();	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  addStubsForUndeclaredProperties(Name,String,Node,Node)	93	None	add
22	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild();  Node  nameNode  =  p.refs.get(p.node.getLastChild();  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild();  Node  nameNode  =  p.refs.get(p.node.getLastChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    p.refs.get(0).node.getLastChild();    Node  nameNode  =  p.refs.get(p.node.getLastChild();	  timeout    	non-compiled	[CE]  ')'  expected	93	None	add
23	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild();  Name  nameNode  =  p.refs.get(0).node.getLastChild();  [CE]  variable  nameNode  is  already  defined  in  method  addStubsForUndeclaredProperties(Name,String,Node,Node)  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild();  Name  nameNode  =  p.refs.get(0).node.getLastChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    p.refs.get(0).node.getLastChild();    Name  nameNode  =  p.refs.get(0).node.getLastChild();	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  addStubsForUndeclaredProperties(Name,String,Node,Node)	93	None	add
24	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild();  Node  parent  =  p.refs.get(0).node.getLastChild();  [CE]  variable  parent  is  already  defined  in  method  addStubsForUndeclaredProperties(Name,String,Node,Node)  [FE]                                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild();  Node  parent  =  p.refs.get(0).node.getLastChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    p.refs.get(0).node.getLastChild();    Node  parent  =  p.refs.get(0).node.getLastChild();	  timeout    	non-compiled	[CE]  variable  parent  is  already  defined  in  method  addStubsForUndeclaredProperties(Name,String,Node,Node)	93	None	add
25	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild();  Node  p.refs.get(0).node.getLastChild();  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild();  Node  p.refs.get(0).node.getLastChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    p.refs.get(0).node.getLastChild();    Node  p.refs.get(0).node.getLastChild();	  timeout    	non-compiled	[CE]  ';'  expected	93	None	add
26	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild();  Node  nameNode  =  p.refs.get(p.node.getLastChild());  [CE]  variable  nameNode  is  already  defined  in  method  addStubsForUndeclaredProperties(Name,String,Node,Node)  [FE]                                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild();  Node  nameNode  =  p.refs.get(p.node.getLastChild());  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    p.refs.get(0).node.getLastChild();    Node  nameNode  =  p.refs.get(p.node.getLastChild());	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  addStubsForUndeclaredProperties(Name,String,Node,Node)	93	None	add
27	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.name,  p.type);  [CE]  no  suitable  method  found  for  newString(int,String,String,Type)  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.name,  p.type);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.name,  p.type);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    p.type);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,Type)	14	None	replace
28	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.type,  addAfter);  [CE]  no  suitable  method  found  for  newString(int,String,String,Type,Node)  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.type,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.type,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    p.type);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,Type,Node)	14	None	replace
29	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.type,  parent);  [CE]  no  suitable  method  found  for  newString(int,String,String,Type,Node)  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.type,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.type,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    p.type);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,Type,Node)	14	None	replace
30	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.type,  numStubs);  [CE]  no  suitable  method  found  for  newString(int,String,String,Type,int)  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.type,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.type,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    p.type);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,Type,int)	14	None	replace
31	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  type);  [CE]  cannot  find  symbol  type  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  type);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  type);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    p.type);    	non-compiled	[CE]  cannot  find  symbol  type	14	None	replace
32	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  addAfter,  propAlias,  p.name);  [CE]  no  suitable  method  found  for  newString(int,Node,String,String)  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  addAfter,  propAlias,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  addAfter,  propAlias,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    addAfter,    propAlias);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Node,String,String)	64	None	replace
33	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  addAfter,  propAlias);  [CE]  no  suitable  method  found  for  newString(int,String,Node,String)  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  addAfter,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  addAfter,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    addAfter,    propAlias);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,String)	64	None	replace
34	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  addAfter,  propAlias,  parent);  [CE]  no  suitable  method  found  for  newString(int,Node,String,Node)  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  addAfter,  propAlias,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  addAfter,  propAlias,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    addAfter,    propAlias);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Node,String,Node)	64	None	replace
35	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  false);  [CE]  no  suitable  method  found  for  newString(int,String,String,boolean)  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  false);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  false);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    false);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,boolean)	24	None	replace
36	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  alias,  false);  [CE]  no  suitable  method  found  for  newString(int,String,String,boolean)  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  alias,  false);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  alias,  false);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    false);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,boolean)	24	None	replace
37	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  true);  [CE]  no  suitable  method  found  for  newString(int,String,boolean)  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  true);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  true);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    false);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,boolean)	24	None	replace
38	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  false);  [CE]  no  suitable  method  found  for  newString(int,Name,String,boolean)  [FE]                                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  false);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  false);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    false);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Name,String,boolean)	24	None	replace
39	[BUG]  [BUGGY]  Node  nameNode  =  propAlias.nameNode();  [CE]  cannot  find  symbol  [FE]                                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  propAlias.nameNode();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  propAlias.nameNode();	  Node    nameNode    =    p.nameNode();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
40	[BUG]  [BUGGY]  Node  nameNode  =  parent.nameNode();  [CE]  cannot  find  symbol  [FE]                                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  parent.nameNode();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  parent.nameNode();	  Node    nameNode    =    p.nameNode();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
41	[BUG]  [BUGGY]  Node  nameNode  =  p.nameNode(propAlias);  [CE]  cannot  find  symbol  [FE]                                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.nameNode(propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.nameNode(propAlias);	  Node    nameNode    =    p.nameNode();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
42	[BUG]  [BUGGY]  Node  nameNode  =  n.nameNode();  [CE]  cannot  find  symbol  [FE]                                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  n.nameNode();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  n.nameNode();	  Node    nameNode    =    p.nameNode();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
43	[BUG]  [BUGGY]  Node  nameNode  =  p.node.nameNode();  [CE]  cannot  find  symbol  node  [FE]                                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.node.nameNode();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.node.nameNode();	  Node    nameNode    =    p.nameNode();    	non-compiled	[CE]  cannot  find  symbol  node	58	None	replace
44	[BUG]  [BUGGY]  Node  nameNode  =  p.node();  [CE]  cannot  find  symbol  [FE]                                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.node();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.node();	  Node    nameNode    =    p.nameNode();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
45	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name  +  1).toString();  [CE]  no  suitable  method  found  for  newString(int,String,String)  [FE]            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name  +  1).toString();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name  +  1).toString();	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1).toString();    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String)	72	None	replace
46	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name).toString();  [CE]  no  suitable  method  found  for  newString(int,String,String)  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name).toString();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name).toString();	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1).toString();    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String)	72	None	replace
47	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  p.name).toString();  [CE]  no  suitable  method  found  for  newString(int,String,String)  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  p.name).toString();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  p.name).toString();	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1).toString();    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String)	72	None	replace
48	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  NAMESPACE_REDEFINED_WARNING).toString();  [CE]  no  suitable  method  found  for  newString(int,String,DiagnosticType)  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  NAMESPACE_REDEFINED_WARNING).toString();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  NAMESPACE_REDEFINED_WARNING).toString();	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1).toString();    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,DiagnosticType)	72	None	replace
49	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name  +  1).toString();  [CE]  incompatible  types  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name  +  1).toString();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name  +  1).toString();	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1).toString();    	non-compiled	[CE]  incompatible  types	72	None	replace
50	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias  +  1).toString();  [CE]  incompatible  types  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias  +  1).toString();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias  +  1).toString();	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1).toString();    	non-compiled	[CE]  incompatible  types	72	None	replace
51	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  parent);  [CE]  no  suitable  method  found  for  newString(int,String,Node)  [FE]            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node)	28	None	replace
52	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  getName());  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  getName());  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  getName());	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    getName());    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
53	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  getName(),  propAlias);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  getName(),  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  getName(),  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    getName());    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
54	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  PROPERTY,  propAlias,  getName());  [CE]  cannot  find  symbol  PROPERTY  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  PROPERTY,  propAlias,  getName());  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  PROPERTY,  propAlias,  getName());	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    getName());    	non-compiled	[CE]  cannot  find  symbol  PROPERTY	69	None	replace
55	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.node,  getName());  [CE]  cannot  find  symbol  node  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.node,  getName());  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.node,  getName());	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    getName());    	non-compiled	[CE]  cannot  find  symbol  node	69	None	replace
56	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(alias,  true);  [CE]  method  getBooleanProp  in  class  Node  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(alias,  true);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(alias,  true);	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,    true);    	non-compiled	[CE]  method  getBooleanProp  in  class  Node  cannot  be  applied  to  given  types;	102	None	replace
57	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  false);  [CE]  method  getBooleanProp  in  class  Node  cannot  be  applied  to  given  types;  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  false);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  false);	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,    true);    	non-compiled	[CE]  method  getBooleanProp  in  class  Node  cannot  be  applied  to  given  types;	102	None	replace
58	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(parent,  propAlias,  true);  [CE]  method  getBooleanProp  in  class  Node  cannot  be  applied  to  given  types;  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(parent,  propAlias,  true);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(parent,  propAlias,  true);	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,    true);    	non-compiled	[CE]  method  getBooleanProp  in  class  Node  cannot  be  applied  to  given  types;	102	None	replace
59	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(1).node.getLastChild().getBooleanProp(propAlias,  false);  [CE]  method  getBooleanProp  in  class  Node  cannot  be  applied  to  given  types;  [FE]                                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(1).node.getLastChild().getBooleanProp(propAlias,  false);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(1).node.getLastChild().getBooleanProp(propAlias,  false);	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,    true);    	non-compiled	[CE]  method  getBooleanProp  in  class  Node  cannot  be  applied  to  given  types;	102	None	replace
60	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  true,  parent);  [CE]  method  getBooleanProp  in  class  Node  cannot  be  applied  to  given  types;  [FE]                                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  true,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  true,  parent);	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,    true);    	non-compiled	[CE]  method  getBooleanProp  in  class  Node  cannot  be  applied  to  given  types;	102	None	replace
61	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(p.node.getLastChild().getBooleanProp(alias,  true);  [CE]  ')'  expected  [FE]                                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(p.node.getLastChild().getBooleanProp(alias,  true);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(p.node.getLastChild().getBooleanProp(alias,  true);	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,    true);    	non-compiled	[CE]  ')'  expected	102	None	replace
62	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(p.node.getLastChild().getBooleanProp(propAlias,  false);  [CE]  ')'  expected  [FE]                                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(p.node.getLastChild().getBooleanProp(propAlias,  false);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(p.node.getLastChild().getBooleanProp(propAlias,  false);	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,    true);    	non-compiled	[CE]  ')'  expected	102	None	replace
63	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  p.name,  propAlias);  [CE]  no  suitable  method  found  for  newString(int,Name,String,String)  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  p.name,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  n,  p.name,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    n);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Name,String,String)	49	None	replace
64	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  n);  [CE]  no  suitable  method  found  for  newString(int,String,String,Name)  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  n);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  n);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    n);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,Name)	49	None	replace
65	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  parent);  [CE]  no  suitable  method  found  for  newString(int,String,String,Node)  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    n);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,Node)	49	None	replace
66	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.name,  n);  [CE]  no  suitable  method  found  for  newString(int,String,String,Name)  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.name,  n);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.name,  n);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    n);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,Name)	49	None	replace
67	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  alias,  n);  [CE]  no  suitable  method  found  for  newString(int,String,String,Name)  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  alias,  n);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  alias,  n);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    n);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,Name)	49	None	replace
68	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  p.name);  [CE]  no  suitable  method  found  for  newString(int,Name,String,String)  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    n);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Name,String,String)	49	None	replace
69	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  n,  parent);  [CE]  no  suitable  method  found  for  newString(int,String,String,Name,Node)  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  n,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  n,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    n);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,Name,Node)	49	None	replace
70	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  appendPropForAlias(alias,  propAlias));  [CE]  no  suitable  method  found  for  newString(int,String,String)  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  appendPropForAlias(alias,  propAlias));  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  appendPropForAlias(alias,  propAlias));	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String)	82	None	replace
71	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  appendPropForAlias(alias,  p.name));  [CE]  no  suitable  method  found  for  newString(int,Name,String,String)  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  appendPropForAlias(alias,  p.name));  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  appendPropForAlias(alias,  p.name));	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Name,String,String)	82	None	replace
72	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  appendPropForAlias(alias,  parent));  [CE]  method  appendPropForAlias  in  class  CollapseProperties  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  appendPropForAlias(alias,  parent));  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  appendPropForAlias(alias,  parent));	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  method  appendPropForAlias  in  class  CollapseProperties  cannot  be  applied  to  given  types;	82	None	replace
73	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  appendPropForAlias(p.name,  propAlias));  [CE]  no  suitable  method  found  for  newString(int,String,String)  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  appendPropForAlias(p.name,  propAlias));  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  appendPropForAlias(p.name,  propAlias));	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String)	82	None	replace
74	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForAlias(alias,  parent,  p.name));  [CE]  method  appendPropForAlias  in  class  CollapseProperties  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForAlias(alias,  parent,  p.name));  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForAlias(alias,  parent,  p.name));	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  method  appendPropForAlias  in  class  CollapseProperties  cannot  be  applied  to  given  types;	82	None	replace
75	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForAlias(alias,  p.name),  n);  [CE]  no  suitable  method  found  for  newString(int,String,String,Name)  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForAlias(alias,  p.name),  n);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForAlias(alias,  p.name),  n);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,Name)	82	None	replace
76	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  appendPropForAlias(p.name,  p.name));  [CE]  no  suitable  method  found  for  newString(int,String,String)  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  appendPropForAlias(p.name,  p.name));  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  appendPropForAlias(p.name,  p.name));	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String)	82	None	replace
77	[BUG]  [BUGGY]  Node  nameNode  =  parent.getFirstChild();  Node  nameNode  =  parent.getFirstChild();  [CE]  variable  nameNode  is  already  defined  in  method  addStubsForUndeclaredProperties(Name,String,Node,Node)  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  parent.getFirstChild();  Node  nameNode  =  parent.getFirstChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    parent.getFirstChild();    Node  nameNode  =  parent.getFirstChild();	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  addStubsForUndeclaredProperties(Name,String,Node,Node)	51	None	add
78	[BUG]  [BUGGY]  Node  nameNode  =  parent.getFirstChild();  Node  parent  =  parent.getFirstChild();  [CE]  variable  parent  is  already  defined  in  method  addStubsForUndeclaredProperties(Name,String,Node,Node)  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  parent.getFirstChild();  Node  parent  =  parent.getFirstChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    parent.getFirstChild();    Node  parent  =  parent.getFirstChild();	  timeout    	non-compiled	[CE]  variable  parent  is  already  defined  in  method  addStubsForUndeclaredProperties(Name,String,Node,Node)	51	None	add
79	[BUG]  [BUGGY]  Node  nameNode  =  parent.getFirstChild();  Node  parentNode  =  parent.getFirstChild();  [CE]  variable  nameNode  is  already  defined  in  method  addStubsForUndeclaredProperties(Name,String,Node,Node)  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  parent.getFirstChild();  Node  parentNode  =  parent.getFirstChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    parent.getFirstChild();    Node  parentNode  =  parent.getFirstChild();	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  addStubsForUndeclaredProperties(Name,String,Node,Node)	51	None	add
80	[BUG]  [BUGGY]  Node  nameNode  =  parent.getFirstChild();  Node  nameNode  =  parent.getLastChild();  [CE]  variable  nameNode  is  already  defined  in  method  addStubsForUndeclaredProperties(Name,String,Node,Node)  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  parent.getFirstChild();  Node  nameNode  =  parent.getLastChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    parent.getFirstChild();    Node  nameNode  =  parent.getLastChild();	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  addStubsForUndeclaredProperties(Name,String,Node,Node)	51	None	add
81	[BUG]  [BUGGY]  Node  nameNode  =  parent.getFirstChild();  Node  parentNameNode  =  parent.getFirstChild();  [CE]  variable  nameNode  is  already  defined  in  method  addStubsForUndeclaredProperties(Name,String,Node,Node)  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  parent.getFirstChild();  Node  parentNameNode  =  parent.getFirstChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    parent.getFirstChild();    Node  parentNameNode  =  parent.getFirstChild();	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  addStubsForUndeclaredProperties(Name,String,Node,Node)	51	None	add
82	[BUG]  [BUGGY]  Node  nameNode  =  parent.getFirstChild();  Name  nameNode  =  parent.getFirstChild();  [CE]  variable  nameNode  is  already  defined  in  method  addStubsForUndeclaredProperties(Name,String,Node,Node)  [FE]                                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  parent.getFirstChild();  Name  nameNode  =  parent.getFirstChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    parent.getFirstChild();    Name  nameNode  =  parent.getFirstChild();	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  addStubsForUndeclaredProperties(Name,String,Node,Node)	51	None	add
83	[BUG]  [BUGGY]  Node  nameNode  =  parent.getFirstChild();  Node  parent.getFirstChild();  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  parent.getFirstChild();  Node  parent.getFirstChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    parent.getFirstChild();    Node  parent.getFirstChild();	  timeout    	non-compiled	[CE]  ';'  expected	51	None	add
84	[BUG]  [BUGGY]  Node  nameNode  =  parent.getFirstChild();  Node  parentId  =  parent.getFirstChild();  [CE]  variable  nameNode  is  already  defined  in  method  addStubsForUndeclaredProperties(Name,String,Node,Node)  [FE]                                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  parent.getFirstChild();  Node  parentId  =  parent.getFirstChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    parent.getFirstChild();    Node  parentId  =  parent.getFirstChild();	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  addStubsForUndeclaredProperties(Name,String,Node,Node)	51	None	add
85	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  UNSAFE_NAMESPACE_REDEFINED_WARNING,  propAlias);  [CE]  cannot  find  symbol  UNSAFE_NAMESPACE_REDEFINED_WARNING  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  UNSAFE_NAMESPACE_REDEFINED_WARNING,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  UNSAFE_NAMESPACE_REDEFINED_WARNING,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    NAMESPACE_REDEFINED_WARNING);    	non-compiled	[CE]  cannot  find  symbol  UNSAFE_NAMESPACE_REDEFINED_WARNING	80	None	replace
86	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  UNSAFE_NAMESPACE_REDEFINED_WARNING);  [CE]  cannot  find  symbol  UNSAFE_NAMESPACE_REDEFINED_WARNING  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  UNSAFE_NAMESPACE_REDEFINED_WARNING);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  UNSAFE_NAMESPACE_REDEFINED_WARNING);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    NAMESPACE_REDEFINED_WARNING);    	non-compiled	[CE]  cannot  find  symbol  UNSAFE_NAMESPACE_REDEFINED_WARNING	80	None	replace
87	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  NAMESPACE_REDEFINED_WARNING);  [CE]  no  suitable  method  found  for  newString(int,String,Node,DiagnosticType)  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  NAMESPACE_REDEFINED_WARNING);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  NAMESPACE_REDEFINED_WARNING);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    NAMESPACE_REDEFINED_WARNING);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,DiagnosticType)	80	None	replace
88	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  NAMESPACE_REDEFINED_WARNING,  propAlias);  [CE]  no  suitable  method  found  for  newString(int,String,DiagnosticType,String)  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  NAMESPACE_REDEFINED_WARNING,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  NAMESPACE_REDEFINED_WARNING,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    NAMESPACE_REDEFINED_WARNING);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,DiagnosticType,String)	80	None	replace
89	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  NAMESPACE_REDEFINED_WARNING);  [CE]  no  suitable  method  found  for  newString(int,Name,String,DiagnosticType)  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  NAMESPACE_REDEFINED_WARNING);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  NAMESPACE_REDEFINED_WARNING);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    NAMESPACE_REDEFINED_WARNING);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Name,String,DiagnosticType)	80	None	replace
90	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  NAMESPACE_REDEFINED_WARNING);  [CE]  no  suitable  method  found  for  newString(int,String,String,DiagnosticType)  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  NAMESPACE_REDEFINED_WARNING);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  NAMESPACE_REDEFINED_WARNING);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    NAMESPACE_REDEFINED_WARNING);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,DiagnosticType)	80	None	replace
91	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  NAMESPACE_REDEFINED_WARNING,  parent);  [CE]  no  suitable  method  found  for  newString(int,String,DiagnosticType,Node)  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  NAMESPACE_REDEFINED_WARNING,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  NAMESPACE_REDEFINED_WARNING,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    NAMESPACE_REDEFINED_WARNING);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,DiagnosticType,Node)	80	None	replace
92	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  propAlias);  [CE]  no  suitable  method  found  for  newString(int,String,Node,String)  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    parent,    propAlias);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,String)	11	None	replace
93	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  parent,  propAlias);  [CE]  no  suitable  method  found  for  newString(int,Name,Node,String)  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  parent,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  n,  parent,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    parent,    propAlias);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Name,Node,String)	11	None	replace
94	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  parent,  propAlias);  [CE]  no  suitable  method  found  for  newString(int,String,Node,String)  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  parent,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  parent,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    parent,    propAlias);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,String)	11	None	replace
95	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias  +  1,  propAlias);  [CE]  no  suitable  method  found  for  newString(int,String,String)  [FE]            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias  +  1,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias  +  1,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1,    propAlias);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String)	109	None	replace
96	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  addAfter);  [CE]  no  suitable  method  found  for  newString(int,String,Node)  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1,    propAlias);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node)	109	None	replace
97	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  appendPropForAlias(alias,  p.name));  [CE]  no  suitable  method  found  for  newString(int,String,String)  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  appendPropForAlias(alias,  p.name));  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  appendPropForAlias(alias,  p.name));	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1,    propAlias);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String)	109	None	replace
98	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(alias,  propAlias)?  true  :  false;  [CE]  method  getBooleanProp  in  class  Node  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(alias,  propAlias)?  true  :  false;  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(alias,  propAlias)?  true  :  false;	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias)?    true    :    false;    	non-compiled	[CE]  method  getBooleanProp  in  class  Node  cannot  be  applied  to  given  types;	101	None	replace
99	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  true)?  true  :  false;  [CE]  method  getBooleanProp  in  class  Node  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  true)?  true  :  false;  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  true)?  true  :  false;	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias)?    true    :    false;    	non-compiled	[CE]  method  getBooleanProp  in  class  Node  cannot  be  applied  to  given  types;	101	None	replace
100	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  false)?  true  :  false;  [CE]  method  getBooleanProp  in  class  Node  cannot  be  applied  to  given  types;  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  false)?  true  :  false;  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  false)?  true  :  false;	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias)?    true    :    false;    	non-compiled	[CE]  method  getBooleanProp  in  class  Node  cannot  be  applied  to  given  types;	101	None	replace
101	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  parent)?  true  :  false;  [CE]  method  getBooleanProp  in  class  Node  cannot  be  applied  to  given  types;  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  parent)?  true  :  false;  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  parent)?  true  :  false;	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias)?    true    :    false;    	non-compiled	[CE]  method  getBooleanProp  in  class  Node  cannot  be  applied  to  given  types;	101	None	replace
102	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  propAlias)?  true  :  false;  [CE]  method  getBooleanProp  in  class  Node  cannot  be  applied  to  given  types;  [FE]                                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  propAlias)?  true  :  false;  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  propAlias)?  true  :  false;	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias)?    true    :    false;    	non-compiled	[CE]  method  getBooleanProp  in  class  Node  cannot  be  applied  to  given  types;	101	None	replace
103	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(parent,  propAlias)?  true  :  false;  [CE]  method  getBooleanProp  in  class  Node  cannot  be  applied  to  given  types;  [FE]                                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(parent,  propAlias)?  true  :  false;  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(parent,  propAlias)?  true  :  false;	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias)?    true    :    false;    	non-compiled	[CE]  method  getBooleanProp  in  class  Node  cannot  be  applied  to  given  types;	101	None	replace
104	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  p.type,  propAlias);  [CE]  no  suitable  method  found  for  newString(int,String,Type,String)  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  p.type,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  p.type,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type,    p.name);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Type,String)	105	None	replace
105	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.type,  p.name);  [CE]  no  suitable  method  found  for  newString(int,String,Type,String)  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.type,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.type,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type,    p.name);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Type,String)	105	None	replace
106	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  p.type,  p.name);  [CE]  no  suitable  method  found  for  newString(int,String,String,Type,String)  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  p.type,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  p.type,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type,    p.name);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,Type,String)	105	None	replace
107	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.type,  p.name);  [CE]  no  suitable  method  found  for  newString(int,String,Node,Type,String)  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.type,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.type,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type,    p.name);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,Type,String)	105	None	replace
108	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  p.parent);  [CE]  no  suitable  method  found  for  newString(int,String,String,Name)  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  p.parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  p.parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.parent);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,Name)	75	None	replace
109	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.parent);  [CE]  no  suitable  method  found  for  newString(int,String,String,Name)  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.parent);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,Name)	75	None	replace
110	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  p.parent);  [CE]  no  suitable  method  found  for  newString(int,String,Node,Name)  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  p.parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  p.parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.parent);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,Name)	75	None	replace
111	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.parent,  addAfter);  [CE]  no  suitable  method  found  for  newString(int,String,Name,Node)  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.parent,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.parent,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.parent);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Name,Node)	75	None	replace
112	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  p.parent);  [CE]  no  suitable  method  found  for  newString(int,Name,String,Name)  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  p.parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  p.parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.parent);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Name,String,Name)	75	None	replace
113	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.parent,  propAlias);  [CE]  no  suitable  method  found  for  newString(int,Name,String)  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.parent,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.parent,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.parent);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Name,String)	75	None	replace
114	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  addAfter,  parent);  [CE]  no  suitable  method  found  for  newString(int,String,Node,Node)  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  addAfter,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  addAfter,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    parent,    addAfter);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,Node)	10	None	replace
115	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  addAfter,  numStubs);  [CE]  no  suitable  method  found  for  newString(int,String,Node,Node,int)  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  addAfter,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  addAfter,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    parent,    addAfter);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,Node,int)	10	None	replace
116	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  addAfter,  parent,  propAlias);  [CE]  no  suitable  method  found  for  newString(int,Node,Node,String)  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  addAfter,  parent,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  addAfter,  parent,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    parent,    addAfter);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Node,Node,String)	10	None	replace
117	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  n,  parent,  addAfter);  [CE]  no  suitable  method  found  for  newString(int,String,Name,Node,Node)  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  n,  parent,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  n,  parent,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    parent,    addAfter);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Name,Node,Node)	10	None	replace
118	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  addAfter,  p.name);  [CE]  no  suitable  method  found  for  newString(int,String,Node,Node,String)  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  addAfter,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  addAfter,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    parent,    addAfter);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,Node,String)	10	None	replace
119	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  false,  propAlias);  [CE]  no  suitable  method  found  for  newString(int,String,boolean,String)  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  false,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  false,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    false,    p.name);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,boolean,String)	25	None	replace
120	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  false,  p.name);  [CE]  no  suitable  method  found  for  newString(int,String,boolean,String)  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  false,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  false,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    false,    p.name);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,boolean,String)	25	None	replace
121	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  false,  p.name);  [CE]  no  suitable  method  found  for  newString(int,String,String,boolean,String)  [FE]                                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  false,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  false,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    false,    p.name);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,boolean,String)	25	None	replace
122	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  false,  p.name,  numStubs);  [CE]  no  suitable  method  found  for  newString(int,String,boolean,String,int)  [FE]                                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  false,  p.name,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  false,  p.name,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    false,    p.name);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,boolean,String,int)	25	None	replace
123	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  true,  p.name,  parent);  [CE]  no  suitable  method  found  for  newString(int,String,boolean,String,Node)  [FE]                                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  true,  p.name,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  true,  p.name,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    false,    p.name);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,boolean,String,Node)	25	None	replace
124	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  true,  p.name);  [CE]  no  suitable  method  found  for  newString(int,String,boolean,String)  [FE]                                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  true,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  true,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    false,    p.name);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,boolean,String)	25	None	replace
125	[BUG]  [BUGGY]  Node  namesNode  =  Node.newString(Token.NAME,  propAlias  +  1);  [CE]  cannot  find  symbol  nameNode  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  namesNode  =  Node.newString(Token.NAME,  propAlias  +  1);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  namesNode  =  Node.newString(Token.NAME,  propAlias  +  1);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node    namesNode    =    Node.newString(Token.NAME,    propAlias    +    1);    	non-compiled	[CE]  cannot  find  symbol  nameNode	91	None	replace
126	[BUG]  [BUGGY]  Node  namesNode  =  Node.newString(Token.NAME,  propAlias);  [CE]  cannot  find  symbol  nameNode  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  namesNode  =  Node.newString(Token.NAME,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  namesNode  =  Node.newString(Token.NAME,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node    namesNode    =    Node.newString(Token.NAME,    propAlias    +    1);    	non-compiled	[CE]  cannot  find  symbol  nameNode	91	None	replace
127	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.name,  getName());  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.name,  getName());  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.name,  getName());	  Node    nameNode    =    Node.newString(Token.NAME,    p.name,    propAlias,    getName());    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
128	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  getName());  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  getName());  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  getName());	  Node    nameNode    =    Node.newString(Token.NAME,    p.name,    propAlias,    getName());    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
129	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  appendPropForAlias(alias,  p.name));  [CE]  no  suitable  method  found  for  newString(int,String,String,String)  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  appendPropForAlias(alias,  p.name));  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  appendPropForAlias(alias,  p.name));	  Node    nameNode    =    Node.newString(Token.NAME,    p.name,    propAlias,    getName());    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,String)	70	None	replace
130	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  parent.getName());  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  parent.getName());  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  parent.getName());	  Node    nameNode    =    Node.newString(Token.NAME,    p.name,    propAlias,    getName());    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
131	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  getName(),  propAlias,  p.name);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  getName(),  propAlias,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  getName(),  propAlias,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    p.name,    propAlias,    getName());    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
132	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  UNSAFE_THIS);  [CE]  no  suitable  method  found  for  newString(int,String,Node,DiagnosticType)  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  UNSAFE_THIS);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  UNSAFE_THIS);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    UNSAFE_THIS);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,DiagnosticType)	111	None	replace
133	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  UNSAFE_THIS,  p.name);  [CE]  no  suitable  method  found  for  newString(int,String,DiagnosticType,String)  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  UNSAFE_THIS,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  UNSAFE_THIS,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    UNSAFE_THIS);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,DiagnosticType,String)	111	None	replace
134	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  UNSAFE_THIS,  propAlias);  [CE]  no  suitable  method  found  for  newString(int,DiagnosticType,String)  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  UNSAFE_THIS,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  UNSAFE_THIS,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    UNSAFE_THIS);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,DiagnosticType,String)	111	None	replace
135	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  NAMESPACE_REDEFINED_WARNING,  UNSAFE_THIS);  [CE]  no  suitable  method  found  for  newString(int,String,DiagnosticType,DiagnosticType)  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  NAMESPACE_REDEFINED_WARNING,  UNSAFE_THIS);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  NAMESPACE_REDEFINED_WARNING,  UNSAFE_THIS);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    UNSAFE_THIS);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,DiagnosticType,DiagnosticType)	111	None	replace
136	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  UNSAFE_THIS);  [CE]  no  suitable  method  found  for  newString(int,String,Node,DiagnosticType)  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  UNSAFE_THIS);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  UNSAFE_THIS);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    UNSAFE_THIS);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,DiagnosticType)	111	None	replace
137	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  UNSAFE_THIS,  parent);  [CE]  no  suitable  method  found  for  newString(int,String,DiagnosticType,Node)  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  UNSAFE_THIS,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  UNSAFE_THIS,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    UNSAFE_THIS);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,DiagnosticType,Node)	111	None	replace
138	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  UNSAFE_THIS);  [CE]  no  suitable  method  found  for  newString(int,String,String,DiagnosticType)  [FE]                                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  UNSAFE_THIS);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  UNSAFE_THIS);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    UNSAFE_THIS);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,DiagnosticType)	111	None	replace
139	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(alias,  propAlias);  [CE]  method  getBooleanProp  in  class  Node  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(alias,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(alias,  propAlias);	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias);    	non-compiled	[CE]  method  getBooleanProp  in  class  Node  cannot  be  applied  to  given  types;	92	None	replace
140	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(alias,  parent);  [CE]  method  getBooleanProp  in  class  Node  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(alias,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(alias,  parent);	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias);    	non-compiled	[CE]  method  getBooleanProp  in  class  Node  cannot  be  applied  to  given  types;	92	None	replace
141	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  parent);  [CE]  method  getBooleanProp  in  class  Node  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  parent);	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias);    	non-compiled	[CE]  method  getBooleanProp  in  class  Node  cannot  be  applied  to  given  types;	92	None	replace
142	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  p.name);  [CE]  method  getBooleanProp  in  class  Node  cannot  be  applied  to  given  types;  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  p.name);	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias);    	non-compiled	[CE]  method  getBooleanProp  in  class  Node  cannot  be  applied  to  given  types;	92	None	replace
143	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(parent,  propAlias);  [CE]  method  getBooleanProp  in  class  Node  cannot  be  applied  to  given  types;  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(parent,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(parent,  propAlias);	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias);    	non-compiled	[CE]  method  getBooleanProp  in  class  Node  cannot  be  applied  to  given  types;	92	None	replace
144	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(1).node.getLastChild().getBooleanProp(propAlias,  parent);  [CE]  method  getBooleanProp  in  class  Node  cannot  be  applied  to  given  types;  [FE]                                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(1).node.getLastChild().getBooleanProp(propAlias,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(1).node.getLastChild().getBooleanProp(propAlias,  parent);	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias);    	non-compiled	[CE]  method  getBooleanProp  in  class  Node  cannot  be  applied  to  given  types;	92	None	replace
145	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  null);  [CE]  no  suitable  method  found  for  newString(int,String,Node,<null>)  [FE]                                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  null);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  null);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    null);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,<null>)	27	None	replace
146	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  null);  [CE]  no  suitable  method  found  for  newString(int,String,Node,<null>)  [FE]                                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  null);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  null);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    null);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,<null>)	27	None	replace
147	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  null);  [CE]  no  suitable  method  found  for  newString(int,String,String,<null>)  [FE]                                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  null);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  null);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    null);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,<null>)	27	None	replace
148	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  n,  null);  [CE]  no  suitable  method  found  for  newString(int,String,Name,<null>)  [FE]                                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  n,  null);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  n,  null);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    null);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Name,<null>)	27	None	replace
149	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  null);  [CE]  no  suitable  method  found  for  newString(int,String,String,<null>)  [FE]                                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  null);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  null);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    null);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,<null>)	27	None	replace
150	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  true,  parent,  addAfter);  [CE]  no  suitable  method  found  for  newString(int,String,boolean,Node,Node)  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  true,  parent,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  true,  parent,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    false,    parent);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,boolean,Node,Node)	73	None	replace
151	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  false,  parent);  [CE]  no  suitable  method  found  for  newString(int,String,boolean,Node)  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  false,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  false,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    false,    parent);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,boolean,Node)	73	None	replace
152	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  false,  parent,  addAfter);  [CE]  no  suitable  method  found  for  newString(int,String,boolean,Node,Node)  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  false,  parent,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  false,  parent,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    false,    parent);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,boolean,Node,Node)	73	None	replace
153	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  false,  parent);  [CE]  no  suitable  method  found  for  newString(int,Name,String,boolean,Node)  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  false,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  false,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    false,    parent);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Name,String,boolean,Node)	73	None	replace
154	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  false,  parent);  [CE]  no  suitable  method  found  for  newString(int,String,String,boolean,Node)  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  false,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  false,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    false,    parent);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,boolean,Node)	73	None	replace
155	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  false);  [CE]  no  suitable  method  found  for  newString(int,String,Node,boolean)  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  false);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  false);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    false,    parent);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,boolean)	73	None	replace
156	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  appendPropForUndeclaredProperties(alias,  propAlias));  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  appendPropForUndeclaredProperties(alias,  propAlias));  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  appendPropForUndeclaredProperties(alias,  propAlias));	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    appendPropForUndeclaredProperties(alias,    p.name));    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
157	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForUndeclaredProperties(alias,  p.name),  p.type);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForUndeclaredProperties(alias,  p.name),  p.type);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForUndeclaredProperties(alias,  p.name),  p.type);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    appendPropForUndeclaredProperties(alias,    p.name));    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
158	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForUndeclaredProperties(alias,  p.name),  p.node);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForUndeclaredProperties(alias,  p.name),  p.node);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForUndeclaredProperties(alias,  p.name),  p.node);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    appendPropForUndeclaredProperties(alias,    p.name));    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
159	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  appendPropForUndeclaredProperties(p.name,  p.name));  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  appendPropForUndeclaredProperties(p.name,  p.name));  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  appendPropForUndeclaredProperties(p.name,  p.name));	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    appendPropForUndeclaredProperties(alias,    p.name));    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
160	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  appendPropForUndeclaredProperties(p.name,  propAlias));  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  appendPropForUndeclaredProperties(p.name,  propAlias));  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  appendPropForUndeclaredProperties(p.name,  propAlias));	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    appendPropForUndeclaredProperties(alias,    p.name));    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
161	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForUndeclaredProperties(alias,  p.name),  p.refs);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForUndeclaredProperties(alias,  p.name),  p.refs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForUndeclaredProperties(alias,  p.name),  p.refs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    appendPropForUndeclaredProperties(alias,    p.name));    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
162	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  addAfter,  propAlias);  [CE]  no  suitable  method  found  for  newString(int,String,Node,Node,String)  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  addAfter,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  addAfter,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    parent,    addAfter);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,Node,String)	8	None	replace
163	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  parent,  addAfter);  [CE]  no  suitable  method  found  for  newString(int,String,String,Node,Node)  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  parent,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  parent,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    parent,    addAfter);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,Node,Node)	8	None	replace
164	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  addAfter,  parent);  [CE]  no  suitable  method  found  for  newString(int,String,Node,Node)  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  addAfter,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  addAfter,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    parent,    addAfter);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,Node)	8	None	replace
165	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  alias,  parent,  addAfter);  [CE]  no  suitable  method  found  for  newString(int,Name,String,Node,Node)  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  alias,  parent,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  n,  alias,  parent,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    parent,    addAfter);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Name,String,Node,Node)	8	None	replace
166	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  addAfter);  [CE]  no  suitable  method  found  for  newString(int,String,String,Node)  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    parent,    addAfter);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,Node)	8	None	replace
167	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  alias);  [CE]  no  suitable  method  found  for  newString(int,String,Type,String)  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  alias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  alias);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    p.type,    propAlias);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Type,String)	106	None	replace
168	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  p.type,  propAlias);  [CE]  no  suitable  method  found  for  newString(int,String,Node,Type,String)  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  p.type,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  p.type,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    p.type,    propAlias);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,Type,String)	106	None	replace
169	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  alias,  p.type,  propAlias);  [CE]  no  suitable  method  found  for  newString(int,String,String,Type,String)  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  alias,  p.type,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  alias,  p.type,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    p.type,    propAlias);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,Type,String)	106	None	replace
170	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  alias,  propAlias);  [CE]  no  suitable  method  found  for  newString(int,String,String,String)  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  alias,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  alias,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    p.type,    propAlias);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,String)	106	None	replace
171	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  parent);  [CE]  no  suitable  method  found  for  newString(int,String,String,Node)  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    p.type,    propAlias);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,Node)	106	None	replace
172	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  p.name,  numStubs);  [CE]  no  suitable  method  found  for  newString(int,String,String,int)  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  p.name,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  p.name,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1,    p.name);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,int)	4	None	replace
173	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias  +  1,  p.name);  [CE]  no  suitable  method  found  for  newString(int,String,String)  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias  +  1,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias  +  1,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1,    p.name);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String)	4	None	replace
174	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name  +  1,  propAlias);  [CE]  no  suitable  method  found  for  newString(int,String,String)  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name  +  1,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name  +  1,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1,    p.name);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String)	4	None	replace
175	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias  +  1,  p.name);  [CE]  no  suitable  method  found  for  newString(int,String,String,String)  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias  +  1,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias  +  1,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1,    p.name);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,String)	4	None	replace
176	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  p.name,  parent);  [CE]  no  suitable  method  found  for  newString(int,String,String,Node)  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  p.name,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  p.name,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1,    p.name);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,Node)	4	None	replace
177	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1));  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1));  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1));	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1));    	non-compiled	[CE]  ';'  expected	30	None	replace
178	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3));  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3));  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3));	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1));    	non-compiled	[CE]  ';'  expected	30	None	replace
179	[BUG]  [BUGGY]  Node  nameNode  =  n.nameNode.getFirstChild();  [CE]  cannot  find  symbol  nameNode  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  n.nameNode.getFirstChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  n.nameNode.getFirstChild();	  Node    nameNode    =    p.nameNode.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  nameNode	56	None	replace
180	[BUG]  [BUGGY]  Node  nameNode  =  p.parent.getFirstChild();  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.parent.getFirstChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.parent.getFirstChild();	  Node    nameNode    =    p.nameNode.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
181	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.getFirstChild();  [CE]  cannot  find  symbol  [FE]                                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.getFirstChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.getFirstChild();	  Node    nameNode    =    p.nameNode.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
182	[BUG]  [BUGGY]  Node  nameNode  =  p.nameNodes.getFirstChild();  [CE]  cannot  find  symbol  nameNodes  [FE]                                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.nameNodes.getFirstChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.nameNodes.getFirstChild();	  Node    nameNode    =    p.nameNode.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  nameNodes	56	None	replace
183	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  compiler.reportCodeChange();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	add	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  compiler.reportCodeChange();	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    compiler.reportCodeChange();    	compilable	timeout	33	1	replace
184	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  compiler.reportCodeChange();  timeout  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  compiler.reportCodeChange();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  compiler.reportCodeChange();	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    compiler.reportCodeChange();    	compilable	timeout	33	1	replace
185	[BUG]  [BUGGY]  timeout  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  compiler.reportCodeChange();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	add	Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  compiler.reportCodeChange();	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    compiler.reportCodeChange();    	compilable	timeout	33	1	replace
186	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  compiler.reportCodeChange();  timeout  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  compiler.reportCodeChange();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  compiler.reportCodeChange();	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    compiler.reportCodeChange();    	compilable	timeout	33	1	replace
187	[BUG]  [BUGGY]  timeout  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2);  compiler.reportCodeChange();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	add	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2);  compiler.reportCodeChange();	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    compiler.reportCodeChange();    	compilable	timeout	33	1	replace
188	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2);  compiler.reportCodeChange();  timeout  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2);  compiler.reportCodeChange();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2);  compiler.reportCodeChange();	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    compiler.reportCodeChange();    	compilable	timeout	33	1	replace
189	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.title);  [CE]  cannot  find  symbol  title  [FE]            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.title);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.title);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.title);    	non-compiled	[CE]  cannot  find  symbol  title	108	None	replace
190	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.title,  propAlias);  [CE]  cannot  find  symbol  title  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.title,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.title,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.title);    	non-compiled	[CE]  cannot  find  symbol  title	108	None	replace
191	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent.title);  [CE]  cannot  find  symbol  title  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent.title);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent.title);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.title);    	non-compiled	[CE]  cannot  find  symbol  title	108	None	replace
192	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  addAfter,  propAlias);  [CE]  no  suitable  method  found  for  newString(int,String,Node,String)  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  addAfter,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  addAfter,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    addAfter);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,String)	63	None	replace
193	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  numStubs);  [CE]  no  suitable  method  found  for  newString(int,String,Node,int)  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    parent,    numStubs);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,int)	79	None	replace
194	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  addAfter,  parent,  numStubs);  [CE]  no  suitable  method  found  for  newString(int,String,Node,Node,int)  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  addAfter,  parent,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  addAfter,  parent,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    parent,    numStubs);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Node,Node,int)	79	None	replace
195	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  n,  parent,  numStubs);  [CE]  no  suitable  method  found  for  newString(int,String,Name,Node,int)  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  n,  parent,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  n,  parent,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    parent,    numStubs);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,Name,Node,int)	79	None	replace
196	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  parent,  numStubs);  [CE]  no  suitable  method  found  for  newString(int,Name,String,Node,int)  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  parent,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  parent,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    parent,    numStubs);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,Name,String,Node,int)	79	None	replace
197	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  parent,  numStubs);  [CE]  no  suitable  method  found  for  newString(int,String,String,Node,int)  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  parent,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  parent,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    parent,    numStubs);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,Node,int)	79	None	replace
198	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  p.node,  propAlias);  [CE]  cannot  find  symbol  node  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  p.node,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  p.node,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.node,    p.name);    	non-compiled	[CE]  cannot  find  symbol  node	114	None	replace
199	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.node,  p.name);  [CE]  cannot  find  symbol  node  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.node,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.node,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.node,    p.name);    	non-compiled	[CE]  cannot  find  symbol  node	114	None	replace
200	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.node);  [CE]  cannot  find  symbol  node  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.node);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.node);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.node,    p.name);    	non-compiled	[CE]  cannot  find  symbol  node	114	None	replace
201	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.node,  propAlias,  p.name);  [CE]  cannot  find  symbol  node  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.node,  propAlias,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.node,  propAlias,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.node,    p.name);    	non-compiled	[CE]  cannot  find  symbol  node	114	None	replace
202	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.node,  parent.name);  [CE]  cannot  find  symbol  node  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.node,  parent.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.node,  parent.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.node,    p.name);    	non-compiled	[CE]  cannot  find  symbol  node	114	None	replace
203	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.node,  p.name);  [CE]  cannot  find  symbol  node  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.node,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.node,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.node,    p.name);    	non-compiled	[CE]  cannot  find  symbol  node	114	None	replace
204	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.name,  numStubs);  [CE]  no  suitable  method  found  for  newString(int,String,String,int)  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.name,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.name,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    numStubs);    	non-compiled	[CE]  no  suitable  method  found  for  newString(int,String,String,int)	46	None	replace
205	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  numStubs);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    numStubs);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
206	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  numStubs,  parent);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  numStubs,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  numStubs,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    numStubs);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
207	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  numStubs,  addAfter);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  numStubs,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  numStubs,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    numStubs);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
208	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  numStubs);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    numStubs);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
209	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.name,  numStubs);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.name,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.name,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    numStubs);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
210	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    2);    Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2);	  timeout    	non-compiled	[CE]  cannot  find  symbol	1	None	add
211	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2);  Name  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2);  Name  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    2);    Name  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2);	  timeout    	non-compiled	[CE]  cannot  find  symbol	1	None	add
212	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2));  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2));  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    2);    Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2));	  timeout    	non-compiled	[CE]  cannot  find  symbol	1	None	add
213	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    2);    Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);	  timeout    	non-compiled	[CE]  cannot  find  symbol	1	None	add
214	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    2);    Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);	  timeout    	non-compiled	[CE]  cannot  find  symbol	1	None	add
215	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2);  Node  parent  =  Node.newString(Token.NAME,  propAlias  +  2);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2);  Node  parent  =  Node.newString(Token.NAME,  propAlias  +  2);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    2);    Node  parent  =  Node.newString(Token.NAME,  propAlias  +  2);	  timeout    	non-compiled	[CE]  cannot  find  symbol	1	None	add
216	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  numStubs++;  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  numStubs++;  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  numStubs++;	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    numStubs++;    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
217	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  numStubs++;  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  numStubs++;  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  numStubs++;	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    numStubs++;    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
218	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2);  numStubs++;  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2);  numStubs++;  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2);  numStubs++;	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    numStubs++;    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
219	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  parent);  numStubs++;  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  parent);  numStubs++;  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  parent);  numStubs++;	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    numStubs++;    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
220	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  numStubs++;  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  numStubs++;  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  numStubs++;	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    numStubs++;    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
221	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.name,  p.refs);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.name,  p.refs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.name,  p.refs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    p.refs);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
222	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.refs,  parent);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.refs,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.refs,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    p.refs);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
223	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.refs,  numStubs);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.refs,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.refs,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    p.refs);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
224	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  parent,  p.refs);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  parent,  p.refs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  parent,  p.refs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    p.refs);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
225	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.refs,  addAfter);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.refs,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.refs,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    p.refs);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
226	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  alias,  p.refs);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  alias,  p.refs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  alias,  p.refs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    p.refs);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
227	[BUG]  [BUGGY]  Node  nameNode  =  p.nameNode.getNameNode();  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.nameNode.getNameNode();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.nameNode.getNameNode();	  Node    nameNode    =    p.getNameNode();    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
228	[BUG]  [BUGGY]  Node  nameNode  =  p.node.getNameNode();  [CE]  cannot  find  symbol  [FE]                                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.node.getNameNode();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.node.getNameNode();	  Node    nameNode    =    p.getNameNode();    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
229	[BUG]  [BUGGY]  Node  nameNode  =  parent.getNameNode();  [CE]  cannot  find  symbol  [FE]                                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  parent.getNameNode();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  parent.getNameNode();	  Node    nameNode    =    p.getNameNode();    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
230	[BUG]  [BUGGY]  Node  nameNode  =  propAlias.getNameNode();  [CE]  cannot  find  symbol  [FE]                                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  propAlias.getNameNode();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  propAlias.getNameNode();	  Node    nameNode    =    p.getNameNode();    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
231	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.getNameNode();  [CE]  cannot  find  symbol  [FE]                                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.getNameNode();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.getNameNode();	  Node    nameNode    =    p.getNameNode();    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
232	[BUG]  [BUGGY]  Node  nameNode  =  n.getNameNode();  [CE]  cannot  find  symbol  [FE]                                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  n.getNameNode();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  n.getNameNode();	  Node    nameNode    =    p.getNameNode();    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
233	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.name,  parent);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.name,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.name,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    parent);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
234	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  p.name);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    parent);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
235	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  parent,  addAfter);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  parent,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  parent,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    parent);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
236	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.name);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    parent);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
237	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  true);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  true);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  true);	  Node    nameNode    =    Node.newString(Token.NAME,    p.name,    propAlias,    false);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
238	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  null,  false);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  null,  false);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  null,  false);	  Node    nameNode    =    Node.newString(Token.NAME,    p.name,    propAlias,    false);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
239	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  p.type);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  p.type);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  p.type);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type,    parent);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
240	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.type,  parent);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.type,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.type,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type,    parent);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
241	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  parent,  addAfter);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  parent,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  parent,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type,    parent);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
242	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  parent,  p.type,  propAlias);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  parent,  p.type,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  parent,  p.type,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type,    parent);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
243	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.node,  addAfter);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.node,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.node,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.node,    addAfter);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
244	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  p.node,  addAfter);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  p.node,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  p.node,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.node,    addAfter);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
245	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.node,  addAfter);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.node,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.node,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.node,    addAfter);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
246	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  addAfter,  p.type);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  addAfter,  p.type);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  addAfter,  p.type);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type,    addAfter);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
247	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  addAfter,  p.type,  propAlias);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  addAfter,  p.type,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  addAfter,  p.type,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type,    addAfter);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
248	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.type,  addAfter);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.type,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.type,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type,    addAfter);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
249	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.type,  addAfter);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.type,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.type,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type,    addAfter);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
250	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  p.type,  addAfter);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  p.type,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  p.type,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type,    addAfter);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
251	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.node,  parent);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.node,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.node,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.node,    parent);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
252	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  p.node,  parent);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  p.node,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  p.node,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.node,    parent);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
253	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.node);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.node);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.node);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.node,    parent);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
254	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.node,  parent,  addAfter);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.node,  parent,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.node,  parent,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.node,    parent);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
255	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  getName(),  propAlias);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  getName(),  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  getName(),  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    getName(),    p.name);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
256	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  getName(),  p.name);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  getName(),  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  getName(),  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    getName(),    p.name);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
257	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  p.name,  parent);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  p.name,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  p.name,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    getName(),    p.name);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
258	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  p.name,  numStubs);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  p.name,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  p.name,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    getName(),    p.name);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
259	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  p.name,  addAfter);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  p.name,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  p.name,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    getName(),    p.name);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
260	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  getName(),  p.name,  propAlias);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  getName(),  p.name,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  getName(),  p.name,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    getName(),    p.name);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
261	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.name,  addAfter);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.name,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.name,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    addAfter);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
262	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  addAfter,  p.name,  propAlias);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  addAfter,  p.name,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  addAfter,  p.name,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    addAfter);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
263	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.name,  addAfter);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.name,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.name,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    addAfter);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
264	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  addAfter,  numStubs);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  addAfter,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  addAfter,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    addAfter);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
265	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  getName(),  p);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  getName(),  p);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  getName(),  p);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    getName(),    p);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
266	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p,  getName(),  propAlias);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p,  getName(),  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p,  getName(),  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    getName(),    p);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
267	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  getName(),  propAlias,  parent);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  getName(),  propAlias,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  getName(),  propAlias,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    getName(),    p);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
268	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  p.node);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  p.node);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  p.node);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    getName(),    p);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
269	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    n);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
270	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  n);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  n);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  n);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    n);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
271	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  n,  parent);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  n,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  n,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    n);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
272	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  p.node);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  p.node);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  p.node);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    p.node);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
273	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  p.node);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  p.node);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  p.node);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    p.node);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
274	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  alias);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  alias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  alias);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    p.node);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
275	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.node,  alias);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.node,  alias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.node,  alias);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    p.node);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
276	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  p.name);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    p.name);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
277	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.name,  p.name);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.name,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.name,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    p.name);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
278	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.name,  propAlias);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.name,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.name,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    p.name);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
279	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  alias);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  alias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  alias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    p.name);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
280	[BUG]  [BUGGY]  Node  nameNode  =  NodeUtil.newString(Token.NAME,  getName(),  propAlias);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  NodeUtil.newString(Token.NAME,  getName(),  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  NodeUtil.newString(Token.NAME,  getName(),  propAlias);	  Node    nameNode    =    NodeUtil.newString(Token.NAME,    propAlias,    getName());    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
281	[BUG]  [BUGGY]  Node  nameNode  =  NodeUtil.newString(Token.NAME,  p.name,  propAlias);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  NodeUtil.newString(Token.NAME,  p.name,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  NodeUtil.newString(Token.NAME,  p.name,  propAlias);	  Node    nameNode    =    NodeUtil.newString(Token.NAME,    propAlias,    getName());    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
282	[BUG]  [BUGGY]  Node  nameNode  =  NodeUtil.newString(Token.NAME,  alias,  getName());  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  NodeUtil.newString(Token.NAME,  alias,  getName());  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  NodeUtil.newString(Token.NAME,  alias,  getName());	  Node    nameNode    =    NodeUtil.newString(Token.NAME,    propAlias,    getName());    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
283	[BUG]  [BUGGY]  Node  nameNode  =  NodeUtil.newString(Token.NAME,  propAlias,  getName(),  p.name);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  NodeUtil.newString(Token.NAME,  propAlias,  getName(),  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  NodeUtil.newString(Token.NAME,  propAlias,  getName(),  p.name);	  Node    nameNode    =    NodeUtil.newString(Token.NAME,    propAlias,    getName());    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
284	[BUG]  [BUGGY]  Node  nameNode  =  NodeUtil.newString(Token.NAME,  propAlias,  getName(),  parent);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  NodeUtil.newString(Token.NAME,  propAlias,  getName(),  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  NodeUtil.newString(Token.NAME,  propAlias,  getName(),  parent);	  Node    nameNode    =    NodeUtil.newString(Token.NAME,    propAlias,    getName());    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
285	[BUG]  [BUGGY]  Node  nameNode  =  NodeUtil.newString(Token.NAME,  propAlias,  p.name);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  NodeUtil.newString(Token.NAME,  propAlias,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  NodeUtil.newString(Token.NAME,  propAlias,  p.name);	  Node    nameNode    =    NodeUtil.newString(Token.NAME,    propAlias,    getName());    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
286	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  alias,  parent);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  alias,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  alias,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    parent);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
287	[BUG]  [BUGGY]  Node  nameNode  =  p.getFirstChild();  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.getFirstChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.getFirstChild();	  Node    nameNode    =    parent.getFirstChild();    timeout    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
288	[BUG]  [BUGGY]  Node  nameNode  =  p.getLastChild();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.getLastChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.getLastChild();	  Node    nameNode    =    parent.getFirstChild();    timeout    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
289	[BUG]  [BUGGY]  Node  nameNode  =  propAlias.getFirstChild();  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  propAlias.getFirstChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  propAlias.getFirstChild();	  Node    nameNode    =    parent.getFirstChild();    timeout    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
290	[BUG]  [BUGGY]  Node  nameNode  =  parent.getLastChild();  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  parent.getLastChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  parent.getLastChild();	  Node    nameNode    =    parent.getFirstChild();    timeout    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
291	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  getName(),  propAlias,  p.node);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  getName(),  propAlias,  p.node);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  getName(),  propAlias,  p.node);	  Node    nameNode    =    Node.newString(Token.NAME,    getName(),    propAlias);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
292	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  getName(),  propAlias,  p.type);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  getName(),  propAlias,  p.type);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  getName(),  propAlias,  p.type);	  Node    nameNode    =    Node.newString(Token.NAME,    getName(),    propAlias);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
293	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  getName(),  propAlias,  p.refs);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  getName(),  propAlias,  p.refs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  getName(),  propAlias,  p.refs);	  Node    nameNode    =    Node.newString(Token.NAME,    getName(),    propAlias);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
294	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  getName(),  propAlias,  null);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  getName(),  propAlias,  null);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  getName(),  propAlias,  null);	  Node    nameNode    =    Node.newString(Token.NAME,    getName(),    propAlias);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
295	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  getName(),  propAlias,  p.numStubs);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  getName(),  propAlias,  p.numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  getName(),  propAlias,  p.numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    getName(),    propAlias);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
296	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  propAlias,  p.type);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  propAlias,  p.type);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  propAlias,  p.type);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    propAlias,    p.type);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
297	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  alias,  propAlias,  p.type);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  alias,  propAlias,  p.type);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  alias,  propAlias,  p.type);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    propAlias,    p.type);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
298	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  alias,  propAlias,  p.type);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  alias,  propAlias,  p.type);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  n,  alias,  propAlias,  p.type);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    propAlias,    p.type);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
299	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  *  3);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  *  3);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  *  3);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    3);    timeout    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
300	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1).replaceChild(n,  addAfter);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1).replaceChild(n,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1).replaceChild(n,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    3);    timeout    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
301	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(alias,  propAlias)?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(alias,  propAlias)?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(alias,  propAlias)?  Boolean.TRUE  :  Boolean.FALSE;	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias)?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
302	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  true)?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  true)?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  true)?  Boolean.TRUE  :  Boolean.FALSE;	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias)?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
303	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  parent)?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  parent)?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  parent)?  Boolean.TRUE  :  Boolean.FALSE;	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias)?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
304	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  p.name)?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  p.name)?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  p.name)?  Boolean.TRUE  :  Boolean.FALSE;	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias)?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
305	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  false)?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  false)?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  false)?  Boolean.TRUE  :  Boolean.FALSE;	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias)?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
306	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(alias)?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(alias)?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(alias)?  Boolean.TRUE  :  Boolean.FALSE;	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias)?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
307	[BUG]  [BUGGY]  Node  nameNode  =  n.node.getFirstChild();  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  n.node.getFirstChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  n.node.getFirstChild();	  Node    nameNode    =    p.node.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
308	[BUG]  [BUGGY]  Node  nameNode  =  p.name.getFirstChild();  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.name.getFirstChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.name.getFirstChild();	  Node    nameNode    =    p.node.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
309	[BUG]  [BUGGY]  Node  nameNode  =  parent.node.getFirstChild();  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  parent.node.getFirstChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  parent.node.getFirstChild();	  Node    nameNode    =    p.node.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
310	[BUG]  [BUGGY]  Node  nameNode  =  p.node.getNext();  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.node.getNext();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.node.getNext();	  Node    nameNode    =    p.node.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
311	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.refs,  propAlias);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.refs,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.refs,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    p.refs,    propAlias);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
312	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.refs,  propAlias,  parent);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.refs,  propAlias,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.refs,  propAlias,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    p.refs,    propAlias);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
313	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.refs,  propAlias,  p.name);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.refs,  propAlias,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.refs,  propAlias,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    p.refs,    propAlias);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
314	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  alias,  p.type);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  alias,  p.type);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  alias,  p.type);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    p.type);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
315	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.refs,  parent);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.refs,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.refs,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    p.refs,    parent);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
316	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  p.refs);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  p.refs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  p.refs);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    p.refs,    parent);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
317	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.node,  alias,  parent);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.node,  alias,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.node,  alias,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    p.refs,    parent);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
318	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.refs,  alias);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.refs,  alias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.refs,  alias);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    p.refs,    parent);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
319	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias  +  1);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias  +  1);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias  +  1);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name    +    1);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
320	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.name  +  1);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.name  +  1);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.name  +  1);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name    +    1);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
321	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name  +  1,  numStubs);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name  +  1,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name  +  1,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name    +    1);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
322	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  numStubs  +  1);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  numStubs  +  1);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  numStubs  +  1);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name    +    1);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
323	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.name  +  1);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.name  +  1);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.name  +  1);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name    +    1);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
324	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.name  +  1);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.name  +  1);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.name  +  1);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name    +    1);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
325	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  1);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  1);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  1);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    0);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
326	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  0,  p.name);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  0,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  0,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    0);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
327	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  0,  parent);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  0,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  0,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    0);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
328	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  1,  0);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  1,  0);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  1,  0);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    0);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
329	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  3);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  3);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  3);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    0);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
330	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  2);  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  2);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  2);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    0);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
331	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  alias);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  alias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  alias);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    propAlias);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
332	[BUG]  [BUGGY]  Node  nameNode  =  n.node.getLastChild();  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  n.node.getLastChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  n.node.getLastChild();	  Node    nameNode    =    n.getLastChild();    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
333	[BUG]  [BUGGY]  Node  nameNode  =  n.refs.getLastChild();  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  n.refs.getLastChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  n.refs.getLastChild();	  Node    nameNode    =    n.getLastChild();    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
334	[BUG]  [BUGGY]  Node  nameNode  =  n.parent.getLastChild();  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  n.parent.getLastChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  n.parent.getLastChild();	  Node    nameNode    =    n.getLastChild();    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
335	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    3);    Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);	  timeout    	non-compiled	[CE]  cannot  find  symbol	5	None	add
336	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  }  else  if(p.refs.get(0).node.getLastChild().getBooleanProp(  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  }  else  if(p.refs.get(0).node.getLastChild().getBooleanProp(  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    3);    Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  }  else  if(p.refs.get(0).node.getLastChild().getBooleanProp(	  timeout    	non-compiled	[CE]  cannot  find  symbol	5	None	add
337	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  Name  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  Name  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    3);    Name  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);	  timeout    	non-compiled	[CE]  cannot  find  symbol	5	None	add
338	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  }  else  if(p.refs.get(0).node.getFirstChild().getBooleanProp(  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  }  else  if(p.refs.get(0).node.getFirstChild().getBooleanProp(  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    3);    Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  }  else  if(p.refs.get(0).node.getFirstChild().getBooleanProp(	  timeout    	non-compiled	[CE]  cannot  find  symbol	5	None	add
339	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  numStubs++;  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  numStubs++;  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    3);    Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  numStubs++;	  timeout    	non-compiled	[CE]  cannot  find  symbol	5	None	add
340	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  }  else  if(p.refs.get(0).node.getLastChild().getBooleanProp  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  }  else  if(p.refs.get(0).node.getLastChild().getBooleanProp  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    3);    Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  }  else  if(p.refs.get(0).node.getLastChild().getBooleanProp	  timeout    	non-compiled	[CE]  cannot  find  symbol	5	None	add
341	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  4);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  4);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    3);    Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  4);	  timeout    	non-compiled	[CE]  cannot  find  symbol	5	None	add
342	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  }  else  if(p.refs.get(0).node.getLastChild().getBooleanPro  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  }  else  if(p.refs.get(0).node.getLastChild().getBooleanPro  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    3);    Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  }  else  if(p.refs.get(0).node.getLastChild().getBooleanPro	  timeout    	non-compiled	[CE]  cannot  find  symbol	5	None	add
343	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p,  propAlias,  n);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p,  propAlias,  n);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p,  propAlias,  n);	  Node    nameNode    =    Node.newString(Token.NAME,    n,    propAlias,    p);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
344	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p,  propAlias,  parent);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p,  propAlias,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p,  propAlias,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    n,    propAlias,    p);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
345	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p);	  Node    nameNode    =    Node.newString(Token.NAME,    n,    propAlias,    p);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
346	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  n,  propAlias);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  n,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  n,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    n,    propAlias,    p);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
347	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getFirstChild();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getFirstChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getFirstChild();	  Node    nameNode    =    p.refs.get(0).node.getLastChild();    timeout    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
348	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(propAlias).node.getLastChild();  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(propAlias).node.getLastChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(propAlias).node.getLastChild();	  Node    nameNode    =    p.refs.get(0).node.getLastChild();    timeout    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
349	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(1).node.getLastChild();  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(1).node.getLastChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(1).node.getLastChild();	  Node    nameNode    =    p.refs.get(0).node.getLastChild();    timeout    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
350	[BUG]  [BUGGY]  Node  nameNode  =  n.refs.get(0).node.getLastChild();  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  n.refs.get(0).node.getLastChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  n.refs.get(0).node.getLastChild();	  Node    nameNode    =    p.refs.get(0).node.getLastChild();    timeout    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
351	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(propAlias);  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(propAlias);	  Node    nameNode    =    p.refs.get(0).node.getLastChild();    timeout    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
352	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  alias);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  alias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  alias);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    propAlias,    p.refs);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
353	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  propAlias,  p.refs);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  propAlias,  p.refs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  propAlias,  p.refs);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    propAlias,    p.refs);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
354	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  alias,  propAlias,  p.refs);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  alias,  propAlias,  p.refs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  alias,  propAlias,  p.refs);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    propAlias,    p.refs);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
355	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.refs,  propAlias,  alias);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.refs,  propAlias,  alias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.refs,  propAlias,  alias);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    propAlias,    p.refs);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
356	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.refs,  alias);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.refs,  alias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.refs,  alias);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    propAlias,    p.refs);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
357	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.refs,  numStubs);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.refs,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.refs,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.refs,    numStubs);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
358	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.refs,  addAfter);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.refs,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.refs,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.refs,    numStubs);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
359	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  p.refs,  numStubs);  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  p.refs,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  p.refs,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.refs,    numStubs);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
360	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  p.refs,  numStubs);  [CE]  cannot  find  symbol  [FE]                                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  p.refs,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  p.refs,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.refs,    numStubs);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
361	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.refs,  numStubs,  parent);  [CE]  cannot  find  symbol  [FE]                                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.refs,  numStubs,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.refs,  numStubs,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.refs,    numStubs);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
362	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.refs,  numStubs);  [CE]  cannot  find  symbol  [FE]                                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.refs,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.refs,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.refs,    numStubs);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
363	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  appendPropForAlias(alias,  propAlias);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  appendPropForAlias(alias,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  appendPropForAlias(alias,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    appendPropForAlias(alias,    p.name);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
364	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  appendPropForAlias(alias,  p.name);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  appendPropForAlias(alias,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  appendPropForAlias(alias,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    appendPropForAlias(alias,    p.name);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
365	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForUndeclaredProperties(alias,  p.name);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForUndeclaredProperties(alias,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForUndeclaredProperties(alias,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    appendPropForAlias(alias,    p.name);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
366	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForUndeclared(alias,  p.name);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForUndeclared(alias,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForUndeclared(alias,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    appendPropForAlias(alias,    p.name);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
367	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  appendPropForUndeclaredProperties(alias,  p.name);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  appendPropForUndeclaredProperties(alias,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  appendPropForUndeclaredProperties(alias,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    appendPropForAlias(alias,    p.name);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
368	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  appendPropForAlias(alias,  parent);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  appendPropForAlias(alias,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  appendPropForAlias(alias,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    appendPropForAlias(alias,    p.name);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
369	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendForUndeclared(alias,  p.name);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendForUndeclared(alias,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendForUndeclared(alias,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    appendPropForAlias(alias,    p.name);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
370	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  p.refs,  propAlias);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  p.refs,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  p.refs,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.refs,    p.name);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
371	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.refs,  p.name);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.refs,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.refs,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.refs,    p.name);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
372	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.refs,  parent,  p.name);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.refs,  parent,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.refs,  parent,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.refs,    p.name);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
373	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.alias,  propAlias);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.alias,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.alias,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    p.name);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
374	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  *  2);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  *  2);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  *  2);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    2);    timeout    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
375	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.node,  alias,  p.refs);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.node,  alias,  p.refs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.node,  alias,  p.refs);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    p.refs);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
376	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  getName(),  p.type);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  getName(),  p.type);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  getName(),  p.type);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    getName(),    p.type);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
377	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  p.name,  p.type);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  p.name,  p.type);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  p.name,  p.type);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    getName(),    p.type);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
378	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  p.type,  parent);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  p.type,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  p.type,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    getName(),    p.type);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
379	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  p.type,  numStubs);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  p.type,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  p.type,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    getName(),    p.type);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
380	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  numStubs);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    numStubs);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
381	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  numStubs,  parent);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  numStubs,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  numStubs,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    numStubs);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
382	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  p);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  p);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  p);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    p);    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
383	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  n,  propAlias,  parent);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  n,  propAlias,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  n,  propAlias,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    n,    propAlias,    parent);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
384	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.node,  propAlias,  parent);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.node,  propAlias,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.node,  propAlias,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    n,    propAlias,    parent);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
385	[BUG]  [BUGGY]  Node  parent  =  Node.newString(Token.NAME,  propAlias  +  1);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  parent  =  Node.newString(Token.NAME,  propAlias  +  1);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  parent  =  Node.newString(Token.NAME,  propAlias  +  1);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node    parent    =    Node.newString(Token.NAME,    propAlias    +    1);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
386	[BUG]  [BUGGY]  Node  parent  =  Node.newString(Token.NAME,  propAlias);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  parent  =  Node.newString(Token.NAME,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  parent  =  Node.newString(Token.NAME,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node    parent    =    Node.newString(Token.NAME,    propAlias    +    1);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
387	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  parent  =  Node.newString(Token.NAME,  propAlias);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  parent  =  Node.newString(Token.NAME,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias);  Node  parent  =  Node.newString(Token.NAME,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node    parent    =    Node.newString(Token.NAME,    propAlias    +    1);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
388	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  getReferenceName(),  propAlias);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  getReferenceName(),  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  getReferenceName(),  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    getReferenceName());    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
389	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  getReferenceName());  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  getReferenceName());  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  getReferenceName());	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    getReferenceName());    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
390	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getReferenceName(),  p.name);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getReferenceName(),  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getReferenceName(),  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    getReferenceName());    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
391	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  getReferenceName());  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  getReferenceName());  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  getReferenceName());	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    getReferenceName());    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
392	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getReferenceName(),  parent);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getReferenceName(),  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getReferenceName(),  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    getReferenceName());    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
393	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getReferenceName(),  n);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getReferenceName(),  n);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getReferenceName(),  n);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    getReferenceName());    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
394	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  true,  parent);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  true,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  true,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    true);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
395	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  type);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  type);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  type);	  Node    nameNode    =    Node.newString(Token.NAME,    p.type,    propAlias);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
396	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propName,  p.type,  p.type);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propName,  p.type,  p.type);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propName,  p.type,  p.type);	  Node    nameNode    =    Node.newString(Token.NAME,    p.type,    propAlias);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
397	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.type,  propAlias,  numStubs);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.type,  propAlias,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.type,  propAlias,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    p.type,    propAlias);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
398	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  parent,  p.refs);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  parent,  p.refs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  parent,  p.refs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    parent,    p.refs);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
399	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.refs,  parent,  propAlias);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.refs,  parent,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.refs,  parent,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    parent,    p.refs);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
400	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  parent,  p.refs);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  parent,  p.refs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  parent,  p.refs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    parent,    p.refs);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
401	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  parent,  p.type);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  parent,  p.type);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  parent,  p.type);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    parent,    p.type);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
402	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  parent,  p.type);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  parent,  p.type);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  parent,  p.type);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    parent,    p.type);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
403	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.node,  propAlias);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.node,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.node,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    p.node,    propAlias);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
404	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.node,  propAlias,  addAfter);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.node,  propAlias,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.node,  propAlias,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    p.node,    propAlias);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
405	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.node,  propAlias,  numStubs);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.node,  propAlias,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.node,  propAlias,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    p.node,    propAlias);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
406	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n  +  1).replaceChild(propAlias,  parent);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n  +  1).replaceChild(propAlias,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  n  +  1).replaceChild(propAlias,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1).replaceChild(n,    parent);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
407	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1).replaceChild(n,  parent,  addAfter);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1).replaceChild(n,  parent,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1).replaceChild(n,  parent,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1).replaceChild(n,    parent);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
408	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias  +  1).replaceChild(n,  parent);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias  +  1).replaceChild(n,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias  +  1).replaceChild(n,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1).replaceChild(n,    parent);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
409	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias  +  1).replaceChild(parent,  propAlias);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias  +  1).replaceChild(parent,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias  +  1).replaceChild(parent,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1).replaceChild(n,    parent);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
410	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1).replaceChild(n,  addAfter,  parent);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1).replaceChild(n,  addAfter,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1).replaceChild(n,  addAfter,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1).replaceChild(n,    parent);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
411	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name).replaceChild(n,  parent);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name).replaceChild(n,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name).replaceChild(n,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1).replaceChild(n,    parent);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
412	[BUG]  [BUGGY]  Name  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Name  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Name  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Name    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
413	[BUG]  [BUGGY]  Name  nameNode  =  Node.newString(Token.NAME,  propAlias);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Name  nameNode  =  Node.newString(Token.NAME,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Name  nameNode  =  Node.newString(Token.NAME,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Name    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
414	[BUG]  [BUGGY]  Name  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Name  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Name  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Name    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
415	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  addAfter,  numStubs);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  addAfter,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  addAfter,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    p.name,    propAlias,    addAfter);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
416	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  addAfter,  parent);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  addAfter,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  addAfter,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    p.name,    propAlias,    addAfter);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
417	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  addAfter,  numStubs);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  addAfter,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  addAfter,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    addAfter,    numStubs);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
418	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  addAfter,  numStubs,  parent);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  addAfter,  numStubs,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  addAfter,  numStubs,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    addAfter,    numStubs);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
419	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  addAfter,  propAlias,  numStubs);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  addAfter,  propAlias,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  addAfter,  propAlias,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    addAfter,    numStubs);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
420	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  addAfter,  numStubs);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  addAfter,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  addAfter,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    addAfter,    numStubs);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
421	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  addAfter,  numStubs,  p.name);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  addAfter,  numStubs,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  addAfter,  numStubs,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    addAfter,    numStubs);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
422	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  getName(),  parent);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  getName(),  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  getName(),  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    getName(),    parent);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
423	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  getName(),  parent);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  getName(),  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  getName(),  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    getName(),    parent);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
424	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  n);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  n);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  n);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    getName(),    parent);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
425	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  parent,  addAfter);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  parent,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  parent,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    getName(),    parent);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
426	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  getName(),  propAlias);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  getName(),  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  n,  getName(),  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    getName(),    parent);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
427	[BUG]  [BUGGY]  Node  nameNode  =  n.parent.getFirstChild();  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  n.parent.getFirstChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  n.parent.getFirstChild();	  Node    nameNode    =    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
428	[BUG]  [BUGGY]  Node  nameNode  =  n.refs.getFirstChild();  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  n.refs.getFirstChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  n.refs.getFirstChild();	  Node    nameNode    =    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
429	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  p.refs,  parent);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  p.refs,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  p.refs,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    p.name,    propAlias,    p.refs);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
430	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  p.refs,  addAfter);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  p.refs,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  p.refs,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    p.name,    propAlias,    p.refs);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
431	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  propAlias,  p.name);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  propAlias,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  propAlias,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    propAlias,    p.name);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
432	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  alias,  propAlias,  p.name);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  alias,  propAlias,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  n,  alias,  propAlias,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    propAlias,    p.name);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
433	[BUG]  [BUGGY]  Node  nameNode  =  node.newString(Token.NAME,  propAlias  +  1);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  node.newString(Token.NAME,  propAlias  +  1);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  node.newString(Token.NAME,  propAlias  +  1);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node    nameNode    =    node.newString(Token.NAME,    propAlias    +    1);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
434	[BUG]  [BUGGY]  Node  nameNode  =  node.newString(Token.NAME,  propAlias);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  node.newString(Token.NAME,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  node.newString(Token.NAME,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node    nameNode    =    node.newString(Token.NAME,    propAlias    +    1);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
435	[BUG]  [BUGGY]  Node  nameNode  =  node.newString(Token.NAME,  propAlias  +  2);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  node.newString(Token.NAME,  propAlias  +  2);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  node.newString(Token.NAME,  propAlias  +  2);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node    nameNode    =    node.newString(Token.NAME,    propAlias    +    1);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
436	[BUG]  [BUGGY]  Node  nameNode  =  n.newString(Token.NAME,  propAlias  +  1);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  n.newString(Token.NAME,  propAlias  +  1);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  n.newString(Token.NAME,  propAlias  +  1);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node    nameNode    =    node.newString(Token.NAME,    propAlias    +    1);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
437	[BUG]  [BUGGY]  Node  nameNode  =  node.newString(Token.NAME,  propAlias  +  1,  p.name);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  node.newString(Token.NAME,  propAlias  +  1,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  node.newString(Token.NAME,  propAlias  +  1,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node    nameNode    =    node.newString(Token.NAME,    propAlias    +    1);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
438	[BUG]  [BUGGY]  Node  nameNode  =  parent.newString(Token.NAME,  propAlias  +  1);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  parent.newString(Token.NAME,  propAlias  +  1);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  parent.newString(Token.NAME,  propAlias  +  1);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node    nameNode    =    node.newString(Token.NAME,    propAlias    +    1);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
439	[BUG]  [BUGGY]  Node  nameNode  =  p.newString(Token.NAME,  propAlias  +  1);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.newString(Token.NAME,  propAlias  +  1);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.newString(Token.NAME,  propAlias  +  1);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node    nameNode    =    node.newString(Token.NAME,    propAlias    +    1);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
440	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  addAfter,  p.name);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  addAfter,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  addAfter,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    addAfter,    p.name);    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
441	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  addAfter,  p.name,  numStubs);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  addAfter,  p.name,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  addAfter,  p.name,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    addAfter,    p.name);    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
442	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  addAfter,  p.name);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  addAfter,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  addAfter,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    addAfter,    p.name);    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
443	[BUG]  [BUGGY]  Node  nameNode  =  parent.node.getLastChild();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  parent.node.getLastChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  parent.node.getLastChild();	  Node    nameNode    =    p.node.getLastChild();    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
444	[BUG]  [BUGGY]  Node  nameNode  =  p.name.getLastChild();  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.name.getLastChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.name.getLastChild();	  Node    nameNode    =    p.node.getLastChild();    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
445	[BUG]  [BUGGY]  Node  nameNode  =  p.nodes.getLastChild();  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.nodes.getLastChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.nodes.getLastChild();	  Node    nameNode    =    p.node.getLastChild();    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
446	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.getLastChild();  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.getLastChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.getLastChild();	  Node    nameNode    =    p.node.getLastChild();    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
447	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  p.type,  propAlias);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  p.type,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  n,  p.type,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type,    n);    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
448	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  p.type);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  p.type);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  p.type);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type,    n);    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
449	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.type,  n);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.type,  n);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.type,  n);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type,    n);    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
450	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  alias,  p.type,  n);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  alias,  p.type,  n);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  alias,  p.type,  n);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type,    n);    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
451	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  n,  parent);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  n,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  n,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type,    n);    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
452	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  p.type,  numStubs);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  p.type,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  p.type,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    p.name,    propAlias,    p.type);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
453	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  p.type,  addAfter);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  p.type,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  p.type,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    p.name,    propAlias,    p.type);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
454	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  p.type,  parent);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  p.type,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  p.type,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    p.name,    propAlias,    p.type);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
455	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  null,  true);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  null,  true);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  null,  true);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    null,    false);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
456	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  null,  false);  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  null,  false);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  null,  false);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    null,    false);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
457	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  n,  false);  [CE]  cannot  find  symbol  [FE]                                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  n,  false);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  n,  false);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    null,    false);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
458	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  UNSAFE_THIS,  false);  [CE]  cannot  find  symbol  [FE]                                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  UNSAFE_THIS,  false);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  UNSAFE_THIS,  false);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    null,    false);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
459	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  compiler,  false);  [CE]  cannot  find  symbol  [FE]                                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  compiler,  false);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  compiler,  false);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    null,    false);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
460	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  propAlias,  p);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  propAlias,  p);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  propAlias,  p);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    parent,    p);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
461	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  alias,  parent,  p);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  alias,  parent,  p);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  n,  alias,  parent,  p);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    parent,    p);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
462	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p,  parent,  alias);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p,  parent,  alias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p,  parent,  alias);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    parent,    p);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
463	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.type,  numStubs);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.type,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.type,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type,    numStubs);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
464	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  p.type,  numStubs);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  p.type,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  p.type,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type,    numStubs);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
465	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  numStubs,  parent);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  numStubs,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  numStubs,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type,    numStubs);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
466	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.type,  numStubs);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.type,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.type,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type,    numStubs);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
467	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p,  NAMESPACE_REDEFINED_WARNING,  propAlias);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p,  NAMESPACE_REDEFINED_WARNING,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p,  NAMESPACE_REDEFINED_WARNING,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    NAMESPACE_REDEFINED_WARNING,    p);    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
468	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  UNSAFE_NAMESPACE_REDEFINED_WARNING,  p);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  UNSAFE_NAMESPACE_REDEFINED_WARNING,  p);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  UNSAFE_NAMESPACE_REDEFINED_WARNING,  p);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    NAMESPACE_REDEFINED_WARNING,    p);    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
469	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p,  propAlias,  UNSAFE_NAMESPACE_REDEFINED_WARNING);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p,  propAlias,  UNSAFE_NAMESPACE_REDEFINED_WARNING);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p,  propAlias,  UNSAFE_NAMESPACE_REDEFINED_WARNING);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    NAMESPACE_REDEFINED_WARNING,    p);    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
470	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p,  propAlias,  NAMESPACE_REDEFINED_WARNING);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p,  propAlias,  NAMESPACE_REDEFINED_WARNING);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p,  propAlias,  NAMESPACE_REDEFINED_WARNING);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    NAMESPACE_REDEFINED_WARNING,    p);    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
471	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  NAMESPACE_REDEFINED_WARNING,  p);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  NAMESPACE_REDEFINED_WARNING,  p);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  NAMESPACE_REDEFINED_WARNING,  p);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    NAMESPACE_REDEFINED_WARNING,    p);    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
472	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  NAMESPACE_REDEFINED_WARNING,  p);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  NAMESPACE_REDEFINED_WARNING,  p);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  NAMESPACE_REDEFINED_WARNING,  p);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    NAMESPACE_REDEFINED_WARNING,    p);    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
473	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.node,  propAlias,  p.refs);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.node,  propAlias,  p.refs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.node,  propAlias,  p.refs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.node,    p.refs);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
474	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.node,  p.refs);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.node,  p.refs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.node,  p.refs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.node,    p.refs);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
475	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.node,  parent.refs);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.node,  parent.refs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.node,  parent.refs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.node,    p.refs);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
476	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1).replaceChild(parent,  n);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1).replaceChild(parent,  n);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1).replaceChild(parent,  n);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1).replaceChild(n,    parent);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
477	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  false,  alias,  p.name);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  false,  alias,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  false,  alias,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    false,    p.name);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
478	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  false,  p.name,  parent);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  false,  p.name,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  false,  p.name,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    false,    p.name);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
479	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  null,  p.name);  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  null,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  null,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    false,    p.name);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
480	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.type,  propAlias,  parent);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.type,  propAlias,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.type,  propAlias,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    p.type,    propAlias);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
481	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.type,  propAlias,  p.name);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.type,  propAlias,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.type,  propAlias,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    p.type,    propAlias);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
482	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1).replaceChild(parent,  addAfter);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1).replaceChild(parent,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1).replaceChild(parent,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    3);    timeout    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
483	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  false,  alias);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  false,  alias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  false,  alias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    false,    parent);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
484	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  false,  n,  parent);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  false,  n,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  false,  n,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    false,    parent);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
485	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  false,  parent,  numStubs);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  false,  parent,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  false,  parent,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    false,    parent);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
486	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  getName(),  propAlias,  false);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  getName(),  propAlias,  false);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  getName(),  propAlias,  false);	  Node    nameNode    =    Node.newString(Token.NAME,    getName(),    propAlias);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
487	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  addAfter,  parent,  alias);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  addAfter,  parent,  alias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  addAfter,  parent,  alias);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    parent,    addAfter);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
488	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2).toString();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2).toString();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2).toString();	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1).toString();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
489	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  true,  p.name);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  true,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  true,  p.name);	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,    true);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
490	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  true,  addAfter);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  true,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  true,  addAfter);	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,    true);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
491	[BUG]  [BUGGY]  Node  nameNode  =  parent.getFirstChild();  NameNode  nameNode  =  parent.getFirstChild();  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  parent.getFirstChild();  NameNode  nameNode  =  parent.getFirstChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    parent.getFirstChild();    NameNode  nameNode  =  parent.getFirstChild();	  timeout    	non-compiled	[CE]  cannot  find  symbol	51	None	add
492	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  false,  propAlias);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  false,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  false,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    false);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
493	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  getName());  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  getName());  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  getName());	  Node    nameNode    =    Node.newString(Token.NAME,    p.name,    propAlias,    getName());    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
494	[BUG]  [BUGGY]  Node  nameNode  =  NodeUtil.newString(Token.NAME,  p.name,  propAlias,  getName());  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  NodeUtil.newString(Token.NAME,  p.name,  propAlias,  getName());  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  NodeUtil.newString(Token.NAME,  p.name,  propAlias,  getName());	  Node    nameNode    =    Node.newString(Token.NAME,    p.name,    propAlias,    getName());    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
495	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name));  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name));  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name));	  Node    nameNode    =    Node.newString(Token.NAME,    p.name,    propAlias,    getName());    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
496	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  addAfter,  parent);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  addAfter,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  addAfter,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    addAfter);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
497	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  p.type,  n);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  p.type,  n);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  p.type,  n);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type,    n);    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
498	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  p.type,  n);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  p.type,  n);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  p.type,  n);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type,    n);    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
499	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  Node  namesNode  =  Node.newString(Token.NAME,  propAlias  +  3);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  Node  namesNode  =  Node.newString(Token.NAME,  propAlias  +  3);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    3);    Node  namesNode  =  Node.newString(Token.NAME,  propAlias  +  3);	  timeout    	non-compiled	[CE]  cannot  find  symbol	5	None	add
500	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    3);    Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2);	  timeout    	non-compiled	[CE]  cannot  find  symbol	5	None	add
501	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  NAMESPACE_REDEFINED_WARNING,  null);  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  NAMESPACE_REDEFINED_WARNING,  null);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  NAMESPACE_REDEFINED_WARNING,  null);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    null);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
502	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  null);  [CE]  cannot  find  symbol  [FE]                                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  null);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  null);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    null);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
503	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  null,  numStubs);  [CE]  cannot  find  symbol  [FE]                                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  null,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  null,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    null);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
504	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.refs,  numStubs,  addAfter);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.refs,  numStubs,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.refs,  numStubs,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.refs,    numStubs);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
505	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.node,  p.refs,  numStubs);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.node,  p.refs,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.node,  p.refs,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.refs,    numStubs);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
506	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  Boolean.TRUE)?  Boolean.FALSE  :  Boolean.  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  Boolean.TRUE)?  Boolean.FALSE  :  Boolean.  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  Boolean.TRUE)?  Boolean.FALSE  :  Boolean.	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias)?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
507	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(1).node.getLastChild().getBooleanProp(propAlias)?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(1).node.getLastChild().getBooleanProp(propAlias)?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(1).node.getLastChild().getBooleanProp(propAlias)?  Boolean.TRUE  :  Boolean.FALSE;	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias)?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
508	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(1).node.getFirstChild();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(1).node.getFirstChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(1).node.getFirstChild();	  Node    nameNode    =    p.refs.get(0).node.getLastChild();    timeout    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
509	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(propAlias).node.getFirstChild();  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(propAlias).node.getFirstChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(propAlias).node.getFirstChild();	  Node    nameNode    =    p.refs.get(0).node.getLastChild();    timeout    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
510	[BUG]  [BUGGY]  Node  nameNode  =  p.nameNode.getLastChild();  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.nameNode.getLastChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.nameNode.getLastChild();	  Node    nameNode    =    p.nameNode.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
511	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  p.name,  parent);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  p.name,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  p.name,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type,    p.name);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
512	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  alias,  p.name);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  alias,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  alias,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type,    p.name);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
513	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.name,  propAlias,  p.type);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.name,  propAlias,  p.type);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.name,  propAlias,  p.type);	  Node    nameNode    =    Node.newString(Token.NAME,    p.name,    propAlias,    p.type);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
514	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  type);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  type);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  type);	  Node    nameNode    =    Node.newString(Token.NAME,    p.name,    propAlias,    p.type);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
515	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendForUndeclaredProperties(alias,  p.name);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendForUndeclaredProperties(alias,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendForUndeclaredProperties(alias,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    appendPropForAlias(alias,    p.name);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
516	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendStubsForAlias(alias,  p.name);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendStubsForAlias(alias,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendStubsForAlias(alias,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    appendPropForAlias(alias,    p.name);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
517	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  appendPropForUndeclaredProperties(p.name,  propAlias);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  appendPropForUndeclaredProperties(p.name,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  appendPropForUndeclaredProperties(p.name,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    appendPropForAlias(alias,    p.name);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
518	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendDeclaredProps(alias,  p.name);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendDeclaredProps(alias,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendDeclaredProps(alias,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    appendPropForAlias(alias,    p.name);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
519	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  appendPropForUndeclaredProperties(propAlias,  p.name);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  appendPropForUndeclaredProperties(propAlias,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  appendPropForUndeclaredProperties(propAlias,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    appendPropForAlias(alias,    p.name);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
520	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  NAMESPACE_REDEFINED_WARNING,  Boolean.TRUE);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  NAMESPACE_REDEFINED_WARNING,  Boolean.TRUE);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  NAMESPACE_REDEFINED_WARNING,  Boolean.TRUE);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    Boolean.TRUE);    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
521	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  Boolean.TRUE,  true);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  Boolean.TRUE,  true);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  Boolean.TRUE,  true);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    Boolean.TRUE);    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
522	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  Boolean.TRUE);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  Boolean.TRUE);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  Boolean.TRUE);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    Boolean.TRUE);    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
523	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  null,  Boolean.TRUE);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  null,  Boolean.TRUE);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  null,  Boolean.TRUE);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    Boolean.TRUE);    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
524	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  pAlias,  p.name);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  pAlias,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  pAlias,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    p.name);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
525	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.node,  parent,  p.refs);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.node,  parent,  p.refs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.node,  parent,  p.refs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    parent,    p.refs);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
526	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  n,  parent,  p.refs);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  n,  parent,  p.refs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  n,  parent,  p.refs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    parent,    p.refs);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
527	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.name,  p.refs);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.name,  p.refs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  p.name,  p.refs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    parent,    p.refs);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
528	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  n,  numStubs);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  n,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  n,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    numStubs);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
529	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  propAlias);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1,    propAlias);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
530	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  appendPropForAlias(alias));  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  appendPropForAlias(alias));  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  appendPropForAlias(alias));	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1,    propAlias);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
531	[BUG]  [BUGGY]  Node  nameNode  =  p.parent.getNameNode();  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.parent.getNameNode();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.parent.getNameNode();	  Node    nameNode    =    p.getNameNode();    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
532	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1).newString();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1).newString();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1).newString();	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    2);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
533	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  4);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  4);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  4);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    2);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
534	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  UNSAFE_NAMESPACE_WARNING);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  UNSAFE_NAMESPACE_WARNING);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  UNSAFE_NAMESPACE_WARNING);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    NAMESPACE_REDEFINED_WARNING);    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
535	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  NAMESPACE_REDEFINED_WARNING);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  NAMESPACE_REDEFINED_WARNING);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  NAMESPACE_REDEFINED_WARNING);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    NAMESPACE_REDEFINED_WARNING);    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
536	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  UNSAFE_NAMESPACE_WARNING,  propAlias);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  UNSAFE_NAMESPACE_WARNING,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  UNSAFE_NAMESPACE_WARNING,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    NAMESPACE_REDEFINED_WARNING);    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
537	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  NAMESPACE_REDEFINED_WARNING,  p.name);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  NAMESPACE_REDEFINED_WARNING,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  NAMESPACE_REDEFINED_WARNING,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    NAMESPACE_REDEFINED_WARNING);    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
538	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  4);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  2);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  4);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    2);    Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  4);	  timeout    	non-compiled	[CE]  cannot  find  symbol	1	None	add
539	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.type,  p.refs);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.type,  p.refs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.type,  p.refs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    p.refs);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
540	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.node,  p.refs);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.node,  p.refs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.node,  p.refs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    p.refs);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
541	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  addAfter,  n,  numStubs);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  addAfter,  n,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  addAfter,  n,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    addAfter,    numStubs);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
542	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  addAfter,  numStubs  +  1);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  addAfter,  numStubs  +  1);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  addAfter,  numStubs  +  1);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    addAfter,    numStubs);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
543	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  appendPropForAlias(alias,  p.name);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  appendPropForAlias(alias,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  appendPropForAlias(alias,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    getName(),    p);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
544	[BUG]  [BUGGY]  Node  nameNode  =  NodeUtil.newString(Token.NAME,  propAlias,  getName(),  p);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  NodeUtil.newString(Token.NAME,  propAlias,  getName(),  p);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  NodeUtil.newString(Token.NAME,  propAlias,  getName(),  p);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    getName(),    p);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
545	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  UNSAFE_NAMESPACE_WARNING,  addAfter);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  UNSAFE_NAMESPACE_WARNING,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  UNSAFE_NAMESPACE_WARNING,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    NAMESPACE_REDEFINED_WARNING,    addAfter);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
546	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  addAfter,  NAMESPACE_REDEFINED_WARNING);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  addAfter,  NAMESPACE_REDEFINED_WARNING);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  addAfter,  NAMESPACE_REDEFINED_WARNING);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    NAMESPACE_REDEFINED_WARNING,    addAfter);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
547	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  addAfter,  NAMESPACE_REDEFINED_WARNING);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  addAfter,  NAMESPACE_REDEFINED_WARNING);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  addAfter,  NAMESPACE_REDEFINED_WARNING);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    NAMESPACE_REDEFINED_WARNING,    addAfter);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
548	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  n);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  n);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  n);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    n);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
549	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  addAfter,  numStubs);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  addAfter,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  addAfter,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type,    addAfter);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
550	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias  +  1);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias  +  1);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias  +  1);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name    +    1);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
551	[BUG]  [BUGGY]  Name  nameNode  =  node.newString(Token.NAME,  propAlias  +  1);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Name  nameNode  =  node.newString(Token.NAME,  propAlias  +  1);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Name  nameNode  =  node.newString(Token.NAME,  propAlias  +  1);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node    nameNode    =    node.newString(Token.NAME,    propAlias    +    1);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
552	[BUG]  [BUGGY]  Node  nameNode  =  node.newString(Token.NAME,  propAlias  +  1).newString();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  node.newString(Token.NAME,  propAlias  +  1).newString();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  node.newString(Token.NAME,  propAlias  +  1).newString();	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node    nameNode    =    node.newString(Token.NAME,    propAlias    +    1);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
553	[BUG]  [BUGGY]  Node  nameNode  =  node.newString(Token.NAME,  propAlias  +  3);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  node.newString(Token.NAME,  propAlias  +  3);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  node.newString(Token.NAME,  propAlias  +  3);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node    nameNode    =    node.newString(Token.NAME,    propAlias    +    1);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
554	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  appendPropForAlias(p,  p.name));  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  appendPropForAlias(p,  p.name));  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  appendPropForAlias(p,  p.name));	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
555	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  appendPropForAlias(alias,  p.type));  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  appendPropForAlias(alias,  p.type));  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  appendPropForAlias(alias,  p.type));	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    p.type);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
556	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  appendPropForAlias(alias,  p.type);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  appendPropForAlias(alias,  p.type);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  appendPropForAlias(alias,  p.type);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    p.type);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
557	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  addAfter,  p.name,  parent);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  addAfter,  p.name,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  addAfter,  p.name,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    addAfter,    p.name);    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
558	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  addAfter,  parent,  p.name);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  addAfter,  parent,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  addAfter,  parent,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    addAfter,    p.name);    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
559	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.parent);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.parent);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
560	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  p.parent);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  p.parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  p.parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.parent);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
561	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.node,  p.parent);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.node,  p.parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.node,  p.parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.parent);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
562	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(alias);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(alias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(alias);	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
563	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  p.name,  p.type);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  p.name,  p.type);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  p.name,  p.type);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    propAlias,    p.type);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
564	[BUG]  [BUGGY]  Node  nameNode  =  p.parent.node.getLastChild();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.parent.node.getLastChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.parent.node.getLastChild();	  Node    nameNode    =    p.node.getLastChild();    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
565	[BUG]  [BUGGY]  Node  nameNode  =  p.parent.getLastChild();  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.parent.getLastChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.parent.getLastChild();	  Node    nameNode    =    p.node.getLastChild();    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
566	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.node,  propAlias  +  1);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.node,  propAlias  +  1);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.node,  propAlias  +  1);	  Node    nameNode    =    Node.newString(Token.NAME,    p.node,    propAlias);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
567	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propName,  p.node,  propAlias);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propName,  p.node,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propName,  p.node,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    p.node,    propAlias);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
568	[BUG]  [BUGGY]  Node  nameNode  =  node.nameNode();  [CE]  cannot  find  symbol  [FE]                                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  node.nameNode();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  node.nameNode();	  Node    nameNode    =    p.nameNode();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
569	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p,  alias);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p,  alias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p,  alias);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    p);    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
570	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  n);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  n);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  n);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    n);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
571	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  n,  addAfter);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  n,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  n,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    n);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
572	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  p.refs,  p.name);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  p.refs,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  p.refs,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.refs,    p.name);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
573	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.node,  p.refs,  p.name);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.node,  p.refs,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.node,  p.refs,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.refs,    p.name);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
574	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getReferenceName(),  p);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getReferenceName(),  p);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getReferenceName(),  p);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    getReferenceName());    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
575	[BUG]  [BUGGY]  Node  nameNode  =  NodeUtil.newString(Token.NAME,  propAlias,  getReferenceName());  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  NodeUtil.newString(Token.NAME,  propAlias,  getReferenceName());  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  NodeUtil.newString(Token.NAME,  propAlias,  getReferenceName());	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    getReferenceName());    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
576	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  p.type,  p.refs);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  p.type,  p.refs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  p.type,  p.refs);	  Node    nameNode    =    Node.newString(Token.NAME,    p.name,    propAlias,    p.refs);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
577	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  UNSAFE_NAMESPACE_WARNING,  p);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  UNSAFE_NAMESPACE_WARNING,  p);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  UNSAFE_NAMESPACE_WARNING,  p);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    NAMESPACE_REDEFINED_WARNING,    p);    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
578	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p,  propAlias,  UNSAFE_NAMESPACE_WARNING);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p,  propAlias,  UNSAFE_NAMESPACE_WARNING);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p,  propAlias,  UNSAFE_NAMESPACE_WARNING);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    NAMESPACE_REDEFINED_WARNING,    p);    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
579	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  p.name,  parent);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  p.name,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  p.name,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    propAlias,    p.name);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
580	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  p.name,  n);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  p.name,  n);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  p.name,  n);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1,    p.name);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
581	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  p.name,  addAfter);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  p.name,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  p.name,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1,    p.name);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
582	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  parent,  p.name);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  parent,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  parent,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1,    p.name);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
583	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +   ") ");  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +   ") ");  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +   ") ");	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1));    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
584	[BUG]  [BUGGY]  Node  nameNode  =  NodeUtil.newString(Token.NAME,  propAlias,  getName(),  n);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  NodeUtil.newString(Token.NAME,  propAlias,  getName(),  n);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  NodeUtil.newString(Token.NAME,  propAlias,  getName(),  n);	  Node    nameNode    =    NodeUtil.newString(Token.NAME,    propAlias,    getName());    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
585	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  n,  parent,  p.type);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  n,  parent,  p.type);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  n,  parent,  p.type);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    parent,    p.type);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
586	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  addAfter,  p.type);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  addAfter,  p.type);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  addAfter,  p.type);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    parent,    p.type);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
587	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  n,  parent);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  n,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  n,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    n,    propAlias,    p);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
588	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  UNSAFE_THIS);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  UNSAFE_THIS);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  UNSAFE_THIS);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    UNSAFE_THIS);    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
589	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  null,  p.name,  false);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  null,  p.name,  false);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  null,  p.name,  false);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    false);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
590	[BUG]  [BUGGY]  Node  nameNode  =  addAfter.getFirstChild();  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  addAfter.getFirstChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  addAfter.getFirstChild();	  Node    nameNode    =    parent.getFirstChild();    timeout    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
591	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  addAfter,  parent,  p);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  addAfter,  parent,  p);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  addAfter,  parent,  p);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    parent,    p);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
592	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  compiler,  null,  false);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  compiler,  null,  false);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  compiler,  null,  false);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    null,    false);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
593	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  null,  false);  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  null,  false);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  null,  false);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    null,    false);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
594	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild();  Node  nameNode  =  p.refs.get(i).node.getLastChild();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild();  Node  nameNode  =  p.refs.get(i).node.getLastChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    p.refs.get(0).node.getLastChild();    Node  nameNode  =  p.refs.get(i).node.getLastChild();	  timeout    	non-compiled	[CE]  cannot  find  symbol	93	None	add
595	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild();  Node  nameNode  =  p.refs.get0.node.getLastChild();  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild();  Node  nameNode  =  p.refs.get0.node.getLastChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    p.refs.get(0).node.getLastChild();    Node  nameNode  =  p.refs.get0.node.getLastChild();	  timeout    	non-compiled	[CE]  cannot  find  symbol	93	None	add
596	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.parent,  p.node);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.parent,  p.node);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.parent,  p.node);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.node,    parent);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
597	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  numStubs,  addAfter);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  numStubs,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  numStubs,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type,    numStubs);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
598	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  -1);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  -1);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  -1);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    0);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
599	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propName,  parent);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propName,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propName,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    parent,    propAlias);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
600	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  props,  parent);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  props,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  props,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    parent,    propAlias);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
601	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propId,  parent,  propAlias);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propId,  parent,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propId,  parent,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    parent,    propAlias);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
602	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  parent,  addAfter);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  parent,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  n,  propAlias,  parent,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    n,    propAlias,    parent);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
603	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForUndeclaredProperties(alias,  p.name),  parent);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForUndeclaredProperties(alias,  p.name),  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForUndeclaredProperties(alias,  p.name),  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    appendPropForUndeclaredProperties(alias,    p.name));    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
604	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForUndeclaredProperties(alias,  p.name),  p.global);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForUndeclaredProperties(alias,  p.name),  p.global);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForUndeclaredProperties(alias,  p.name),  p.global);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    appendPropForUndeclaredProperties(alias,    p.name));    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
605	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  alias,  type,  propAlias);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  alias,  type,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  alias,  type,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    p.type,    propAlias);    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
606	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(1).node.getLastChild().getBooleanProp(propAlias)?  true  :  false;  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(1).node.getLastChild().getBooleanProp(propAlias)?  true  :  false;  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(1).node.getLastChild().getBooleanProp(propAlias)?  true  :  false;	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias)?    true    :    false;    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
607	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(alias)?  true  :  false;  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(alias)?  true  :  false;  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(alias)?  true  :  false;	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias)?    true    :    false;    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
608	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propId,  addAfter,  propAlias);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propId,  addAfter,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propId,  addAfter,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    addAfter,    propAlias);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
609	[BUG]  [BUGGY]  Name  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Name  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Name  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Name    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
610	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  Node  parent  =  Node.newString(Token.NAME,  propAlias  +  2);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  Node  parent  =  Node.newString(Token.NAME,  propAlias  +  2);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1);  Node  parent  =  Node.newString(Token.NAME,  propAlias  +  2);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node    parent    =    Node.newString(Token.NAME,    propAlias    +    1);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
611	[BUG]  [BUGGY]  Node  nameNode  =  p.node.removeFirstChild();  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.node.removeFirstChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.node.removeFirstChild();	  Node    nameNode    =    p.node.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
612	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  PropAlias,  addAfter);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  PropAlias,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  PropAlias,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    addAfter);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
613	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  Boolean.TRUE)?  Boolean.FALSE  :  Boolean.FALSE;  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  Boolean.TRUE)?  Boolean.FALSE  :  Boolean.FALSE;  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  Boolean.TRUE)?  Boolean.FALSE  :  Boolean.FALSE;	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias)?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
614	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  propAlias)?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  propAlias)?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  propAlias)?  Boolean.TRUE  :  Boolean.FALSE;	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias)?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
615	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias),?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias),?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias),?  Boolean.TRUE  :  Boolean.FALSE;	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias)?    Boolean.TRUE    :    Boolean.FALSE;    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
616	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.node,  p.type);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.node,  p.type);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.node,  p.type);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.node,    p.refs);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
617	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  appendAfter);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  appendAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  appendAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    p.name,    propAlias,    addAfter);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
618	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p,  parent);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    parent,    p);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
619	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  p.node);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  p.node);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  p.node);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.node,    p.name);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
620	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  p.name,  addAfter);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  p.name,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  p.name,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type,    p.name);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
621	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  appendPropForAlias(alias,  p.name);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  appendPropForAlias(alias,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  appendPropForAlias(alias,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    p.name);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
622	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  appendPropForAlias(alias,  p.name));  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  appendPropForAlias(alias,  p.name));  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  appendPropForAlias(alias,  p.name));	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    p.name);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
623	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.alias);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.alias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.alias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    p.name);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
624	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  PropAlias,  false);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  PropAlias,  false);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  PropAlias,  false);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    false);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
625	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  p.parent);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  p.parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  p.parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    getName(),    parent);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
626	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.refs,  propAlias,  numStubs);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.refs,  propAlias,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.refs,  propAlias,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.refs,    numStubs);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
627	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.refs,  numStubs,  p.name);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.refs,  numStubs,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.refs,  numStubs,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.refs,    numStubs);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
628	[BUG]  [BUGGY]  Node  nameNode  =  parent.getFirstChild();  Node  nameNode  =  p.getFirstChild();  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  parent.getFirstChild();  Node  nameNode  =  p.getFirstChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    parent.getFirstChild();    Node  nameNode  =  p.getFirstChild();	  timeout    	non-compiled	[CE]  cannot  find  symbol	51	None	add
629	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.refs,  propAlias,  appendAfter);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.refs,  propAlias,  appendAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.refs,  propAlias,  appendAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    p.refs,    propAlias);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
630	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  PropAlias,  p.type);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  PropAlias,  p.type);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  PropAlias,  p.type);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    p.type);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
631	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  UNSAFE_THIS,  propAlias);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  UNSAFE_THIS,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  UNSAFE_THIS,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    UNSAFE_THIS);    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
632	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.parent,  addAfter);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.parent,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  p.parent,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.parent);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
633	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.type,  propAlias,  n);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.type,  propAlias,  n);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.type,  propAlias,  n);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type,    n);    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
634	[BUG]  [BUGGY]  Node  nameNode  =  p.nameNode.removeFirstChild();  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.nameNode.removeFirstChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.nameNode.removeFirstChild();	  Node    nameNode    =    p.nameNode.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
635	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  p.name,  p.refs);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  p.name,  p.refs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  p.name,  p.refs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    getName(),    p.name);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
636	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  p.name,  p.name);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  p.name,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  p.name,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    getName(),    p.name);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
637	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  alias,  p.refs,  parent);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  alias,  p.refs,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  alias,  p.refs,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    p.name,    propAlias,    p.refs);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
638	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  n,  propAlias,  p.refs);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  n,  propAlias,  p.refs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  n,  propAlias,  p.refs);	  Node    nameNode    =    Node.newString(Token.NAME,    p.name,    propAlias,    p.refs);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
639	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  props,  addAfter,  propAlias);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  props,  addAfter,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  props,  addAfter,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    addAfter,    propAlias);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
640	[BUG]  [BUGGY]  Node  nameNode  =  node.newString(Token.NAME,  propAlias  +  11);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  node.newString(Token.NAME,  propAlias  +  11);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  node.newString(Token.NAME,  propAlias  +  11);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node    nameNode    =    node.newString(Token.NAME,    propAlias    +    1);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
641	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  n,  false,  parent);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  n,  false,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  n,  false,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    false,    parent);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
642	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  4);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  4);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  4);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    0);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
643	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  p.name);  numStubs++;  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  p.name);  numStubs++;  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  p.name);  numStubs++;	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    numStubs++;    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
644	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name);  numStubs++;  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name);  numStubs++;  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name);  numStubs++;	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    numStubs++;    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
645	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.nameNode();  [CE]  cannot  find  symbol  [FE]                                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.nameNode();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.nameNode();	  Node    nameNode    =    p.nameNode();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
646	[BUG]  [BUGGY]  Node  nameNode  =  p.parent.nameNode();  [CE]  cannot  find  symbol  [FE]                                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.parent.nameNode();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.parent.nameNode();	  Node    nameNode    =    p.nameNode();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
647	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  appendPropForAlias(alias,  parent);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  appendPropForAlias(alias,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  appendPropForAlias(alias,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    parent);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
648	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  PropAlias,  p.node);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  PropAlias,  p.node);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  PropAlias,  p.node);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    p.node);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
649	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  p.node);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  p.node);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  propAlias,  p.node);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    p.node);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
650	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.type,  p.global);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.type,  p.global);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.type,  p.global);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    p.type);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
651	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForUndeclaredProperties(alias,  p.name),  p.parent);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForUndeclaredProperties(alias,  p.name),  p.parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForUndeclaredProperties(alias,  p.name),  p.parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    appendPropForUndeclaredProperties(alias,    p.name));    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
652	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.type  +  1);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.type  +  1);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.type  +  1);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name    +    1);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
653	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.numStubs  +  1);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.numStubs  +  1);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.numStubs  +  1);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name    +    1);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
654	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name  +  1,  p.name);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name  +  1,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name  +  1,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name    +    1);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
655	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  p.name,  addAfter);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  p.name,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  p.name,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    addAfter);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
656	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  appendAfter);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  appendAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  appendAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    addAfter);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
657	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3));  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3));  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    3);    Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3));	  timeout    	non-compiled	[CE]  cannot  find  symbol	5	None	add
658	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  Node  nameNode  =  node.newString(Token.NAME,  propAlias  +  3);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  Node  nameNode  =  node.newString(Token.NAME,  propAlias  +  3);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    3);    Node  nameNode  =  node.newString(Token.NAME,  propAlias  +  3);	  timeout    	non-compiled	[CE]  cannot  find  symbol	5	None	add
659	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  Node  nameNode  =  Number.newString(Token.NAME,  propAlias  +  3);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  3);  Node  nameNode  =  Number.newString(Token.NAME,  propAlias  +  3);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    3);    Node  nameNode  =  Number.newString(Token.NAME,  propAlias  +  3);	  timeout    	non-compiled	[CE]  cannot  find  symbol	5	None	add
660	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  appendPropForUndeclaredProperties(alias,  p.name));  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  appendPropForUndeclaredProperties(alias,  p.name));  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  appendPropForUndeclaredProperties(alias,  p.name));	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1,    propAlias);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
661	[BUG]  [BUGGY]  Node  nameNode  =  NodeUtil.newString(Token.NAME,  propAlias,  appendPropForAlias(alias,  p.name));  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  NodeUtil.newString(Token.NAME,  propAlias,  appendPropForAlias(alias,  p.name));  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  NodeUtil.newString(Token.NAME,  propAlias,  appendPropForAlias(alias,  p.name));	  Node    nameNode    =    NodeUtil.newString(Token.NAME,    propAlias,    getName());    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
662	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.refs,  appendPropForAlias(alias,  p.name);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.refs,  appendPropForAlias(alias,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.refs,  appendPropForAlias(alias,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.refs,    p.name);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
663	[BUG]  [BUGGY]  Node  nameNode  =  p.node.getfirstChild();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.node.getfirstChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.node.getfirstChild();	  Node    nameNode    =    p.node.getLastChild();    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
664	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild();  Node  nameNode  =  p.refs.get(.node.getLastChild());  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild();  Node  nameNode  =  p.refs.get(.node.getLastChild());  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    p.refs.get(0).node.getLastChild();    Node  nameNode  =  p.refs.get(.node.getLastChild());	  timeout    	non-compiled	[CE]  cannot  find  symbol	93	None	add
665	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild();  Node  nameNode  =  p.refs.get(.node.getLastChild();  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild();  Node  nameNode  =  p.refs.get(.node.getLastChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    p.refs.get(0).node.getLastChild();    Node  nameNode  =  p.refs.get(.node.getLastChild();	  timeout    	non-compiled	[CE]  cannot  find  symbol	93	None	add
666	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild();  Node  nameNode  =  parent.refs.get(0).node.getLastChild();  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild();  Node  nameNode  =  parent.refs.get(0).node.getLastChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    p.refs.get(0).node.getLastChild();    Node  nameNode  =  parent.refs.get(0).node.getLastChild();	  timeout    	non-compiled	[CE]  cannot  find  symbol	93	None	add
667	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild();  Node  nameNode  =  P.refs.get(0).node.getLastChild();  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild();  Node  nameNode  =  P.refs.get(0).node.getLastChild();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node    nameNode    =    p.refs.get(0).node.getLastChild();    Node  nameNode  =  P.refs.get(0).node.getLastChild();	  timeout    	non-compiled	[CE]  cannot  find  symbol	93	None	add
668	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p,  addAfter);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    parent,    addAfter);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
669	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  numStubs,  p.name);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  numStubs,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  numStubs,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    numStubs);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
670	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  appendPropForAlias(alias,  p.name);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  appendPropForAlias(alias,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.name,  propAlias,  appendPropForAlias(alias,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    p.name,    propAlias,    getName());    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
671	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForAlias(alias,  p.name),  p);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForAlias(alias,  p.name),  p);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForAlias(alias,  p.name),  p);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
672	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForAlias(alias,  p.name),  p.type);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForAlias(alias,  p.name),  p.type);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendPropForAlias(alias,  p.name),  p.type);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    appendPropForAlias(alias,    p.name));    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
673	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias),?  true  :  false;  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias),?  true  :  false;  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias),?  true  :  false;	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias)?    true    :    false;    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
674	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  true)?  false  :  false;  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  true)?  false  :  false;  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  true)?  false  :  false;	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias)?    true    :    false;    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
675	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getFirstChild().getBooleanProp(propAlias)?  true  :  false;  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getFirstChild().getBooleanProp(propAlias)?  true  :  false;  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getFirstChild().getBooleanProp(propAlias)?  true  :  false;	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias)?    true    :    false;    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
676	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.node,  propAlias,  p.type);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p.node,  propAlias,  p.type);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p.node,  propAlias,  p.type);	  Node    nameNode    =    Node.newString(Token.NAME,    p.node,    propAlias);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
677	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  n,  addAfter,  numStubs);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  n,  addAfter,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  n,  addAfter,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    addAfter,    numStubs);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
678	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  addAfter,  numStubs);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  addAfter,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  addAfter,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    addAfter,    numStubs);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
679	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  PropAlias,  getName());  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  PropAlias,  getName());  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  PropAlias,  getName());	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    getName());    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
680	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p,  UNSAFE_NAMESPACE_WARNING);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p,  UNSAFE_NAMESPACE_WARNING);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p,  UNSAFE_NAMESPACE_WARNING);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    NAMESPACE_REDEFINED_WARNING,    p);    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
681	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p,  propAlias,  p);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p,  propAlias,  p);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p,  propAlias,  p);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    NAMESPACE_REDEFINED_WARNING,    p);    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
682	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getParent();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getParent();  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getParent();	  Node    nameNode    =    p.refs.get(0).node.getLastChild();    timeout    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
683	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  propAlias);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    propAlias,    p.name);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
684	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  propAlias);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    propAlias,    p.type);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
685	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  UNSAFE_DECLARED_WARNING);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  UNSAFE_DECLARED_WARNING);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  UNSAFE_DECLARED_WARNING);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    NAMESPACE_REDEFINED_WARNING);    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
686	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  n,  numStubs);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  n,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  n,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    numStubs);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
687	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  alias,  numStubs);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  alias,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  alias,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    numStubs);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
688	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  p.parent);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  p.parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  p.parent);	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
689	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  p.type);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  p.type);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  p.type);	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
690	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(1).node.getLastChild().getBooleanProp(propAlias,  p.name);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(1).node.getLastChild().getBooleanProp(propAlias,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(1).node.getLastChild().getBooleanProp(propAlias,  p.name);	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
691	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  p.refs,  propAlias);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  p.refs,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  p.refs,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    parent,    p.refs);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
692	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  p.refs,  addAfter);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  p.refs,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  p.refs,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    parent,    p.refs);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
693	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.refs,  n);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.refs,  n);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.name,  p.refs,  n);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.name,    p.refs);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
694	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  getName(),  propAlias,  p.parent);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  getName(),  propAlias,  p.parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  getName(),  propAlias,  p.parent);	  Node    nameNode    =    Node.newString(Token.NAME,    getName(),    propAlias);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
695	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  getName(),  propAlias,  p.scope);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  getName(),  propAlias,  p.scope);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  getName(),  propAlias,  p.scope);	  Node    nameNode    =    Node.newString(Token.NAME,    getName(),    propAlias);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
696	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  propAlias,  addAfter);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  propAlias,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  propAlias,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    parent,    addAfter);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
697	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendSeparatorForAlias(alias,  p.name);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendSeparatorForAlias(alias,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendSeparatorForAlias(alias,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    appendPropForAlias(alias,    p.name);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
698	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendBefore(alias,  p.name);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendBefore(alias,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  appendBefore(alias,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    appendPropForAlias(alias,    p.name);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
699	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  PropAlias,  p.name);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  PropAlias,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  PropAlias,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    p.name);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
700	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  false,  p.name,  p.name);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  false,  p.name,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  false,  p.name,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    false,    p.name);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
701	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  PropAlias,  parent);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  PropAlias,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  PropAlias,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    parent,    propAlias);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
702	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p,  propAlias,  addAfter);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  p,  propAlias,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  p,  propAlias,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    NAMESPACE_REDEFINED_WARNING,    addAfter);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
703	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  addAfter,  propAlias,  addAfter);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  addAfter,  propAlias,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  addAfter,  propAlias,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    NAMESPACE_REDEFINED_WARNING,    addAfter);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
704	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  null,  false,  p.name);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  null,  false,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  null,  false,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    null,    false);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
705	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p;  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p;  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p;	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    p);    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
706	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  PropAlias,  propAlias);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  PropAlias,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  PropAlias,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    alias,    parent);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
707	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  p.type,  p.name);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  p.type,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getName(),  p.type,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    getName(),    p.type);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
708	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  p.name).replaceChild(n,  parent);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  p.name).replaceChild(n,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  p.name).replaceChild(n,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1).replaceChild(n,    parent);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
709	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  addAfter,  parent);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  addAfter,  parent);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  addAfter,  parent);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type,    addAfter);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
710	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  true),  p.name);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  true),  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  true),  p.name);	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,    true);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
711	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  true,  propAlias);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  true,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  true,  propAlias);	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,    true);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
712	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  true,  p.type);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  true,  p.type);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,  true,  p.type);	  Node    nameNode    =    p.refs.get(0).node.getLastChild().getBooleanProp(propAlias,    true);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
713	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  Boolean.TRUE,  p.name);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  Boolean.TRUE,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  Boolean.TRUE,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    Boolean.TRUE);    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
714	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  String.valueOf(p.name));  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  String.valueOf(p.name));  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  String.valueOf(p.name));	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    Boolean.TRUE);    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
715	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  n,  numStubs);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  n,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p.type,  n,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    p.type,    numStubs);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
716	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  p.name,  p.name);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  p.name,  p.name);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  p.name,  p.name);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1,    p.name);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
717	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  p.name,  p.type);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  p.name,  p.type);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias  +  1,  p.name,  p.type);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1,    p.name);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
718	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getReferenceName(),  p.refs);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getReferenceName(),  p.refs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  getReferenceName(),  p.refs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    getReferenceName());    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
719	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias));  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias));  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias));	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1);    Node    nameNode    =    Node.newString(Token.NAME,    propAlias    +    1));    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
720	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p,  numStubs);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p,  numStubs);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  p,  numStubs);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    parent,    numStubs);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
721	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  numStubs,  addAfter);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  numStubs,  addAfter);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  propAlias,  parent,  numStubs,  addAfter);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    parent,    numStubs);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
722	[BUG]  [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  numStubs,  propAlias);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      Name  n,  String  alias,  Node  parent,  Node  addAfter)  {  Preconditions.checkArgument(NodeUtil.isStatementBlock(parent));  Preconditions.checkNotNull(addAfter);  int  numStubs  =  0;  if  (n.props  !=  null)  {  for  (Name  p  :  n.props)  {  if  (p.needsToBeStubbed())  {  String  propAlias  =  appendPropForAlias(alias,  p.name);      [BUGGY]  Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  numStubs,  propAlias);  [BUGGY]      Node  newVar  =  new  Node(Token.VAR,  nameNode)  .copyInformationFromForTree(addAfter);  parent.addChildAfter(newVar,  addAfter);  addAfter  =  newVar;  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.3922322702763681	824	824	8	replace	Node  nameNode  =  Node.newString(Token.NAME,  alias,  parent,  numStubs,  propAlias);	  Node    nameNode    =    Node.newString(Token.NAME,    propAlias,    parent,    numStubs);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
