bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  switch  (n.declaration.node.getType())  {  [CE]  not  a  statement  [FE]    AssertionFailedError  [CONTEXT]  private  void  updateObjLitOrFunctionDeclaration(Name  n,  String  alias)  {  [BUGGY]  switch  (n.declaration.node.getType())  {  [BUGGY]  case  Token.ASSIGN:  updateObjLitOrFunctionDeclarationAtAssignNode(n,  alias);  break;  case  Token.VAR:  updateObjLitOrFunctionDeclarationAtVarNode(n);  break;  case  Token.FUNCTION:  updateFunctionDeclarationAtFunctionNode(n);  break;  }  [CLASS]  CollapseProperties  1  [METHOD]  updateObjLitOrFunctionDeclaration  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	553	553	8	replace	switch  (n.declaration.node.getType())  {	switch  (n.declaration.node.getParent().getType())  {  	non-compiled	[CE]  not  a  statement	61	None	replace
2	[BUG]  [BUGGY]  switch  (n.declaration.node.getNext().getType())  {  [CE]  not  a  statement  [FE]      AssertionFailedError  [CONTEXT]  private  void  updateObjLitOrFunctionDeclaration(Name  n,  String  alias)  {  [BUGGY]  switch  (n.declaration.node.getNext().getType())  {  [BUGGY]  case  Token.ASSIGN:  updateObjLitOrFunctionDeclarationAtAssignNode(n,  alias);  break;  case  Token.VAR:  updateObjLitOrFunctionDeclarationAtVarNode(n);  break;  case  Token.FUNCTION:  updateFunctionDeclarationAtFunctionNode(n);  break;  }  [CLASS]  CollapseProperties  1  [METHOD]  updateObjLitOrFunctionDeclaration  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	553	553	8	replace	switch  (n.declaration.node.getNext().getType())  {	switch  (n.declaration.node.getParent().getType())  {  	non-compiled	[CE]  not  a  statement	61	None	replace
3	[BUG]  [BUGGY]  switch  (n.declaration.node.getFirstChild().getType())  {  [CE]  not  a  statement  [FE]        AssertionFailedError  [CONTEXT]  private  void  updateObjLitOrFunctionDeclaration(Name  n,  String  alias)  {  [BUGGY]  switch  (n.declaration.node.getFirstChild().getType())  {  [BUGGY]  case  Token.ASSIGN:  updateObjLitOrFunctionDeclarationAtAssignNode(n,  alias);  break;  case  Token.VAR:  updateObjLitOrFunctionDeclarationAtVarNode(n);  break;  case  Token.FUNCTION:  updateFunctionDeclarationAtFunctionNode(n);  break;  }  [CLASS]  CollapseProperties  1  [METHOD]  updateObjLitOrFunctionDeclaration  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	553	553	8	replace	switch  (n.declaration.node.getFirstChild().getType())  {	switch  (n.declaration.node.getParent().getType())  {  	non-compiled	[CE]  not  a  statement	61	None	replace
4	[BUG]  [BUGGY]  switch  (n.declaration.node.getParent().getType(),  alias)  {  [CE]  not  a  statement  [FE]          AssertionFailedError  [CONTEXT]  private  void  updateObjLitOrFunctionDeclaration(Name  n,  String  alias)  {  [BUGGY]  switch  (n.declaration.node.getParent().getType(),  alias)  {  [BUGGY]  case  Token.ASSIGN:  updateObjLitOrFunctionDeclarationAtAssignNode(n,  alias);  break;  case  Token.VAR:  updateObjLitOrFunctionDeclarationAtVarNode(n);  break;  case  Token.FUNCTION:  updateFunctionDeclarationAtFunctionNode(n);  break;  }  [CLASS]  CollapseProperties  1  [METHOD]  updateObjLitOrFunctionDeclaration  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	553	553	8	replace	switch  (n.declaration.node.getParent().getType(),  alias)  {	switch  (n.declaration.node.getParent().getType())  {  	non-compiled	[CE]  not  a  statement	61	None	replace
5	[BUG]  [BUGGY]    [CE]  not  a  statement  [FE]            AssertionFailedError  [CONTEXT]  private  void  updateObjLitOrFunctionDeclaration(Name  n,  String  alias)  {  [BUGGY]    [BUGGY]  case  Token.ASSIGN:  updateObjLitOrFunctionDeclarationAtAssignNode(n,  alias);  break;  case  Token.VAR:  updateObjLitOrFunctionDeclarationAtVarNode(n);  break;  case  Token.FUNCTION:  updateFunctionDeclarationAtFunctionNode(n);  break;  }  [CLASS]  CollapseProperties  1  [METHOD]  updateObjLitOrFunctionDeclaration  [RETURN_TYPE]  void  Name  n  String  alias  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  initialized  inlineAliases  isObjKey  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  String  alias  Map  nameMap  Name  n  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.21442250696755896	553	553	8	replace	  	switch  (n.declaration.node.getParent().getType())  {  	non-compiled	[CE]  not  a  statement	61	None	replace
