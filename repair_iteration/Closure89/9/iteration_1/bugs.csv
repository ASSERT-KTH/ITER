bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  List  <  Ref>  refs  =  Lists.newArrayList(name.globalSets);  [CE]  not  a  statement  [FE]    AssertionFailedError  [CONTEXT]  if  (name.globalSets  ==  1  &&  name.localSets  ==  0  &&  name.aliasingGets  >  0)  {    [BUGGY]  List  <  Ref>  refs  =  Lists.newArrayList(name.globalSets);  [BUGGY]  for  (Ref  ref  :  refs)  {  if  (ref.type  ==  Type.ALIASING_GET  &&  ref.scope.isLocal())  {  if  (inlineAliasIfPossible(ref,  namespace))  {  name.removeRef(ref);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  inlineAliases  [RETURN_TYPE]  void  GlobalNamespace  namespace  [VARIABLES]  AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2672612419124244	168	168	8	replace	List  <  Ref>  refs  =  Lists.newArrayList(name.globalSets);	List<Ref>  refs  =  Lists.newArrayList(name.refs);  	non-compiled	[CE]  not  a  statement	17	None	replace
2	[BUG]  [BUGGY]  List  <  Ref>  refs  =  Lists.newArrayList();  [CE]  not  a  statement  [FE]      AssertionFailedError  [CONTEXT]  if  (name.globalSets  ==  1  &&  name.localSets  ==  0  &&  name.aliasingGets  >  0)  {    [BUGGY]  List  <  Ref>  refs  =  Lists.newArrayList();  [BUGGY]  for  (Ref  ref  :  refs)  {  if  (ref.type  ==  Type.ALIASING_GET  &&  ref.scope.isLocal())  {  if  (inlineAliasIfPossible(ref,  namespace))  {  name.removeRef(ref);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  inlineAliases  [RETURN_TYPE]  void  GlobalNamespace  namespace  [VARIABLES]  AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2672612419124244	168	168	8	replace	List  <  Ref>  refs  =  Lists.newArrayList();	List<Ref>  refs  =  Lists.newArrayList(name.refs);  	non-compiled	[CE]  not  a  statement	17	None	replace
3	[BUG]  [BUGGY]  List  <  Ref>  refs  =  Lists.newArrayList(name.localSets);  [CE]  not  a  statement  [FE]        AssertionFailedError  [CONTEXT]  if  (name.globalSets  ==  1  &&  name.localSets  ==  0  &&  name.aliasingGets  >  0)  {    [BUGGY]  List  <  Ref>  refs  =  Lists.newArrayList(name.localSets);  [BUGGY]  for  (Ref  ref  :  refs)  {  if  (ref.type  ==  Type.ALIASING_GET  &&  ref.scope.isLocal())  {  if  (inlineAliasIfPossible(ref,  namespace))  {  name.removeRef(ref);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  inlineAliases  [RETURN_TYPE]  void  GlobalNamespace  namespace  [VARIABLES]  AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2672612419124244	168	168	8	replace	List  <  Ref>  refs  =  Lists.newArrayList(name.localSets);	List<Ref>  refs  =  Lists.newArrayList(name.refs);  	non-compiled	[CE]  not  a  statement	17	None	replace
4	[BUG]  [BUGGY]  List  <  Ref>  refs  =  Lists.newArrayList(name.globalSets,  name.localSets);  [CE]  not  a  statement  [FE]          AssertionFailedError  [CONTEXT]  if  (name.globalSets  ==  1  &&  name.localSets  ==  0  &&  name.aliasingGets  >  0)  {    [BUGGY]  List  <  Ref>  refs  =  Lists.newArrayList(name.globalSets,  name.localSets);  [BUGGY]  for  (Ref  ref  :  refs)  {  if  (ref.type  ==  Type.ALIASING_GET  &&  ref.scope.isLocal())  {  if  (inlineAliasIfPossible(ref,  namespace))  {  name.removeRef(ref);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  inlineAliases  [RETURN_TYPE]  void  GlobalNamespace  namespace  [VARIABLES]  AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2672612419124244	168	168	8	replace	List  <  Ref>  refs  =  Lists.newArrayList(name.globalSets,  name.localSets);	List<Ref>  refs  =  Lists.newArrayList(name.refs);  	non-compiled	[CE]  not  a  statement	17	None	replace
5	[BUG]  [BUGGY]  List  <  Ref>  refs  =  Lists.newArrayList(name.aliasingGets);  [CE]  not  a  statement  [FE]            AssertionFailedError  [CONTEXT]  if  (name.globalSets  ==  1  &&  name.localSets  ==  0  &&  name.aliasingGets  >  0)  {    [BUGGY]  List  <  Ref>  refs  =  Lists.newArrayList(name.aliasingGets);  [BUGGY]  for  (Ref  ref  :  refs)  {  if  (ref.type  ==  Type.ALIASING_GET  &&  ref.scope.isLocal())  {  if  (inlineAliasIfPossible(ref,  namespace))  {  name.removeRef(ref);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  inlineAliases  [RETURN_TYPE]  void  GlobalNamespace  namespace  [VARIABLES]  AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2672612419124244	168	168	8	replace	List  <  Ref>  refs  =  Lists.newArrayList(name.aliasingGets);	List<Ref>  refs  =  Lists.newArrayList(name.refs);  	non-compiled	[CE]  not  a  statement	17	None	replace
6	[BUG]  [BUGGY]  ArrayList  <  Ref>  refs  =  Lists.newArrayList(name.refs);  [CE]  not  a  statement  [FE]              AssertionFailedError  [CONTEXT]  if  (name.globalSets  ==  1  &&  name.localSets  ==  0  &&  name.aliasingGets  >  0)  {    [BUGGY]  ArrayList  <  Ref>  refs  =  Lists.newArrayList(name.refs);  [BUGGY]  for  (Ref  ref  :  refs)  {  if  (ref.type  ==  Type.ALIASING_GET  &&  ref.scope.isLocal())  {  if  (inlineAliasIfPossible(ref,  namespace))  {  name.removeRef(ref);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  inlineAliases  [RETURN_TYPE]  void  GlobalNamespace  namespace  [VARIABLES]  AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2672612419124244	168	168	8	replace	ArrayList  <  Ref>  refs  =  Lists.newArrayList(name.refs);	List<Ref>  refs  =  Lists.newArrayList(name.refs);  	non-compiled	[CE]  not  a  statement	17	None	replace
7	[BUG]  [BUGGY]  List  <  Ref>  refs  =  Lists.newArrayList(name.localNames);  [CE]  not  a  statement  [FE]                AssertionFailedError  [CONTEXT]  if  (name.globalSets  ==  1  &&  name.localSets  ==  0  &&  name.aliasingGets  >  0)  {    [BUGGY]  List  <  Ref>  refs  =  Lists.newArrayList(name.localNames);  [BUGGY]  for  (Ref  ref  :  refs)  {  if  (ref.type  ==  Type.ALIASING_GET  &&  ref.scope.isLocal())  {  if  (inlineAliasIfPossible(ref,  namespace))  {  name.removeRef(ref);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  inlineAliases  [RETURN_TYPE]  void  GlobalNamespace  namespace  [VARIABLES]  AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2672612419124244	168	168	8	replace	List  <  Ref>  refs  =  Lists.newArrayList(name.localNames);	List<Ref>  refs  =  Lists.newArrayList(name.refs);  	non-compiled	[CE]  not  a  statement	17	None	replace
8	[BUG]  [BUGGY]    [CE]  not  a  statement  [FE]                  AssertionFailedError  [CONTEXT]  if  (name.globalSets  ==  1  &&  name.localSets  ==  0  &&  name.aliasingGets  >  0)  {    [BUGGY]    [BUGGY]  for  (Ref  ref  :  refs)  {  if  (ref.type  ==  Type.ALIASING_GET  &&  ref.scope.isLocal())  {  if  (inlineAliasIfPossible(ref,  namespace))  {  name.removeRef(ref);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  inlineAliases  [RETURN_TYPE]  void  GlobalNamespace  namespace  [VARIABLES]  AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2672612419124244	168	168	8	replace	  	List<Ref>  refs  =  Lists.newArrayList(name.refs);  	non-compiled	[CE]  not  a  statement	17	None	replace
9	[BUG]  [BUGGY]  List  <  Ref>  refs  =  Lists.newArrayList(name.allAliases);  [CE]  not  a  statement  [FE]    AssertionFailedError  [CONTEXT]  if  (name.globalSets  ==  1  &&  name.localSets  ==  0  &&  name.aliasingGets  >  0)  {    [BUGGY]  List  <  Ref>  refs  =  Lists.newArrayList(name.allAliases);  [BUGGY]  for  (Ref  ref  :  refs)  {  if  (ref.type  ==  Type.ALIASING_GET  &&  ref.scope.isLocal())  {  if  (inlineAliasIfPossible(ref,  namespace))  {  name.removeRef(ref);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  inlineAliases  [RETURN_TYPE]  void  GlobalNamespace  namespace  [VARIABLES]  AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2672612419124244	168	168	8	replace	List  <  Ref>  refs  =  Lists.newArrayList(name.allAliases);	List<Ref>  refs  =  Lists.newArrayList(name.refs);  	non-compiled	[CE]  not  a  statement	17	None	replace
10	[BUG]  [BUGGY]  List  <  Ref>  refs  =  Lists.newArrayList(name.values);  [CE]  not  a  statement  [FE]      AssertionFailedError  [CONTEXT]  if  (name.globalSets  ==  1  &&  name.localSets  ==  0  &&  name.aliasingGets  >  0)  {    [BUGGY]  List  <  Ref>  refs  =  Lists.newArrayList(name.values);  [BUGGY]  for  (Ref  ref  :  refs)  {  if  (ref.type  ==  Type.ALIASING_GET  &&  ref.scope.isLocal())  {  if  (inlineAliasIfPossible(ref,  namespace))  {  name.removeRef(ref);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  inlineAliases  [RETURN_TYPE]  void  GlobalNamespace  namespace  [VARIABLES]  AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2672612419124244	168	168	8	replace	List  <  Ref>  refs  =  Lists.newArrayList(name.values);	List<Ref>  refs  =  Lists.newArrayList(name.refs);  	non-compiled	[CE]  not  a  statement	17	None	replace
11	[BUG]  [BUGGY]  List  <  Ref>  refs  =  Lists.newArrayList(name.refs,  namespace);  [CE]  not  a  statement  [FE]        AssertionFailedError  [CONTEXT]  if  (name.globalSets  ==  1  &&  name.localSets  ==  0  &&  name.aliasingGets  >  0)  {    [BUGGY]  List  <  Ref>  refs  =  Lists.newArrayList(name.refs,  namespace);  [BUGGY]  for  (Ref  ref  :  refs)  {  if  (ref.type  ==  Type.ALIASING_GET  &&  ref.scope.isLocal())  {  if  (inlineAliasIfPossible(ref,  namespace))  {  name.removeRef(ref);  }  }  }  }  [CLASS]  CollapseProperties  1  [METHOD]  inlineAliases  [RETURN_TYPE]  void  GlobalNamespace  namespace  [VARIABLES]  AbstractCompiler  compiler  Ref  ref  boolean  collapsePropertiesOnExternTypes  inlineAliases  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  List  globalNames  refs  Map  nameMap  GlobalNamespace  namespace  Deque  workList  Name  name  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2672612419124244	168	168	8	replace	List  <  Ref>  refs  =  Lists.newArrayList(name.refs,  namespace);	List<Ref>  refs  =  Lists.newArrayList(name.refs);  	non-compiled	[CE]  not  a  statement	17	None	replace
