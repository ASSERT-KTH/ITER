bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  numStubs++;  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  numStubs++;  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  numStubs++;	  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    false);    numStubs++;    	non-compiled	[CE]  not  a  statement	13	None	replace
2	[BUG]  [BUGGY]  node.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  numStubs++;  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  node.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  numStubs++;  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	node.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  numStubs++;	  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    false);    numStubs++;    	non-compiled	[CE]  not  a  statement	13	None	replace
3	[BUG]  [BUGGY]  node.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  numStubs++;  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  node.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  numStubs++;  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	node.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  numStubs++;	  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    false);    numStubs++;    	non-compiled	[CE]  not  a  statement	13	None	replace
4	[BUG]  [BUGGY]  Node.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  numStubs++;  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  Node.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  numStubs++;  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  numStubs++;	  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    false);    numStubs++;    	non-compiled	[CE]  not  a  statement	13	None	replace
5	[BUG]  [BUGGY]  numStubs  =  p.node.getFirstChild().getLastChild().getString();  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  numStubs  =  p.node.getFirstChild().getLastChild().getString();  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.node.getFirstChild().getLastChild().getString();	  numStubs    =    nameNode.getFirstChild().getLastChild().getString();    	non-compiled	[CE]  not  a  statement	15	None	replace
6	[BUG]  [BUGGY]  numStubs  =  p.refs.getFirstChild().getLastChild().getString();  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  numStubs  =  p.refs.getFirstChild().getLastChild().getString();  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.getFirstChild().getLastChild().getString();	  numStubs    =    nameNode.getFirstChild().getLastChild().getString();    	non-compiled	[CE]  not  a  statement	15	None	replace
7	[BUG]  [BUGGY]  numStubs  =  p.getFirstChild().getLastChild().getString();  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  numStubs  =  p.getFirstChild().getLastChild().getString();  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.getFirstChild().getLastChild().getString();	  numStubs    =    nameNode.getFirstChild().getLastChild().getString();    	non-compiled	[CE]  not  a  statement	15	None	replace
8	[BUG]  [BUGGY]  numStubs  =  parent.getFirstChild().getLastChild().getString();  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  numStubs  =  parent.getFirstChild().getLastChild().getString();  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  parent.getFirstChild().getLastChild().getString();	  numStubs    =    nameNode.getFirstChild().getLastChild().getString();    	non-compiled	[CE]  not  a  statement	15	None	replace
9	[BUG]  [BUGGY]  nameNode.putProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  nameNode.putProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putProp(Node.IS_CONSTANT_NAME,  false);	  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	10	None	replace
10	[BUG]  [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true,  parent);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true,  parent);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true,  parent);	  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	10	None	replace
11	[BUG]  [BUGGY]  parent.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  parent.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	parent.putBooleanProp(Node.IS_CONSTANT_NAME,  true);	  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	10	None	replace
12	[BUG]  [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putBooleanProp(Node.IS_CONSTANT_N	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	1	None	replace
13	[BUG]  [BUGGY]  Name  p  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  Name  p  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	1	None	replace
14	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	1	None	replace
15	[BUG]  [BUGGY]  Name  p  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  Name  p  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	1	None	replace
16	[BUG]  [BUGGY]  Name  p  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  Name  p  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_N	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	1	None	replace
17	[BUG]  [BUGGY]  Name  p  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  Name  p  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_N	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	1	None	replace
18	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    addAfter.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	6	None	replace
19	[BUG]  [BUGGY]  Node  nameNode  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  Node  nameNode  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    addAfter.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	6	None	replace
20	[BUG]  [BUGGY]  Node  p  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  Node  p  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  p  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    addAfter.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	6	None	replace
21	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  Node  nameNode  =  p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    addAfter.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	6	None	replace
22	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  addAfter.putBooleanProp(Node.IS_CONSTANT_  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  addAfter.putBooleanProp(Node.IS_CONSTANT_  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  addAfter.putBooleanProp(Node.IS_CONSTANT_	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    addAfter.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	6	None	replace
23	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  addAfter.putBooleanProp(Node.IS_CONSTANT_N  [CE]  not  a  statement  [FE]                            AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  addAfter.putBooleanProp(Node.IS_CONSTANT_N  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  addAfter.putBooleanProp(Node.IS_CONSTANT_N	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    addAfter.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	6	None	replace
24	[BUG]  [BUGGY]  compiler.report(JSError.make(n,  NAMESPACE_REDEFINED_WARNING,  alias));  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  compiler.report(JSError.make(n,  NAMESPACE_REDEFINED_WARNING,  alias));  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(n,  NAMESPACE_REDEFINED_WARNING,  alias));	  compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	12	None	replace
25	[BUG]  [BUGGY]  compiler.report(JSError.make(n,  NAMESPACE_REDEFINED_WARNING,  propAlias));  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  compiler.report(JSError.make(n,  NAMESPACE_REDEFINED_WARNING,  propAlias));  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(n,  NAMESPACE_REDEFINED_WARNING,  propAlias));	  compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	12	None	replace
26	[BUG]  [BUGGY]  compiler.report(JSError.make(nameNode,  n,  NAMESPACE_REDEFINED_WARNING,  propAlias));  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  compiler.report(JSError.make(nameNode,  n,  NAMESPACE_REDEFINED_WARNING,  propAlias));  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(nameNode,  n,  NAMESPACE_REDEFINED_WARNING,  propAlias));	  compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	12	None	replace
27	[BUG]  [BUGGY]  compiler.report(JSError.make(NAMESPACE_REDEFINED_WARNING,  n),  NAMESPACE_REDEFINED_WARNING);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  compiler.report(JSError.make(NAMESPACE_REDEFINED_WARNING,  n),  NAMESPACE_REDEFINED_WARNING);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(NAMESPACE_REDEFINED_WARNING,  n),  NAMESPACE_REDEFINED_WARNING);	  compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	12	None	replace
28	[BUG]  [BUGGY]  compiler.report(JSError.make(nameNode,  numStubs,  NAMESPACE_REDEFINED_WARNING));  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  compiler.report(JSError.make(nameNode,  numStubs,  NAMESPACE_REDEFINED_WARNING));  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(nameNode,  numStubs,  NAMESPACE_REDEFINED_WARNING));	  compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	12	None	replace
29	[BUG]  [BUGGY]  compiler.report(JSError.make(n,  numStubs,  NAMESPACE_REDEFINED_WARNING));  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  compiler.report(JSError.make(n,  numStubs,  NAMESPACE_REDEFINED_WARNING));  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(n,  numStubs,  NAMESPACE_REDEFINED_WARNING));	  compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	12	None	replace
30	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  addAfter.putBooleanProp(Node.IS_CONSTANT_  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  addAfter.putBooleanProp(Node.IS_CONSTANT_  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  addAfter.putBooleanProp(Node.IS_CONSTANT_	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    addAfter.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	7	None	replace
31	[BUG]  [BUGGY]  int  numStubs  =  parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  int  numStubs  =  parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  numStubs++;    	non-compiled	[CE]  not  a  statement	11	None	replace
32	[BUG]  [BUGGY]  int  numStubs  =  parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  int  numStubs  =  parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  numStubs++;    	non-compiled	[CE]  not  a  statement	11	None	replace
33	[BUG]  [BUGGY]  int  numStubs  =  nameMap.size();  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  int  numStubs  =  nameMap.size();  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  nameMap.size();	  numStubs++;    	non-compiled	[CE]  not  a  statement	11	None	replace
34	[BUG]  [BUGGY]  int  numStubs  =  parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  int  numStubs  =  parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  parent.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  numStubs++;    	non-compiled	[CE]  not  a  statement	11	None	replace
35	[BUG]  [BUGGY]  int  numStubs++;  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  int  numStubs++;  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs++;	  numStubs++;    	non-compiled	[CE]  not  a  statement	11	None	replace
36	[BUG]  [BUGGY]  int  numStubs  =  parent.node.getLastChild().getIndex(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  int  numStubs  =  parent.node.getLastChild().getIndex(Node.IS_CONSTANT_NAME);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  parent.node.getLastChild().getIndex(Node.IS_CONSTANT_NAME);	  numStubs++;    	non-compiled	[CE]  not  a  statement	11	None	replace
37	[BUG]  [BUGGY]  numStubs  =  p.node.getLastChild().getString();  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  numStubs  =  p.node.getLastChild().getString();  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.node.getLastChild().getString();	  numStubs    =    nameNode.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	14	None	replace
38	[BUG]  [BUGGY]  numStubs  =  p.refs.getLastChild().getString();  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  numStubs  =  p.refs.getLastChild().getString();  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.getLastChild().getString();	  numStubs    =    nameNode.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	14	None	replace
39	[BUG]  [BUGGY]  numStubs  =  p.getLastChild().getString();  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  numStubs  =  p.getLastChild().getString();  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.getLastChild().getString();	  numStubs    =    nameNode.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	14	None	replace
40	[BUG]  [BUGGY]  numStubs  =  nameNode.getFirstChild().getString();  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  numStubs  =  nameNode.getFirstChild().getString();  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  nameNode.getFirstChild().getString();	  numStubs    =    nameNode.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	14	None	replace
41	[BUG]  [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putBooleanProp(Node.IS_CONSTANT_	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	2	None	replace
42	[BUG]  [BUGGY]  Name  p  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  Name  p  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	2	None	replace
43	[BUG]  [BUGGY]  Name  p  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  Name  p  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	2	None	replace
44	[BUG]  [BUGGY]  NameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  NameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	NameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);	  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	9	None	replace
45	[BUG]  [BUGGY]  nameNode.putProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  nameNode.putProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putProp(Node.IS_CONSTANT_NAME,  true);	  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	9	None	replace
46	[BUG]  [BUGGY]  parent.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  parent.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	parent.putBooleanProp(Node.IS_CONSTANT_NAME,  false);	  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	9	None	replace
47	[BUG]  [BUGGY]  nameNode.putShortProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  nameNode.putShortProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putShortProp(Node.IS_CONSTANT_NAME,  false);	  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	9	None	replace
48	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getString();  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getString();  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(0).node.getLastChild().getString();	  if(p.refs.get(0).node.getLastChild().getString().equals(   "   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	17	None	replace
49	[BUG]  [BUGGY]  Name  n  =  p.refs.get(0).node.getLastChild().getString();  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  Name  n  =  p.refs.get(0).node.getLastChild().getString();  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  n  =  p.refs.get(0).node.getLastChild().getString();	  if(p.refs.get(0).node.getLastChild().getString().equals(   "   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	17	None	replace
50	[BUG]  [BUGGY]  Name  node  =  p.refs.get(0).node.getLastChild().getString();  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  Name  node  =  p.refs.get(0).node.getLastChild().getString();  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  node  =  p.refs.get(0).node.getLastChild().getString();	  if(p.refs.get(0).node.getLastChild().getString().equals(   "   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	17	None	replace
51	[BUG]  [BUGGY]  numStubs++;  compiler.reportCodeChange();  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  numStubs++;  compiler.reportCodeChange();  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs++;  compiler.reportCodeChange();	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    numStubs++;    compiler.reportCodeChange();    }    	non-compiled	[CE]  not  a  statement	3	None	replace
52	[BUG]  [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    numStubs++;    compiler.reportCodeChange();    }    	non-compiled	[CE]  not  a  statement	3	None	replace
53	[BUG]  [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    numStubs++;    compiler.reportCodeChange();    }    	non-compiled	[CE]  not  a  statement	3	None	replace
54	[BUG]  [BUGGY]  int  numStubs  =  p.refs.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  int  numStubs  =  p.refs.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    numStubs++;    compiler.reportCodeChange();    }    	non-compiled	[CE]  not  a  statement	3	None	replace
55	[BUG]  [BUGGY]  numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  compiler.reportCodeChange();  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  compiler.reportCodeChange();  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  compiler.reportCodeChange();	      	non-compiled	[CE]  not  a  statement	8	None	replace
56	[BUG]  [BUGGY]  numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	      	non-compiled	[CE]  not  a  statement	8	None	replace
57	[BUG]  [BUGGY]  numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  nameNode.putBooleanProp(Node.IS_CONSTANT_	      	non-compiled	[CE]  not  a  statement	8	None	replace
58	[BUG]  [BUGGY]  numStubs  =  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  numStubs  =  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  numStubs    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	4	None	replace
59	[BUG]  [BUGGY]  numStubs  =  nameNode.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  numStubs  =  nameNode.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  nameNode.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  numStubs    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	4	None	replace
60	[BUG]  [BUGGY]  numStubs  =  nameNode.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  numStubs  =  nameNode.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  nameNode.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  numStubs    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	4	None	replace
61	[BUG]  [BUGGY]  numStubs  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  numStubs  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  numStubs    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	4	None	replace
62	[BUG]  [BUGGY]  numStubs  =  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  numStubs  =  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  numStubs    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	4	None	replace
63	[BUG]  [BUGGY]  NameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  NameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	NameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);	  if(p.refs.get(0).node.getLastChild().getString().equals(   "   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    false);    }    	non-compiled	[CE]  not  a  statement	16	None	replace
64	[BUG]  [BUGGY]  numStubs  =  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  numStubs  =  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  nameNode.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  numStubs    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	5	None	replace
65	[BUG]  [BUGGY]  numStubs  =  nameNode.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  numStubs  =  nameNode.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  nameNode.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  numStubs    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	5	None	replace
66	[BUG]  [BUGGY]  numStubs  =  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  numStubs  =  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  numStubs    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	5	None	replace
67	[BUG]  [BUGGY]  numStubs  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  numStubs  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  numStubs    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	5	None	replace
68	[BUG]  [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_N,  true);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_N,  true);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putBooleanProp(Node.IS_CONSTANT_N,  true);	  if(p.refs.get(0).node.getLastChild().getString().equals(   "   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	19	None	replace
69	[BUG]  [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getString();  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getString();  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.getFirstChild().getString();	  if(p.refs.get(0).node.getLastChild().getString().equals(   "   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	19	None	replace
70	[BUG]  [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_N,  false);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_N,  false);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putBooleanProp(Node.IS_CONSTANT_N,  false);	  if(p.refs.get(0).node.getLastChild().getString().equals(   "   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	19	None	replace
71	[BUG]  [BUGGY]  int  numStubs  =  p.refs.getLastChild().getString();  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  int  numStubs  =  p.refs.getLastChild().getString();  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.getLastChild().getString();	  if(p.refs.get(0).node.getLastChild().getString().equals(   "   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	19	None	replace
72	[BUG]  [BUGGY]  Node  p  =  p.node.getLastChild().getString();  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  Node  p  =  p.node.getLastChild().getString();  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  p  =  p.node.getLastChild().getString();	  if(p.refs.get(0).node.getLastChild().getString().equals(   "   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	19	None	replace
73	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }	  if(p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    false);    }    	non-compiled	[CE]  not  a  statement	20	None	replace
74	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }	  if(p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    false);    }    	non-compiled	[CE]  not  a  statement	20	None	replace
75	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }	  if(p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    false);    }    	non-compiled	[CE]  not  a  statement	20	None	replace
76	[BUG]  [BUGGY]  Name  node  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  Name  node  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  node  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }	  if(p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	18	None	replace
77	[BUG]  [BUGGY]  numStubs  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  numStubs  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  numStubs++;    	non-compiled	[CE]  not  a  statement	11	None	replace
78	[BUG]  [BUGGY]  numStubs  =  p.node.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  numStubs  =  p.node.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.node.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  numStubs++;    	non-compiled	[CE]  not  a  statement	11	None	replace
79	[BUG]  [BUGGY]  numStubs  =  p.node.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  numStubs  =  p.node.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.node.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  numStubs++;    	non-compiled	[CE]  not  a  statement	11	None	replace
80	[BUG]  [BUGGY]  numStubs  =  p.node.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  numStubs  =  p.node.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.node.getFirstChild().getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  numStubs++;    	non-compiled	[CE]  not  a  statement	11	None	replace
81	[BUG]  [BUGGY]  NameNode.putBooleanProp(Node.IS_CONSTANT_  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  NameNode.putBooleanProp(Node.IS_CONSTANT_  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	NameNode.putBooleanProp(Node.IS_CONSTANT_	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	2	None	replace
82	[BUG]  [BUGGY]  NameNode  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  NameNode  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	NameNode  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	2	None	replace
83	[BUG]  [BUGGY]  nameNode.putShortProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  nameNode.putShortProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putShortProp(Node.IS_CONSTANT_NAME,  true);	  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	10	None	replace
84	[BUG]  [BUGGY]  nameNode.putIntProp(Node.IS_CONSTANT_NAME,  0);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  nameNode.putIntProp(Node.IS_CONSTANT_NAME,  0);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putIntProp(Node.IS_CONSTANT_NAME,  0);	  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	10	None	replace
85	[BUG]  [BUGGY]  numStubs  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  numStubs  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  numStubs    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	5	None	replace
86	[BUG]  [BUGGY]  numStubs  =  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  numStubs  =  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.get(1).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	  numStubs    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	5	None	replace
87	[BUG]  [BUGGY]  numStubs  =  nameNode.getLastChild().getString();  compiler.reportCodeChange();  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  numStubs  =  nameNode.getLastChild().getString();  compiler.reportCodeChange();  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  nameNode.getLastChild().getString();  compiler.reportCodeChange();	      	non-compiled	[CE]  not  a  statement	8	None	replace
88	[BUG]  [BUGGY]  compiler.report(JSError.make(nameNode,  n,  NAMESPACE_REDEFINED_WARNING));  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  compiler.report(JSError.make(nameNode,  n,  NAMESPACE_REDEFINED_WARNING));  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(nameNode,  n,  NAMESPACE_REDEFINED_WARNING));	  compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	12	None	replace
89	[BUG]  [BUGGY]  compiler.report(JSError.make(sourceName,  n,  NAMESPACE_REDEFINED_WARNING,  propAlias));  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  compiler.report(JSError.make(sourceName,  n,  NAMESPACE_REDEFINED_WARNING,  propAlias));  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(sourceName,  n,  NAMESPACE_REDEFINED_WARNING,  propAlias));	  compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	12	None	replace
90	[BUG]  [BUGGY]  compiler.report(JSError.make(nameNode,  numStubs,  NAMESPACE_REDEFINED_WARNING,  propAlias));  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  compiler.report(JSError.make(nameNode,  numStubs,  NAMESPACE_REDEFINED_WARNING,  propAlias));  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(nameNode,  numStubs,  NAMESPACE_REDEFINED_WARNING,  propAlias));	  compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	12	None	replace
91	[BUG]  [BUGGY]  numStubs  =  parent.getLastChild().getString();  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  numStubs  =  parent.getLastChild().getString();  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  parent.getLastChild().getString();	  numStubs    =    nameNode.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	14	None	replace
92	[BUG]  [BUGGY]  numStubs  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  numStubs  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  numStubs    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	4	None	replace
93	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getFirstChild().getString();  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getFirstChild().getString();  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(0).node.getFirstChild().getString();	  if(p.refs.get(0).node.getLastChild().getString().equals(   "   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	17	None	replace
94	[BUG]  [BUGGY]  Node  p  =  p.refs.getFirstChild();  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  Node  p  =  p.refs.getFirstChild();  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  p  =  p.refs.getFirstChild();	  if(p.refs.get(0).node.getLastChild().getString().equals(   "   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	17	None	replace
95	[BUG]  [BUGGY]  NameNode.putBooleanProp(Node.IS_CONSTANT_NAME  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  NameNode.putBooleanProp(Node.IS_CONSTANT_NAME  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	NameNode.putBooleanProp(Node.IS_CONSTANT_NAME	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	1	None	replace
96	[BUG]  [BUGGY]  NameNode  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  NameNode  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	NameNode  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	1	None	replace
97	[BUG]  [BUGGY]  Name  p  =  nameNode.getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  Name  p  =  nameNode.getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  nameNode.getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  if(p.refs.get(0).node.getLastChild().getString().equals(   "   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    false);    }    	non-compiled	[CE]  not  a  statement	16	None	replace
98	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME)  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME)  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME)	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    addAfter.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	6	None	replace
99	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME));  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME));  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME));	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    addAfter.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	6	None	replace
100	[BUG]  [BUGGY]  Name  p  =  nameNode.getBooleanProp(Node.IS_CONSTANT_N);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  Name  p  =  nameNode.getBooleanProp(Node.IS_CONSTANT_N);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  nameNode.getBooleanProp(Node.IS_CONSTANT_N);	  if(p.refs.get(0).node.getLastChild().getString().equals(   "   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	19	None	replace
101	[BUG]  [BUGGY]  Name  p  =  nameNode.getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  Name  p  =  nameNode.getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  p  =  nameNode.getBooleanProp(Node.IS_CONSTANT_NAME);	  if(p.refs.get(0).node.getLastChild().getString().equals(   "   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	19	None	replace
102	[BUG]  [BUGGY]  numStubs  =  p.childNode.getFirstChild().getLastChild().getString();  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  numStubs  =  p.childNode.getFirstChild().getLastChild().getString();  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.childNode.getFirstChild().getLastChild().getString();	  numStubs    =    nameNode.getFirstChild().getLastChild().getString();    	non-compiled	[CE]  not  a  statement	15	None	replace
103	[BUG]  [BUGGY]  numStubs  =  names.getFirstChild().getLastChild().getString();  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  numStubs  =  names.getFirstChild().getLastChild().getString();  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  names.getFirstChild().getLastChild().getString();	  numStubs    =    nameNode.getFirstChild().getLastChild().getString();    	non-compiled	[CE]  not  a  statement	15	None	replace
104	[BUG]  [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  nameNode  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true	  if(p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	18	None	replace
105	[BUG]  [BUGGY]  nameNode.putIntProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  nameNode.putIntProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putIntProp(Node.IS_CONSTANT_NAME,  true);	  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	9	None	replace
106	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  Node  nameNode  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    addAfter.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	7	None	replace
107	[BUG]  [BUGGY]  Node  nameNode  =  p.refs.getFirstChild();  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  Node  nameNode  =  p.refs.getFirstChild();  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  nameNode  =  p.refs.getFirstChild();	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    addAfter.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	7	None	replace
108	[BUG]  [BUGGY]  numStubs  =  p.defs.getFirstChild().getLastChild().getString();  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  numStubs  =  p.defs.getFirstChild().getLastChild().getString();  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.defs.getFirstChild().getLastChild().getString();	  numStubs    =    nameNode.getFirstChild().getLastChild().getString();    	non-compiled	[CE]  not  a  statement	15	None	replace
109	[BUG]  [BUGGY]  numStubs  =  n.getFirstChild().getLastChild().getString();  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  numStubs  =  n.getFirstChild().getLastChild().getString();  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  n.getFirstChild().getLastChild().getString();	  numStubs    =    nameNode.getFirstChild().getLastChild().getString();    	non-compiled	[CE]  not  a  statement	15	None	replace
110	[BUG]  [BUGGY]  if(p.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  if(p.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	if(p.refs.get(0).node.getLastChild().getString().endsWith( "__ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }	  if(p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	18	None	replace
111	[BUG]  [BUGGY]  Name  n  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  Name  n  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  n  =  p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }	  if(p.refs.get(0).node.getLastChild().getString().endsWith(   "_   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	18	None	replace
112	[BUG]  [BUGGY]  node.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  node.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	node.putBooleanProp(Node.IS_CONSTANT_NAME,  true);	  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    false);    numStubs++;    	non-compiled	[CE]  not  a  statement	13	None	replace
113	[BUG]  [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putBooleanProp(Node.IS_CONSTANT_NAME	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	1	None	replace
114	[BUG]  [BUGGY]  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	1	None	replace
115	[BUG]  [BUGGY]  Name  node  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  Name  node  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Name  node  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	1	None	replace
116	[BUG]  [BUGGY]  nameNode.putProp(Node.IS_CONSTANT_NAME,  null);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  nameNode.putProp(Node.IS_CONSTANT_NAME,  null);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putProp(Node.IS_CONSTANT_NAME,  null);	  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	10	None	replace
117	[BUG]  [BUGGY]  nameNode.putProp(Node.IS_CONSTANT_NAME,  n);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  nameNode.putProp(Node.IS_CONSTANT_NAME,  n);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putProp(Node.IS_CONSTANT_NAME,  n);	  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    	non-compiled	[CE]  not  a  statement	10	None	replace
118	[BUG]  [BUGGY]  Node  addAfter  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  Node  addAfter  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  addAfter  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    addAfter.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	7	None	replace
119	[BUG]  [BUGGY]  if(p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME))  {  addAfter.putBooleanProp(Node.IS_CONSTANT_  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  if(p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME))  {  addAfter.putBooleanProp(Node.IS_CONSTANT_  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	if(p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME))  {  addAfter.putBooleanProp(Node.IS_CONSTANT_	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    addAfter.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	7	None	replace
120	[BUG]  [BUGGY]  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))  {  addAfter.putBooleanProp(Node.IS_CONSTANT  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))  {  addAfter.putBooleanProp(Node.IS_CONSTANT  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))  {  addAfter.putBooleanProp(Node.IS_CONSTANT	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    addAfter.putBooleanProp(Node.IS_CONSTANT_    	non-compiled	[CE]  not  a  statement	7	None	replace
121	[BUG]  [BUGGY]  Node  p  =  p.refs.get(0).node.getLastChild().getString();  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  Node  p  =  p.refs.get(0).node.getLastChild().getString();  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	Node  p  =  p.refs.get(0).node.getLastChild().getString();	  if(p.refs.get(0).node.getLastChild().getString().equals(   "   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    true);    }    	non-compiled	[CE]  not  a  statement	17	None	replace
122	[BUG]  [BUGGY]  if(p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME))  {  addAfter.putBooleanProp(Node.IS_CONSTANT_N  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  if(p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME))  {  addAfter.putBooleanProp(Node.IS_CONSTANT_N  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	if(p.refs.get(0).node.getFirstChild().getBooleanProp(Node.IS_CONSTANT_NAME))  {  addAfter.putBooleanProp(Node.IS_CONSTANT_N	  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))    {    addAfter.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	6	None	replace
123	[BUG]  [BUGGY]  numStubs  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  numStubs  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	  numStubs    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);    	non-compiled	[CE]  not  a  statement	4	None	replace
124	[BUG]  [BUGGY]  numStubs  =  p.refs.getFirstChild().getString();  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  numStubs  =  p.refs.getFirstChild().getString();  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.getFirstChild().getString();	  numStubs    =    nameNode.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	14	None	replace
125	[BUG]  [BUGGY]  numStubs  =  n.getLastChild().getString();  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  numStubs  =  n.getLastChild().getString();  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  n.getLastChild().getString();	  numStubs    =    nameNode.getLastChild().getString();    	non-compiled	[CE]  not  a  statement	14	None	replace
126	[BUG]  [BUGGY]  if(p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  if(p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	if(p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_N	  numStubs++;    	non-compiled	[CE]  not  a  statement	11	None	replace
127	[BUG]  [BUGGY]  if(p.refs.get(0).node.getLastChild().getString().equals( "_ "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  if(p.refs.get(0).node.getLastChild().getString().equals( "_ "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	if(p.refs.get(0).node.getLastChild().getString().equals( "_ "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_N	  numStubs++;    	non-compiled	[CE]  not  a  statement	11	None	replace
128	[BUG]  [BUGGY]  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))  {  numStubs++;  }  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))  {  numStubs++;  }  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))  {  numStubs++;  }	  numStubs++;    	non-compiled	[CE]  not  a  statement	11	None	replace
129	[BUG]  [BUGGY]  if(p.refs.get(0).node.getLastChild().getString().endsWith( "- "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  if(p.refs.get(0).node.getLastChild().getString().endsWith( "- "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	if(p.refs.get(0).node.getLastChild().getString().endsWith( "- "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_N	  numStubs++;    	non-compiled	[CE]  not  a  statement	11	None	replace
130	[BUG]  [BUGGY]  if(p.refs.get(0).node.getLastChild().getString().equals( " "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  if(p.refs.get(0).node.getLastChild().getString().equals( " "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	if(p.refs.get(0).node.getLastChild().getString().equals( " "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }	  numStubs++;    	non-compiled	[CE]  not  a  statement	11	None	replace
131	[BUG]  [BUGGY]  compiler.report(JSError.make(nameNode,  n,  NAMESPACE_REDEFINED_WARNING,  alias));  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  compiler.report(JSError.make(nameNode,  n,  NAMESPACE_REDEFINED_WARNING,  alias));  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(nameNode,  n,  NAMESPACE_REDEFINED_WARNING,  alias));	  compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	12	None	replace
132	[BUG]  [BUGGY]  compiler.report(JSError.make(nameNode,  numStubs,  NAMESPACE_REDEFINED_WARNING,  alias));  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  compiler.report(JSError.make(nameNode,  numStubs,  NAMESPACE_REDEFINED_WARNING,  alias));  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.report(JSError.make(nameNode,  numStubs,  NAMESPACE_REDEFINED_WARNING,  alias));	  compiler.reportCodeChange();    	non-compiled	[CE]  not  a  statement	12	None	replace
133	[BUG]  [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( " "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( " "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( " "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS	  if(p.refs.get(0).node.getLastChild().getString().equals(   "   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	19	None	replace
134	[BUG]  [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( " "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( " "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( " "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.	  if(p.refs.get(0).node.getLastChild().getString().equals(   "   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	19	None	replace
135	[BUG]  [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( " "))  {  numStubs++;  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( " "))  {  numStubs++;  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( " "))  {  numStubs++;	  if(p.refs.get(0).node.getLastChild().getString().equals(   "   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	19	None	replace
136	[BUG]  [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( " "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CON  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( " "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CON  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( " "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CON	  if(p.refs.get(0).node.getLastChild().getString().equals(   "   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	19	None	replace
137	[BUG]  [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getString().equals( " "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  int  numStubs  =  p.refs.getFirstChild().getString().equals( " "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.getFirstChild().getString().equals( " "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_N	  if(p.refs.get(0).node.getLastChild().getString().equals(   "   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	19	None	replace
138	[BUG]  [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( " "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( " "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	int  numStubs  =  p.refs.get(0).node.getLastChild().getString().equals( " "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT	  if(p.refs.get(0).node.getLastChild().getString().equals(   "   "))    {    numStubs++;    }    else    {    nameNode.putBooleanProp(Node.IS_CONSTANT_N    	non-compiled	[CE]  not  a  statement	19	None	replace
139	[BUG]  [BUGGY]  numStubs  +=  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  numStubs  +=  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  +=  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	      	non-compiled	[CE]  not  a  statement	8	None	replace
140	[BUG]  [BUGGY]  numStubs  +=  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  numStubs  +=  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  +=  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  true);	      	non-compiled	[CE]  not  a  statement	8	None	replace
141	[BUG]  [BUGGY]  numStubs  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  numStubs  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  n.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	  numStubs    =    p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,    false);    	non-compiled	[CE]  not  a  statement	5	None	replace
142	[BUG]  [BUGGY]  if(p.refs.get(0).node.getLastChild().getString().equals( "* "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  if(p.refs.get(0).node.getLastChild().getString().equals( "* "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	if(p.refs.get(0).node.getLastChild().getString().equals( "* "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }	  if(p.refs.get(0).node.getLastChild().getString().equals(   "   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    false);    }    	non-compiled	[CE]  not  a  statement	16	None	replace
143	[BUG]  [BUGGY]  if(p.refs.get(0).node.getLastChild().getString().equals( "* "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }    [BUGGY]  if(p.refs.get(0).node.getLastChild().getString().equals( "* "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [BUGGY]    }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	if(p.refs.get(0).node.getLastChild().getString().equals( "* "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }	  if(p.refs.get(0).node.getLastChild().getString().equals(   "   "))    {    nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,    false);    }    	non-compiled	[CE]  not  a  statement	16	None	replace
