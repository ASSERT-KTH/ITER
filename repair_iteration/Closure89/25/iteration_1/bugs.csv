bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [CE]  not  a  statement  [FE]    AssertionFailedError  [CONTEXT]  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }  [BUGGY]  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [BUGGY]  }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_N	}  	non-compiled	[CE]  not  a  statement	50	None	replace
2	[BUG]  [BUGGY]  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_  [CE]  not  a  statement  [FE]      AssertionFailedError  [CONTEXT]  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }  [BUGGY]  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_  [BUGGY]  }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_	}  	non-compiled	[CE]  not  a  statement	50	None	replace
3	[BUG]  [BUGGY]  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))  {  numStubs++;  compiler.reportCodeChange();  }  [CE]  not  a  statement  [FE]        AssertionFailedError  [CONTEXT]  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }  [BUGGY]  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))  {  numStubs++;  compiler.reportCodeChange();  }  [BUGGY]  }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))  {  numStubs++;  compiler.reportCodeChange();  }	}  	non-compiled	[CE]  not  a  statement	50	None	replace
4	[BUG]  [BUGGY]  numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [CE]  not  a  statement  [FE]          AssertionFailedError  [CONTEXT]  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }  [BUGGY]  numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);  [BUGGY]  }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME);	}  	non-compiled	[CE]  not  a  statement	50	None	replace
5	[BUG]  [BUGGY]  numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]            AssertionFailedError  [CONTEXT]  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }  [BUGGY]  numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]  }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME,  false);	}  	non-compiled	[CE]  not  a  statement	50	None	replace
6	[BUG]  [BUGGY]  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))  {  addAfter.putBooleanProp(Node.IS_CONSTANT_N  [CE]  not  a  statement  [FE]              AssertionFailedError  [CONTEXT]  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }  [BUGGY]  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))  {  addAfter.putBooleanProp(Node.IS_CONSTANT_N  [BUGGY]  }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))  {  addAfter.putBooleanProp(Node.IS_CONSTANT_N	}  	non-compiled	[CE]  not  a  statement	50	None	replace
7	[BUG]  [BUGGY]  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))  {  addAfter.putBooleanProp(Node.IS_CONSTANT_  [CE]  not  a  statement  [FE]                AssertionFailedError  [CONTEXT]  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }  [BUGGY]  if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))  {  addAfter.putBooleanProp(Node.IS_CONSTANT_  [BUGGY]  }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	if(p.refs.get(0).node.getLastChild().getBooleanProp(Node.IS_CONSTANT_NAME))  {  addAfter.putBooleanProp(Node.IS_CONSTANT_	}  	non-compiled	[CE]  not  a  statement	50	None	replace
8	[BUG]  [BUGGY]    [CE]  not  a  statement  [FE]                  AssertionFailedError  [CONTEXT]  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }  [BUGGY]    [BUGGY]  }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	  	}  	non-compiled	[CE]  not  a  statement	50	None	replace
9	[BUG]  [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  [CE]  not  a  statement  [FE]    AssertionFailedError  [CONTEXT]  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }  [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  [BUGGY]  }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);	}  	non-compiled	[CE]  not  a  statement	50	None	replace
10	[BUG]  [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  [CE]  not  a  statement  [FE]      AssertionFailedError  [CONTEXT]  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }  [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  [BUGGY]  }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);	}  	non-compiled	[CE]  not  a  statement	50	None	replace
11	[BUG]  [BUGGY]  numStubs++;  [CE]  not  a  statement  [FE]        AssertionFailedError  [CONTEXT]  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }  [BUGGY]  numStubs++;  [BUGGY]  }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs++;	}  	non-compiled	[CE]  not  a  statement	50	None	replace
12	[BUG]  [BUGGY]  compiler.reportCodeChange();  [CE]  not  a  statement  [FE]          AssertionFailedError  [CONTEXT]  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }  [BUGGY]  compiler.reportCodeChange();  [BUGGY]  }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	compiler.reportCodeChange();	}  	non-compiled	[CE]  not  a  statement	50	None	replace
13	[BUG]  [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  numStubs++;  [CE]  not  a  statement  [FE]            AssertionFailedError  [CONTEXT]  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }  [BUGGY]  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  numStubs++;  [BUGGY]  }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  numStubs++;	}  	non-compiled	[CE]  not  a  statement	50	None	replace
14	[BUG]  [BUGGY]  numStubs  =  nameNode.getLastChild().getString();  [CE]  not  a  statement  [FE]              AssertionFailedError  [CONTEXT]  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }  [BUGGY]  numStubs  =  nameNode.getLastChild().getString();  [BUGGY]  }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  nameNode.getLastChild().getString();	}  	non-compiled	[CE]  not  a  statement	50	None	replace
15	[BUG]  [BUGGY]  numStubs  =  nameNode.getFirstChild().getLastChild().getString();  [CE]  not  a  statement  [FE]                AssertionFailedError  [CONTEXT]  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }  [BUGGY]  numStubs  =  nameNode.getFirstChild().getLastChild().getString();  [BUGGY]  }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	numStubs  =  nameNode.getFirstChild().getLastChild().getString();	}  	non-compiled	[CE]  not  a  statement	50	None	replace
16	[BUG]  [BUGGY]  if(p.refs.get(0).node.getLastChild().getString().equals( " "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }  [CE]  not  a  statement  [FE]    AssertionFailedError  [CONTEXT]  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }  [BUGGY]  if(p.refs.get(0).node.getLastChild().getString().equals( " "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }  [BUGGY]  }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	if(p.refs.get(0).node.getLastChild().getString().equals( " "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }	}  	non-compiled	[CE]  not  a  statement	50	None	replace
17	[BUG]  [BUGGY]  if(p.refs.get(0).node.getLastChild().getString().equals( " "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CE]  not  a  statement  [FE]      AssertionFailedError  [CONTEXT]  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }  [BUGGY]  if(p.refs.get(0).node.getLastChild().getString().equals( " "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [BUGGY]  }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	if(p.refs.get(0).node.getLastChild().getString().equals( " "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }	}  	non-compiled	[CE]  not  a  statement	50	None	replace
18	[BUG]  [BUGGY]  if(p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [CE]  not  a  statement  [FE]        AssertionFailedError  [CONTEXT]  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }  [BUGGY]  if(p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  [BUGGY]  }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	if(p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }	}  	non-compiled	[CE]  not  a  statement	50	None	replace
19	[BUG]  [BUGGY]  if(p.refs.get(0).node.getLastChild().getString().equals( " "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [CE]  not  a  statement  [FE]          AssertionFailedError  [CONTEXT]  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }  [BUGGY]  if(p.refs.get(0).node.getLastChild().getString().equals( " "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_N  [BUGGY]  }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	if(p.refs.get(0).node.getLastChild().getString().equals( " "))  {  numStubs++;  }  else  {  nameNode.putBooleanProp(Node.IS_CONSTANT_N	}  	non-compiled	[CE]  not  a  statement	50	None	replace
20	[BUG]  [BUGGY]  if(p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }  [CE]  not  a  statement  [FE]            AssertionFailedError  [CONTEXT]  numStubs++;  compiler.reportCodeChange();    if  (p.refs.get(0).node.getLastChild().getBooleanProp(  Node.IS_CONSTANT_NAME))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  true);  }  }  [BUGGY]  if(p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }  [BUGGY]  }  return  numStubs;  }  [CLASS]  CollapseProperties  1  [METHOD]  addStubsForUndeclaredProperties  [RETURN_TYPE]  int  Name  n  String  alias  Node  parent  Node  addAfter  [VARIABLES]  AbstractCompiler  compiler  boolean  canCollapseChildNames  collapsePropertiesOnExternTypes  discardKeys  initialized  inlineAliases  isJsIdentifier  isObjKey  isObjLit  isQName  DiagnosticType  NAMESPACE_REDEFINED_WARNING  UNSAFE_NAMESPACE_WARNING  UNSAFE_THIS  Node  addAfter  nameNode  newVar  parent  List  globalNames  refs  String  alias  propAlias  Map  nameMap  int  numStubs  Name  n  p  	projects/Closure89/src/com/google/javascript/jscomp/CollapseProperties.java	0.2286647801900118	839	839	8	replace	if(p.refs.get(0).node.getLastChild().getString().endsWith( "_ "))  {  nameNode.putBooleanProp(Node.IS_CONSTANT_NAME,  false);  }	}  	non-compiled	[CE]  not  a  statement	50	None	replace
